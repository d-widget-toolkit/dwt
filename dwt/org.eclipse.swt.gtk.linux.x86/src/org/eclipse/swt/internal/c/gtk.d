/******************************************************************************
    Based on the generated files from the BCD tool
    modified by: Frank Benoit <keinfarbton@googlemail.com>
******************************************************************************/
module org.eclipse.swt.internal.c.gtk;

import java.lang.all;

public import org.eclipse.swt.internal.c.atk;
public import org.eclipse.swt.internal.c.cairo;
public import org.eclipse.swt.internal.c.pango;
public import org.eclipse.swt.internal.c.gdk;
public import org.eclipse.swt.internal.c.glib_object;

version(Tango){
    import tango.stdc.stdint;
} else { // Phobos
    import std.stdint;
}

version=DYNLINK;

version(DYNLINK){


    extern (C) gint gtk_init_check(gint *, in char * * *);
    extern (C) char * gtk_set_locale();
    mixin(gshared!(
    "extern (C) extern guint gtk_interface_age;
    extern (C) extern guint gtk_binary_age;
    extern (C) extern guint gtk_micro_version;
    extern (C) extern guint gtk_minor_version;
    extern (C) extern guint gtk_major_version;"
    ));

    import java.nonstandard.SharedLib;
}

void loadLib(){
    version(DYNLINK){        
        SharedLib.loadLibSymbols(symbols, "libgtk-x11-2.0.so");
    }
}


extern(C):

version( ARGS_TYPED ){
    alias _GtkVSeparatorClass aGtkVSeparatorClass;
    alias _GtkVSeparator aGtkVSeparator;
    alias _GtkVScaleClass aGtkVScaleClass;
    alias _GtkVScale aGtkVScale;
    alias _GtkVRulerClass aGtkVRulerClass;
    alias _GtkVRuler aGtkVRuler;
    alias _GtkVPanedClass aGtkVPanedClass;
    alias _GtkVPaned aGtkVPaned;
    alias _GtkVolumeButtonClass aGtkVolumeButtonClass;
    alias _GtkVButtonBoxClass aGtkVButtonBoxClass;
    alias _GtkVButtonBox aGtkVButtonBox;
    alias _GtkUIManagerClass aGtkUIManagerClass;
    alias _GtkUIManager aGtkUIManager;
    alias _GtkTreeStoreClass aGtkTreeStoreClass;
    alias _GtkTreeStore aGtkTreeStore;
    alias _GtkTreeModelSortClass aGtkTreeModelSortClass;
    alias _GtkTreeModelSort aGtkTreeModelSort;
    alias _GtkTreeDragDestIface aGtkTreeDragDestIface;
    alias _GtkTreeDragSourceIface aGtkTreeDragSourceIface;
    alias _GtkToolbarClass aGtkToolbarClass;
    alias _GtkToolbar aGtkToolbar;
    alias _GtkToolbarChild aGtkToolbarChild;
    alias _GtkTipsQueryClass aGtkTipsQueryClass;
    alias _GtkTipsQuery aGtkTipsQuery;
    alias _GtkTextViewClass aGtkTextViewClass;
    alias _GtkTextView aGtkTextView;
    alias _GtkTextBufferClass aGtkTextBufferClass;
    alias _GtkTextMarkClass aGtkTextMarkClass;
    alias _GtkTextMark aGtkTextMark;
    alias _GtkTextTagTableClass aGtkTextTagTableClass;
    alias _GtkTearoffMenuItemClass aGtkTearoffMenuItemClass;
    alias _GtkTearoffMenuItem aGtkTearoffMenuItem;
    alias _GtkTableRowCol aGtkTableRowCol;
    alias _GtkTableChild aGtkTableChild;
    alias _GtkTableClass aGtkTableClass;
    alias _GtkTable aGtkTable;
    alias _GtkStockItem aGtkStockItem;
    alias _GtkStatusIconClass aGtkStatusIconClass;
    alias _GtkStatusIcon aGtkStatusIcon;
    alias _GtkStatusbarClass aGtkStatusbarClass;
    alias _GtkStatusbar aGtkStatusbar;
    alias _GtkSpinButtonClass aGtkSpinButtonClass;
    alias _GtkSpinButton aGtkSpinButton;
    alias _GtkSizeGroupClass aGtkSizeGroupClass;
    alias _GtkSizeGroup aGtkSizeGroup;
    alias _GtkSeparatorToolItemClass aGtkSeparatorToolItemClass;
    alias _GtkSeparatorToolItem aGtkSeparatorToolItem;
    alias _GtkSeparatorMenuItemClass aGtkSeparatorMenuItemClass;
    alias _GtkSeparatorMenuItem aGtkSeparatorMenuItem;
    alias _GtkScrolledWindowClass aGtkScrolledWindowClass;
    alias _GtkScrolledWindow aGtkScrolledWindow;
    alias _GtkViewportClass aGtkViewportClass;
    alias _GtkViewport aGtkViewport;
    alias _GtkScaleButtonClass aGtkScaleButtonClass;
    alias _GtkScaleButton aGtkScaleButton;
    alias _GtkRecentChooserWidgetClass aGtkRecentChooserWidgetClass;
    alias _GtkRecentChooserWidget aGtkRecentChooserWidget;
    alias _GtkRecentChooserMenuClass aGtkRecentChooserMenuClass;
    alias _GtkRecentChooserMenu aGtkRecentChooserMenu;
    alias _GtkRecentChooserDialogClass aGtkRecentChooserDialogClass;
    alias _GtkRecentChooserDialog aGtkRecentChooserDialog;
    alias _GtkRecentChooserIface aGtkRecentChooserIface;
    alias _GtkRecentFilterInfo aGtkRecentFilterInfo;
    alias _GtkRecentActionClass aGtkRecentActionClass;
    alias _GtkRecentAction aGtkRecentAction;
    alias _GtkRecentManagerClass aGtkRecentManagerClass;
    alias _GtkRecentManager aGtkRecentManager;
    alias _GtkRecentData aGtkRecentData;
    alias _GtkRadioToolButtonClass aGtkRadioToolButtonClass;
    alias _GtkRadioToolButton aGtkRadioToolButton;
    alias _GtkToggleToolButtonClass aGtkToggleToolButtonClass;
    alias _GtkToggleToolButton aGtkToggleToolButton;
    alias _GtkRadioMenuItemClass aGtkRadioMenuItemClass;
    alias _GtkRadioMenuItem aGtkRadioMenuItem;
    alias _GtkRadioButtonClass aGtkRadioButtonClass;
    alias _GtkRadioButton aGtkRadioButton;
    alias _GtkRadioActionClass aGtkRadioActionClass;
    alias _GtkRadioAction aGtkRadioAction;
    alias _GtkToggleActionClass aGtkToggleActionClass;
    alias _GtkToggleAction aGtkToggleAction;
    alias _GtkProgressBarClass aGtkProgressBarClass;
    alias _GtkProgressBar aGtkProgressBar;
    alias _GtkProgressClass aGtkProgressClass;
    alias _GtkProgress aGtkProgress;
    alias _GtkPrintOperation aGtkPrintOperation;
    alias _GtkPrintOperationClass aGtkPrintOperationClass;
    alias _GtkPrintOperationPreviewIface aGtkPrintOperationPreviewIface;
    alias _GtkPageRange aGtkPageRange;
    alias _GtkPreviewClass aGtkPreviewClass;
    alias _GtkPreviewInfo aGtkPreviewInfo;
    alias _GtkPreview aGtkPreview;
    alias _GtkPlugClass aGtkPlugClass;
    alias _GtkPlug aGtkPlug;
    alias _GtkSocketClass aGtkSocketClass;
    alias _GtkSocket aGtkSocket;
    alias _GtkPixmapClass aGtkPixmapClass;
    alias _GtkPixmap aGtkPixmap;
    alias _GtkOptionMenuClass aGtkOptionMenuClass;
    alias _GtkOptionMenu aGtkOptionMenu;
    alias _GtkOldEditableClass aGtkOldEditableClass;
    alias _GtkOldEditable aGtkOldEditable;
    alias _GtkNotebookClass aGtkNotebookClass;
    alias _GtkNotebook aGtkNotebook;
    alias _GtkMessageDialogClass aGtkMessageDialogClass;
    alias _GtkMessageDialog aGtkMessageDialog;
    alias _GtkMenuToolButton aGtkMenuToolButton;
    alias _GtkMenuToolButtonClass aGtkMenuToolButtonClass;
    alias _GtkToolButtonClass aGtkToolButtonClass;
    alias _GtkToolButton aGtkToolButton;
    alias _GtkToolItemClass aGtkToolItemClass;
    alias _GtkToolItem aGtkToolItem;
    alias _GtkTooltipsData aGtkTooltipsData;
    alias _GtkTooltipsClass aGtkTooltipsClass;
    alias _GtkTooltips aGtkTooltips;
    alias _GtkMenuBarClass aGtkMenuBarClass;
    alias _GtkMenuBar aGtkMenuBar;
    alias _GtkListClass aGtkListClass;
    alias _GtkList aGtkList;
    alias _GtkListItemClass aGtkListItemClass;
    alias _GtkListItem aGtkListItem;
    alias _GtkLinkButtonClass aGtkLinkButtonClass;
    alias _GtkLinkButton aGtkLinkButton;
    alias _GtkLayoutClass aGtkLayoutClass;
    alias _GtkLayout aGtkLayout;
    alias _GtkInvisibleClass aGtkInvisibleClass;
    alias _GtkInvisible aGtkInvisible;
    alias _GtkInputDialogClass aGtkInputDialogClass;
    alias _GtkInputDialog aGtkInputDialog;
    alias _GtkIMMulticontextClass aGtkIMMulticontextClass;
    alias _GtkIMMulticontext aGtkIMMulticontext;
    alias _GtkIMContextSimpleClass aGtkIMContextSimpleClass;
    alias _GtkIMContextSimple aGtkIMContextSimple;
    alias _GtkImageMenuItemClass aGtkImageMenuItemClass;
    alias _GtkImageMenuItem aGtkImageMenuItem;
    alias _GtkIconViewClass aGtkIconViewClass;
    alias _GtkIconView aGtkIconView;
    alias _GtkIconThemeClass aGtkIconThemeClass;
    alias _GtkIconTheme aGtkIconTheme;
    alias _GtkIconFactoryClass aGtkIconFactoryClass;
    alias _GtkHSeparatorClass aGtkHSeparatorClass;
    alias _GtkHSeparator aGtkHSeparator;
    alias _GtkSeparatorClass aGtkSeparatorClass;
    alias _GtkSeparator aGtkSeparator;
    alias _GtkHScaleClass aGtkHScaleClass;
    alias _GtkHScale aGtkHScale;
    alias _GtkScaleClass aGtkScaleClass;
    alias _GtkScale aGtkScale;
    alias _GtkHRulerClass aGtkHRulerClass;
    alias _GtkHRuler aGtkHRuler;
    alias _GtkRulerMetric aGtkRulerMetric;
    alias _GtkRulerClass aGtkRulerClass;
    alias _GtkRuler aGtkRuler;
    alias _GtkHPanedClass aGtkHPanedClass;
    alias _GtkHPaned aGtkHPaned;
    alias _GtkPanedClass aGtkPanedClass;
    alias _GtkPaned aGtkPaned;
    alias _GtkHButtonBoxClass aGtkHButtonBoxClass;
    alias _GtkHButtonBox aGtkHButtonBox;
    alias _GtkHandleBoxClass aGtkHandleBoxClass;
    alias _GtkHandleBox aGtkHandleBox;
    alias _GtkGammaCurveClass aGtkGammaCurveClass;
    alias _GtkGammaCurve aGtkGammaCurve;
    alias _GtkFontSelectionDialogClass aGtkFontSelectionDialogClass;
    alias _GtkFontSelectionDialog aGtkFontSelectionDialog;
    alias _GtkFontSelectionClass aGtkFontSelectionClass;
    alias _GtkFontSelection aGtkFontSelection;
    alias _GtkFontButtonClass aGtkFontButtonClass;
    alias _GtkFontButton aGtkFontButton;
    alias _GtkFileChooserWidgetClass aGtkFileChooserWidgetClass;
    alias _GtkFileChooserWidget aGtkFileChooserWidget;
    alias _GtkFileChooserDialogClass aGtkFileChooserDialogClass;
    alias _GtkFileChooserDialog aGtkFileChooserDialog;
    alias _GtkFileChooserButtonClass aGtkFileChooserButtonClass;
    alias _GtkFileChooserButton aGtkFileChooserButton;
    alias _GtkFileFilterInfo aGtkFileFilterInfo;
    alias _GtkFixedChild aGtkFixedChild;
    alias _GtkFixedClass aGtkFixedClass;
    alias _GtkFixed aGtkFixed;
    alias _GtkFileSelectionClass aGtkFileSelectionClass;
    alias _GtkFileSelection aGtkFileSelection;
    alias _GtkExpanderClass aGtkExpanderClass;
    alias _GtkExpander aGtkExpander;
    alias _GtkEventBoxClass aGtkEventBoxClass;
    alias _GtkEventBox aGtkEventBox;
    alias _GtkCurveClass aGtkCurveClass;
    alias _GtkCurve aGtkCurve;
    alias _GtkDrawingAreaClass aGtkDrawingAreaClass;
    alias _GtkDrawingArea aGtkDrawingArea;
    alias _GtkCTreeNode aGtkCTreeNode;
    alias _GtkCTreeRow aGtkCTreeRow;
    alias _GtkCTreeClass aGtkCTreeClass;
    alias _GtkCTree aGtkCTree;
    alias _GtkComboBoxEntryClass aGtkComboBoxEntryClass;
    alias _GtkComboBoxEntry aGtkComboBoxEntry;
    alias _GtkComboBoxClass aGtkComboBoxClass;
    alias _GtkComboBox aGtkComboBox;
    alias _GtkTreeSelectionClass aGtkTreeSelectionClass;
    alias _GtkTreeSelection aGtkTreeSelection;
    alias _GtkTreeViewClass aGtkTreeViewClass;
    alias _GtkTreeView aGtkTreeView;
    alias _GtkEntryClass aGtkEntryClass;
    alias _GtkEntry aGtkEntry;
    alias _GtkEntryCompletionClass aGtkEntryCompletionClass;
    alias _GtkEntryCompletion aGtkEntryCompletion;
    alias _GtkTreeModelFilterClass aGtkTreeModelFilterClass;
    alias _GtkTreeModelFilter aGtkTreeModelFilter;
    alias _GtkListStoreClass aGtkListStoreClass;
    alias _GtkListStore aGtkListStore;
    alias _GtkIMContextClass aGtkIMContextClass;
    alias _GtkIMContext aGtkIMContext;
    alias _GtkEditableClass aGtkEditableClass;
    alias _GtkComboClass aGtkComboClass;
    alias _GtkCombo aGtkCombo;
    alias _GtkHBoxClass aGtkHBoxClass;
    alias _GtkHBox aGtkHBox;
    alias _GtkColorSelectionDialogClass aGtkColorSelectionDialogClass;
    alias _GtkColorSelectionDialog aGtkColorSelectionDialog;
    alias _GtkColorSelectionClass aGtkColorSelectionClass;
    alias _GtkColorSelection aGtkColorSelection;
    alias _GtkVBoxClass aGtkVBoxClass;
    alias _GtkVBox aGtkVBox;
    alias _GtkColorButtonClass aGtkColorButtonClass;
    alias _GtkColorButton aGtkColorButton;
    alias _GtkCListDestInfo aGtkCListDestInfo;
    alias _GtkCListCellInfo aGtkCListCellInfo;
    alias _GtkCellWidget aGtkCellWidget;
    alias _GtkCellPixText aGtkCellPixText;
    alias _GtkCellPixmap aGtkCellPixmap;
    alias _GtkCellText aGtkCellText;
    alias _GtkCell aGtkCell;
    alias _GtkCListRow aGtkCListRow;
    alias _GtkCListColumn aGtkCListColumn;
    alias _GtkCListClass aGtkCListClass;
    alias _GtkCList aGtkCList;
    alias _GtkVScrollbarClass aGtkVScrollbarClass;
    alias _GtkVScrollbar aGtkVScrollbar;
    alias _GtkHScrollbarClass aGtkHScrollbarClass;
    alias _GtkHScrollbar aGtkHScrollbar;
    alias _GtkScrollbarClass aGtkScrollbarClass;
    alias _GtkScrollbar aGtkScrollbar;
    alias _GtkRangeClass aGtkRangeClass;
    alias _GtkRange aGtkRange;
    alias _GtkTargetPair aGtkTargetPair;
    alias _GtkTargetEntry aGtkTargetEntry;
    alias _GtkTargetList aGtkTargetList;
    alias _GtkTextBuffer aGtkTextBuffer;
    alias _GtkTextChildAnchorClass aGtkTextChildAnchorClass;
    alias _GtkTextChildAnchor aGtkTextChildAnchor;
    alias _GtkTextAppearance aGtkTextAppearance;
    alias _GtkTextTagClass aGtkTextTagClass;
    alias _GtkTextTag aGtkTextTag;
    alias _GtkTextAttributes aGtkTextAttributes;
    alias _GtkTextTagTable aGtkTextTagTable;
    alias _GtkTextIter aGtkTextIter;
    alias _GtkCheckMenuItemClass aGtkCheckMenuItemClass;
    alias _GtkCheckMenuItem aGtkCheckMenuItem;
    alias _GtkMenuItemClass aGtkMenuItemClass;
    alias _GtkMenuItem aGtkMenuItem;
    alias _GtkItemClass aGtkItemClass;
    alias _GtkItem aGtkItem;
    alias _GtkCheckButtonClass aGtkCheckButtonClass;
    alias _GtkCheckButton aGtkCheckButton;
    alias _GtkToggleButtonClass aGtkToggleButtonClass;
    alias _GtkToggleButton aGtkToggleButton;
    alias _GtkCellViewClass aGtkCellViewClass;
    alias _GtkCellView aGtkCellView;
    alias _GtkCellRendererToggleClass aGtkCellRendererToggleClass;
    alias _GtkCellRendererToggle aGtkCellRendererToggle;
    alias _GtkCellRendererSpinClass aGtkCellRendererSpinClass;
    alias _GtkCellRendererSpin aGtkCellRendererSpin;
    alias _GtkCellRendererProgressClass aGtkCellRendererProgressClass;
    alias _GtkCellRendererProgress aGtkCellRendererProgress;
    alias _GtkCellRendererPixbufClass aGtkCellRendererPixbufClass;
    alias _GtkCellRendererPixbuf aGtkCellRendererPixbuf;
    alias _GtkCellRendererComboClass aGtkCellRendererComboClass;
    alias _GtkCellRendererCombo aGtkCellRendererCombo;
    alias _GtkCellRendererAccelClass aGtkCellRendererAccelClass;
    alias _GtkCellRendererAccel aGtkCellRendererAccel;
    alias _GtkCellRendererTextClass aGtkCellRendererTextClass;
    alias _GtkCellRendererText aGtkCellRendererText;
    alias _GtkCellLayoutIface aGtkCellLayoutIface;
    alias _GtkTreeViewColumnClass aGtkTreeViewColumnClass;
    alias _GtkTreeViewColumn aGtkTreeViewColumn;
    alias _GtkTreeSortableIface aGtkTreeSortableIface;
    alias _GtkTreeModelIface aGtkTreeModelIface;
    alias _GtkTreeIter aGtkTreeIter;
    alias _GtkCellRendererClass aGtkCellRendererClass;
    alias _GtkCellRenderer aGtkCellRenderer;
    alias _GtkCellEditableIface aGtkCellEditableIface;
    alias _GtkCalendarClass aGtkCalendarClass;
    alias _GtkCalendar aGtkCalendar;
    alias _GtkButtonClass aGtkButtonClass;
    alias _GtkButton aGtkButton;
    alias _GtkImageIconNameData aGtkImageIconNameData;
    alias _GtkImageAnimationData aGtkImageAnimationData;
    alias _GtkImageIconSetData aGtkImageIconSetData;
    alias _GtkImageStockData aGtkImageStockData;
    alias _GtkImagePixbufData aGtkImagePixbufData;
    alias _GtkImageImageData aGtkImageImageData;
    alias _GtkImagePixmapData aGtkImagePixmapData;
    alias _GtkImageClass aGtkImageClass;
    alias _GtkImage aGtkImage;
    alias _GtkBuildableIface aGtkBuildableIface;
    alias _GtkBuilderClass aGtkBuilderClass;
    alias _GtkBuilder aGtkBuilder;
    alias _GtkBindingArg aGtkBindingArg;
    alias _GtkBindingSignal aGtkBindingSignal;
    alias _GtkBindingEntry aGtkBindingEntry;
    alias _GtkBindingSet aGtkBindingSet;
    alias _GtkButtonBoxClass aGtkButtonBoxClass;
    alias _GtkButtonBox aGtkButtonBox;
    alias _GtkBoxChild aGtkBoxChild;
    alias _GtkBoxClass aGtkBoxClass;
    alias _GtkBox aGtkBox;
    alias _GtkAssistantClass aGtkAssistantClass;
    alias _GtkAssistant aGtkAssistant;
    alias _GtkAspectFrameClass aGtkAspectFrameClass;
    alias _GtkAspectFrame aGtkAspectFrame;
    alias _GtkFrameClass aGtkFrameClass;
    alias _GtkFrame aGtkFrame;
    alias _GtkArrowClass aGtkArrowClass;
    alias _GtkArrow aGtkArrow;
    alias _GtkAlignmentClass aGtkAlignmentClass;
    alias _GtkAlignment aGtkAlignment;
    alias _GtkRadioActionEntry aGtkRadioActionEntry;
    alias _GtkToggleActionEntry aGtkToggleActionEntry;
    alias _GtkActionEntry aGtkActionEntry;
    alias _GtkActionGroupClass aGtkActionGroupClass;
    alias _GtkActionGroup aGtkActionGroup;
    alias _GtkItemFactoryItem aGtkItemFactoryItem;
    alias _GtkItemFactoryEntry aGtkItemFactoryEntry;
    alias _GtkItemFactoryClass aGtkItemFactoryClass;
    alias _GtkItemFactory aGtkItemFactory;
    alias _GtkActionClass aGtkActionClass;
    alias _GtkAction aGtkAction;
    alias _GtkAccessibleClass aGtkAccessibleClass;
    alias _GtkAccessible aGtkAccessible;
    alias _GtkAccelLabelClass aGtkAccelLabelClass;
    alias _GtkAccelLabel aGtkAccelLabel;
    alias _GtkLabelClass aGtkLabelClass;
    alias _GtkLabel aGtkLabel;
    alias _GtkMenuClass aGtkMenuClass;
    alias _GtkMenu aGtkMenu;
    alias _GtkMenuShellClass aGtkMenuShellClass;
    alias _GtkMenuShell aGtkMenuShell;
    alias _GtkMiscClass aGtkMiscClass;
    alias _GtkMisc aGtkMisc;
    alias _GtkAboutDialogClass aGtkAboutDialogClass;
    alias _GtkAboutDialog aGtkAboutDialog;
    alias _GtkDialogClass aGtkDialogClass;
    alias _GtkDialog aGtkDialog;
    alias _GtkWindowGroupClass aGtkWindowGroupClass;
    alias _GtkWindowGroup aGtkWindowGroup;
    alias _GtkWindowClass aGtkWindowClass;
    alias _GtkBinClass aGtkBinClass;
    alias _GtkBin aGtkBin;
    alias _GtkContainerClass aGtkContainerClass;
    alias _GtkContainer aGtkContainer;
    alias _GtkWindow aGtkWindow;
    alias _GtkWidgetShapeInfo aGtkWidgetShapeInfo;
    alias _GtkWidgetAuxInfo aGtkWidgetAuxInfo;
    alias _GtkWidgetClass aGtkWidgetClass;
    alias _GtkSelectionData aGtkSelectionData;
    alias _GtkRequisition aGtkRequisition;
    alias _GtkSettingsValue aGtkSettingsValue;
    alias _GtkSettingsClass aGtkSettingsClass;
    alias _GtkRcStyleClass aGtkRcStyleClass;
    alias _GtkIconFactory aGtkIconFactory;
    alias _GtkWidget aGtkWidget;
    alias _GtkSettings aGtkSettings;
    alias _GtkRcProperty aGtkRcProperty;
    alias _GtkRcStyle aGtkRcStyle;
    alias _GtkStyleClass aGtkStyleClass;
    alias _GtkStyle aGtkStyle;
    alias _GtkBorder aGtkBorder;
    alias _GtkAdjustmentClass aGtkAdjustmentClass;
    alias _GtkAdjustment aGtkAdjustment;
    alias _GtkObjectClass aGtkObjectClass;
    alias _GtkTypeInfo aGtkTypeInfo;
    alias _GtkObject aGtkObject;
    alias _GtkArg aGtkArg;
    alias _GtkAccelGroupEntry aGtkAccelGroupEntry;
    alias _GtkAccelKey aGtkAccelKey;
    alias _GtkAccelGroupClass aGtkAccelGroupClass;
    alias _GtkAccelGroup aGtkAccelGroup;
}
else{
    alias void aGtkVSeparatorClass;
    alias void aGtkVSeparator;
    alias void aGtkVScaleClass;
    alias void aGtkVScale;
    alias void aGtkVRulerClass;
    alias void aGtkVRuler;
    alias void aGtkVPanedClass;
    alias void aGtkVPaned;
    alias void aGtkVolumeButtonClass;
    alias void aGtkVButtonBoxClass;
    alias void aGtkVButtonBox;
    alias void aGtkUIManagerClass;
    alias void aGtkUIManager;
    alias void aGtkTreeStoreClass;
    alias void aGtkTreeStore;
    alias void aGtkTreeModelSortClass;
    alias void aGtkTreeModelSort;
    alias void aGtkTreeDragDestIface;
    alias void aGtkTreeDragSourceIface;
    alias void aGtkToolbarClass;
    alias void aGtkToolbar;
    alias void aGtkToolbarChild;
    alias void aGtkTipsQueryClass;
    alias void aGtkTipsQuery;
    alias void aGtkTextViewClass;
    alias void aGtkTextView;
    alias void aGtkTextBufferClass;
    alias void aGtkTextMarkClass;
    alias void aGtkTextMark;
    alias void aGtkTextTagTableClass;
    alias void aGtkTearoffMenuItemClass;
    alias void aGtkTearoffMenuItem;
    alias void aGtkTableRowCol;
    alias void aGtkTableChild;
    alias void aGtkTableClass;
    alias void aGtkTable;
    alias void aGtkStockItem;
    alias void aGtkStatusIconClass;
    alias void aGtkStatusIcon;
    alias void aGtkStatusbarClass;
    alias void aGtkStatusbar;
    alias void aGtkSpinButtonClass;
    alias void aGtkSpinButton;
    alias void aGtkSizeGroupClass;
    alias void aGtkSizeGroup;
    alias void aGtkSeparatorToolItemClass;
    alias void aGtkSeparatorToolItem;
    alias void aGtkSeparatorMenuItemClass;
    alias void aGtkSeparatorMenuItem;
    alias void aGtkScrolledWindowClass;
    alias void aGtkScrolledWindow;
    alias void aGtkViewportClass;
    alias void aGtkViewport;
    alias void aGtkScaleButtonClass;
    alias void aGtkScaleButton;
    alias void aGtkRecentChooserWidgetClass;
    alias void aGtkRecentChooserWidget;
    alias void aGtkRecentChooserMenuClass;
    alias void aGtkRecentChooserMenu;
    alias void aGtkRecentChooserDialogClass;
    alias void aGtkRecentChooserDialog;
    alias void aGtkRecentChooserIface;
    alias void aGtkRecentFilterInfo;
    alias void aGtkRecentActionClass;
    alias void aGtkRecentAction;
    alias void aGtkRecentManagerClass;
    alias void aGtkRecentManager;
    alias void aGtkRecentData;
    alias void aGtkRadioToolButtonClass;
    alias void aGtkRadioToolButton;
    alias void aGtkToggleToolButtonClass;
    alias void aGtkToggleToolButton;
    alias void aGtkRadioMenuItemClass;
    alias void aGtkRadioMenuItem;
    alias void aGtkRadioButtonClass;
    alias void aGtkRadioButton;
    alias void aGtkRadioActionClass;
    alias void aGtkRadioAction;
    alias void aGtkToggleActionClass;
    alias void aGtkToggleAction;
    alias void aGtkProgressBarClass;
    alias void aGtkProgressBar;
    alias void aGtkProgressClass;
    alias void aGtkProgress;
    alias void aGtkPrintOperation;
    alias void aGtkPrintOperationClass;
    alias void aGtkPrintOperationPreviewIface;
    alias void aGtkPageRange;
    alias void aGtkPreviewClass;
    alias void aGtkPreviewInfo;
    alias void aGtkPreview;
    alias void aGtkPlugClass;
    alias void aGtkPlug;
    alias void aGtkSocketClass;
    alias void aGtkSocket;
    alias void aGtkPixmapClass;
    alias void aGtkPixmap;
    alias void aGtkOptionMenuClass;
    alias void aGtkOptionMenu;
    alias void aGtkOldEditableClass;
    alias void aGtkOldEditable;
    alias void aGtkNotebookClass;
    alias void aGtkNotebook;
    alias void aGtkMessageDialogClass;
    alias void aGtkMessageDialog;
    alias void aGtkMenuToolButton;
    alias void aGtkMenuToolButtonClass;
    alias void aGtkToolButtonClass;
    alias void aGtkToolButton;
    alias void aGtkToolItemClass;
    alias void aGtkToolItem;
    alias void aGtkTooltipsData;
    alias void aGtkTooltipsClass;
    alias void aGtkTooltips;
    alias void aGtkMenuBarClass;
    alias void aGtkMenuBar;
    alias void aGtkListClass;
    alias void aGtkList;
    alias void aGtkListItemClass;
    alias void aGtkListItem;
    alias void aGtkLinkButtonClass;
    alias void aGtkLinkButton;
    alias void aGtkLayoutClass;
    alias void aGtkLayout;
    alias void aGtkInvisibleClass;
    alias void aGtkInvisible;
    alias void aGtkInputDialogClass;
    alias void aGtkInputDialog;
    alias void aGtkIMMulticontextClass;
    alias void aGtkIMMulticontext;
    alias void aGtkIMContextSimpleClass;
    alias void aGtkIMContextSimple;
    alias void aGtkImageMenuItemClass;
    alias void aGtkImageMenuItem;
    alias void aGtkIconViewClass;
    alias void aGtkIconView;
    alias void aGtkIconThemeClass;
    alias void aGtkIconTheme;
    alias void aGtkIconFactoryClass;
    alias void aGtkHSeparatorClass;
    alias void aGtkHSeparator;
    alias void aGtkSeparatorClass;
    alias void aGtkSeparator;
    alias void aGtkHScaleClass;
    alias void aGtkHScale;
    alias void aGtkScaleClass;
    alias void aGtkScale;
    alias void aGtkHRulerClass;
    alias void aGtkHRuler;
    alias void aGtkRulerMetric;
    alias void aGtkRulerClass;
    alias void aGtkRuler;
    alias void aGtkHPanedClass;
    alias void aGtkHPaned;
    alias void aGtkPanedClass;
    alias void aGtkPaned;
    alias void aGtkHButtonBoxClass;
    alias void aGtkHButtonBox;
    alias void aGtkHandleBoxClass;
    alias void aGtkHandleBox;
    alias void aGtkGammaCurveClass;
    alias void aGtkGammaCurve;
    alias void aGtkFontSelectionDialogClass;
    alias void aGtkFontSelectionDialog;
    alias void aGtkFontSelectionClass;
    alias void aGtkFontSelection;
    alias void aGtkFontButtonClass;
    alias void aGtkFontButton;
    alias void aGtkFileChooserWidgetClass;
    alias void aGtkFileChooserWidget;
    alias void aGtkFileChooserDialogClass;
    alias void aGtkFileChooserDialog;
    alias void aGtkFileChooserButtonClass;
    alias void aGtkFileChooserButton;
    alias void aGtkFileFilterInfo;
    alias void aGtkFixedChild;
    alias void aGtkFixedClass;
    alias void aGtkFixed;
    alias void aGtkFileSelectionClass;
    alias void aGtkFileSelection;
    alias void aGtkExpanderClass;
    alias void aGtkExpander;
    alias void aGtkEventBoxClass;
    alias void aGtkEventBox;
    alias void aGtkCurveClass;
    alias void aGtkCurve;
    alias void aGtkDrawingAreaClass;
    alias void aGtkDrawingArea;
    alias void aGtkCTreeNode;
    alias void aGtkCTreeRow;
    alias void aGtkCTreeClass;
    alias void aGtkCTree;
    alias void aGtkComboBoxEntryClass;
    alias void aGtkComboBoxEntry;
    alias void aGtkComboBoxClass;
    alias void aGtkComboBox;
    alias void aGtkTreeSelectionClass;
    alias void aGtkTreeSelection;
    alias void aGtkTreeViewClass;
    alias void aGtkTreeView;
    alias void aGtkEntryClass;
    alias void aGtkEntry;
    alias void aGtkEntryCompletionClass;
    alias void aGtkEntryCompletion;
    alias void aGtkTreeModelFilterClass;
    alias void aGtkTreeModelFilter;
    alias void aGtkListStoreClass;
    alias void aGtkListStore;
    alias void aGtkIMContextClass;
    alias void aGtkIMContext;
    alias void aGtkEditableClass;
    alias void aGtkComboClass;
    alias void aGtkCombo;
    alias void aGtkHBoxClass;
    alias void aGtkHBox;
    alias void aGtkColorSelectionDialogClass;
    alias void aGtkColorSelectionDialog;
    alias void aGtkColorSelectionClass;
    alias void aGtkColorSelection;
    alias void aGtkVBoxClass;
    alias void aGtkVBox;
    alias void aGtkColorButtonClass;
    alias void aGtkColorButton;
    alias void aGtkCListDestInfo;
    alias void aGtkCListCellInfo;
    alias void aGtkCellWidget;
    alias void aGtkCellPixText;
    alias void aGtkCellPixmap;
    alias void aGtkCellText;
    alias void aGtkCell;
    alias void aGtkCListRow;
    alias void aGtkCListColumn;
    alias void aGtkCListClass;
    alias void aGtkCList;
    alias void aGtkVScrollbarClass;
    alias void aGtkVScrollbar;
    alias void aGtkHScrollbarClass;
    alias void aGtkHScrollbar;
    alias void aGtkScrollbarClass;
    alias void aGtkScrollbar;
    alias void aGtkRangeClass;
    alias void aGtkRange;
    alias void aGtkTargetPair;
    alias void aGtkTargetEntry;
    alias void aGtkTargetList;
    alias void aGtkTextBuffer;
    alias void aGtkTextChildAnchorClass;
    alias void aGtkTextChildAnchor;
    alias void aGtkTextAppearance;
    alias void aGtkTextTagClass;
    alias void aGtkTextTag;
    alias void aGtkTextAttributes;
    alias void aGtkTextTagTable;
    alias void aGtkTextIter;
    alias void aGtkCheckMenuItemClass;
    alias void aGtkCheckMenuItem;
    alias void aGtkMenuItemClass;
    alias void aGtkMenuItem;
    alias void aGtkItemClass;
    alias void aGtkItem;
    alias void aGtkCheckButtonClass;
    alias void aGtkCheckButton;
    alias void aGtkToggleButtonClass;
    alias void aGtkToggleButton;
    alias void aGtkCellViewClass;
    alias void aGtkCellView;
    alias void aGtkCellRendererToggleClass;
    alias void aGtkCellRendererToggle;
    alias void aGtkCellRendererSpinClass;
    alias void aGtkCellRendererSpin;
    alias void aGtkCellRendererProgressClass;
    alias void aGtkCellRendererProgress;
    alias void aGtkCellRendererPixbufClass;
    alias void aGtkCellRendererPixbuf;
    alias void aGtkCellRendererComboClass;
    alias void aGtkCellRendererCombo;
    alias void aGtkCellRendererAccelClass;
    alias void aGtkCellRendererAccel;
    alias void aGtkCellRendererTextClass;
    alias void aGtkCellRendererText;
    alias void aGtkCellLayoutIface;
    alias void aGtkTreeViewColumnClass;
    alias void aGtkTreeViewColumn;
    alias void aGtkTreeSortableIface;
    alias void aGtkTreeModelIface;
    alias void aGtkTreeIter;
    alias void aGtkCellRendererClass;
    alias void aGtkCellRenderer;
    alias void aGtkCellEditableIface;
    alias void aGtkCalendarClass;
    alias void aGtkCalendar;
    alias void aGtkButtonClass;
    alias void aGtkButton;
    alias void aGtkImageIconNameData;
    alias void aGtkImageAnimationData;
    alias void aGtkImageIconSetData;
    alias void aGtkImageStockData;
    alias void aGtkImagePixbufData;
    alias void aGtkImageImageData;
    alias void aGtkImagePixmapData;
    alias void aGtkImageClass;
    alias void aGtkImage;
    alias void aGtkBuildableIface;
    alias void aGtkBuilderClass;
    alias void aGtkBuilder;
    alias void aGtkBindingArg;
    alias void aGtkBindingSignal;
    alias void aGtkBindingEntry;
    alias void aGtkBindingSet;
    alias void aGtkButtonBoxClass;
    alias void aGtkButtonBox;
    alias void aGtkBoxChild;
    alias void aGtkBoxClass;
    alias void aGtkBox;
    alias void aGtkAssistantClass;
    alias void aGtkAssistant;
    alias void aGtkAspectFrameClass;
    alias void aGtkAspectFrame;
    alias void aGtkFrameClass;
    alias void aGtkFrame;
    alias void aGtkArrowClass;
    alias void aGtkArrow;
    alias void aGtkAlignmentClass;
    alias void aGtkAlignment;
    alias void aGtkRadioActionEntry;
    alias void aGtkToggleActionEntry;
    alias void aGtkActionEntry;
    alias void aGtkActionGroupClass;
    alias void aGtkActionGroup;
    alias void aGtkItemFactoryItem;
    alias void aGtkItemFactoryEntry;
    alias void aGtkItemFactoryClass;
    alias void aGtkItemFactory;
    alias void aGtkActionClass;
    alias void aGtkAction;
    alias void aGtkAccessibleClass;
    alias void aGtkAccessible;
    alias void aGtkAccelLabelClass;
    alias void aGtkAccelLabel;
    alias void aGtkLabelClass;
    alias void aGtkLabel;
    alias void aGtkMenuClass;
    alias void aGtkMenu;
    alias void aGtkMenuShellClass;
    alias void aGtkMenuShell;
    alias void aGtkMiscClass;
    alias void aGtkMisc;
    alias void aGtkAboutDialogClass;
    alias void aGtkAboutDialog;
    alias void aGtkDialogClass;
    alias void aGtkDialog;
    alias void aGtkWindowGroupClass;
    alias void aGtkWindowGroup;
    alias void aGtkWindowClass;
    alias void aGtkBinClass;
    alias void aGtkBin;
    alias void aGtkContainerClass;
    alias void aGtkContainer;
    alias void aGtkWindow;
    alias void aGtkWidgetShapeInfo;
    alias void aGtkWidgetAuxInfo;
    alias void aGtkWidgetClass;
    alias void aGtkSelectionData;
    alias void aGtkRequisition;
    alias void aGtkSettingsValue;
    alias void aGtkSettingsClass;
    alias void aGtkRcStyleClass;
    alias void aGtkIconFactory;
    alias void aGtkWidget;
    alias void aGtkSettings;
    alias void aGtkRcProperty;
    alias void aGtkRcStyle;
    alias void aGtkStyleClass;
    alias void aGtkStyle;
    alias void aGtkBorder;
    alias void aGtkAdjustmentClass;
    alias void aGtkAdjustment;
    alias void aGtkObjectClass;
    alias void aGtkTypeInfo;
    alias void aGtkObject;
    alias void aGtkArg;
    alias void aGtkAccelGroupEntry;
    alias void aGtkAccelKey;
    alias void aGtkAccelGroupClass;
    alias void aGtkAccelGroup;
}
const gint GTK_PATH_PRIO_MASK = 0x0f;
const gint GTK_BUTTONBOX_DEFAULT = -1;
const gint GTK_MAX_COMPOSE_LEN = 7;
const String GTK_PAPER_NAME_A3 = "iso_a3";
const String GTK_PAPER_NAME_A4 = "iso_a4";
const String GTK_PAPER_NAME_A5 = "iso_a5";
const String GTK_PAPER_NAME_B5 = "iso_b5";
const String GTK_PAPER_NAME_LETTER = "na_letter";
const String GTK_PAPER_NAME_EXECUTIVE = "na_executive";
const String GTK_PAPER_NAME_LEGAL = "na_legal";
const String GTK_PRINT_SETTINGS_PRINTER = "printer";
const String GTK_PRINT_SETTINGS_ORIENTATION = "orientation";
const String GTK_PRINT_SETTINGS_PAPER_FORMAT = "paper-format";
const String GTK_PRINT_SETTINGS_PAPER_WIDTH = "paper-width";
const String GTK_PRINT_SETTINGS_PAPER_HEIGHT = "paper-height";
const String GTK_PRINT_SETTINGS_N_COPIES = "n-copies";
const String GTK_PRINT_SETTINGS_DEFAULT_SOURCE = "default-source";
const String GTK_PRINT_SETTINGS_QUALITY = "quality";
const String GTK_PRINT_SETTINGS_RESOLUTION = "resolution";
const String GTK_PRINT_SETTINGS_USE_COLOR = "use-color";
const String GTK_PRINT_SETTINGS_DUPLEX = "duplex";
const String GTK_PRINT_SETTINGS_COLLATE = "collate";
const String GTK_PRINT_SETTINGS_REVERSE = "reverse";
const String GTK_PRINT_SETTINGS_MEDIA_TYPE = "media-type";
const String GTK_PRINT_SETTINGS_DITHER = "dither";
const String GTK_PRINT_SETTINGS_SCALE = "scale";
const String GTK_PRINT_SETTINGS_PRINT_PAGES = "print-pages";
const String GTK_PRINT_SETTINGS_PAGE_RANGES = "page-ranges";
const String GTK_PRINT_SETTINGS_PAGE_SET = "page-set";
const String GTK_PRINT_SETTINGS_FINISHINGS = "finishings";
const String GTK_PRINT_SETTINGS_NUMBER_UP = "number-up";
const String GTK_PRINT_SETTINGS_OUTPUT_BIN = "output-bin";
const String GTK_PRINT_SETTINGS_OUTPUT_FILE_FORMAT = "output-file-format";
const String GTK_PRINT_SETTINGS_OUTPUT_URI = "output-uri";
const String GTK_PRINT_SETTINGS_WIN32_DRIVER_VERSION = "win32-driver-version";
const String GTK_PRINT_SETTINGS_WIN32_DRIVER_EXTRA = "win32-driver-extra";
const gint GTK_INPUT_ERROR = -1;
const String GTK_STOCK_DIALOG_AUTHENTICATION = "gtk-dialog-authentication";
const String GTK_STOCK_DIALOG_INFO = "gtk-dialog-info";
const String GTK_STOCK_DIALOG_WARNING = "gtk-dialog-warning";
const String GTK_STOCK_DIALOG_ERROR = "gtk-dialog-error";
const String GTK_STOCK_DIALOG_QUESTION = "gtk-dialog-question";
const String GTK_STOCK_DND = "gtk-dnd";
const String GTK_STOCK_DND_MULTIPLE = "gtk-dnd-multiple";
const String GTK_STOCK_ABOUT = "gtk-about";
const String GTK_STOCK_ADD = "gtk-add";
const String GTK_STOCK_APPLY = "gtk-apply";
const String GTK_STOCK_BOLD = "gtk-bold";
const String GTK_STOCK_CANCEL = "gtk-cancel";
const String GTK_STOCK_CDROM = "gtk-cdrom";
const String GTK_STOCK_CLEAR = "gtk-clear";
const String GTK_STOCK_CLOSE = "gtk-close";
const String GTK_STOCK_COLOR_PICKER = "gtk-color-picker";
const String GTK_STOCK_CONVERT = "gtk-convert";
const String GTK_STOCK_CONNECT = "gtk-connect";
const String GTK_STOCK_COPY = "gtk-copy";
const String GTK_STOCK_CUT = "gtk-cut";
const String GTK_STOCK_DELETE = "gtk-delete";
const String GTK_STOCK_DIRECTORY = "gtk-directory";
const String GTK_STOCK_DISCARD = "gtk-discard";
const String GTK_STOCK_DISCONNECT = "gtk-disconnect";
const String GTK_STOCK_EDIT = "gtk-edit";
const String GTK_STOCK_EXECUTE = "gtk-execute";
const String GTK_STOCK_FILE = "gtk-file";
const String GTK_STOCK_FIND = "gtk-find";
const String GTK_STOCK_FIND_AND_REPLACE = "gtk-find-and-replace";
const String GTK_STOCK_FLOPPY = "gtk-floppy";
const String GTK_STOCK_FULLSCREEN = "gtk-fullscreen";
const String GTK_STOCK_GOTO_BOTTOM = "gtk-goto-bottom";
const String GTK_STOCK_GOTO_FIRST = "gtk-goto-first";
const String GTK_STOCK_GOTO_LAST = "gtk-goto-last";
const String GTK_STOCK_GOTO_TOP = "gtk-goto-top";
const String GTK_STOCK_GO_BACK = "gtk-go-back";
const String GTK_STOCK_GO_DOWN = "gtk-go-down";
const String GTK_STOCK_GO_FORWARD = "gtk-go-forward";
const String GTK_STOCK_GO_UP = "gtk-go-up";
const String GTK_STOCK_HARDDISK = "gtk-harddisk";
const String GTK_STOCK_HELP = "gtk-help";
const String GTK_STOCK_HOME = "gtk-home";
const String GTK_STOCK_INDEX = "gtk-index";
const String GTK_STOCK_INDENT = "gtk-indent";
const String GTK_STOCK_INFO = "gtk-info";
const String GTK_STOCK_UNINDENT = "gtk-unindent";
const String GTK_STOCK_ITALIC = "gtk-italic";
const String GTK_STOCK_JUMP_TO = "gtk-jump-to";
const String GTK_STOCK_JUSTIFY_CENTER = "gtk-justify-center";
const String GTK_STOCK_JUSTIFY_FILL = "gtk-justify-fill";
const String GTK_STOCK_JUSTIFY_LEFT = "gtk-justify-left";
const String GTK_STOCK_JUSTIFY_RIGHT = "gtk-justify-right";
const String GTK_STOCK_LEAVE_FULLSCREEN = "gtk-leave-fullscreen";
const String GTK_STOCK_MISSING_IMAGE = "gtk-missing-image";
const String GTK_STOCK_MEDIA_FORWARD = "gtk-media-forward";
const String GTK_STOCK_MEDIA_NEXT = "gtk-media-next";
const String GTK_STOCK_MEDIA_PAUSE = "gtk-media-pause";
const String GTK_STOCK_MEDIA_PLAY = "gtk-media-play";
const String GTK_STOCK_MEDIA_PREVIOUS = "gtk-media-previous";
const String GTK_STOCK_MEDIA_RECORD = "gtk-media-record";
const String GTK_STOCK_MEDIA_REWIND = "gtk-media-rewind";
const String GTK_STOCK_MEDIA_STOP = "gtk-media-stop";
const String GTK_STOCK_NETWORK = "gtk-network";
const String GTK_STOCK_NEW = "gtk-new";
const String GTK_STOCK_NO = "gtk-no";
const String GTK_STOCK_OK = "gtk-ok";
const String GTK_STOCK_OPEN = "gtk-open";
const String GTK_STOCK_ORIENTATION_PORTRAIT = "gtk-orientation-portrait";
const String GTK_STOCK_ORIENTATION_LANDSCAPE = "gtk-orientation-landscape";
const String GTK_STOCK_ORIENTATION_REVERSE_LANDSCAPE = "gtk-orientation-reverse-landscape";
const String GTK_STOCK_ORIENTATION_REVERSE_PORTRAIT = "gtk-orientation-reverse-portrait";
const String GTK_STOCK_PASTE = "gtk-paste";
const String GTK_STOCK_PREFERENCES = "gtk-preferences";
const String GTK_STOCK_PRINT = "gtk-print";
const String GTK_STOCK_PRINT_PREVIEW = "gtk-print-preview";
const String GTK_STOCK_PROPERTIES = "gtk-properties";
const String GTK_STOCK_QUIT = "gtk-quit";
const String GTK_STOCK_REDO = "gtk-redo";
const String GTK_STOCK_REFRESH = "gtk-refresh";
const String GTK_STOCK_REMOVE = "gtk-remove";
const String GTK_STOCK_REVERT_TO_SAVED = "gtk-revert-to-saved";
const String GTK_STOCK_SAVE = "gtk-save";
const String GTK_STOCK_SAVE_AS = "gtk-save-as";
const String GTK_STOCK_SELECT_ALL = "gtk-select-all";
const String GTK_STOCK_SELECT_COLOR = "gtk-select-color";
const String GTK_STOCK_SELECT_FONT = "gtk-select-font";
const String GTK_STOCK_SORT_ASCENDING = "gtk-sort-ascending";
const String GTK_STOCK_SORT_DESCENDING = "gtk-sort-descending";
const String GTK_STOCK_SPELL_CHECK = "gtk-spell-check";
const String GTK_STOCK_STOP = "gtk-stop";
const String GTK_STOCK_STRIKETHROUGH = "gtk-strikethrough";
const String GTK_STOCK_UNDELETE = "gtk-undelete";
const String GTK_STOCK_UNDERLINE = "gtk-underline";
const String GTK_STOCK_UNDO = "gtk-undo";
const String GTK_STOCK_YES = "gtk-yes";
const String GTK_STOCK_ZOOM_100 = "gtk-zoom-100";
const String GTK_STOCK_ZOOM_FIT = "gtk-zoom-fit";
const String GTK_STOCK_ZOOM_IN = "gtk-zoom-in";
const String GTK_STOCK_ZOOM_OUT = "gtk-zoom-out";
alias _GtkVSeparatorClass GtkVSeparatorClass;
alias _GtkSeparatorClass GtkSeparatorClass;
alias _GtkVSeparator GtkVSeparator;
alias _GtkSeparator GtkSeparator;
alias _GtkVScaleClass GtkVScaleClass;
alias _GtkScaleClass GtkScaleClass;
alias _GtkVScale GtkVScale;
alias _GtkScale GtkScale;
alias _GtkVRulerClass GtkVRulerClass;
alias _GtkRulerClass GtkRulerClass;
alias _GtkVRuler GtkVRuler;
alias _GtkRuler GtkRuler;
alias _GtkVPanedClass GtkVPanedClass;
alias _GtkPanedClass GtkPanedClass;
alias _GtkVPaned GtkVPaned;
alias _GtkPaned GtkPaned;
alias _GtkVolumeButtonClass GtkVolumeButtonClass;
alias _GtkScaleButtonClass GtkScaleButtonClass;
alias void function() _BCD_func__12122;
alias void GtkVolumeButton;
alias _GtkVButtonBoxClass GtkVButtonBoxClass;
alias _GtkButtonBoxClass GtkButtonBoxClass;
alias _GtkVButtonBox GtkVButtonBox;
alias _GtkButtonBox GtkButtonBox;
enum GtkUIManagerItemType {
GTK_UI_MANAGER_AUTO=0,
GTK_UI_MANAGER_MENUBAR=1,
GTK_UI_MANAGER_MENU=2,
GTK_UI_MANAGER_TOOLBAR=4,
GTK_UI_MANAGER_PLACEHOLDER=8,
GTK_UI_MANAGER_POPUP=16,
GTK_UI_MANAGER_MENUITEM=32,
GTK_UI_MANAGER_TOOLITEM=64,
GTK_UI_MANAGER_SEPARATOR=128,
GTK_UI_MANAGER_ACCELERATOR=256,
}
alias void GtkUIManagerPrivate;
alias _GtkUIManagerClass GtkUIManagerClass;
alias _GtkUIManager GtkUIManager;
alias _GtkWidget GtkWidget;
alias void function(_GtkUIManager *, _GtkWidget *) _BCD_func__16564;
alias void function(_GtkUIManager *) _BCD_func__16565;
alias _GtkAction GtkAction;
alias void function(_GtkUIManager *, _GtkAction *, _GtkWidget *) _BCD_func__16566;
alias void function(_GtkUIManager *, _GtkAction *) _BCD_func__16567;
alias _GtkWidget * function(_GtkUIManager *, char *) _BCD_func__16568;
alias _GtkAction * function(_GtkUIManager *, char *) _BCD_func__16569;
alias _GtkTreeStoreClass GtkTreeStoreClass;
alias _GtkTreeStore GtkTreeStore;
enum GtkSortType {
GTK_SORT_ASCENDING=0,
GTK_SORT_DESCENDING=1,
}
alias void GtkTreeModel;
alias _GtkTreeIter GtkTreeIter;
alias gint function(void *, _GtkTreeIter *, _GtkTreeIter *, void *) _BCD_func__11685;
alias _BCD_func__11685 GtkTreeIterCompareFunc;
alias void function(void *) _BCD_func__13158;
alias _BCD_func__13158 GtkDestroyNotify;
alias void GtkTreePath;
alias void function(void *, void *, _GtkTreeIter *, void *) _BCD_func__9093;
alias _BCD_func__9093 GtkTreeSelectionForeachFunc;
alias _GtkTreeSelection GtkTreeSelection;
alias gint function(_GtkTreeSelection *, void *, void *, gint, void *) _BCD_func__9094;
alias _BCD_func__9094 GtkTreeSelectionFunc;
alias _GtkTreeModelSortClass GtkTreeModelSortClass;
alias _GtkTreeModelSort GtkTreeModelSort;
alias _GtkTreeDragDestIface GtkTreeDragDestIface;
alias void GtkTreeDragDest;
alias _GtkSelectionData GtkSelectionData;
alias gint function(void *, void *, _GtkSelectionData *) _BCD_func__16576;
alias _GtkTreeDragSourceIface GtkTreeDragSourceIface;
alias void GtkTreeDragSource;
alias gint function(void *, void *) _BCD_func__16578;
alias gint function(void *, void *, _GtkSelectionData *) _BCD_func__16579;
alias void GtkToolbarPrivate;
alias _GtkToolbarClass GtkToolbarClass;
alias _GtkContainerClass GtkContainerClass;
alias _GtkToolbar GtkToolbar;
enum GtkOrientation {
GTK_ORIENTATION_HORIZONTAL=0,
GTK_ORIENTATION_VERTICAL=1,
}
alias void function(_GtkToolbar *, gint) _BCD_func__16581;
enum GtkToolbarStyle {
GTK_TOOLBAR_ICONS=0,
GTK_TOOLBAR_TEXT=1,
GTK_TOOLBAR_BOTH=2,
GTK_TOOLBAR_BOTH_HORIZ=3,
}
alias void function(_GtkToolbar *, gint) _BCD_func__16582;
alias gint function(_GtkToolbar *, gint, gint, gint) _BCD_func__16583;
alias _GtkContainer GtkContainer;
enum GtkIconSize {
GTK_ICON_SIZE_INVALID=0,
GTK_ICON_SIZE_MENU=1,
GTK_ICON_SIZE_SMALL_TOOLBAR=2,
GTK_ICON_SIZE_LARGE_TOOLBAR=3,
GTK_ICON_SIZE_BUTTON=4,
GTK_ICON_SIZE_DND=5,
GTK_ICON_SIZE_DIALOG=6,
}
alias _GtkTooltips GtkTooltips;
enum GtkToolbarSpaceStyle {
GTK_TOOLBAR_SPACE_EMPTY=0,
GTK_TOOLBAR_SPACE_LINE=1,
}
alias _GtkToolbarChild GtkToolbarChild;
enum GtkToolbarChildType {
GTK_TOOLBAR_CHILD_SPACE=0,
GTK_TOOLBAR_CHILD_BUTTON=1,
GTK_TOOLBAR_CHILD_TOGGLEBUTTON=2,
GTK_TOOLBAR_CHILD_RADIOBUTTON=3,
GTK_TOOLBAR_CHILD_WIDGET=4,
}
alias _GtkTipsQueryClass GtkTipsQueryClass;
alias _GtkLabelClass GtkLabelClass;
alias _GtkTipsQuery GtkTipsQuery;
alias void function(_GtkTipsQuery *) _BCD_func__16587;
alias void function(_GtkTipsQuery *, _GtkWidget *, char *, char *) _BCD_func__16588;
alias gint function(_GtkTipsQuery *, _GtkWidget *, char *, char *, _GdkEventButton *) _BCD_func__16589;
alias _GtkLabel GtkLabel;
alias void GtkTextPendingScroll;
alias void GtkTextWindow;
alias _GtkTextViewClass GtkTextViewClass;
alias _GtkTextView GtkTextView;
alias _GtkAdjustment GtkAdjustment;
alias void function(_GtkTextView *, _GtkAdjustment *, _GtkAdjustment *) _BCD_func__16592;
alias _GtkMenu GtkMenu;
alias void function(_GtkTextView *, _GtkMenu *) _BCD_func__16593;
enum GtkMovementStep {
GTK_MOVEMENT_LOGICAL_POSITIONS=0,
GTK_MOVEMENT_VISUAL_POSITIONS=1,
GTK_MOVEMENT_WORDS=2,
GTK_MOVEMENT_DISPLAY_LINES=3,
GTK_MOVEMENT_DISPLAY_LINE_ENDS=4,
GTK_MOVEMENT_PARAGRAPHS=5,
GTK_MOVEMENT_PARAGRAPH_ENDS=6,
GTK_MOVEMENT_PAGES=7,
GTK_MOVEMENT_BUFFER_ENDS=8,
GTK_MOVEMENT_HORIZONTAL_PAGES=9,
}
alias void function(_GtkTextView *, gint, gint, gint) _BCD_func__16594;
alias void function(_GtkTextView *, gint, gint) _BCD_func__16595;
alias void function(_GtkTextView *) _BCD_func__16596;
alias void function(_GtkTextView *, char *) _BCD_func__16597;
enum GtkDeleteType {
GTK_DELETE_CHARS=0,
GTK_DELETE_WORD_ENDS=1,
GTK_DELETE_WORDS=2,
GTK_DELETE_DISPLAY_LINES=3,
GTK_DELETE_DISPLAY_LINE_ENDS=4,
GTK_DELETE_PARAGRAPH_ENDS=5,
GTK_DELETE_PARAGRAPHS=6,
GTK_DELETE_WHITESPACE=7,
}
alias void function(_GtkTextView *, gint, gint) _BCD_func__16598;
enum GtkDirectionType {
GTK_DIR_TAB_FORWARD=0,
GTK_DIR_TAB_BACKWARD=1,
GTK_DIR_UP=2,
GTK_DIR_DOWN=3,
GTK_DIR_LEFT=4,
GTK_DIR_RIGHT=5,
}
alias void function(_GtkTextView *, gint) _BCD_func__16599;
alias _GtkTextBuffer GtkTextBuffer;
enum GtkWrapMode {
GTK_WRAP_NONE=0,
GTK_WRAP_CHAR=1,
GTK_WRAP_WORD=2,
GTK_WRAP_WORD_CHAR=3,
}
enum GtkJustification {
GTK_JUSTIFY_LEFT=0,
GTK_JUSTIFY_RIGHT=1,
GTK_JUSTIFY_CENTER=2,
GTK_JUSTIFY_FILL=3,
}
alias _GtkTextMark GtkTextMark;
alias _GtkIMContext GtkIMContext;
enum GtkTextWindowType {
GTK_TEXT_WINDOW_PRIVATE=0,
GTK_TEXT_WINDOW_WIDGET=1,
GTK_TEXT_WINDOW_TEXT=2,
GTK_TEXT_WINDOW_LEFT=3,
GTK_TEXT_WINDOW_RIGHT=4,
GTK_TEXT_WINDOW_TOP=5,
GTK_TEXT_WINDOW_BOTTOM=6,
}
alias _GtkTextIter GtkTextIter;
alias gint function(_GtkTextBuffer *, _GtkTextBuffer *, _GtkTextIter *, char *, gsize, gint, void *, _GError * *) _BCD_func__9281;
alias _BCD_func__9281 GtkTextBufferDeserializeFunc;
alias char * function(_GtkTextBuffer *, _GtkTextBuffer *, _GtkTextIter *, _GtkTextIter *, gsize *, void *) _BCD_func__9282;
alias _BCD_func__9282 GtkTextBufferSerializeFunc;
alias _GtkTextBufferClass GtkTextBufferClass;
alias void function(_GtkTextBuffer *, _GtkTextIter *, char *, gint) _BCD_func__16602;
alias void function(_GtkTextBuffer *, _GtkTextIter *, void *) _BCD_func__16603;
alias _GtkTextChildAnchor GtkTextChildAnchor;
alias void function(_GtkTextBuffer *, _GtkTextIter *, _GtkTextChildAnchor *) _BCD_func__16604;
alias void function(_GtkTextBuffer *, _GtkTextIter *, _GtkTextIter *) _BCD_func__16605;
alias void function(_GtkTextBuffer *) _BCD_func__16606;
alias void function(_GtkTextBuffer *, _GtkTextIter *, _GtkTextMark *) _BCD_func__16607;
alias void function(_GtkTextBuffer *, _GtkTextMark *) _BCD_func__16608;
alias _GtkTextTag GtkTextTag;
alias void function(_GtkTextBuffer *, _GtkTextTag *, _GtkTextIter *, _GtkTextIter *) _BCD_func__16609;
alias void GtkTextLogAttrCache;
alias void GtkTextBTree;
enum GtkTextBufferTargetInfo {
GTK_TEXT_BUFFER_TARGET_INFO_BUFFER_CONTENTS=-1,
GTK_TEXT_BUFFER_TARGET_INFO_RICH_TEXT=-2,
GTK_TEXT_BUFFER_TARGET_INFO_TEXT=-3,
}
alias _GtkTextMarkClass GtkTextMarkClass;
alias _GtkTextTagTableClass GtkTextTagTableClass;
alias _GtkTextTagTable GtkTextTagTable;
alias void function(_GtkTextTagTable *, _GtkTextTag *, gint) _BCD_func__16613;
alias void function(_GtkTextTagTable *, _GtkTextTag *) _BCD_func__16614;
alias void function(_GtkTextTag *, void *) _BCD_func__9332;
alias _BCD_func__9332 GtkTextTagTableForeach;
alias _GtkTearoffMenuItemClass GtkTearoffMenuItemClass;
alias _GtkMenuItemClass GtkMenuItemClass;
alias _GtkTearoffMenuItem GtkTearoffMenuItem;
alias _GtkMenuItem GtkMenuItem;
alias _GtkTableRowCol GtkTableRowCol;
alias _GtkTableChild GtkTableChild;
alias _GtkTableClass GtkTableClass;
alias _GtkTable GtkTable;
alias _GtkStockItem GtkStockItem;
alias void GtkStatusIconPrivate;
alias _GtkStatusIconClass GtkStatusIconClass;
alias _GtkStatusIcon GtkStatusIcon;
alias void function(_GtkStatusIcon *) _BCD_func__16623;
alias void function(_GtkStatusIcon *, guint, guint32) _BCD_func__16624;
alias gint function(_GtkStatusIcon *, gint) _BCD_func__16625;
alias _GtkStatusbarClass GtkStatusbarClass;
alias _GtkHBoxClass GtkHBoxClass;
alias _GtkStatusbar GtkStatusbar;
alias void function(_GtkStatusbar *, guint, char *) _BCD_func__16628;
alias _GtkHBox GtkHBox;
alias _GtkSpinButtonClass GtkSpinButtonClass;
alias _GtkEntryClass GtkEntryClass;
alias _GtkSpinButton GtkSpinButton;
alias gint function(_GtkSpinButton *, double *) _BCD_func__16631;
alias gint function(_GtkSpinButton *) _BCD_func__16632;
alias void function(_GtkSpinButton *) _BCD_func__16633;
enum GtkScrollType {
GTK_SCROLL_NONE=0,
GTK_SCROLL_JUMP=1,
GTK_SCROLL_STEP_BACKWARD=2,
GTK_SCROLL_STEP_FORWARD=3,
GTK_SCROLL_PAGE_BACKWARD=4,
GTK_SCROLL_PAGE_FORWARD=5,
GTK_SCROLL_STEP_UP=6,
GTK_SCROLL_STEP_DOWN=7,
GTK_SCROLL_PAGE_UP=8,
GTK_SCROLL_PAGE_DOWN=9,
GTK_SCROLL_STEP_LEFT=10,
GTK_SCROLL_STEP_RIGHT=11,
GTK_SCROLL_PAGE_LEFT=12,
GTK_SCROLL_PAGE_RIGHT=13,
GTK_SCROLL_START=14,
GTK_SCROLL_END=15,
}
alias void function(_GtkSpinButton *, gint) _BCD_func__16634;
alias _GtkEntry GtkEntry;
enum GtkSpinButtonUpdatePolicy {
GTK_UPDATE_ALWAYS=0,
GTK_UPDATE_IF_VALID=1,
}
enum GtkSpinType {
GTK_SPIN_STEP_FORWARD=0,
GTK_SPIN_STEP_BACKWARD=1,
GTK_SPIN_PAGE_FORWARD=2,
GTK_SPIN_PAGE_BACKWARD=3,
GTK_SPIN_HOME=4,
GTK_SPIN_END=5,
GTK_SPIN_USER_DEFINED=6,
}
enum GtkSizeGroupMode {
GTK_SIZE_GROUP_NONE=0,
GTK_SIZE_GROUP_HORIZONTAL=1,
GTK_SIZE_GROUP_VERTICAL=2,
GTK_SIZE_GROUP_BOTH=3,
}
alias _GtkSizeGroupClass GtkSizeGroupClass;
alias _GtkSizeGroup GtkSizeGroup;
alias _GtkRequisition GtkRequisition;
alias void GtkSeparatorToolItemPrivate;
alias _GtkSeparatorToolItemClass GtkSeparatorToolItemClass;
alias _GtkToolItemClass GtkToolItemClass;
alias _GtkSeparatorToolItem GtkSeparatorToolItem;
alias _GtkToolItem GtkToolItem;
alias _GtkSeparatorMenuItemClass GtkSeparatorMenuItemClass;
alias _GtkSeparatorMenuItem GtkSeparatorMenuItem;
alias _GtkScrolledWindowClass GtkScrolledWindowClass;
alias _GtkBinClass GtkBinClass;
alias _GtkScrolledWindow GtkScrolledWindow;
alias gint function(_GtkScrolledWindow *, gint, gint) _BCD_func__16643;
alias void function(_GtkScrolledWindow *, gint) _BCD_func__16644;
alias _GtkBin GtkBin;
alias _GtkViewportClass GtkViewportClass;
alias _GtkViewport GtkViewport;
alias void function(_GtkViewport *, _GtkAdjustment *, _GtkAdjustment *) _BCD_func__16647;
enum GtkShadowType {
GTK_SHADOW_NONE=0,
GTK_SHADOW_IN=1,
GTK_SHADOW_OUT=2,
GTK_SHADOW_ETCHED_IN=3,
GTK_SHADOW_ETCHED_OUT=4,
}
alias void GtkScaleButtonPrivate;
alias _GtkButtonClass GtkButtonClass;
alias _GtkScaleButton GtkScaleButton;
alias void function(_GtkScaleButton *, double) _BCD_func__16650;
alias _GtkButton GtkButton;
alias void GtkRecentChooserWidgetPrivate;
alias _GtkRecentChooserWidgetClass GtkRecentChooserWidgetClass;
alias _GtkVBoxClass GtkVBoxClass;
alias _GtkRecentChooserWidget GtkRecentChooserWidget;
alias _GtkVBox GtkVBox;
alias void GtkRecentChooserMenuPrivate;
alias _GtkRecentChooserMenuClass GtkRecentChooserMenuClass;
alias _GtkMenuClass GtkMenuClass;
alias _GtkRecentChooserMenu GtkRecentChooserMenu;
alias void GtkRecentChooserDialogPrivate;
alias _GtkRecentChooserDialogClass GtkRecentChooserDialogClass;
alias _GtkDialogClass GtkDialogClass;
alias _GtkRecentChooserDialog GtkRecentChooserDialog;
alias _GtkDialog GtkDialog;
enum GtkRecentChooserError {
GTK_RECENT_CHOOSER_ERROR_NOT_FOUND=0,
GTK_RECENT_CHOOSER_ERROR_INVALID_URI=1,
}
alias _GtkRecentChooserIface GtkRecentChooserIface;
alias void GtkRecentChooser;
alias gint function(void *, char *, _GError * *) _BCD_func__16659;
alias char * function(void *) _BCD_func__16660;
alias void function(void *, char *) _BCD_func__16661;
alias void function(void *) _BCD_func__16662;
alias _GList * function(void *) _BCD_func__16663;
alias _GtkRecentManager GtkRecentManager;
alias _GtkRecentManager * function(void *) _BCD_func__16664;
alias void GtkRecentFilter;
alias void function(void *, void *) _BCD_func__16665;
alias _GSList * function(void *) _BCD_func__16666;
alias void GtkRecentInfo;
alias gint function(void *, void *, void *) _BCD_func__9605;
alias void function(void *, _BCD_func__9605, void *, _BCD_func__13158) _BCD_func__16667;
alias _BCD_func__9605 GtkRecentSortFunc;
enum GtkRecentSortType {
GTK_RECENT_SORT_NONE=0,
GTK_RECENT_SORT_MRU=1,
GTK_RECENT_SORT_LRU=2,
GTK_RECENT_SORT_CUSTOM=3,
}
alias _GtkRecentFilterInfo GtkRecentFilterInfo;
alias gint function(_GtkRecentFilterInfo *, void *) _BCD_func__9607;
alias _BCD_func__9607 GtkRecentFilterFunc;
enum GtkRecentFilterFlags {
GTK_RECENT_FILTER_URI=1,
GTK_RECENT_FILTER_DISPLAY_NAME=2,
GTK_RECENT_FILTER_MIME_TYPE=4,
GTK_RECENT_FILTER_APPLICATION=8,
GTK_RECENT_FILTER_GROUP=16,
GTK_RECENT_FILTER_AGE=32,
}
alias _GtkRecentActionClass GtkRecentActionClass;
alias _GtkActionClass GtkActionClass;
alias void GtkRecentActionPrivate;
alias _GtkRecentAction GtkRecentAction;
enum GtkRecentManagerError {
GTK_RECENT_MANAGER_ERROR_NOT_FOUND=0,
GTK_RECENT_MANAGER_ERROR_INVALID_URI=1,
GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING=2,
GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED=3,
GTK_RECENT_MANAGER_ERROR_READ=4,
GTK_RECENT_MANAGER_ERROR_WRITE=5,
GTK_RECENT_MANAGER_ERROR_UNKNOWN=6,
}
alias void GtkRecentManagerPrivate;
alias _GtkRecentManagerClass GtkRecentManagerClass;
alias void function(_GtkRecentManager *) _BCD_func__16672;
alias _GtkRecentData GtkRecentData;
alias _GtkRadioToolButtonClass GtkRadioToolButtonClass;
alias _GtkToggleToolButtonClass GtkToggleToolButtonClass;
alias _GtkRadioToolButton GtkRadioToolButton;
alias _GtkToggleToolButton GtkToggleToolButton;
alias void GtkToggleToolButtonPrivate;
alias _GtkToolButtonClass GtkToolButtonClass;
alias void function(_GtkToggleToolButton *) _BCD_func__16678;
alias _GtkToolButton GtkToolButton;
alias _GtkRadioMenuItemClass GtkRadioMenuItemClass;
alias _GtkCheckMenuItemClass GtkCheckMenuItemClass;
alias _GtkRadioMenuItem GtkRadioMenuItem;
alias void function(_GtkRadioMenuItem *) _BCD_func__16681;
alias _GtkCheckMenuItem GtkCheckMenuItem;
alias _GtkRadioButtonClass GtkRadioButtonClass;
alias _GtkCheckButtonClass GtkCheckButtonClass;
alias _GtkRadioButton GtkRadioButton;
alias void function(_GtkRadioButton *) _BCD_func__16684;
alias _GtkCheckButton GtkCheckButton;
alias _GtkRadioActionClass GtkRadioActionClass;
alias _GtkToggleActionClass GtkToggleActionClass;
alias _GtkRadioAction GtkRadioAction;
alias void function(_GtkRadioAction *, _GtkRadioAction *) _BCD_func__16687;
alias void GtkRadioActionPrivate;
alias _GtkToggleAction GtkToggleAction;
alias void function(_GtkToggleAction *) _BCD_func__16690;
alias void GtkToggleActionPrivate;
enum GtkProgressBarOrientation {
GTK_PROGRESS_LEFT_TO_RIGHT=0,
GTK_PROGRESS_RIGHT_TO_LEFT=1,
GTK_PROGRESS_BOTTOM_TO_TOP=2,
GTK_PROGRESS_TOP_TO_BOTTOM=3,
}
enum GtkProgressBarStyle {
GTK_PROGRESS_CONTINUOUS=0,
GTK_PROGRESS_DISCRETE=1,
}
alias _GtkProgressBarClass GtkProgressBarClass;
alias _GtkProgressClass GtkProgressClass;
alias _GtkProgressBar GtkProgressBar;
alias _GtkProgress GtkProgress;
alias _GtkWidgetClass GtkWidgetClass;
alias void function(_GtkProgress *) _BCD_func__16695;
alias void GtkPageSetup;
alias void function(void *, void *) _BCD_func__9769;
alias _BCD_func__9769 GtkPageSetupDoneFunc;
enum GtkPrintError {
GTK_PRINT_ERROR_GENERAL=0,
GTK_PRINT_ERROR_INTERNAL_ERROR=1,
GTK_PRINT_ERROR_NOMEM=2,
GTK_PRINT_ERROR_INVALID_FILE=3,
}
enum GtkPrintOperationAction {
GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG=0,
GTK_PRINT_OPERATION_ACTION_PRINT=1,
GTK_PRINT_OPERATION_ACTION_PREVIEW=2,
GTK_PRINT_OPERATION_ACTION_EXPORT=3,
}
enum GtkPrintOperationResult {
GTK_PRINT_OPERATION_RESULT_ERROR=0,
GTK_PRINT_OPERATION_RESULT_APPLY=1,
GTK_PRINT_OPERATION_RESULT_CANCEL=2,
GTK_PRINT_OPERATION_RESULT_IN_PROGRESS=3,
}
enum GtkPrintStatus {
GTK_PRINT_STATUS_INITIAL=0,
GTK_PRINT_STATUS_PREPARING=1,
GTK_PRINT_STATUS_GENERATING_DATA=2,
GTK_PRINT_STATUS_SENDING_DATA=3,
GTK_PRINT_STATUS_PENDING=4,
GTK_PRINT_STATUS_PENDING_ISSUE=5,
GTK_PRINT_STATUS_PRINTING=6,
GTK_PRINT_STATUS_FINISHED=7,
GTK_PRINT_STATUS_FINISHED_ABORTED=8,
}
alias _GtkPrintOperation GtkPrintOperation;
alias void GtkPrintOperationPrivate;
alias _GtkPrintOperationClass GtkPrintOperationClass;
alias void function(_GtkPrintOperation *, gint) _BCD_func__16699;
alias void GtkPrintContext;
alias void function(_GtkPrintOperation *, void *) _BCD_func__16700;
alias gint function(_GtkPrintOperation *, void *) _BCD_func__16701;
alias void function(_GtkPrintOperation *, void *, gint, void *) _BCD_func__16702;
alias void function(_GtkPrintOperation *, void *, gint) _BCD_func__16703;
alias void function(_GtkPrintOperation *) _BCD_func__16704;
alias _GtkWidget * function(_GtkPrintOperation *) _BCD_func__16705;
alias void function(_GtkPrintOperation *, _GtkWidget *) _BCD_func__16706;
alias void GtkPrintOperationPreview;
alias _GtkWindow GtkWindow;
alias gint function(_GtkPrintOperation *, void *, void *, _GtkWindow *) _BCD_func__16707;
alias _GtkPrintOperationPreviewIface GtkPrintOperationPreviewIface;
alias void function(void *, void *) _BCD_func__16709;
alias void function(void *, void *, void *) _BCD_func__16710;
alias void function(void *, gint) _BCD_func__16711;
alias gint function(void *, gint) _BCD_func__16712;
alias void function(void *) _BCD_func__16713;
alias _GtkPageRange GtkPageRange;
alias void function(char *, char *, void *) _BCD_func__9823;
alias _BCD_func__9823 GtkPrintSettingsFunc;
alias void GtkPrintSettings;
alias void GtkPaperSize;
alias _GtkPreviewClass GtkPreviewClass;
alias _GtkPreviewInfo GtkPreviewInfo;
alias _GtkDitherInfo GtkDitherInfo;
alias _GtkPreview GtkPreview;
alias _GtkPlugClass GtkPlugClass;
alias _GtkWindowClass GtkWindowClass;
alias _GtkPlug GtkPlug;
alias void function(_GtkPlug *) _BCD_func__16720;
alias _GtkWindowGroup GtkWindowGroup;
alias _GtkSocketClass GtkSocketClass;
alias _GtkSocket GtkSocket;
alias void function(_GtkSocket *) _BCD_func__16723;
alias gint function(_GtkSocket *) _BCD_func__16724;
alias _GtkAccelGroup GtkAccelGroup;
alias _GtkPixmapClass GtkPixmapClass;
alias _GtkMiscClass GtkMiscClass;
alias _GtkPixmap GtkPixmap;
alias _GtkMisc GtkMisc;
alias _GtkOptionMenuClass GtkOptionMenuClass;
alias _GtkOptionMenu GtkOptionMenu;
alias void function(_GtkOptionMenu *) _BCD_func__16729;
alias _GtkOldEditable GtkOldEditable;
alias void function(_GtkOldEditable *, guint) _BCD_func__9931;
alias _BCD_func__9931 GtkTextFunction;
alias _GtkOldEditableClass GtkOldEditableClass;
alias void function(_GtkOldEditable *) _BCD_func__16732;
alias void function(_GtkOldEditable *, gint) _BCD_func__16733;
alias void function(_GtkOldEditable *, gint, gint) _BCD_func__16734;
alias char * function(_GtkOldEditable *, gint, gint) _BCD_func__16735;
alias _GtkNotebook GtkNotebook;
alias _GtkNotebook * function(_GtkNotebook *, _GtkWidget *, gint, gint, void *) _BCD_func__9964;
alias _BCD_func__9964 GtkNotebookWindowCreationFunc;
alias void GtkNotebookPage;
alias _GtkNotebookClass GtkNotebookClass;
alias void function(_GtkNotebook *, void *, guint) _BCD_func__16738;
alias gint function(_GtkNotebook *, gint) _BCD_func__16739;
enum GtkNotebookTab {
GTK_NOTEBOOK_TAB_FIRST=0,
GTK_NOTEBOOK_TAB_LAST=1,
}
alias gint function(_GtkNotebook *, gint) _BCD_func__16740;
alias void function(_GtkNotebook *, gint) _BCD_func__16741;
alias gint function(_GtkNotebook *, gint, gint) _BCD_func__16742;
alias gint function(_GtkNotebook *, _GtkWidget *, _GtkWidget *, _GtkWidget *, gint) _BCD_func__16743;
alias _GtkNotebook * function(_GtkNotebook *, _GtkWidget *, gint, gint) _BCD_func__16744;
alias void function(_GdkDisplay *) _BCD_func__10005;
alias _BCD_func__10005 GtkModuleDisplayInitFunc;
alias void function(gint *, char * * *) _BCD_func__10006;
alias _BCD_func__10006 GtkModuleInitFunc;
alias _GtkMessageDialogClass GtkMessageDialogClass;
alias _GtkMessageDialog GtkMessageDialog;
enum GtkButtonsType {
GTK_BUTTONS_NONE=0,
GTK_BUTTONS_OK=1,
GTK_BUTTONS_CLOSE=2,
GTK_BUTTONS_CANCEL=3,
GTK_BUTTONS_YES_NO=4,
GTK_BUTTONS_OK_CANCEL=5,
}
enum GtkMessageType {
GTK_MESSAGE_INFO=0,
GTK_MESSAGE_WARNING=1,
GTK_MESSAGE_QUESTION=2,
GTK_MESSAGE_ERROR=3,
GTK_MESSAGE_OTHER=4,
}
alias void GtkMenuToolButtonPrivate;
alias _GtkMenuToolButton GtkMenuToolButton;
alias _GtkMenuToolButtonClass GtkMenuToolButtonClass;
alias void function(_GtkMenuToolButton *) _BCD_func__16750;
alias void GtkToolButtonPrivate;
alias void function(_GtkToolButton *) _BCD_func__16752;
alias void GtkToolItemPrivate;
alias gint function(_GtkToolItem *) _BCD_func__16755;
alias void function(_GtkToolItem *) _BCD_func__16756;
alias gint function(_GtkToolItem *, _GtkTooltips *, char *, char *) _BCD_func__16757;
alias _GtkTooltipsData GtkTooltipsData;
alias _GtkTooltipsClass GtkTooltipsClass;
alias _GtkObjectClass GtkObjectClass;
alias _GtkObject GtkObject;
alias _GtkMenuBarClass GtkMenuBarClass;
alias _GtkMenuShellClass GtkMenuShellClass;
alias _GtkMenuBar GtkMenuBar;
alias _GtkMenuShell GtkMenuShell;
alias gint function(_GtkWidget *, _GdkEventKey *, void *) _BCD_func__10115;
alias _BCD_func__10115 GtkKeySnoopFunc;
alias _GtkListClass GtkListClass;
alias _GtkList GtkList;
alias void function(_GtkList *) _BCD_func__16765;
alias void function(_GtkList *, _GtkWidget *) _BCD_func__16766;
enum GtkStateType {
GTK_STATE_NORMAL=0,
GTK_STATE_ACTIVE=1,
GTK_STATE_PRELIGHT=2,
GTK_STATE_SELECTED=3,
GTK_STATE_INSENSITIVE=4,
}
alias _GtkListItemClass GtkListItemClass;
alias _GtkItemClass GtkItemClass;
alias _GtkListItem GtkListItem;
alias void function(_GtkListItem *) _BCD_func__16769;
alias void function(_GtkListItem *, gint, float, gint) _BCD_func__16770;
alias void function(_GtkListItem *, gint, float) _BCD_func__16771;
alias _GtkItem GtkItem;
alias _GtkLinkButton GtkLinkButton;
alias void function(_GtkLinkButton *, char *, void *) _BCD_func__10158;
alias _BCD_func__10158 GtkLinkButtonUriFunc;
alias void GtkLinkButtonPrivate;
alias _GtkLinkButtonClass GtkLinkButtonClass;
alias _GtkLayoutClass GtkLayoutClass;
alias _GtkLayout GtkLayout;
alias void function(_GtkLayout *, _GtkAdjustment *, _GtkAdjustment *) _BCD_func__16776;
alias _GtkInvisibleClass GtkInvisibleClass;
alias _GtkInvisible GtkInvisible;
alias _GtkInputDialogClass GtkInputDialogClass;
alias _GtkInputDialog GtkInputDialog;
alias void function(_GtkInputDialog *, _GdkDevice *) _BCD_func__16781;
alias void GtkIMMulticontextPrivate;
alias _GtkIMMulticontextClass GtkIMMulticontextClass;
alias _GtkIMContextClass GtkIMContextClass;
alias _GtkIMMulticontext GtkIMMulticontext;
alias _GtkIMContextSimpleClass GtkIMContextSimpleClass;
alias _GtkIMContextSimple GtkIMContextSimple;
alias _GtkImageMenuItemClass GtkImageMenuItemClass;
alias _GtkImageMenuItem GtkImageMenuItem;
enum GtkIconViewDropPosition {
GTK_ICON_VIEW_NO_DROP=0,
GTK_ICON_VIEW_DROP_INTO=1,
GTK_ICON_VIEW_DROP_LEFT=2,
GTK_ICON_VIEW_DROP_RIGHT=3,
GTK_ICON_VIEW_DROP_ABOVE=4,
GTK_ICON_VIEW_DROP_BELOW=5,
}
alias _GtkIconView GtkIconView;
alias void function(_GtkIconView *, void *, void *) _BCD_func__10270;
alias _BCD_func__10270 GtkIconViewForeachFunc;
alias void GtkIconViewPrivate;
alias _GtkIconViewClass GtkIconViewClass;
alias void function(_GtkIconView *, _GtkAdjustment *, _GtkAdjustment *) _BCD_func__16790;
alias void function(_GtkIconView *, void *) _BCD_func__16791;
alias void function(_GtkIconView *) _BCD_func__16792;
alias gint function(_GtkIconView *, gint, gint) _BCD_func__16793;
alias gint function(_GtkIconView *) _BCD_func__16794;
enum GtkIconThemeError {
GTK_ICON_THEME_NOT_FOUND=0,
GTK_ICON_THEME_FAILED=1,
}
enum GtkIconLookupFlags {
GTK_ICON_LOOKUP_NO_SVG=1,
GTK_ICON_LOOKUP_FORCE_SVG=2,
GTK_ICON_LOOKUP_USE_BUILTIN=4,
GTK_ICON_LOOKUP_GENERIC_FALLBACK=8,
}
alias void GtkIconThemePrivate;
alias _GtkIconThemeClass GtkIconThemeClass;
alias _GtkIconTheme GtkIconTheme;
alias void function(_GtkIconTheme *) _BCD_func__16797;
alias void GtkIconInfo;
alias _GtkIconFactoryClass GtkIconFactoryClass;
alias _GtkHSeparatorClass GtkHSeparatorClass;
alias _GtkHSeparator GtkHSeparator;
alias _GtkHScaleClass GtkHScaleClass;
alias _GtkHScale GtkHScale;
alias _GtkRangeClass GtkRangeClass;
alias char * function(_GtkScale *, double) _BCD_func__16807;
alias void function(_GtkScale *) _BCD_func__16808;
alias void function(_GtkScale *, gint *, gint *) _BCD_func__16809;
alias _GtkRange GtkRange;
alias _GtkHRulerClass GtkHRulerClass;
alias _GtkHRuler GtkHRuler;
alias _GtkRulerMetric GtkRulerMetric;
alias void function(_GtkRuler *) _BCD_func__16815;
alias _GtkHPanedClass GtkHPanedClass;
alias _GtkHPaned GtkHPaned;
alias void GtkPanedPrivate;
alias gint function(_GtkPaned *, gint) _BCD_func__16820;
alias gint function(_GtkPaned *) _BCD_func__16821;
alias gint function(_GtkPaned *, gint) _BCD_func__16822;
alias _GtkHButtonBoxClass GtkHButtonBoxClass;
alias _GtkHButtonBox GtkHButtonBox;
alias _GtkHandleBoxClass GtkHandleBoxClass;
alias _GtkHandleBox GtkHandleBox;
alias void function(_GtkHandleBox *, _GtkWidget *) _BCD_func__16827;
alias _GdkRectangle GtkAllocation;
alias _GtkGammaCurveClass GtkGammaCurveClass;
alias _GtkGammaCurve GtkGammaCurve;
alias _GtkFontSelectionDialogClass GtkFontSelectionDialogClass;
alias _GtkFontSelectionDialog GtkFontSelectionDialog;
alias _GtkFontSelectionClass GtkFontSelectionClass;
alias _GtkFontSelection GtkFontSelection;
alias void GtkFontButtonPrivate;
alias _GtkFontButtonClass GtkFontButtonClass;
alias _GtkFontButton GtkFontButton;
alias void function(_GtkFontButton *) _BCD_func__16836;
alias void GtkFileChooserWidgetPrivate;
alias _GtkFileChooserWidgetClass GtkFileChooserWidgetClass;
alias _GtkFileChooserWidget GtkFileChooserWidget;
alias void GtkFileChooserDialogPrivate;
alias _GtkFileChooserDialogClass GtkFileChooserDialogClass;
alias _GtkFileChooserDialog GtkFileChooserDialog;
alias _GtkFileChooserButtonClass GtkFileChooserButtonClass;
alias _GtkFileChooserButton GtkFileChooserButton;
alias void function(_GtkFileChooserButton *) _BCD_func__16843;
alias void GtkFileChooserButtonPrivate;
enum GtkFileChooserError {
GTK_FILE_CHOOSER_ERROR_NONEXISTENT=0,
GTK_FILE_CHOOSER_ERROR_BAD_FILENAME=1,
GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS=2,
}
enum GtkFileChooserConfirmation {
GTK_FILE_CHOOSER_CONFIRMATION_CONFIRM=0,
GTK_FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME=1,
GTK_FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN=2,
}
enum GtkFileChooserAction {
GTK_FILE_CHOOSER_ACTION_OPEN=0,
GTK_FILE_CHOOSER_ACTION_SAVE=1,
GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER=2,
GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER=3,
}
alias void GtkFileChooser;
alias _GtkFileFilterInfo GtkFileFilterInfo;
alias gint function(_GtkFileFilterInfo *, void *) _BCD_func__10568;
alias _BCD_func__10568 GtkFileFilterFunc;
enum GtkFileFilterFlags {
GTK_FILE_FILTER_FILENAME=1,
GTK_FILE_FILTER_URI=2,
GTK_FILE_FILTER_DISPLAY_NAME=4,
GTK_FILE_FILTER_MIME_TYPE=8,
}
alias void GtkFileFilter;
alias _GtkFixedChild GtkFixedChild;
alias _GtkFixedClass GtkFixedClass;
alias _GtkFixed GtkFixed;
alias _GtkFileSelectionClass GtkFileSelectionClass;
alias _GtkFileSelection GtkFileSelection;
alias void GtkExpanderPrivate;
alias _GtkExpanderClass GtkExpanderClass;
alias _GtkExpander GtkExpander;
alias void function(_GtkExpander *) _BCD_func__16852;
alias _GtkEventBoxClass GtkEventBoxClass;
alias _GtkEventBox GtkEventBox;
alias _GtkCurveClass GtkCurveClass;
alias _GtkDrawingAreaClass GtkDrawingAreaClass;
alias _GtkCurve GtkCurve;
alias void function(_GtkCurve *) _BCD_func__16857;
alias _GtkDrawingArea GtkDrawingArea;
enum GtkCurveType {
GTK_CURVE_TYPE_LINEAR=0,
GTK_CURVE_TYPE_SPLINE=1,
GTK_CURVE_TYPE_FREE=2,
}
alias _GtkCTree GtkCTree;
alias _GtkCTreeNode GtkCTreeNode;
alias gint function(_GtkCTree *, _GtkCTreeNode *, _GtkCTreeNode *, _GtkCTreeNode *) _BCD_func__10682;
alias _BCD_func__10682 GtkCTreeCompareDragFunc;
alias gint function(_GtkCTree *, guint, _GNode *, _GtkCTreeNode *, void *) _BCD_func__10683;
alias _BCD_func__10683 GtkCTreeGNodeFunc;
alias void function(_GtkCTree *, _GtkCTreeNode *, void *) _BCD_func__10684;
alias _BCD_func__10684 GtkCTreeFunc;
alias _GtkCTreeRow GtkCTreeRow;
alias _GtkCListRow GtkCListRow;
alias _GtkCTreeClass GtkCTreeClass;
alias _GtkCListClass GtkCListClass;
alias void function(_GtkCTree *, _GtkCTreeNode *, gint) _BCD_func__16865;
alias void function(_GtkCTree *, _GtkCTreeNode *) _BCD_func__16866;
alias void function(_GtkCTree *, _GtkCTreeNode *, _GtkCTreeNode *, _GtkCTreeNode *) _BCD_func__16867;
enum GtkCTreeExpansionType {
GTK_CTREE_EXPANSION_EXPAND=0,
GTK_CTREE_EXPANSION_EXPAND_RECURSIVE=1,
GTK_CTREE_EXPANSION_COLLAPSE=2,
GTK_CTREE_EXPANSION_COLLAPSE_RECURSIVE=3,
GTK_CTREE_EXPANSION_TOGGLE=4,
GTK_CTREE_EXPANSION_TOGGLE_RECURSIVE=5,
}
alias void function(_GtkCTree *, gint) _BCD_func__16868;
alias _GtkCList GtkCList;
enum GtkCTreeExpanderStyle {
GTK_CTREE_EXPANDER_NONE=0,
GTK_CTREE_EXPANDER_SQUARE=1,
GTK_CTREE_EXPANDER_TRIANGLE=2,
GTK_CTREE_EXPANDER_CIRCULAR=3,
}
enum GtkCTreeLineStyle {
GTK_CTREE_LINES_NONE=0,
GTK_CTREE_LINES_SOLID=1,
GTK_CTREE_LINES_DOTTED=2,
GTK_CTREE_LINES_TABBED=3,
}
enum GtkCTreePos {
GTK_CTREE_POS_BEFORE=0,
GTK_CTREE_POS_AS_CHILD=1,
GTK_CTREE_POS_AFTER=2,
}
alias void GtkComboBoxEntryPrivate;
alias _GtkComboBoxEntryClass GtkComboBoxEntryClass;
alias _GtkComboBoxClass GtkComboBoxClass;
alias _GtkComboBoxEntry GtkComboBoxEntry;
alias _GtkComboBox GtkComboBox;
alias void GtkComboBoxPrivate;
alias void function(_GtkComboBox *) _BCD_func__16873;
alias char * function(_GtkComboBox *) _BCD_func__16874;
alias _GtkTreeView GtkTreeView;
alias void function(_GtkTreeView *, void *, gint, void *) _BCD_func__10748;
alias _BCD_func__10748 GtkTreeDestroyCountFunc;
alias void function(_GtkTreeView *, _GtkWidget *, void *) _BCD_func__10752;
alias _BCD_func__10752 GtkTreeViewSearchPositionFunc;
alias gint function(void *, _GtkTreeIter *, void *) _BCD_func__10753;
alias _BCD_func__10753 GtkTreeViewRowSeparatorFunc;
alias gint function(void *, gint, char *, _GtkTreeIter *, void *) _BCD_func__10754;
alias _BCD_func__10754 GtkTreeViewSearchEqualFunc;
alias void function(_GtkTreeView *, void *, void *) _BCD_func__10755;
alias _BCD_func__10755 GtkTreeViewMappingFunc;
alias _GtkTreeViewColumn GtkTreeViewColumn;
alias gint function(_GtkTreeView *, _GtkTreeViewColumn *, _GtkTreeViewColumn *, _GtkTreeViewColumn *, void *) _BCD_func__10756;
alias _BCD_func__10756 GtkTreeViewColumnDropFunc;
alias _GtkTreeSelectionClass GtkTreeSelectionClass;
alias void function(_GtkTreeSelection *) _BCD_func__16877;
enum GtkSelectionMode {
GTK_SELECTION_NONE=0,
GTK_SELECTION_SINGLE=1,
GTK_SELECTION_BROWSE=2,
GTK_SELECTION_MULTIPLE=3,
GTK_SELECTION_EXTENDED=3,
}
alias void GtkTreeViewPrivate;
alias _GtkTreeViewClass GtkTreeViewClass;
alias void function(_GtkTreeView *, _GtkAdjustment *, _GtkAdjustment *) _BCD_func__16880;
alias void function(_GtkTreeView *, void *, _GtkTreeViewColumn *) _BCD_func__16881;
alias gint function(_GtkTreeView *, _GtkTreeIter *, void *) _BCD_func__16882;
alias void function(_GtkTreeView *, _GtkTreeIter *, void *) _BCD_func__16883;
alias void function(_GtkTreeView *) _BCD_func__16884;
alias gint function(_GtkTreeView *, gint, gint) _BCD_func__16885;
alias gint function(_GtkTreeView *) _BCD_func__16886;
alias gint function(_GtkTreeView *, gint) _BCD_func__16887;
alias gint function(_GtkTreeView *, gint, gint, gint) _BCD_func__16888;
enum GtkTreeViewDropPosition {
GTK_TREE_VIEW_DROP_BEFORE=0,
GTK_TREE_VIEW_DROP_AFTER=1,
GTK_TREE_VIEW_DROP_INTO_OR_BEFORE=2,
GTK_TREE_VIEW_DROP_INTO_OR_AFTER=3,
}
alias void function(_GtkEntry *, _GtkMenu *) _BCD_func__16891;
alias void function(_GtkEntry *) _BCD_func__16892;
alias void function(_GtkEntry *, gint, gint, gint) _BCD_func__16893;
alias void function(_GtkEntry *, char *) _BCD_func__16894;
alias void function(_GtkEntry *, gint, gint) _BCD_func__16895;
alias _GtkEntryCompletion GtkEntryCompletion;
alias gint function(_GtkEntryCompletion *, char *, _GtkTreeIter *, void *) _BCD_func__10863;
alias _BCD_func__10863 GtkEntryCompletionMatchFunc;
alias void GtkEntryCompletionPrivate;
alias _GtkEntryCompletionClass GtkEntryCompletionClass;
alias gint function(_GtkEntryCompletion *, void *, _GtkTreeIter *) _BCD_func__16898;
alias void function(_GtkEntryCompletion *, gint) _BCD_func__16899;
alias gint function(_GtkEntryCompletion *, char *) _BCD_func__16900;
alias void GtkTreeModelFilterPrivate;
alias _GtkTreeModelFilterClass GtkTreeModelFilterClass;
alias _GtkTreeModelFilter GtkTreeModelFilter;
alias void function(void *, _GtkTreeIter *, _GValue *, gint, void *) _BCD_func__10889;
alias _BCD_func__10889 GtkTreeModelFilterModifyFunc;
alias _BCD_func__10753 GtkTreeModelFilterVisibleFunc;
alias _GtkListStoreClass GtkListStoreClass;
alias _GtkListStore GtkListStore;
alias void function(_GtkIMContext *) _BCD_func__16907;
alias void function(_GtkIMContext *, char *) _BCD_func__16908;
alias gint function(_GtkIMContext *) _BCD_func__16909;
alias gint function(_GtkIMContext *, gint, gint) _BCD_func__16910;
alias void function(_GtkIMContext *, _GdkDrawable *) _BCD_func__16911;
alias void function(_GtkIMContext *, char * *, void * *, gint *) _BCD_func__16912;
alias gint function(_GtkIMContext *, _GdkEventKey *) _BCD_func__16913;
alias void function(_GtkIMContext *, _GdkRectangle *) _BCD_func__16914;
alias void function(_GtkIMContext *, gint) _BCD_func__16915;
alias void function(_GtkIMContext *, char *, gint, gint) _BCD_func__16916;
alias gint function(_GtkIMContext *, char * *, gint *) _BCD_func__16917;
alias _GtkEditableClass GtkEditableClass;
alias void GtkEditable;
alias void function(void *, char *, gint, gint *) _BCD_func__16920;
alias void function(void *, gint, gint) _BCD_func__16921;
alias void function(void *) _BCD_func__16922;
alias char * function(void *, gint, gint) _BCD_func__16923;
alias gint function(void *, gint *, gint *) _BCD_func__16924;
alias void function(void *, gint) _BCD_func__16925;
alias gint function(void *) _BCD_func__16926;
enum GtkTargetFlags {
GTK_TARGET_SAME_APP=1,
GTK_TARGET_SAME_WIDGET=2,
GTK_TARGET_OTHER_APP=4,
GTK_TARGET_OTHER_WIDGET=8,
}
enum GtkDestDefaults {
GTK_DEST_DEFAULT_MOTION=1,
GTK_DEST_DEFAULT_HIGHLIGHT=2,
GTK_DEST_DEFAULT_DROP=4,
GTK_DEST_DEFAULT_ALL=7,
}
alias _GtkComboClass GtkComboClass;
alias _GtkCombo GtkCombo;
alias _GtkBoxClass GtkBoxClass;
alias _GtkBox GtkBox;
alias _GtkColorSelectionDialogClass GtkColorSelectionDialogClass;
alias _GtkColorSelectionDialog GtkColorSelectionDialog;
alias void function(_GdkScreen *, _GdkColor *, gint) _BCD_func__11008;
alias _BCD_func__11008 GtkColorSelectionChangePaletteWithScreenFunc;
alias void function(_GdkColor *, gint) _BCD_func__11009;
alias _BCD_func__11009 GtkColorSelectionChangePaletteFunc;
alias _GtkColorSelectionClass GtkColorSelectionClass;
alias _GtkColorSelection GtkColorSelection;
alias void function(_GtkColorSelection *) _BCD_func__16934;
alias void GtkColorButtonPrivate;
alias _GtkColorButtonClass GtkColorButtonClass;
alias _GtkColorButton GtkColorButton;
alias void function(_GtkColorButton *) _BCD_func__16939;
alias _GtkCListDestInfo GtkCListDestInfo;
alias _GtkCListCellInfo GtkCListCellInfo;
enum GtkCListDragPos {
GTK_CLIST_DRAG_NONE=0,
GTK_CLIST_DRAG_BEFORE=1,
GTK_CLIST_DRAG_INTO=2,
GTK_CLIST_DRAG_AFTER=3,
}
alias gint function(_GtkCList *, void *, void *) _BCD_func__11051;
alias _BCD_func__11051 GtkCListCompareFunc;
alias _GtkCellWidget GtkCellWidget;
enum GtkCellType {
GTK_CELL_EMPTY=0,
GTK_CELL_TEXT=1,
GTK_CELL_PIXMAP=2,
GTK_CELL_PIXTEXT=3,
GTK_CELL_WIDGET=4,
}
alias _GtkStyle GtkStyle;
alias _GtkCellPixText GtkCellPixText;
alias _GtkCellPixmap GtkCellPixmap;
alias _GtkCellText GtkCellText;
alias _GtkCell GtkCell;
alias _GtkCListColumn GtkCListColumn;
alias void function(_GtkCList *, _GtkAdjustment *, _GtkAdjustment *) _BCD_func__16962;
alias void function(_GtkCList *) _BCD_func__16963;
alias void function(_GtkCList *, gint, gint, _GdkEvent *) _BCD_func__16964;
alias void function(_GtkCList *, gint, gint) _BCD_func__16965;
alias void function(_GtkCList *, gint) _BCD_func__16966;
alias void function(_GtkCList *, gint, float, gint) _BCD_func__16967;
alias void function(_GtkCList *, gint, float) _BCD_func__16968;
alias void function(_GtkCList *, _GdkEvent *) _BCD_func__16969;
alias _GList * function(_GtkCList *, gint, _GList *) _BCD_func__16970;
alias void function(_GtkCList *, _GdkRectangle *, gint, _GtkCListRow *) _BCD_func__16971;
alias void function(_GtkCList *, _GtkCListRow *, gint, gint) _BCD_func__16972;
alias gint function(_GtkCList *, gint, char * *) _BCD_func__16973;
alias void function(_GtkCList *, _GtkCListRow *, gint, gint, char *, char, _GdkDrawable *, _GdkDrawable *) _BCD_func__16974;
alias void function(_GtkCList *, _GtkCListRow *, gint, _GtkRequisition *) _BCD_func__16975;
enum GtkButtonAction {
GTK_BUTTON_IGNORED=0,
GTK_BUTTON_SELECTS=1,
GTK_BUTTON_DRAGS=2,
GTK_BUTTON_EXPANDS=4,
}
alias _GtkVScrollbarClass GtkVScrollbarClass;
alias _GtkScrollbarClass GtkScrollbarClass;
alias _GtkVScrollbar GtkVScrollbar;
alias _GtkScrollbar GtkScrollbar;
alias _GtkHScrollbarClass GtkHScrollbarClass;
alias _GtkHScrollbar GtkHScrollbar;
alias void function(_GtkRange *) _BCD_func__16984;
alias void function(_GtkRange *, double) _BCD_func__16985;
alias void function(_GtkRange *, gint) _BCD_func__16986;
alias _GtkBorder GtkBorder;
alias void function(_GtkRange *, _GtkBorder *) _BCD_func__16987;
alias gint function(_GtkRange *, gint, double) _BCD_func__16988;
enum GtkUpdateType {
GTK_UPDATE_CONTINUOUS=0,
GTK_UPDATE_DISCONTINUOUS=1,
GTK_UPDATE_DELAYED=2,
}
alias void GtkRangeLayout;
alias void GtkRangeStepTimer;
alias void GtkClipboard;
alias void function(void *, void *) _BCD_func__11267;
alias _BCD_func__11267 GtkClipboardClearFunc;
alias void function(void *, _GtkSelectionData *, guint, void *) _BCD_func__11268;
alias _BCD_func__11268 GtkClipboardGetFunc;
alias void function(void *, void * *, gint, void *) _BCD_func__11269;
alias _BCD_func__11269 GtkClipboardTargetsReceivedFunc;
alias void function(void *, void *, void *) _BCD_func__11270;
alias _BCD_func__11270 GtkClipboardImageReceivedFunc;
alias void function(void *, void *, char *, gsize, void *) _BCD_func__11271;
alias _BCD_func__11271 GtkClipboardRichTextReceivedFunc;
alias void function(void *, char *, void *) _BCD_func__11272;
alias _BCD_func__11272 GtkClipboardTextReceivedFunc;
alias void function(void *, _GtkSelectionData *, void *) _BCD_func__11273;
alias _BCD_func__11273 GtkClipboardReceivedFunc;
alias _GtkTargetPair GtkTargetPair;
alias _GtkTargetEntry GtkTargetEntry;
alias _GtkTargetList GtkTargetList;
alias gint function(gunichar, void *) _BCD_func__11292;
alias _BCD_func__11292 GtkTextCharPredicate;
enum GtkTextSearchFlags {
GTK_TEXT_SEARCH_VISIBLE_ONLY=1,
GTK_TEXT_SEARCH_TEXT_ONLY=2,
}
alias _GtkTextChildAnchorClass GtkTextChildAnchorClass;
alias _GtkTextAppearance GtkTextAppearance;
alias _GtkTextTagClass GtkTextTagClass;
alias gint function(_GtkTextTag *, _GObject *, _GdkEvent *, _GtkTextIter *) _BCD_func__16998;
alias _GtkTextAttributes GtkTextAttributes;
enum GtkTextDirection {
GTK_TEXT_DIR_NONE=0,
GTK_TEXT_DIR_LTR=1,
GTK_TEXT_DIR_RTL=2,
}
alias void function(_GtkCheckMenuItem *) _BCD_func__17004;
alias void function(_GtkCheckMenuItem *, _GdkRectangle *) _BCD_func__17005;
alias void function(_GtkMenuItem *) _BCD_func__17008;
alias void function(_GtkMenuItem *, gint *) _BCD_func__17009;
alias void function(_GtkMenuItem *, gint) _BCD_func__17010;
alias void function(_GtkItem *) _BCD_func__17013;
alias _GtkToggleButtonClass GtkToggleButtonClass;
alias void function(_GtkCheckButton *, _GdkRectangle *) _BCD_func__17016;
alias _GtkToggleButton GtkToggleButton;
alias void function(_GtkToggleButton *) _BCD_func__17019;
alias void GtkCellViewPrivate;
alias _GtkCellViewClass GtkCellViewClass;
alias _GtkCellView GtkCellView;
alias _GtkCellRendererToggleClass GtkCellRendererToggleClass;
alias _GtkCellRendererClass GtkCellRendererClass;
alias _GtkCellRendererToggle GtkCellRendererToggle;
alias void function(_GtkCellRendererToggle *, char *) _BCD_func__17024;
alias _GtkCellRenderer GtkCellRenderer;
alias void GtkCellRendererSpinPrivate;
alias _GtkCellRendererSpinClass GtkCellRendererSpinClass;
alias _GtkCellRendererTextClass GtkCellRendererTextClass;
alias _GtkCellRendererSpin GtkCellRendererSpin;
alias _GtkCellRendererText GtkCellRendererText;
alias void GtkCellRendererProgressPrivate;
alias _GtkCellRendererProgressClass GtkCellRendererProgressClass;
alias _GtkCellRendererProgress GtkCellRendererProgress;
alias _GtkCellRendererPixbufClass GtkCellRendererPixbufClass;
alias _GtkCellRendererPixbuf GtkCellRendererPixbuf;
alias _GtkCellRendererComboClass GtkCellRendererComboClass;
alias _GtkCellRendererCombo GtkCellRendererCombo;
enum GtkCellRendererAccelMode {
GTK_CELL_RENDERER_ACCEL_MODE_GTK=0,
GTK_CELL_RENDERER_ACCEL_MODE_OTHER=1,
}
alias _GtkCellRendererAccelClass GtkCellRendererAccelClass;
alias _GtkCellRendererAccel GtkCellRendererAccel;
alias void function(_GtkCellRendererAccel *, char *, guint, gint, guint) _BCD_func__17035;
alias void function(_GtkCellRendererAccel *, char *) _BCD_func__17036;
alias void function(_GtkCellRendererText *, char *, char *) _BCD_func__17039;
alias void GtkCellLayout;
alias void function(void *, _GtkCellRenderer *, void *, _GtkTreeIter *, void *) _BCD_func__11624;
alias _BCD_func__11624 GtkCellLayoutDataFunc;
alias _GtkCellLayoutIface GtkCellLayoutIface;
alias void function(void *, _GtkCellRenderer *, gint) _BCD_func__17042;
alias void function(void *) _BCD_func__17043;
alias void function(void *, _GtkCellRenderer *, char *, gint) _BCD_func__17044;
alias void function(void *, _GtkCellRenderer *, _BCD_func__11624, void *, _BCD_func__13158) _BCD_func__17045;
alias void function(void *, _GtkCellRenderer *) _BCD_func__17046;
alias _GList * function(void *) _BCD_func__17047;
alias void function(_GtkTreeViewColumn *, _GtkCellRenderer *, void *, _GtkTreeIter *, void *) _BCD_func__11636;
alias _BCD_func__11636 GtkTreeCellDataFunc;
alias _GtkTreeViewColumnClass GtkTreeViewColumnClass;
alias void function(_GtkTreeViewColumn *) _BCD_func__17049;
alias void GtkCellEditable;
enum GtkTreeViewColumnSizing {
GTK_TREE_VIEW_COLUMN_GROW_ONLY=0,
GTK_TREE_VIEW_COLUMN_AUTOSIZE=1,
GTK_TREE_VIEW_COLUMN_FIXED=2,
}
alias _GtkTreeSortableIface GtkTreeSortableIface;
alias void GtkTreeSortable;
alias void function(void *) _BCD_func__17052;
alias gint function(void *, gint *, gint *) _BCD_func__17053;
alias void function(void *, gint, gint) _BCD_func__17054;
alias void function(void *, gint, _BCD_func__11685, void *, _BCD_func__13158) _BCD_func__17055;
alias void function(void *, _BCD_func__11685, void *, _BCD_func__13158) _BCD_func__17056;
alias gint function(void *) _BCD_func__17057;
enum GtkTreeModelFlags {
GTK_TREE_MODEL_ITERS_PERSIST=1,
GTK_TREE_MODEL_LIST_ONLY=2,
}
alias gint function(void *, void *, _GtkTreeIter *, void *) _BCD_func__11697;
alias _BCD_func__11697 GtkTreeModelForeachFunc;
alias _GtkTreeModelIface GtkTreeModelIface;
alias void function(void *, void *, _GtkTreeIter *) _BCD_func__17059;
alias void function(void *, void *) _BCD_func__17060;
alias void function(void *, void *, _GtkTreeIter *, gint *) _BCD_func__17061;
alias gint function(void *) _BCD_func__17062;
alias gint function(void *) _BCD_func__17063;
alias GType function(void *, gint) _BCD_func__17064;
alias gint function(void *, _GtkTreeIter *, void *) _BCD_func__17065;
alias void * function(void *, _GtkTreeIter *) _BCD_func__17066;
alias void function(void *, _GtkTreeIter *, gint, _GValue *) _BCD_func__17067;
alias gint function(void *, _GtkTreeIter *) _BCD_func__17068;
alias gint function(void *, _GtkTreeIter *, _GtkTreeIter *) _BCD_func__17069;
alias gint function(void *, _GtkTreeIter *) _BCD_func__17070;
alias gint function(void *, _GtkTreeIter *, _GtkTreeIter *, gint) _BCD_func__17071;
alias void function(void *, _GtkTreeIter *) _BCD_func__17072;
alias void GtkTreeRowReference;
alias void function(_GtkCellRenderer *, _GtkWidget *, _GdkRectangle *, gint *, gint *, gint *, gint *) _BCD_func__17075;
enum GtkCellRendererState {
GTK_CELL_RENDERER_SELECTED=1,
GTK_CELL_RENDERER_PRELIT=2,
GTK_CELL_RENDERER_INSENSITIVE=4,
GTK_CELL_RENDERER_SORTED=8,
GTK_CELL_RENDERER_FOCUSED=16,
}
alias void function(_GtkCellRenderer *, _GdkDrawable *, _GtkWidget *, _GdkRectangle *, _GdkRectangle *, _GdkRectangle *, gint) _BCD_func__17076;
alias gint function(_GtkCellRenderer *, _GdkEvent *, _GtkWidget *, char *, _GdkRectangle *, _GdkRectangle *, gint) _BCD_func__17077;
alias void * function(_GtkCellRenderer *, _GdkEvent *, _GtkWidget *, char *, _GdkRectangle *, _GdkRectangle *, gint) _BCD_func__17078;
alias void function(_GtkCellRenderer *) _BCD_func__17079;
alias void function(_GtkCellRenderer *, void *, char *) _BCD_func__17080;
enum GtkCellRendererMode {
GTK_CELL_RENDERER_MODE_INERT=0,
GTK_CELL_RENDERER_MODE_ACTIVATABLE=1,
GTK_CELL_RENDERER_MODE_EDITABLE=2,
}
alias _GtkCellEditableIface GtkCellEditableIface;
alias void function(void *) _BCD_func__17083;
alias void function(void *, _GdkEvent *) _BCD_func__17084;
enum GtkCalendarDisplayOptions {
GTK_CALENDAR_SHOW_HEADING=1,
GTK_CALENDAR_SHOW_DAY_NAMES=2,
GTK_CALENDAR_NO_MONTH_CHANGE=4,
GTK_CALENDAR_SHOW_WEEK_NUMBERS=8,
GTK_CALENDAR_WEEK_START_MONDAY=16,
}
alias void GtkCalendarPrivate;
alias _GtkCalendarClass GtkCalendarClass;
alias _GtkCalendar GtkCalendar;
alias void function(_GtkCalendar *) _BCD_func__17086;
alias void function(_GtkButton *) _BCD_func__17090;
enum GtkImageType {
GTK_IMAGE_EMPTY=0,
GTK_IMAGE_PIXMAP=1,
GTK_IMAGE_IMAGE=2,
GTK_IMAGE_PIXBUF=3,
GTK_IMAGE_STOCK=4,
GTK_IMAGE_ICON_SET=5,
GTK_IMAGE_ANIMATION=6,
GTK_IMAGE_ICON_NAME=7,
}
alias _GtkImageIconNameData GtkImageIconNameData;
alias _GtkImageAnimationData GtkImageAnimationData;
alias _GtkImageIconSetData GtkImageIconSetData;
alias void GtkIconSet;
alias _GtkImageStockData GtkImageStockData;
alias _GtkImagePixbufData GtkImagePixbufData;
alias _GtkImageImageData GtkImageImageData;
alias _GtkImagePixmapData GtkImagePixmapData;
alias _GtkImageClass GtkImageClass;
alias _GtkImage GtkImage;
alias _GtkBuildableIface GtkBuildableIface;
alias void GtkBuildable;
alias void function(void *, char *) _BCD_func__17103;
alias char * function(void *) _BCD_func__17104;
alias _GtkBuilder GtkBuilder;
alias void function(void *, _GtkBuilder *, _GObject *, char *) _BCD_func__17105;
alias void function(void *, _GtkBuilder *, char *, _GValue *) _BCD_func__17106;
alias _GObject * function(void *, _GtkBuilder *, char *) _BCD_func__17107;
alias gint function(void *, _GtkBuilder *, _GObject *, char *, _GMarkupParser *, void * *) _BCD_func__17108;
alias void function(void *, _GtkBuilder *, _GObject *, char *, void * *) _BCD_func__17109;
alias void function(void *, _GtkBuilder *, _GObject *, char *, void *) _BCD_func__17110;
alias void function(void *, _GtkBuilder *) _BCD_func__17111;
alias void function(_GtkBuilder *, _GObject *, char *, char *, _GObject *, gint, void *) _BCD_func__11889;
alias _BCD_func__11889 GtkBuilderConnectFunc;
enum GtkBuilderError {
GTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION=0,
GTK_BUILDER_ERROR_UNHANDLED_TAG=1,
GTK_BUILDER_ERROR_MISSING_ATTRIBUTE=2,
GTK_BUILDER_ERROR_INVALID_ATTRIBUTE=3,
GTK_BUILDER_ERROR_INVALID_TAG=4,
GTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE=5,
GTK_BUILDER_ERROR_INVALID_VALUE=6,
}
alias void GtkBuilderPrivate;
alias _GtkBuilderClass GtkBuilderClass;
alias GType function(_GtkBuilder *, char *) _BCD_func__17113;
alias _GtkBindingArg GtkBindingArg;
alias _GtkBindingSignal GtkBindingSignal;
alias _GtkBindingEntry GtkBindingEntry;
alias _GtkBindingSet GtkBindingSet;
enum GtkButtonBoxStyle {
GTK_BUTTONBOX_DEFAULT_STYLE=0,
GTK_BUTTONBOX_SPREAD=1,
GTK_BUTTONBOX_EDGE=2,
GTK_BUTTONBOX_START=3,
GTK_BUTTONBOX_END=4,
GTK_BUTTONBOX_CENTER=5,
}
alias _GtkBoxChild GtkBoxChild;
alias gint function(gint, void *) _BCD_func__11971;
alias _BCD_func__11971 GtkAssistantPageFunc;
alias _GtkAssistantClass GtkAssistantClass;
alias _GtkAssistant GtkAssistant;
alias void function(_GtkAssistant *, _GtkWidget *) _BCD_func__17126;
alias void function(_GtkAssistant *) _BCD_func__17127;
alias void GtkAssistantPrivate;
enum GtkAssistantPageType {
GTK_ASSISTANT_PAGE_CONTENT=0,
GTK_ASSISTANT_PAGE_INTRO=1,
GTK_ASSISTANT_PAGE_CONFIRM=2,
GTK_ASSISTANT_PAGE_SUMMARY=3,
GTK_ASSISTANT_PAGE_PROGRESS=4,
}
alias _GtkAspectFrameClass GtkAspectFrameClass;
alias _GtkFrameClass GtkFrameClass;
alias _GtkAspectFrame GtkAspectFrame;
alias _GtkFrame GtkFrame;
alias void function(_GtkFrame *, _GdkRectangle *) _BCD_func__17132;
alias _GtkArrowClass GtkArrowClass;
alias _GtkArrow GtkArrow;
alias void GtkAlignmentPrivate;
alias _GtkAlignmentClass GtkAlignmentClass;
alias _GtkAlignment GtkAlignment;
alias _GtkRadioActionEntry GtkRadioActionEntry;
alias _GtkToggleActionEntry GtkToggleActionEntry;
alias _GtkActionEntry GtkActionEntry;
alias _GtkActionGroupClass GtkActionGroupClass;
alias _GtkActionGroup GtkActionGroup;
alias _GtkAction * function(_GtkActionGroup *, char *) _BCD_func__17142;
alias void GtkActionGroupPrivate;
alias void function(_GtkWidget *, void *, guint) _BCD_func__12082;
alias _BCD_func__12082 GtkItemFactoryCallback2;
alias void function(_GtkWidget *, void *) _BCD_func__12090;
alias _BCD_func__12090 GtkMenuCallback;
alias _GtkItemFactoryItem GtkItemFactoryItem;
alias _GtkItemFactoryEntry GtkItemFactoryEntry;
alias _BCD_func__12122 GtkItemFactoryCallback;
alias _GtkItemFactoryClass GtkItemFactoryClass;
alias _GtkItemFactory GtkItemFactory;
alias char * function(char *, void *) _BCD_func__12124;
alias _BCD_func__12124 GtkTranslateFunc;
alias void function(void *, guint, _GtkWidget *) _BCD_func__12121;
alias _BCD_func__12121 GtkItemFactoryCallback1;
alias void function(void *, char *) _BCD_func__12123;
alias _BCD_func__12123 GtkPrintFunc;
alias void GtkActionPrivate;
alias void function(_GtkAction *) _BCD_func__17150;
alias _GtkWidget * function(_GtkAction *) _BCD_func__17151;
alias void function(_GtkAction *, _GtkWidget *) _BCD_func__17152;
alias _GtkAccessibleClass GtkAccessibleClass;
alias _GtkAccessible GtkAccessible;
alias void function(_GtkAccessible *) _BCD_func__17155;
alias void function(void *, char *, guint, gint, gint) _BCD_func__12490;
alias _BCD_func__12490 GtkAccelMapForeach;
alias void GtkAccelMapClass;
alias void GtkAccelMap;
alias _GtkAccelLabelClass GtkAccelLabelClass;
alias _GtkAccelLabel GtkAccelLabel;
alias void GtkLabelSelectionInfo;
alias void function(_GtkLabel *, gint, gint, gint) _BCD_func__17291;
alias void function(_GtkLabel *) _BCD_func__17292;
alias void function(_GtkLabel *, _GtkMenu *) _BCD_func__17293;
alias void function(_GtkWidget *, _GtkMenu *) _BCD_func__12552;
alias _BCD_func__12552 GtkMenuDetachFunc;
alias void function(_GtkMenu *, gint *, gint *, gint *, void *) _BCD_func__12553;
alias _BCD_func__12553 GtkMenuPositionFunc;
alias void function(_GtkMenuShell *) _BCD_func__17298;
enum GtkMenuDirectionType {
GTK_MENU_DIR_PARENT=0,
GTK_MENU_DIR_CHILD=1,
GTK_MENU_DIR_NEXT=2,
GTK_MENU_DIR_PREV=3,
}
alias void function(_GtkMenuShell *, gint) _BCD_func__17299;
alias void function(_GtkMenuShell *, gint) _BCD_func__17300;
alias void function(_GtkMenuShell *, _GtkWidget *) _BCD_func__17301;
alias void function(_GtkMenuShell *, _GtkWidget *, gint) _BCD_func__17302;
alias gint function(_GtkMenuShell *) _BCD_func__17303;
alias gint function(_GtkMenuShell *, gint) _BCD_func__17304;
alias _GtkAboutDialog GtkAboutDialog;
alias void function(_GtkAboutDialog *, char *, void *) _BCD_func__12632;
alias _BCD_func__12632 GtkAboutDialogActivateLinkFunc;
alias _GtkAboutDialogClass GtkAboutDialogClass;
alias void function(_GtkDialog *, gint) _BCD_func__17311;
alias void function(_GtkDialog *) _BCD_func__17312;
enum GtkResponseType {
GTK_RESPONSE_NONE=-1,
GTK_RESPONSE_REJECT=-2,
GTK_RESPONSE_ACCEPT=-3,
GTK_RESPONSE_DELETE_EVENT=-4,
GTK_RESPONSE_OK=-5,
GTK_RESPONSE_CANCEL=-6,
GTK_RESPONSE_CLOSE=-7,
GTK_RESPONSE_YES=-8,
GTK_RESPONSE_NO=-9,
GTK_RESPONSE_APPLY=-10,
GTK_RESPONSE_HELP=-11,
}
enum GtkDialogFlags {
GTK_DIALOG_MODAL=1,
GTK_DIALOG_DESTROY_WITH_PARENT=2,
GTK_DIALOG_NO_SEPARATOR=4,
}
alias void function(_GtkWindow *, guint, gint, gint, void *) _BCD_func__12662;
alias _BCD_func__12662 GtkWindowKeysForeachFunc;
alias _GtkWindowGroupClass GtkWindowGroupClass;
alias void GtkWindowGeometryInfo;
alias void function(_GtkWindow *, _GtkWidget *) _BCD_func__17317;
alias gint function(_GtkWindow *, _GdkEvent *) _BCD_func__17318;
alias void function(_GtkWindow *) _BCD_func__17319;
alias void function(_GtkWindow *, gint) _BCD_func__17320;
alias void function(_GtkContainer *, _GtkWidget *) _BCD_func__17324;
alias void function(_GtkContainer *) _BCD_func__17325;
alias void function(_GtkContainer *, gint, _BCD_func__12090, void *) _BCD_func__17326;
alias GType function(_GtkContainer *) _BCD_func__17327;
alias char * function(_GtkContainer *, _GtkWidget *) _BCD_func__17328;
alias void function(_GtkContainer *, _GtkWidget *, guint, _GValue *, _GParamSpec *) _BCD_func__17329;
alias void function(_GtkContainer *, _GtkWidget *, guint, _GValue *, _GParamSpec *) _BCD_func__17330;
alias _BCD_func__12090 GtkCallback;
alias void GtkTooltip;
alias _GtkWidgetShapeInfo GtkWidgetShapeInfo;
alias _GtkWidgetAuxInfo GtkWidgetAuxInfo;
alias void function(_GtkWidget *, guint, _GParamSpec * *) _BCD_func__17336;
alias void function(_GtkWidget *) _BCD_func__17337;
alias void function(_GtkWidget *, _GtkRequisition *) _BCD_func__17338;
alias void function(_GtkWidget *, _GdkRectangle *) _BCD_func__17339;
alias void function(_GtkWidget *, gint) _BCD_func__17340;
alias void function(_GtkWidget *, _GtkWidget *) _BCD_func__17341;
alias void function(_GtkWidget *, _GtkStyle *) _BCD_func__17342;
alias void function(_GtkWidget *, gint) _BCD_func__17343;
alias void function(_GtkWidget *, gint) _BCD_func__17344;
alias void function(_GtkWidget *, _GParamSpec *) _BCD_func__17345;
alias gint function(_GtkWidget *, gint) _BCD_func__17346;
alias gint function(_GtkWidget *, gint) _BCD_func__17347;
alias gint function(_GtkWidget *, _GdkEvent *) _BCD_func__17348;
alias gint function(_GtkWidget *, _GdkEventButton *) _BCD_func__17349;
alias gint function(_GtkWidget *, _GdkEventScroll *) _BCD_func__17350;
alias gint function(_GtkWidget *, _GdkEventMotion *) _BCD_func__17351;
alias gint function(_GtkWidget *, _GdkEventAny *) _BCD_func__17352;
alias gint function(_GtkWidget *, _GdkEventExpose *) _BCD_func__17353;
alias gint function(_GtkWidget *, _GdkEventKey *) _BCD_func__17354;
alias gint function(_GtkWidget *, _GdkEventCrossing *) _BCD_func__17355;
alias gint function(_GtkWidget *, _GdkEventConfigure *) _BCD_func__17356;
alias gint function(_GtkWidget *, _GdkEventFocus *) _BCD_func__17357;
alias gint function(_GtkWidget *, _GdkEventProperty *) _BCD_func__17358;
alias gint function(_GtkWidget *, _GdkEventSelection *) _BCD_func__17359;
alias gint function(_GtkWidget *, _GdkEventProximity *) _BCD_func__17360;
alias gint function(_GtkWidget *, _GdkEventVisibility *) _BCD_func__17361;
alias gint function(_GtkWidget *, _GdkEventClient *) _BCD_func__17362;
alias gint function(_GtkWidget *, _GdkEventWindowState *) _BCD_func__17363;
alias void function(_GtkWidget *, _GtkSelectionData *, guint, guint) _BCD_func__17364;
alias void function(_GtkWidget *, _GtkSelectionData *, guint) _BCD_func__17365;
alias void function(_GtkWidget *, _GdkDragContext *) _BCD_func__17366;
alias void function(_GtkWidget *, _GdkDragContext *, _GtkSelectionData *, guint, guint) _BCD_func__17367;
alias void function(_GtkWidget *, _GdkDragContext *, guint) _BCD_func__17368;
alias gint function(_GtkWidget *, _GdkDragContext *, gint, gint, guint) _BCD_func__17369;
alias void function(_GtkWidget *, _GdkDragContext *, gint, gint, _GtkSelectionData *, guint, guint) _BCD_func__17370;
alias gint function(_GtkWidget *) _BCD_func__17371;
enum GtkWidgetHelpType {
GTK_WIDGET_HELP_TOOLTIP=0,
GTK_WIDGET_HELP_WHATS_THIS=1,
}
alias gint function(_GtkWidget *, gint) _BCD_func__17372;
alias _AtkObject * function(_GtkWidget *) _BCD_func__17373;
alias void function(_GtkWidget *, _GdkScreen *) _BCD_func__17374;
alias gint function(_GtkWidget *, guint) _BCD_func__17375;
alias gint function(_GtkWidget *, _GdkEventGrabBroken *) _BCD_func__17376;
alias gint function(_GtkWidget *, gint, gint, gint, void *) _BCD_func__17377;
enum GtkWidgetFlags {
GTK_TOPLEVEL=16,
GTK_NO_WINDOW=32,
GTK_REALIZED=64,
GTK_MAPPED=128,
GTK_VISIBLE=256,
GTK_SENSITIVE=512,
GTK_PARENT_SENSITIVE=1024,
GTK_CAN_FOCUS=2048,
GTK_HAS_FOCUS=4096,
GTK_CAN_DEFAULT=8192,
GTK_HAS_DEFAULT=16384,
GTK_HAS_GRAB=32768,
GTK_RC_STYLE=65536,
GTK_COMPOSITE_CHILD=131072,
GTK_NO_REPARENT=262144,
GTK_APP_PAINTABLE=524288,
GTK_RECEIVES_DEFAULT=1048576,
GTK_DOUBLE_BUFFERED=2097152,
GTK_NO_SHOW_ALL=4194304,
}
alias void GtkSettingsPropertyValue;
alias _GtkSettingsValue GtkSettingsValue;
alias _GtkSettingsClass GtkSettingsClass;
enum GtkRcTokenType {
GTK_RC_TOKEN_INVALID=270,
GTK_RC_TOKEN_INCLUDE=271,
GTK_RC_TOKEN_NORMAL=272,
GTK_RC_TOKEN_ACTIVE=273,
GTK_RC_TOKEN_PRELIGHT=274,
GTK_RC_TOKEN_SELECTED=275,
GTK_RC_TOKEN_INSENSITIVE=276,
GTK_RC_TOKEN_FG=277,
GTK_RC_TOKEN_BG=278,
GTK_RC_TOKEN_TEXT=279,
GTK_RC_TOKEN_BASE=280,
GTK_RC_TOKEN_XTHICKNESS=281,
GTK_RC_TOKEN_YTHICKNESS=282,
GTK_RC_TOKEN_FONT=283,
GTK_RC_TOKEN_FONTSET=284,
GTK_RC_TOKEN_FONT_NAME=285,
GTK_RC_TOKEN_BG_PIXMAP=286,
GTK_RC_TOKEN_PIXMAP_PATH=287,
GTK_RC_TOKEN_STYLE=288,
GTK_RC_TOKEN_BINDING=289,
GTK_RC_TOKEN_BIND=290,
GTK_RC_TOKEN_WIDGET=291,
GTK_RC_TOKEN_WIDGET_CLASS=292,
GTK_RC_TOKEN_CLASS=293,
GTK_RC_TOKEN_LOWEST=294,
GTK_RC_TOKEN_GTK=295,
GTK_RC_TOKEN_APPLICATION=296,
GTK_RC_TOKEN_THEME=297,
GTK_RC_TOKEN_RC=298,
GTK_RC_TOKEN_HIGHEST=299,
GTK_RC_TOKEN_ENGINE=300,
GTK_RC_TOKEN_MODULE_PATH=301,
GTK_RC_TOKEN_IM_MODULE_PATH=302,
GTK_RC_TOKEN_IM_MODULE_FILE=303,
GTK_RC_TOKEN_STOCK=304,
GTK_RC_TOKEN_LTR=305,
GTK_RC_TOKEN_RTL=306,
GTK_RC_TOKEN_COLOR=307,
GTK_RC_TOKEN_UNBIND=308,
GTK_RC_TOKEN_LAST=309,
}
enum GtkRcFlags {
GTK_RC_FG=1,
GTK_RC_BG=2,
GTK_RC_TEXT=4,
GTK_RC_BASE=8,
}
alias _GtkRcStyleClass GtkRcStyleClass;
alias _GtkRcStyle GtkRcStyle;
alias _GtkRcStyle * function(_GtkRcStyle *) _BCD_func__17411;
alias _GtkSettings GtkSettings;
alias guint function(_GtkRcStyle *, _GtkSettings *, _GScanner *) _BCD_func__17412;
alias void function(_GtkRcStyle *, _GtkRcStyle *) _BCD_func__17413;
alias _GtkStyle * function(_GtkRcStyle *) _BCD_func__17414;
alias void GtkRcContext;
alias _GtkIconFactory GtkIconFactory;
alias gint function(_GParamSpec *, _GString *, _GValue *) _BCD_func__12993;
alias _BCD_func__12993 GtkRcPropertyParser;
alias _GtkRcProperty GtkRcProperty;
alias void GtkIconSource;
alias void GtkThemeEngine;
alias _GtkStyleClass GtkStyleClass;
alias void function(_GtkStyle *) _BCD_func__17421;
alias void function(_GtkStyle *, _GtkStyle *) _BCD_func__17422;
alias _GtkStyle * function(_GtkStyle *) _BCD_func__17423;
alias void function(_GtkStyle *, _GtkRcStyle *) _BCD_func__17424;
alias void function(_GtkStyle *, _GdkDrawable *, gint) _BCD_func__17425;
alias void * function(_GtkStyle *, void *, gint, gint, gint, _GtkWidget *, char *) _BCD_func__17426;
alias void function(_GtkStyle *, _GdkDrawable *, gint, _GdkRectangle *, _GtkWidget *, char *, gint, gint, gint) _BCD_func__17427;
alias void function(_GtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, _GtkWidget *, char *, gint, gint, gint, gint) _BCD_func__17428;
alias void function(_GtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, _GtkWidget *, char *, _GdkPoint *, gint, gint) _BCD_func__17429;
enum GtkArrowType {
GTK_ARROW_UP=0,
GTK_ARROW_DOWN=1,
GTK_ARROW_LEFT=2,
GTK_ARROW_RIGHT=3,
GTK_ARROW_NONE=4,
}
alias void function(_GtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, _GtkWidget *, char *, gint, gint, gint, gint, gint, gint) _BCD_func__17430;
alias void function(_GtkStyle *, _GdkDrawable *, gint, _GdkRectangle *, _GtkWidget *, char *, gint, gint, char *) _BCD_func__17431;
enum GtkPositionType {
GTK_POS_LEFT=0,
GTK_POS_RIGHT=1,
GTK_POS_TOP=2,
GTK_POS_BOTTOM=3,
}
alias void function(_GtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, _GtkWidget *, char *, gint, gint, gint, gint, gint, gint, gint) _BCD_func__17432;
alias void function(_GtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, _GtkWidget *, char *, gint, gint, gint, gint, gint) _BCD_func__17433;
alias void function(_GtkStyle *, _GdkDrawable *, gint, _GdkRectangle *, _GtkWidget *, char *, gint, gint, gint, gint) _BCD_func__17434;
alias void function(_GtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, _GtkWidget *, char *, gint, gint, gint, gint, gint) _BCD_func__17435;
enum GtkExpanderStyle {
GTK_EXPANDER_COLLAPSED=0,
GTK_EXPANDER_SEMI_COLLAPSED=1,
GTK_EXPANDER_SEMI_EXPANDED=2,
GTK_EXPANDER_EXPANDED=3,
}
alias void function(_GtkStyle *, _GdkDrawable *, gint, _GdkRectangle *, _GtkWidget *, char *, gint, gint, gint) _BCD_func__17436;
alias void function(_GtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, _GtkWidget *, char *, gint, gint, void *) _BCD_func__17437;
alias void function(_GtkStyle *, _GdkDrawable *, gint, _GdkRectangle *, _GtkWidget *, char *, gint, gint, gint, gint, gint) _BCD_func__17438;
alias _GtkAdjustmentClass GtkAdjustmentClass;
alias void function(_GtkAdjustment *) _BCD_func__17442;
enum GtkArgFlags {
GTK_ARG_READABLE=1,
GTK_ARG_WRITABLE=2,
GTK_ARG_CONSTRUCT=4,
GTK_ARG_CONSTRUCT_ONLY=8,
GTK_ARG_CHILD_ARG=16,
}
alias _GtkArg GtkArg;
alias void function(_GtkObject *, _GtkArg *, guint) _BCD_func__17445;
alias void function(_GtkObject *) _BCD_func__17446;
enum GtkObjectFlags {
GTK_IN_DESTRUCTION=1,
GTK_FLOATING=2,
GTK_RESERVED_1=4,
GTK_RESERVED_2=8,
}
enum GtkDebugFlag {
GTK_DEBUG_MISC=1,
GTK_DEBUG_PLUGSOCKET=2,
GTK_DEBUG_TEXT=4,
GTK_DEBUG_TREE=8,
GTK_DEBUG_UPDATES=16,
GTK_DEBUG_KEYBINDINGS=32,
GTK_DEBUG_MULTIHEAD=64,
GTK_DEBUG_MODULES=128,
GTK_DEBUG_GEOMETRY=256,
GTK_DEBUG_ICONTHEME=512,
GTK_DEBUG_PRINTING=1024,
GTK_DEBUG_BUILDER=2048,
}
alias _GFlagsValue GtkFlagValue;
alias _GEnumValue GtkEnumValue;
alias void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *) _BCD_func__13146;
alias _BCD_func__13146 GtkSignalMarshaller;
alias _GtkTypeInfo GtkTypeInfo;
alias _BCD_func__13158 GtkClassInitFunc;
alias void function(_GTypeInstance *, void *) _BCD_func__13169;
alias _BCD_func__13169 GtkObjectInitFunc;
alias _BCD_func__12122 GtkSignalFunc;
alias void function(_GtkObject *, void *, guint, _GtkArg *) _BCD_func__13157;
alias _BCD_func__13157 GtkCallbackMarshal;
alias gint function(void *) _BCD_func__12884;
alias _BCD_func__12884 GtkFunction;
alias guint GtkType;
alias _GTypeClass GtkTypeClass;
alias _GTypeInstance GtkTypeObject;
alias guint GtkFundamentalType;
alias _GtkAccelKey GtkAccelKey;
alias gint function(_GtkAccelKey *, _GClosure *, void *) _BCD_func__13177;
alias _BCD_func__13177 GtkAccelGroupFindFunc;
alias gint function(_GtkAccelGroup *, _GObject *, guint, gint) _BCD_func__13178;
alias _BCD_func__13178 GtkAccelGroupActivate;
alias _GtkAccelGroupEntry GtkAccelGroupEntry;
alias _GtkAccelGroupClass GtkAccelGroupClass;
alias void function(_GtkAccelGroup *, guint, gint, _GClosure *) _BCD_func__17462;
enum GtkAccelFlags {
GTK_ACCEL_VISIBLE=1,
GTK_ACCEL_LOCKED=2,
GTK_ACCEL_MASK=7,
}
enum GtkDragResult {
GTK_DRAG_RESULT_SUCCESS=0,
GTK_DRAG_RESULT_NO_TARGET=1,
GTK_DRAG_RESULT_USER_CANCELLED=2,
GTK_DRAG_RESULT_TIMEOUT_EXPIRED=3,
GTK_DRAG_RESULT_GRAB_BROKEN=4,
GTK_DRAG_RESULT_ERROR=5,
}
enum GtkTreeViewGridLines {
GTK_TREE_VIEW_GRID_LINES_NONE=0,
GTK_TREE_VIEW_GRID_LINES_HORIZONTAL=1,
GTK_TREE_VIEW_GRID_LINES_VERTICAL=2,
GTK_TREE_VIEW_GRID_LINES_BOTH=3,
}
enum GtkUnit {
GTK_UNIT_PIXEL=0,
GTK_UNIT_POINTS=1,
GTK_UNIT_INCH=2,
GTK_UNIT_MM=3,
}
enum GtkPrintDuplex {
GTK_PRINT_DUPLEX_SIMPLEX=0,
GTK_PRINT_DUPLEX_HORIZONTAL=1,
GTK_PRINT_DUPLEX_VERTICAL=2,
}
enum GtkPrintQuality {
GTK_PRINT_QUALITY_LOW=0,
GTK_PRINT_QUALITY_NORMAL=1,
GTK_PRINT_QUALITY_HIGH=2,
GTK_PRINT_QUALITY_DRAFT=3,
}
enum GtkPageOrientation {
GTK_PAGE_ORIENTATION_PORTRAIT=0,
GTK_PAGE_ORIENTATION_LANDSCAPE=1,
GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT=2,
GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE=3,
}
enum GtkPageSet {
GTK_PAGE_SET_ALL=0,
GTK_PAGE_SET_EVEN=1,
GTK_PAGE_SET_ODD=2,
}
enum GtkPrintPages {
GTK_PRINT_PAGES_ALL=0,
GTK_PRINT_PAGES_CURRENT=1,
GTK_PRINT_PAGES_RANGES=2,
}
enum GtkPackDirection {
GTK_PACK_DIRECTION_LTR=0,
GTK_PACK_DIRECTION_RTL=1,
GTK_PACK_DIRECTION_TTB=2,
GTK_PACK_DIRECTION_BTT=3,
}
enum GtkIMStatusStyle {
GTK_IM_STATUS_NOTHING=0,
GTK_IM_STATUS_CALLBACK=1,
GTK_IM_STATUS_NONE=2,
}
enum GtkIMPreeditStyle {
GTK_IM_PREEDIT_NOTHING=0,
GTK_IM_PREEDIT_CALLBACK=1,
GTK_IM_PREEDIT_NONE=2,
}
enum GtkWindowType {
GTK_WINDOW_TOPLEVEL=0,
GTK_WINDOW_POPUP=1,
}
enum GtkWindowPosition {
GTK_WIN_POS_NONE=0,
GTK_WIN_POS_CENTER=1,
GTK_WIN_POS_MOUSE=2,
GTK_WIN_POS_CENTER_ALWAYS=3,
GTK_WIN_POS_CENTER_ON_PARENT=4,
}
enum GtkVisibility {
GTK_VISIBILITY_NONE=0,
GTK_VISIBILITY_PARTIAL=1,
GTK_VISIBILITY_FULL=2,
}
enum GtkSubmenuPlacement {
GTK_TOP_BOTTOM=0,
GTK_LEFT_RIGHT=1,
}
enum GtkSubmenuDirection {
GTK_DIRECTION_LEFT=0,
GTK_DIRECTION_RIGHT=1,
}
enum GtkSignalRunType {
GTK_RUN_FIRST=1,
GTK_RUN_LAST=2,
GTK_RUN_BOTH=3,
GTK_RUN_NO_RECURSE=8,
GTK_RUN_ACTION=32,
GTK_RUN_NO_HOOKS=64,
}
enum GtkResizeMode {
GTK_RESIZE_PARENT=0,
GTK_RESIZE_QUEUE=1,
GTK_RESIZE_IMMEDIATE=2,
}
enum GtkReliefStyle {
GTK_RELIEF_NORMAL=0,
GTK_RELIEF_HALF=1,
GTK_RELIEF_NONE=2,
}
enum GtkPreviewType {
GTK_PREVIEW_COLOR=0,
GTK_PREVIEW_GRAYSCALE=1,
}
enum GtkPolicyType {
GTK_POLICY_ALWAYS=0,
GTK_POLICY_AUTOMATIC=1,
GTK_POLICY_NEVER=2,
}
enum GtkPathType {
GTK_PATH_WIDGET=0,
GTK_PATH_WIDGET_CLASS=1,
GTK_PATH_CLASS=2,
}
enum GtkPathPriorityType {
GTK_PATH_PRIO_LOWEST=0,
GTK_PATH_PRIO_GTK=4,
GTK_PATH_PRIO_APPLICATION=8,
GTK_PATH_PRIO_THEME=10,
GTK_PATH_PRIO_RC=12,
GTK_PATH_PRIO_HIGHEST=15,
}
enum GtkPackType {
GTK_PACK_START=0,
GTK_PACK_END=1,
}
enum GtkCornerType {
GTK_CORNER_TOP_LEFT=0,
GTK_CORNER_BOTTOM_LEFT=1,
GTK_CORNER_TOP_RIGHT=2,
GTK_CORNER_BOTTOM_RIGHT=3,
}
enum GtkScrollStep {
GTK_SCROLL_STEPS=0,
GTK_SCROLL_PAGES=1,
GTK_SCROLL_ENDS=2,
GTK_SCROLL_HORIZONTAL_STEPS=3,
GTK_SCROLL_HORIZONTAL_PAGES=4,
GTK_SCROLL_HORIZONTAL_ENDS=5,
}
enum GtkMetricType {
GTK_PIXELS=0,
GTK_INCHES=1,
GTK_CENTIMETERS=2,
}
enum GtkMatchType {
GTK_MATCH_ALL=0,
GTK_MATCH_ALL_TAIL=1,
GTK_MATCH_HEAD=2,
GTK_MATCH_TAIL=3,
GTK_MATCH_EXACT=4,
GTK_MATCH_LAST=5,
}
enum GtkSideType {
GTK_SIDE_TOP=0,
GTK_SIDE_BOTTOM=1,
GTK_SIDE_LEFT=2,
GTK_SIDE_RIGHT=3,
}
enum GtkSensitivityType {
GTK_SENSITIVITY_AUTO=0,
GTK_SENSITIVITY_ON=1,
GTK_SENSITIVITY_OFF=2,
}
enum GtkAttachOptions {
GTK_EXPAND=1,
GTK_SHRINK=2,
GTK_FILL=4,
}
enum GtkAnchorType {
GTK_ANCHOR_CENTER=0,
GTK_ANCHOR_NORTH=1,
GTK_ANCHOR_NORTH_WEST=2,
GTK_ANCHOR_NORTH_EAST=3,
GTK_ANCHOR_SOUTH=4,
GTK_ANCHOR_SOUTH_WEST=5,
GTK_ANCHOR_SOUTH_EAST=6,
GTK_ANCHOR_WEST=7,
GTK_ANCHOR_EAST=8,
GTK_ANCHOR_N=1,
GTK_ANCHOR_NW=2,
GTK_ANCHOR_NE=3,
GTK_ANCHOR_S=4,
GTK_ANCHOR_SW=5,
GTK_ANCHOR_SE=6,
GTK_ANCHOR_W=7,
GTK_ANCHOR_E=8,
}
alias void function(void *, gint, gint) _BCD_func__13745;
alias gint function(void *, void *) _BCD_func__14970;
alias gint function(_GSignalInvocationHint *, _GValue *, _GValue *, void *) _BCD_func__14366;
alias void function(_AtkObject *, gint) _BCD_func__12433;
alias gint function(_AtkKeyEventStruct *, void *) _BCD_func__12452;
alias void function(_AtkObject *) _BCD_func__12453;
alias void function(_AtkObject *, _AtkPropertyValues *) _BCD_func__12883;
alias void function(_GdkSpan *, void *) _BCD_func__13293;
alias gint function(void *, _GdkEvent *, void *) _BCD_func__13455;
alias void function(_GdkEvent *, void *) _BCD_func__13456;
alias void function(void *, _PangoAttrShape *, gint, void *) _BCD_func__13709;
alias void function(void *) _BCD_func__13724;
alias char * function(void *) _BCD_func__13725;
alias gint function(char *, guint, _GError * *, void *) _BCD_func__13731;
alias void function(char *, void *) _BCD_func__13733;
alias gint function(void *) _BCD_func__6106;
alias gint function(void *, long *, gint) _BCD_func__6108;
alias gint function(void *, char *, guint) _BCD_func__6110;
alias gint function(void *, char *, guint) _BCD_func__6112;
alias gint function(void * *, char *) _BCD_func__13910;
alias gint function(char *, char * * *, guint *) _BCD_func__13911;
alias gint function(void *, char *, char *, char *, char *) _BCD_func__13912;
alias gint function(__gconv_step *, __gconv_step_data *, void *, char *, char * *, char *, char * *, guint *) _BCD_func__13913;
alias void function(__gconv_step *) _BCD_func__13914;
alias gint function(__gconv_step *) _BCD_func__13915;
alias guint function(__gconv_step *, char) _BCD_func__13916;
alias gint function(__gconv_step *, __gconv_step_data *, char * *, char *, char * *, guint *, gint, gint) _BCD_func__13917;
alias gint function(void *, void *, void *) _BCD_func__14064;
alias void * function(void *) _BCD_func__14087;
alias gint function(_PangoAttribute *, void *) _BCD_func__14088;
alias void function(void *, guint, guint, _GInterfaceInfo *) _BCD_func__14190;
alias void function(void *, guint, _GTypeInfo *, _GTypeValueTable *) _BCD_func__14191;
alias void function(void *) _BCD_func__14192;
alias void function(void *, _GObject *, gint) _BCD_func__14336;
alias void function(void *, _GObject *) _BCD_func__14338;
alias void function(_GObject *) _BCD_func__14339;
alias void function(_GObject *, guint, _GValue *, _GParamSpec *) _BCD_func__14340;
alias void function(_GObject *, guint, _GValue *, _GParamSpec *) _BCD_func__14341;
alias gint function(_GSignalInvocationHint *, guint, _GValue *, void *) _BCD_func__14367;
alias void function(void *, _GClosure *) _BCD_func__14386;
alias void function(_GValue *, _GValue *) _BCD_func__14443;
alias void * function(void *) _BCD_func__14461;
alias void function(void *, void *) _BCD_func__14465;
alias gint function(void *, _GTypeClass *) _BCD_func__14466;
alias gint function(void *, void *, void *) _BCD_func__14514;
alias gint function(void *, void *, void *) _BCD_func__14528;
alias void function(_GScanner *, char *, gint) _BCD_func__14530;
alias gint function(void *, _GString *, void *) _BCD_func__14602;
alias void function(void *, void *, void *, _GError * *) _BCD_func__14619;
alias gint function(void *, void *, void *, _GError * *) _BCD_func__14620;
alias gint function(char *, char *, void *, _GError * *) _BCD_func__14621;
alias void * function(void *, void *) _BCD_func__14631;
alias void function(_GNode *, void *) _BCD_func__14632;
alias gint function(_GNode *, void *) _BCD_func__14633;
alias void function(char *) _BCD_func__14641;
alias void function(char *, gint, char *, void *) _BCD_func__14643;
alias gint function(_GIOChannel *, gint, void *) _BCD_func__14654;
alias gint function(_GPollFD *, guint, gint) _BCD_func__14704;
alias void function(gint, gint, void *) _BCD_func__14710;
alias void function(_GHookList *, _GHook *) _BCD_func__14741;
alias gint function(_GHook *, void *) _BCD_func__14742;
alias void function(_GHook *, void *) _BCD_func__14743;
alias gint function(_GHook *, _GHook *) _BCD_func__14744;
alias void function(guint, void *, void *) _BCD_func__14778;
alias gint function(char *, char *, guint) _BCD_func__14781;
alias char * function(void *) _BCD_func__14782;
alias char * function(char *, void *) _BCD_func__14965;
alias void function(void *, void *, void *) _BCD_func__14966;
alias guint function(void *) _BCD_func__14967;
alias gint function(void *, void *) _BCD_func__14968;
alias gint function(void *, void *, void *) _BCD_func__14969;
alias gint function(void *, char *, guint) _BCD_func__15042;
alias gint function(void *, char *, guint) _BCD_func__15043;
struct _GtkVSeparatorClass {
_GtkSeparatorClass parent_class;
}
struct _GtkVSeparator {
_GtkSeparator separator;
}
struct _GtkVScaleClass {
_GtkScaleClass parent_class;
}
struct _GtkVScale {
_GtkScale scale;
}
struct _GtkVRulerClass {
_GtkRulerClass parent_class;
}
struct _GtkVRuler {
_GtkRuler ruler;
}
struct _GtkVPanedClass {
_GtkPanedClass parent_class;
}
struct _GtkVPaned {
_GtkPaned paned;
}
struct _GtkVolumeButtonClass {
_GtkScaleButtonClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkVButtonBoxClass {
_GtkButtonBoxClass parent_class;
}
struct _GtkVButtonBox {
_GtkButtonBox button_box;
}
struct _GtkUIManagerClass {
_GObjectClass parent_class;
_BCD_func__16564 add_widget;
_BCD_func__16565 actions_changed;
_BCD_func__16566 connect_proxy;
_BCD_func__16566 disconnect_proxy;
_BCD_func__16567 pre_activate;
_BCD_func__16567 post_activate;
_BCD_func__16568 get_widget;
_BCD_func__16569 get_action;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
}
struct _GtkUIManager {
_GObject parent;
void * private_data;
}
struct _GtkTreeStoreClass {
_GObjectClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkTreeStore {
_GObject parent;
gint stamp;
void * root;
void * last;
gint n_columns;
gint sort_column_id;
_GList * sort_list;
gint order;
guint * column_headers;
_BCD_func__11685 default_sort_func;
void * default_sort_data;
_BCD_func__13158 default_sort_destroy;
guint bitfield0;
// guint columns_dirty // bits 0 .. 1
}
struct _GtkTreeModelSortClass {
_GObjectClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkTreeModelSort {
_GObject parent;
void * root;
gint stamp;
guint child_flags;
void * child_model;
gint zero_ref_count;
_GList * sort_list;
gint sort_column_id;
gint order;
_BCD_func__11685 default_sort_func;
void * default_sort_data;
_BCD_func__13158 default_sort_destroy;
guint changed_id;
guint inserted_id;
guint has_child_toggled_id;
guint deleted_id;
guint reordered_id;
}
struct _GtkTreeDragDestIface {
_GTypeInterface g_iface;
_BCD_func__16576 drag_data_received;
_BCD_func__16576 row_drop_possible;
}
struct _GtkTreeDragSourceIface {
_GTypeInterface g_iface;
_BCD_func__16578 row_draggable;
_BCD_func__16579 drag_data_get;
_BCD_func__16578 drag_data_delete;
}
struct _GtkToolbarClass {
_GtkContainerClass parent_class;
_BCD_func__16581 orientation_changed;
_BCD_func__16582 style_changed;
_BCD_func__16583 popup_context_menu;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
}
struct _GtkToolbar {
_GtkContainer container;
gint num_children;
_GList * children;
gint orientation;
gint style;
gint icon_size;
_GtkTooltips * tooltips;
gint button_maxw;
gint button_maxh;
guint _gtk_reserved1;
guint _gtk_reserved2;
guint bitfield0;
// guint style_set // bits 0 .. 1
// guint icon_size_set // bits 1 .. 2
}
struct _GtkToolbarChild {
gint type;
_GtkWidget * widget;
_GtkWidget * icon;
_GtkWidget * label;
}
struct _GtkTipsQueryClass {
_GtkLabelClass parent_class;
_BCD_func__16587 start_query;
_BCD_func__16587 stop_query;
_BCD_func__16588 widget_entered;
_BCD_func__16589 widget_selected;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkTipsQuery {
_GtkLabel label;
guint bitfield0;
// guint emit_always // bits 0 .. 1
// guint in_query // bits 1 .. 2
char * label_inactive;
char * label_no_tip;
_GtkWidget * caller;
_GtkWidget * last_crossed;
_GdkCursor * query_cursor;
}
struct _GtkTextViewClass {
_GtkContainerClass parent_class;
_BCD_func__16592 set_scroll_adjustments;
_BCD_func__16593 populate_popup;
_BCD_func__16594 move_cursor;
_BCD_func__16595 page_horizontally;
_BCD_func__16596 set_anchor;
_BCD_func__16597 insert_at_cursor;
_BCD_func__16598 delete_from_cursor;
_BCD_func__16596 backspace;
_BCD_func__16596 cut_clipboard;
_BCD_func__16596 copy_clipboard;
_BCD_func__16596 paste_clipboard;
_BCD_func__16596 toggle_overwrite;
_BCD_func__16599 move_focus;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
_BCD_func__12122 _gtk_reserved5;
_BCD_func__12122 _gtk_reserved6;
_BCD_func__12122 _gtk_reserved7;
}
struct _GtkTextView {
_GtkContainer parent_instance;
void * layout;
_GtkTextBuffer * buffer;
guint selection_drag_handler;
guint scroll_timeout;
gint pixels_above_lines;
gint pixels_below_lines;
gint pixels_inside_wrap;
gint wrap_mode;
gint justify;
gint left_margin;
gint right_margin;
gint indent;
void * tabs;
guint bitfield0;
// guint editable // bits 0 .. 1
// guint overwrite_mode // bits 1 .. 2
// guint cursor_visible // bits 2 .. 3
// guint need_im_reset // bits 3 .. 4
// guint accepts_tab // bits 4 .. 5
// guint width_changed // bits 5 .. 6
// guint onscreen_validated // bits 6 .. 7
// guint mouse_cursor_obscured // bits 7 .. 8
void * text_window;
void * left_window;
void * right_window;
void * top_window;
void * bottom_window;
_GtkAdjustment * hadjustment;
_GtkAdjustment * vadjustment;
gint xoffset;
gint yoffset;
gint width;
gint height;
gint virtual_cursor_x;
gint virtual_cursor_y;
_GtkTextMark * first_para_mark;
gint first_para_pixels;
_GtkTextMark * dnd_mark;
guint blink_timeout;
guint first_validate_idle;
guint incremental_validate_idle;
_GtkIMContext * im_context;
_GtkWidget * popup_menu;
gint drag_start_x;
gint drag_start_y;
_GSList * children;
void * pending_scroll;
gint pending_place_cursor_button;
}
struct _GtkTextBufferClass {
_GObjectClass parent_class;
_BCD_func__16602 insert_text;
_BCD_func__16603 insert_pixbuf;
_BCD_func__16604 insert_child_anchor;
_BCD_func__16605 delete_range;
_BCD_func__16606 changed;
_BCD_func__16606 modified_changed;
_BCD_func__16607 mark_set;
_BCD_func__16608 mark_deleted;
_BCD_func__16609 apply_tag;
_BCD_func__16609 remove_tag;
_BCD_func__16606 begin_user_action;
_BCD_func__16606 end_user_action;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
_BCD_func__12122 _gtk_reserved5;
_BCD_func__12122 _gtk_reserved6;
}
struct _GtkTextMarkClass {
_GObjectClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkTextMark {
_GObject parent_instance;
void * segment;
}
struct _GtkTextTagTableClass {
_GObjectClass parent_class;
_BCD_func__16613 tag_changed;
_BCD_func__16614 tag_added;
_BCD_func__16614 tag_removed;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkTearoffMenuItemClass {
_GtkMenuItemClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkTearoffMenuItem {
_GtkMenuItem menu_item;
guint bitfield0;
// guint torn_off // bits 0 .. 1
}
struct _GtkTableRowCol {
ushort requisition;
ushort allocation;
ushort spacing;
ubyte bitfield0;
// guint need_expand // bits 0 .. 1
// guint need_shrink // bits 1 .. 2
// guint expand // bits 2 .. 3
// guint shrink // bits 3 .. 4
// guint empty // bits 4 .. 5
}
struct _GtkTableChild {
_GtkWidget * widget;
ushort left_attach;
ushort right_attach;
ushort top_attach;
ushort bottom_attach;
ushort xpadding;
ushort ypadding;
guint bitfield0;
// guint xexpand // bits 0 .. 1
// guint yexpand // bits 1 .. 2
// guint xshrink // bits 2 .. 3
// guint yshrink // bits 3 .. 4
// guint xfill // bits 4 .. 5
// guint yfill // bits 5 .. 6
}
struct _GtkTableClass {
_GtkContainerClass parent_class;
}
struct _GtkTable {
_GtkContainer container;
_GList * children;
_GtkTableRowCol * rows;
_GtkTableRowCol * cols;
ushort nrows;
ushort ncols;
ushort column_spacing;
ushort row_spacing;
guint bitfield0;
// guint homogeneous // bits 0 .. 1
}
struct _GtkStockItem {
char * stock_id;
char * label;
gint modifier;
guint keyval;
char * translation_domain;
}
struct _GtkStatusIconClass {
_GObjectClass parent_class;
_BCD_func__16623 activate;
_BCD_func__16624 popup_menu;
_BCD_func__16625 size_changed;
void * __gtk_reserved1;
void * __gtk_reserved2;
void * __gtk_reserved3;
void * __gtk_reserved4;
void * __gtk_reserved5;
void * __gtk_reserved6;
}
struct _GtkStatusIcon {
_GObject parent_instance;
void * priv;
}
struct _GtkStatusbarClass {
_GtkHBoxClass parent_class;
void * reserved;
_BCD_func__16628 text_pushed;
_BCD_func__16628 text_popped;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkStatusbar {
_GtkHBox parent_widget;
_GtkWidget * frame;
_GtkWidget * label;
_GSList * messages;
_GSList * keys;
guint seq_context_id;
guint seq_message_id;
_GdkDrawable * grip_window;
guint bitfield0;
// guint has_resize_grip // bits 0 .. 1
}
struct _GtkSpinButtonClass {
_GtkEntryClass parent_class;
_BCD_func__16631 input;
_BCD_func__16632 output;
_BCD_func__16633 value_changed;
_BCD_func__16634 change_value;
_BCD_func__16633 wrapped;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
}
struct _GtkSpinButton {
_GtkEntry entry;
_GtkAdjustment * adjustment;
_GdkDrawable * panel;
guint timer;
double climb_rate;
double timer_step;
gint update_policy;
guint bitfield0;
// guint in_child // bits 0 .. 2
// guint click_child // bits 2 .. 4
// guint button // bits 4 .. 6
// guint need_timer // bits 6 .. 7
// guint timer_calls // bits 7 .. 10
// guint digits // bits 10 .. 20
// guint numeric // bits 20 .. 21
// guint wrap // bits 21 .. 22
// guint snap_to_ticks // bits 22 .. 23
}
struct _GtkSizeGroupClass {
_GObjectClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkSizeGroup {
_GObject parent_instance;
_GSList * widgets;
char mode;
ubyte bitfield0;
// guint have_width // bits 0 .. 1
// guint have_height // bits 1 .. 2
// guint ignore_hidden // bits 2 .. 3
_GtkRequisition requisition;
}
struct _GtkSeparatorToolItemClass {
_GtkToolItemClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkSeparatorToolItem {
_GtkToolItem parent;
void * priv;
}
struct _GtkSeparatorMenuItemClass {
_GtkMenuItemClass parent_class;
}
struct _GtkSeparatorMenuItem {
_GtkMenuItem menu_item;
}
struct _GtkScrolledWindowClass {
_GtkBinClass parent_class;
gint scrollbar_spacing;
_BCD_func__16643 scroll_child;
_BCD_func__16644 move_focus_out;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkScrolledWindow {
_GtkBin container;
_GtkWidget * hscrollbar;
_GtkWidget * vscrollbar;
ubyte bitfield0;
// guint hscrollbar_policy // bits 0 .. 2
// guint vscrollbar_policy // bits 2 .. 4
// guint hscrollbar_visible // bits 4 .. 5
// guint vscrollbar_visible // bits 5 .. 6
// guint window_placement // bits 6 .. 8
// guint focus_out // bits 8 .. 9
ushort shadow_type;
}
struct _GtkViewportClass {
_GtkBinClass parent_class;
_BCD_func__16647 set_scroll_adjustments;
}
struct _GtkViewport {
_GtkBin bin;
gint shadow_type;
_GdkDrawable * view_window;
_GdkDrawable * bin_window;
_GtkAdjustment * hadjustment;
_GtkAdjustment * vadjustment;
}
struct _GtkScaleButtonClass {
_GtkButtonClass parent_class;
_BCD_func__16650 value_changed;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkScaleButton {
_GtkButton parent;
_GtkWidget * plus_button;
_GtkWidget * minus_button;
void * priv;
}
struct _GtkRecentChooserWidgetClass {
_GtkVBoxClass parent_class;
}
struct _GtkRecentChooserWidget {
_GtkVBox parent_instance;
void * priv;
}
struct _GtkRecentChooserMenuClass {
_GtkMenuClass parent_class;
_BCD_func__12122 gtk_recent1;
_BCD_func__12122 gtk_recent2;
_BCD_func__12122 gtk_recent3;
_BCD_func__12122 gtk_recent4;
}
struct _GtkRecentChooserMenu {
_GtkMenu parent_instance;
void * priv;
}
struct _GtkRecentChooserDialogClass {
_GtkDialogClass parent_class;
}
struct _GtkRecentChooserDialog {
_GtkDialog parent_instance;
void * priv;
}
struct _GtkRecentChooserIface {
_GTypeInterface base_iface;
_BCD_func__16659 set_current_uri;
_BCD_func__16660 get_current_uri;
_BCD_func__16659 select_uri;
_BCD_func__16661 unselect_uri;
_BCD_func__16662 select_all;
_BCD_func__16662 unselect_all;
_BCD_func__16663 get_items;
_BCD_func__16664 get_recent_manager;
_BCD_func__16665 add_filter;
_BCD_func__16665 remove_filter;
_BCD_func__16666 list_filters;
_BCD_func__16667 set_sort_func;
_BCD_func__16662 item_activated;
_BCD_func__16662 selection_changed;
}
struct _GtkRecentFilterInfo {
gint contains;
char * uri;
char * display_name;
char * mime_type;
char * * applications;
char * * groups;
gint age;
}
struct _GtkRecentActionClass {
_GtkActionClass parent_class;
}
struct _GtkRecentAction {
_GtkAction parent_instance;
void * priv;
}
struct _GtkRecentManagerClass {
_GObjectClass parent_class;
_BCD_func__16672 changed;
_BCD_func__12122 _gtk_recent1;
_BCD_func__12122 _gtk_recent2;
_BCD_func__12122 _gtk_recent3;
_BCD_func__12122 _gtk_recent4;
}
struct _GtkRecentManager {
_GObject parent_instance;
void * priv;
}
struct _GtkRecentData {
char * display_name;
char * description;
char * mime_type;
char * app_name;
char * app_exec;
char * * groups;
gint is_private;
}
struct _GtkRadioToolButtonClass {
_GtkToggleToolButtonClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkRadioToolButton {
_GtkToggleToolButton parent;
}
struct _GtkToggleToolButtonClass {
_GtkToolButtonClass parent_class;
_BCD_func__16678 toggled;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkToggleToolButton {
_GtkToolButton parent;
void * priv;
}
struct _GtkRadioMenuItemClass {
_GtkCheckMenuItemClass parent_class;
_BCD_func__16681 group_changed;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkRadioMenuItem {
_GtkCheckMenuItem check_menu_item;
_GSList * group;
}
struct _GtkRadioButtonClass {
_GtkCheckButtonClass parent_class;
_BCD_func__16684 group_changed;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkRadioButton {
_GtkCheckButton check_button;
_GSList * group;
}
struct _GtkRadioActionClass {
_GtkToggleActionClass parent_class;
_BCD_func__16687 changed;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkRadioAction {
_GtkToggleAction parent;
void * private_data;
}
struct _GtkToggleActionClass {
_GtkActionClass parent_class;
_BCD_func__16690 toggled;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkToggleAction {
_GtkAction parent;
void * private_data;
}
struct _GtkProgressBarClass {
_GtkProgressClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkProgressBar {
_GtkProgress progress;
gint bar_style;
gint orientation;
guint blocks;
gint in_block;
gint activity_pos;
guint activity_step;
guint activity_blocks;
double pulse_fraction;
guint bitfield0;
// guint activity_dir // bits 0 .. 1
// guint ellipsize // bits 1 .. 4
// guint dirty // bits 4 .. 5
}
struct _GtkProgressClass {
_GtkWidgetClass parent_class;
_BCD_func__16695 paint;
_BCD_func__16695 update;
_BCD_func__16695 act_mode_enter;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkProgress {
_GtkWidget widget;
_GtkAdjustment * adjustment;
_GdkDrawable * offscreen_pixmap;
char * format;
float x_align;
float y_align;
guint bitfield0;
// guint show_text // bits 0 .. 1
// guint activity_mode // bits 1 .. 2
// guint use_text_format // bits 2 .. 3
}
struct _GtkPrintOperation {
_GObject parent_instance;
void * priv;
}
struct _GtkPrintOperationClass {
_GObjectClass parent_class;
_BCD_func__16699 done;
_BCD_func__16700 begin_print;
_BCD_func__16701 paginate;
_BCD_func__16702 request_page_setup;
_BCD_func__16703 draw_page;
_BCD_func__16700 end_print;
_BCD_func__16704 status_changed;
_BCD_func__16705 create_custom_widget;
_BCD_func__16706 custom_widget_apply;
_BCD_func__16707 preview;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
_BCD_func__12122 _gtk_reserved5;
_BCD_func__12122 _gtk_reserved6;
_BCD_func__12122 _gtk_reserved7;
}
struct _GtkPrintOperationPreviewIface {
_GTypeInterface g_iface;
_BCD_func__16709 ready;
_BCD_func__16710 got_page_size;
_BCD_func__16711 render_page;
_BCD_func__16712 is_selected;
_BCD_func__16713 end_preview;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
_BCD_func__12122 _gtk_reserved5;
_BCD_func__12122 _gtk_reserved6;
_BCD_func__12122 _gtk_reserved7;
}
struct _GtkPageRange {
gint start;
gint end;
}
struct _GtkPreviewClass {
_GtkWidgetClass parent_class;
_GtkPreviewInfo info;
}
union _GtkDitherInfo {
ushort [2] s;
char [4] c;
}
struct _GtkPreviewInfo {
char * lookup;
double gamma;
}
struct _GtkPreview {
_GtkWidget widget;
char * buffer;
ushort buffer_width;
ushort buffer_height;
ushort bpp;
ushort rowstride;
gint dither;
guint bitfield0;
// guint type // bits 0 .. 1
// guint expand // bits 1 .. 2
}
struct _GtkPlugClass {
_GtkWindowClass parent_class;
_BCD_func__16720 embedded;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkPlug {
_GtkWindow window;
_GdkDrawable * socket_window;
_GtkWidget * modality_window;
_GtkWindowGroup * modality_group;
void * grabbed_keys;
guint bitfield0;
// guint same_app // bits 0 .. 1
}
struct _GtkSocketClass {
_GtkContainerClass parent_class;
_BCD_func__16723 plug_added;
_BCD_func__16724 plug_removed;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkSocket {
_GtkContainer container;
ushort request_width;
ushort request_height;
ushort current_width;
ushort current_height;
_GdkDrawable * plug_window;
_GtkWidget * plug_widget;
short xembed_version;
ubyte bitfield0;
// guint same_app // bits 0 .. 1
// guint focus_in // bits 1 .. 2
// guint have_size // bits 2 .. 3
// guint need_map // bits 3 .. 4
// guint is_mapped // bits 4 .. 5
// guint active // bits 5 .. 6
_GtkAccelGroup * accel_group;
_GtkWidget * toplevel;
}
struct _GtkPixmapClass {
_GtkMiscClass parent_class;
}
struct _GtkPixmap {
_GtkMisc misc;
_GdkDrawable * pixmap;
_GdkDrawable * mask;
_GdkDrawable * pixmap_insensitive;
guint bitfield0;
// guint build_insensitive // bits 0 .. 1
}
struct _GtkOptionMenuClass {
_GtkButtonClass parent_class;
_BCD_func__16729 changed;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkOptionMenu {
_GtkButton button;
_GtkWidget * menu;
_GtkWidget * menu_item;
ushort width;
ushort height;
}
struct _GtkOldEditableClass {
_GtkWidgetClass parent_class;
_BCD_func__16732 activate;
_BCD_func__16733 set_editable;
_BCD_func__16734 move_cursor;
_BCD_func__16733 move_word;
_BCD_func__16734 move_page;
_BCD_func__16733 move_to_row;
_BCD_func__16733 move_to_column;
_BCD_func__16733 kill_char;
_BCD_func__16733 kill_word;
_BCD_func__16733 kill_line;
_BCD_func__16732 cut_clipboard;
_BCD_func__16732 copy_clipboard;
_BCD_func__16732 paste_clipboard;
_BCD_func__16734 update_text;
_BCD_func__16735 get_chars;
_BCD_func__16734 set_selection;
_BCD_func__16733 set_position;
}
struct _GtkOldEditable {
_GtkWidget widget;
guint current_pos;
guint selection_start_pos;
guint selection_end_pos;
guint bitfield0;
// guint has_selection // bits 0 .. 1
// guint editable // bits 1 .. 2
// guint visible // bits 2 .. 3
char * clipboard_text;
}
struct _GtkNotebookClass {
_GtkContainerClass parent_class;
_BCD_func__16738 switch_page;
_BCD_func__16739 select_page;
_BCD_func__16740 focus_tab;
_BCD_func__16739 change_current_page;
_BCD_func__16741 move_focus_out;
_BCD_func__16742 reorder_tab;
_BCD_func__16743 insert_page;
_BCD_func__16744 create_window;
_BCD_func__12122 _gtk_reserved1;
}
struct _GtkNotebook {
_GtkContainer container;
void * cur_page;
_GList * children;
_GList * first_tab;
_GList * focus_tab;
_GtkWidget * menu;
_GdkDrawable * event_window;
guint timer;
ushort tab_hborder;
ushort tab_vborder;
guint bitfield0;
// guint show_tabs // bits 0 .. 1
// guint homogeneous // bits 1 .. 2
// guint show_border // bits 2 .. 3
// guint tab_pos // bits 3 .. 5
// guint scrollable // bits 5 .. 6
// guint in_child // bits 6 .. 9
// guint click_child // bits 9 .. 12
// guint button // bits 12 .. 14
// guint need_timer // bits 14 .. 15
// guint child_has_focus // bits 15 .. 16
// guint have_visible_child // bits 16 .. 17
// guint focus_out // bits 17 .. 18
// guint has_before_previous // bits 18 .. 19
// guint has_before_next // bits 19 .. 20
// guint has_after_previous // bits 20 .. 21
// guint has_after_next // bits 21 .. 22
}
struct _GtkMessageDialogClass {
_GtkDialogClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkMessageDialog {
_GtkDialog parent_instance;
_GtkWidget * image;
_GtkWidget * label;
}
struct _GtkMenuToolButton {
_GtkToolButton parent;
void * priv;
}
struct _GtkMenuToolButtonClass {
_GtkToolButtonClass parent_class;
_BCD_func__16750 show_menu;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkToolButtonClass {
_GtkToolItemClass parent_class;
GType button_type;
_BCD_func__16752 clicked;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkToolButton {
_GtkToolItem parent;
void * priv;
}
struct _GtkToolItemClass {
_GtkBinClass parent_class;
_BCD_func__16755 create_menu_proxy;
_BCD_func__16756 toolbar_reconfigured;
_BCD_func__16757 set_tooltip;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkToolItem {
_GtkBin parent;
void * priv;
}
struct _GtkTooltipsData {
_GtkTooltips * tooltips;
_GtkWidget * widget;
char * tip_text;
char * tip_private;
}
struct _GtkTooltipsClass {
_GtkObjectClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkTooltips {
_GtkObject parent_instance;
_GtkWidget * tip_window;
_GtkWidget * tip_label;
_GtkTooltipsData * active_tips_data;
_GList * tips_data_list;
guint bitfield0;
// guint delay // bits 0 .. 30
// guint enabled // bits 30 .. 31
// guint have_grab // bits 31 .. 32
guint bitfield1;
// guint use_sticky_delay // bits 32 .. 33
gint timer_tag;
_GTimeVal last_popdown;
}
struct _GtkMenuBarClass {
_GtkMenuShellClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkMenuBar {
_GtkMenuShell menu_shell;
}
struct _GtkListClass {
_GtkContainerClass parent_class;
_BCD_func__16765 selection_changed;
_BCD_func__16766 select_child;
_BCD_func__16766 unselect_child;
}
struct _GtkList {
_GtkContainer container;
_GList * children;
_GList * selection;
_GList * undo_selection;
_GList * undo_unselection;
_GtkWidget * last_focus_child;
_GtkWidget * undo_focus_child;
guint htimer;
guint vtimer;
gint anchor;
gint drag_pos;
gint anchor_state;
guint bitfield0;
// guint selection_mode // bits 0 .. 2
// guint drag_selection // bits 2 .. 3
// guint add_mode // bits 3 .. 4
}
struct _GtkListItemClass {
_GtkItemClass parent_class;
_BCD_func__16769 toggle_focus_row;
_BCD_func__16769 select_all;
_BCD_func__16769 unselect_all;
_BCD_func__16769 undo_selection;
_BCD_func__16769 start_selection;
_BCD_func__16769 end_selection;
_BCD_func__16770 extend_selection;
_BCD_func__16771 scroll_horizontal;
_BCD_func__16771 scroll_vertical;
_BCD_func__16769 toggle_add_mode;
}
struct _GtkListItem {
_GtkItem item;
}
struct _GtkLinkButtonClass {
_GtkButtonClass parent_class;
_BCD_func__12122 _gtk_padding1;
_BCD_func__12122 _gtk_padding2;
_BCD_func__12122 _gtk_padding3;
_BCD_func__12122 _gtk_padding4;
}
struct _GtkLinkButton {
_GtkButton parent_instance;
void * priv;
}
struct _GtkLayoutClass {
_GtkContainerClass parent_class;
_BCD_func__16776 set_scroll_adjustments;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkLayout {
_GtkContainer container;
_GList * children;
guint width;
guint height;
_GtkAdjustment * hadjustment;
_GtkAdjustment * vadjustment;
_GdkDrawable * bin_window;
gint visibility;
gint scroll_x;
gint scroll_y;
guint freeze_count;
}
struct _GtkInvisibleClass {
_GtkWidgetClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkInvisible {
_GtkWidget widget;
gint has_user_ref_count;
_GdkScreen * screen;
}
struct _GtkInputDialogClass {
_GtkDialogClass parent_class;
_BCD_func__16781 enable_device;
_BCD_func__16781 disable_device;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkInputDialog {
_GtkDialog dialog;
_GtkWidget * axis_list;
_GtkWidget * axis_listbox;
_GtkWidget * mode_optionmenu;
_GtkWidget * close_button;
_GtkWidget * save_button;
_GtkWidget * [7] axis_items;
_GdkDevice * current_device;
_GtkWidget * keys_list;
_GtkWidget * keys_listbox;
}
struct _GtkIMMulticontextClass {
_GtkIMContextClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkIMMulticontext {
_GtkIMContext object;
_GtkIMContext * slave;
void * priv;
char * context_id;
}
struct _GtkIMContextSimpleClass {
_GtkIMContextClass parent_class;
}
struct _GtkIMContextSimple {
_GtkIMContext object;
_GSList * tables;
guint [8] compose_buffer;
guint tentative_match;
gint tentative_match_len;
guint bitfield0;
// guint in_hex_sequence // bits 0 .. 1
// guint modifiers_dropped // bits 1 .. 2
}
struct _GtkImageMenuItemClass {
_GtkMenuItemClass parent_class;
}
struct _GtkImageMenuItem {
_GtkMenuItem menu_item;
_GtkWidget * image;
}
struct _GtkIconViewClass {
_GtkContainerClass parent_class;
_BCD_func__16790 set_scroll_adjustments;
_BCD_func__16791 item_activated;
_BCD_func__16792 selection_changed;
_BCD_func__16792 select_all;
_BCD_func__16792 unselect_all;
_BCD_func__16792 select_cursor_item;
_BCD_func__16792 toggle_cursor_item;
_BCD_func__16793 move_cursor;
_BCD_func__16794 activate_cursor_item;
}
struct _GtkIconView {
_GtkContainer parent;
void * priv;
}
struct _GtkIconThemeClass {
_GObjectClass parent_class;
_BCD_func__16797 changed;
}
struct _GtkIconTheme {
_GObject parent_instance;
void * priv;
}
struct _GtkIconFactoryClass {
_GObjectClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkHSeparatorClass {
_GtkSeparatorClass parent_class;
}
struct _GtkHSeparator {
_GtkSeparator separator;
}
struct _GtkSeparatorClass {
_GtkWidgetClass parent_class;
}
struct _GtkSeparator {
_GtkWidget widget;
}
struct _GtkHScaleClass {
_GtkScaleClass parent_class;
}
struct _GtkHScale {
_GtkScale scale;
}
struct _GtkScaleClass {
_GtkRangeClass parent_class;
_BCD_func__16807 format_value;
_BCD_func__16808 draw_value;
_BCD_func__16809 get_layout_offsets;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkScale {
_GtkRange range;
gint digits;
guint bitfield0;
// guint draw_value // bits 0 .. 1
// guint value_pos // bits 1 .. 3
}
struct _GtkHRulerClass {
_GtkRulerClass parent_class;
}
struct _GtkHRuler {
_GtkRuler ruler;
}
struct _GtkRulerMetric {
char * metric_name;
char * abbrev;
double pixels_per_unit;
double [10] ruler_scale;
gint [5] subdivide;
}
struct _GtkRulerClass {
_GtkWidgetClass parent_class;
_BCD_func__16815 draw_ticks;
_BCD_func__16815 draw_pos;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkRuler {
_GtkWidget widget;
_GdkDrawable * backing_store;
_GdkGC * non_gr_exp_gc;
_GtkRulerMetric * metric;
gint xsrc;
gint ysrc;
gint slider_size;
double lower;
double upper;
double position;
double max_size;
}
struct _GtkHPanedClass {
_GtkPanedClass parent_class;
}
struct _GtkHPaned {
_GtkPaned paned;
}
struct _GtkPanedClass {
_GtkContainerClass parent_class;
_BCD_func__16820 cycle_child_focus;
_BCD_func__16821 toggle_handle_focus;
_BCD_func__16822 move_handle;
_BCD_func__16820 cycle_handle_focus;
_BCD_func__16821 accept_position;
_BCD_func__16821 cancel_position;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkPaned {
_GtkContainer container;
_GtkWidget * child1;
_GtkWidget * child2;
_GdkDrawable * handle;
_GdkGC * xor_gc;
gint cursor_type;
_GdkRectangle handle_pos;
gint child1_size;
gint last_allocation;
gint min_position;
gint max_position;
guint bitfield0;
// guint position_set // bits 0 .. 1
// guint in_drag // bits 1 .. 2
// guint child1_shrink // bits 2 .. 3
// guint child1_resize // bits 3 .. 4
// guint child2_shrink // bits 4 .. 5
// guint child2_resize // bits 5 .. 6
// guint orientation // bits 6 .. 7
// guint in_recursion // bits 7 .. 8
// guint handle_prelit // bits 8 .. 9
_GtkWidget * last_child1_focus;
_GtkWidget * last_child2_focus;
void * priv;
gint drag_pos;
gint original_position;
}
struct _GtkHButtonBoxClass {
_GtkButtonBoxClass parent_class;
}
struct _GtkHButtonBox {
_GtkButtonBox button_box;
}
struct _GtkHandleBoxClass {
_GtkBinClass parent_class;
_BCD_func__16827 child_attached;
_BCD_func__16827 child_detached;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkHandleBox {
_GtkBin bin;
_GdkDrawable * bin_window;
_GdkDrawable * float_window;
gint shadow_type;
guint bitfield0;
// guint handle_position // bits 0 .. 2
// guint float_window_mapped // bits 2 .. 3
// guint child_detached // bits 3 .. 4
// guint in_drag // bits 4 .. 5
// guint shrink_on_detach // bits 5 .. 6
// gint snap_edge // bits 6 .. 9
gint deskoff_x;
gint deskoff_y;
_GdkRectangle attach_allocation;
_GdkRectangle float_allocation;
}
struct _GtkGammaCurveClass {
_GtkVBoxClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkGammaCurve {
_GtkVBox vbox;
_GtkWidget * table;
_GtkWidget * curve;
_GtkWidget * [5] button;
float gamma;
_GtkWidget * gamma_dialog;
_GtkWidget * gamma_text;
}
struct _GtkFontSelectionDialogClass {
_GtkDialogClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkFontSelectionDialog {
_GtkDialog parent_instance;
_GtkWidget * fontsel;
_GtkWidget * main_vbox;
_GtkWidget * action_area;
_GtkWidget * ok_button;
_GtkWidget * apply_button;
_GtkWidget * cancel_button;
gint dialog_width;
gint auto_resize;
}
struct _GtkFontSelectionClass {
_GtkVBoxClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkFontSelection {
_GtkVBox parent_instance;
_GtkWidget * font_entry;
_GtkWidget * family_list;
_GtkWidget * font_style_entry;
_GtkWidget * face_list;
_GtkWidget * size_entry;
_GtkWidget * size_list;
_GtkWidget * pixels_button;
_GtkWidget * points_button;
_GtkWidget * filter_button;
_GtkWidget * preview_entry;
void * family;
void * face;
gint size;
_GdkFont * font;
}
struct _GtkFontButtonClass {
_GtkButtonClass parent_class;
_BCD_func__16836 font_set;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkFontButton {
_GtkButton button;
void * priv;
}
struct _GtkFileChooserWidgetClass {
_GtkVBoxClass parent_class;
}
struct _GtkFileChooserWidget {
_GtkVBox parent_instance;
void * priv;
}
struct _GtkFileChooserDialogClass {
_GtkDialogClass parent_class;
}
struct _GtkFileChooserDialog {
_GtkDialog parent_instance;
void * priv;
}
struct _GtkFileChooserButtonClass {
_GtkHBoxClass parent_class;
_BCD_func__16843 file_set;
void * __gtk_reserved1;
void * __gtk_reserved2;
void * __gtk_reserved3;
void * __gtk_reserved4;
void * __gtk_reserved5;
void * __gtk_reserved6;
void * __gtk_reserved7;
}
struct _GtkFileChooserButton {
_GtkHBox parent;
void * priv;
}
struct _GtkFileFilterInfo {
gint contains;
char * filename;
char * uri;
char * display_name;
char * mime_type;
}
struct _GtkFixedChild {
_GtkWidget * widget;
gint x;
gint y;
}
struct _GtkFixedClass {
_GtkContainerClass parent_class;
}
struct _GtkFixed {
_GtkContainer container;
_GList * children;
}
struct _GtkFileSelectionClass {
_GtkDialogClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkFileSelection {
_GtkDialog parent_instance;
_GtkWidget * dir_list;
_GtkWidget * file_list;
_GtkWidget * selection_entry;
_GtkWidget * selection_text;
_GtkWidget * main_vbox;
_GtkWidget * ok_button;
_GtkWidget * cancel_button;
_GtkWidget * help_button;
_GtkWidget * history_pulldown;
_GtkWidget * history_menu;
_GList * history_list;
_GtkWidget * fileop_dialog;
_GtkWidget * fileop_entry;
char * fileop_file;
void * cmpl_state;
_GtkWidget * fileop_c_dir;
_GtkWidget * fileop_del_file;
_GtkWidget * fileop_ren_file;
_GtkWidget * button_area;
_GtkWidget * action_area;
_GPtrArray * selected_names;
char * last_selected;
}
struct _GtkExpanderClass {
_GtkBinClass parent_class;
_BCD_func__16852 activate;
}
struct _GtkExpander {
_GtkBin bin;
void * priv;
}
struct _GtkEventBoxClass {
_GtkBinClass parent_class;
}
struct _GtkEventBox {
_GtkBin bin;
}
struct _GtkCurveClass {
_GtkDrawingAreaClass parent_class;
_BCD_func__16857 curve_type_changed;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkCurve {
_GtkDrawingArea graph;
gint cursor_type;
float min_x;
float max_x;
float min_y;
float max_y;
_GdkDrawable * pixmap;
gint curve_type;
gint height;
gint grab_point;
gint last;
gint num_points;
_GdkPoint * point;
gint num_ctlpoints;
float [2] * ctlpoint;
}
struct _GtkDrawingAreaClass {
_GtkWidgetClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkDrawingArea {
_GtkWidget widget;
void * draw_data;
}
struct _GtkCTreeNode {
_GList list;
}
struct _GtkCTreeRow {
_GtkCListRow row;
_GtkCTreeNode * parent;
_GtkCTreeNode * sibling;
_GtkCTreeNode * children;
_GdkDrawable * pixmap_closed;
_GdkDrawable * mask_closed;
_GdkDrawable * pixmap_opened;
_GdkDrawable * mask_opened;
ushort level;
ubyte bitfield0;
// guint is_leaf // bits 0 .. 1
// guint expanded // bits 1 .. 2
}
struct _GtkCTreeClass {
_GtkCListClass parent_class;
_BCD_func__16865 tree_select_row;
_BCD_func__16865 tree_unselect_row;
_BCD_func__16866 tree_expand;
_BCD_func__16866 tree_collapse;
_BCD_func__16867 tree_move;
_BCD_func__16868 change_focus_row_expansion;
}
struct _GtkCTree {
_GtkCList clist;
_GdkGC * lines_gc;
gint tree_indent;
gint tree_spacing;
gint tree_column;
guint bitfield0;
// guint line_style // bits 0 .. 2
// guint expander_style // bits 2 .. 4
// guint show_stub // bits 4 .. 5
_BCD_func__10682 drag_compare;
}
struct _GtkComboBoxEntryClass {
_GtkComboBoxClass parent_class;
_BCD_func__12122 _gtk_reserved0;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
}
struct _GtkComboBoxEntry {
_GtkComboBox parent_instance;
void * priv;
}
struct _GtkComboBoxClass {
_GtkBinClass parent_class;
_BCD_func__16873 changed;
_BCD_func__16874 get_active_text;
_BCD_func__12122 _gtk_reserved0;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
}
struct _GtkComboBox {
_GtkBin parent_instance;
void * priv;
}
struct _GtkTreeSelectionClass {
_GObjectClass parent_class;
_BCD_func__16877 changed;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkTreeSelection {
_GObject parent;
_GtkTreeView * tree_view;
gint type;
_BCD_func__9094 user_func;
void * user_data;
_BCD_func__13158 destroy;
}
struct _GtkTreeViewClass {
_GtkContainerClass parent_class;
_BCD_func__16880 set_scroll_adjustments;
_BCD_func__16881 row_activated;
_BCD_func__16882 test_expand_row;
_BCD_func__16882 test_collapse_row;
_BCD_func__16883 row_expanded;
_BCD_func__16883 row_collapsed;
_BCD_func__16884 columns_changed;
_BCD_func__16884 cursor_changed;
_BCD_func__16885 move_cursor;
_BCD_func__16886 select_all;
_BCD_func__16886 unselect_all;
_BCD_func__16887 select_cursor_row;
_BCD_func__16886 toggle_cursor_row;
_BCD_func__16888 expand_collapse_cursor_row;
_BCD_func__16886 select_cursor_parent;
_BCD_func__16886 start_interactive_search;
_BCD_func__12122 _gtk_reserved0;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkTreeView {
_GtkContainer parent;
void * priv;
}
struct _GtkEntryClass {
_GtkWidgetClass parent_class;
_BCD_func__16891 populate_popup;
_BCD_func__16892 activate;
_BCD_func__16893 move_cursor;
_BCD_func__16894 insert_at_cursor;
_BCD_func__16895 delete_from_cursor;
_BCD_func__16892 backspace;
_BCD_func__16892 cut_clipboard;
_BCD_func__16892 copy_clipboard;
_BCD_func__16892 paste_clipboard;
_BCD_func__16892 toggle_overwrite;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
}
struct _GtkEntry {
_GtkWidget widget;
char * text;
guint bitfield0;
// guint editable // bits 0 .. 1
// guint visible // bits 1 .. 2
// guint overwrite_mode // bits 2 .. 3
// guint in_drag // bits 3 .. 4
ushort text_length;
ushort text_max_length;
_GdkDrawable * text_area;
_GtkIMContext * im_context;
_GtkWidget * popup_menu;
gint current_pos;
gint selection_bound;
void * cached_layout;
guint bitfield1;
// guint cache_includes_preedit // bits 32 .. 33
// guint need_im_reset // bits 33 .. 34
// guint has_frame // bits 34 .. 35
// guint activates_default // bits 35 .. 36
// guint cursor_visible // bits 36 .. 37
// guint in_click // bits 37 .. 38
// guint is_cell_renderer // bits 38 .. 39
// guint editing_canceled // bits 39 .. 40
// guint mouse_cursor_obscured // bits 40 .. 41
// guint select_words // bits 41 .. 42
// guint select_lines // bits 42 .. 43
// guint resolved_dir // bits 43 .. 47
// guint truncate_multiline // bits 47 .. 48
guint button;
guint blink_timeout;
guint recompute_idle;
gint scroll_offset;
gint ascent;
gint descent;
ushort text_size;
ushort n_bytes;
ushort preedit_length;
ushort preedit_cursor;
gint dnd_position;
gint drag_start_x;
gint drag_start_y;
guint invisible_char;
gint width_chars;
}
struct _GtkEntryCompletionClass {
_GObjectClass parent_class;
_BCD_func__16898 match_selected;
_BCD_func__16899 action_activated;
_BCD_func__16900 insert_prefix;
_BCD_func__16898 cursor_on_match;
_BCD_func__12122 _gtk_reserved0;
_BCD_func__12122 _gtk_reserved1;
}
struct _GtkEntryCompletion {
_GObject parent_instance;
void * priv;
}
struct _GtkTreeModelFilterClass {
_GObjectClass parent_class;
_BCD_func__12122 _gtk_reserved0;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
}
struct _GtkTreeModelFilter {
_GObject parent;
void * priv;
}
struct _GtkListStoreClass {
_GObjectClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkListStore {
_GObject parent;
gint stamp;
void * seq;
void * _gtk_reserved1;
_GList * sort_list;
gint n_columns;
gint sort_column_id;
gint order;
guint * column_headers;
gint length;
_BCD_func__11685 default_sort_func;
void * default_sort_data;
_BCD_func__13158 default_sort_destroy;
guint bitfield0;
// guint columns_dirty // bits 0 .. 1
}
struct _GtkIMContextClass {
_GtkObjectClass parent_class;
_BCD_func__16907 preedit_start;
_BCD_func__16907 preedit_end;
_BCD_func__16907 preedit_changed;
_BCD_func__16908 commit;
_BCD_func__16909 retrieve_surrounding;
_BCD_func__16910 delete_surrounding;
_BCD_func__16911 set_client_window;
_BCD_func__16912 get_preedit_string;
_BCD_func__16913 filter_keypress;
_BCD_func__16907 focus_in;
_BCD_func__16907 focus_out;
_BCD_func__16907 reset;
_BCD_func__16914 set_cursor_location;
_BCD_func__16915 set_use_preedit;
_BCD_func__16916 set_surrounding;
_BCD_func__16917 get_surrounding;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
_BCD_func__12122 _gtk_reserved5;
_BCD_func__12122 _gtk_reserved6;
}
struct _GtkIMContext {
_GObject parent_instance;
}
struct _GtkEditableClass {
_GTypeInterface base_iface;
_BCD_func__16920 insert_text;
_BCD_func__16921 delete_text;
_BCD_func__16922 changed;
_BCD_func__16920 do_insert_text;
_BCD_func__16921 do_delete_text;
_BCD_func__16923 get_chars;
_BCD_func__16921 set_selection_bounds;
_BCD_func__16924 get_selection_bounds;
_BCD_func__16925 set_position;
_BCD_func__16926 get_position;
}
struct _GtkComboClass {
_GtkHBoxClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkCombo {
_GtkHBox hbox;
_GtkWidget * entry;
_GtkWidget * button;
_GtkWidget * popup;
_GtkWidget * popwin;
_GtkWidget * list;
guint entry_change_id;
guint list_change_id;
ubyte bitfield0;
// guint value_in_list // bits 0 .. 1
// guint ok_if_empty // bits 1 .. 2
// guint case_sensitive // bits 2 .. 3
// guint use_arrows // bits 3 .. 4
// guint use_arrows_always // bits 4 .. 5
ushort current_button;
guint activate_id;
}
struct _GtkHBoxClass {
_GtkBoxClass parent_class;
}
struct _GtkHBox {
_GtkBox box;
}
struct _GtkColorSelectionDialogClass {
_GtkDialogClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkColorSelectionDialog {
_GtkDialog parent_instance;
_GtkWidget * colorsel;
_GtkWidget * ok_button;
_GtkWidget * cancel_button;
_GtkWidget * help_button;
}
struct _GtkColorSelectionClass {
_GtkVBoxClass parent_class;
_BCD_func__16934 color_changed;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkColorSelection {
_GtkVBox parent_instance;
void * private_data;
}
struct _GtkVBoxClass {
_GtkBoxClass parent_class;
}
struct _GtkVBox {
_GtkBox box;
}
struct _GtkColorButtonClass {
_GtkButtonClass parent_class;
_BCD_func__16939 color_set;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkColorButton {
_GtkButton button;
void * priv;
}
struct _GtkCListDestInfo {
_GtkCListCellInfo cell;
gint insert_pos;
}
struct _GtkCListCellInfo {
gint row;
gint column;
}
struct _GtkCellWidget {
gint type;
short vertical;
short horizontal;
_GtkStyle * style;
_GtkWidget * widget;
}
struct _GtkCellPixText {
gint type;
short vertical;
short horizontal;
_GtkStyle * style;
char * text;
char spacing;
_GdkDrawable * pixmap;
_GdkDrawable * mask;
}
struct _GtkCellPixmap {
gint type;
short vertical;
short horizontal;
_GtkStyle * style;
_GdkDrawable * pixmap;
_GdkDrawable * mask;
}
struct _GtkCellText {
gint type;
short vertical;
short horizontal;
_GtkStyle * style;
char * text;
}
struct N8_GtkCell5__2315__232E {
_GdkDrawable * pixmap;
_GdkDrawable * mask;
}
struct N8_GtkCell5__2315__233E {
char * text;
char spacing;
_GdkDrawable * pixmap;
_GdkDrawable * mask;
}
union N8_GtkCell5__231E {
char * text;
N8_GtkCell5__2315__232E pm;
N8_GtkCell5__2315__233E pt;
_GtkWidget * widget;
}
struct _GtkCell {
gint type;
short vertical;
short horizontal;
_GtkStyle * style;
N8_GtkCell5__231E u;
}
struct _GtkCListRow {
_GtkCell * cell;
gint state;
_GdkColor foreground;
_GdkColor background;
_GtkStyle * style;
void * data;
_BCD_func__13158 destroy;
guint bitfield0;
// guint fg_set // bits 0 .. 1
// guint bg_set // bits 1 .. 2
// guint selectable // bits 2 .. 3
}
struct _GtkCListColumn {
char * title;
_GdkRectangle area;
_GtkWidget * button;
_GdkDrawable * window;
gint width;
gint min_width;
gint max_width;
gint justification;
guint bitfield0;
// guint visible // bits 0 .. 1
// guint width_set // bits 1 .. 2
// guint resizeable // bits 2 .. 3
// guint auto_resize // bits 3 .. 4
// guint button_passive // bits 4 .. 5
}
struct _GtkCListClass {
_GtkContainerClass parent_class;
_BCD_func__16962 set_scroll_adjustments;
_BCD_func__16963 refresh;
_BCD_func__16964 select_row;
_BCD_func__16964 unselect_row;
_BCD_func__16965 row_move;
_BCD_func__16966 click_column;
_BCD_func__16965 resize_column;
_BCD_func__16963 toggle_focus_row;
_BCD_func__16963 select_all;
_BCD_func__16963 unselect_all;
_BCD_func__16963 undo_selection;
_BCD_func__16963 start_selection;
_BCD_func__16963 end_selection;
_BCD_func__16967 extend_selection;
_BCD_func__16968 scroll_horizontal;
_BCD_func__16968 scroll_vertical;
_BCD_func__16963 toggle_add_mode;
_BCD_func__16963 abort_column_resize;
_BCD_func__16969 resync_selection;
_BCD_func__16970 selection_find;
_BCD_func__16971 draw_row;
_BCD_func__16972 draw_drag_highlight;
_BCD_func__16963 clear;
_BCD_func__16966 fake_unselect_all;
_BCD_func__16963 sort_list;
_BCD_func__16973 insert_row;
_BCD_func__16966 remove_row;
_BCD_func__16974 set_cell_contents;
_BCD_func__16975 cell_size_request;
}
struct _GtkCList {
_GtkContainer container;
ushort flags;
void * reserved1;
void * reserved2;
guint freeze_count;
_GdkRectangle internal_allocation;
gint rows;
gint row_height;
_GList * row_list;
_GList * row_list_end;
gint columns;
_GdkRectangle column_title_area;
_GdkDrawable * title_window;
_GtkCListColumn * column;
_GdkDrawable * clist_window;
gint clist_window_width;
gint clist_window_height;
gint hoffset;
gint voffset;
gint shadow_type;
gint selection_mode;
_GList * selection;
_GList * selection_end;
_GList * undo_selection;
_GList * undo_unselection;
gint undo_anchor;
char [5] button_actions;
char drag_button;
_GtkCListCellInfo click_cell;
_GtkAdjustment * hadjustment;
_GtkAdjustment * vadjustment;
_GdkGC * xor_gc;
_GdkGC * fg_gc;
_GdkGC * bg_gc;
_GdkCursor * cursor_drag;
gint x_drag;
gint focus_row;
gint focus_header_column;
gint anchor;
gint anchor_state;
gint drag_pos;
gint htimer;
gint vtimer;
gint sort_type;
_BCD_func__11051 compare;
gint sort_column;
gint drag_highlight_row;
gint drag_highlight_pos;
}
struct _GtkVScrollbarClass {
_GtkScrollbarClass parent_class;
}
struct _GtkVScrollbar {
_GtkScrollbar scrollbar;
}
struct _GtkHScrollbarClass {
_GtkScrollbarClass parent_class;
}
struct _GtkHScrollbar {
_GtkScrollbar scrollbar;
}
struct _GtkScrollbarClass {
_GtkRangeClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkScrollbar {
_GtkRange range;
}
struct _GtkRangeClass {
_GtkWidgetClass parent_class;
char * slider_detail;
char * stepper_detail;
_BCD_func__16984 value_changed;
_BCD_func__16985 adjust_bounds;
_BCD_func__16986 move_slider;
_BCD_func__16987 get_range_border;
_BCD_func__16988 change_value;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
}
struct _GtkRange {
_GtkWidget widget;
_GtkAdjustment * adjustment;
gint update_policy;
guint bitfield0;
// guint inverted // bits 0 .. 1
// guint flippable // bits 1 .. 2
// guint has_stepper_a // bits 2 .. 3
// guint has_stepper_b // bits 3 .. 4
// guint has_stepper_c // bits 4 .. 5
// guint has_stepper_d // bits 5 .. 6
// guint need_recalc // bits 6 .. 7
// guint slider_size_fixed // bits 7 .. 8
gint min_slider_size;
gint orientation;
_GdkRectangle range_rect;
gint slider_start;
gint slider_end;
gint round_digits;
guint bitfield1;
// guint trough_click_forward // bits 32 .. 33
// guint update_pending // bits 33 .. 34
void * layout;
void * timer;
gint slide_initial_slider_position;
gint slide_initial_coordinate;
guint update_timeout_id;
_GdkDrawable * event_window;
}
struct _GtkTargetPair {
void * target;
guint flags;
guint info;
}
struct _GtkTargetEntry {
char * target;
guint flags;
guint info;
}
struct _GtkTargetList {
_GList * list;
guint ref_count;
}
struct _GtkTextBuffer {
_GObject parent_instance;
_GtkTextTagTable * tag_table;
void * btree;
_GSList * clipboard_contents_buffers;
_GSList * selection_clipboards;
void * log_attr_cache;
guint user_action_count;
guint bitfield0;
// guint modified // bits 0 .. 1
// guint has_selection // bits 1 .. 2
}
struct _GtkTextChildAnchorClass {
_GObjectClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkTextChildAnchor {
_GObject parent_instance;
void * segment;
}
struct _GtkTextAppearance {
_GdkColor bg_color;
_GdkColor fg_color;
_GdkDrawable * bg_stipple;
_GdkDrawable * fg_stipple;
gint rise;
void * padding1;
guint bitfield0;
// guint underline // bits 0 .. 4
// guint strikethrough // bits 4 .. 5
// guint draw_bg // bits 5 .. 6
// guint inside_selection // bits 6 .. 7
// guint is_text // bits 7 .. 8
// guint pad1 // bits 8 .. 9
// guint pad2 // bits 9 .. 10
// guint pad3 // bits 10 .. 11
// guint pad4 // bits 11 .. 12
}
struct _GtkTextTagClass {
_GObjectClass parent_class;
_BCD_func__16998 event;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkTextTag {
_GObject parent_instance;
_GtkTextTagTable * table;
char * name;
gint priority;
_GtkTextAttributes * values;
guint bitfield0;
// guint bg_color_set // bits 0 .. 1
// guint bg_stipple_set // bits 1 .. 2
// guint fg_color_set // bits 2 .. 3
// guint scale_set // bits 3 .. 4
// guint fg_stipple_set // bits 4 .. 5
// guint justification_set // bits 5 .. 6
// guint left_margin_set // bits 6 .. 7
// guint indent_set // bits 7 .. 8
// guint rise_set // bits 8 .. 9
// guint strikethrough_set // bits 9 .. 10
// guint right_margin_set // bits 10 .. 11
// guint pixels_above_lines_set // bits 11 .. 12
// guint pixels_below_lines_set // bits 12 .. 13
// guint pixels_inside_wrap_set // bits 13 .. 14
// guint tabs_set // bits 14 .. 15
// guint underline_set // bits 15 .. 16
// guint wrap_mode_set // bits 16 .. 17
// guint bg_full_height_set // bits 17 .. 18
// guint invisible_set // bits 18 .. 19
// guint editable_set // bits 19 .. 20
// guint language_set // bits 20 .. 21
// guint pg_bg_color_set // bits 21 .. 22
// guint accumulative_margin // bits 22 .. 23
// guint pad1 // bits 23 .. 24
}
struct _GtkTextAttributes {
guint refcount;
_GtkTextAppearance appearance;
gint justification;
gint direction;
void * font;
double font_scale;
gint left_margin;
gint indent;
gint right_margin;
gint pixels_above_lines;
gint pixels_below_lines;
gint pixels_inside_wrap;
void * tabs;
gint wrap_mode;
void * language;
_GdkColor * pg_bg_color;
guint bitfield0;
// guint invisible // bits 0 .. 1
// guint bg_full_height // bits 1 .. 2
// guint editable // bits 2 .. 3
// guint realized // bits 3 .. 4
// guint pad1 // bits 4 .. 5
// guint pad2 // bits 5 .. 6
// guint pad3 // bits 6 .. 7
// guint pad4 // bits 7 .. 8
}
struct _GtkTextTagTable {
_GObject parent_instance;
void * hash;
_GSList * anonymous;
gint anon_count;
_GSList * buffers;
}
struct _GtkTextIter {
void * dummy1;
void * dummy2;
gint dummy3;
gint dummy4;
gint dummy5;
gint dummy6;
gint dummy7;
gint dummy8;
void * dummy9;
void * dummy10;
gint dummy11;
gint dummy12;
gint dummy13;
void * dummy14;
}
struct _GtkCheckMenuItemClass {
_GtkMenuItemClass parent_class;
_BCD_func__17004 toggled;
_BCD_func__17005 draw_indicator;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkCheckMenuItem {
_GtkMenuItem menu_item;
guint bitfield0;
// guint active // bits 0 .. 1
// guint always_show_toggle // bits 1 .. 2
// guint inconsistent // bits 2 .. 3
// guint draw_as_radio // bits 3 .. 4
}
struct _GtkMenuItemClass {
_GtkItemClass parent_class;
guint bitfield0;
// guint hide_on_activate // bits 0 .. 1
_BCD_func__17008 activate;
_BCD_func__17008 activate_item;
_BCD_func__17009 toggle_size_request;
_BCD_func__17010 toggle_size_allocate;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkMenuItem {
_GtkItem item;
_GtkWidget * submenu;
_GdkDrawable * event_window;
ushort toggle_size;
ushort accelerator_width;
char * accel_path;
guint bitfield0;
// guint show_submenu_indicator // bits 0 .. 1
// guint submenu_placement // bits 1 .. 2
// guint submenu_direction // bits 2 .. 3
// guint right_justify // bits 3 .. 4
// guint timer_from_keypress // bits 4 .. 5
// guint from_menubar // bits 5 .. 6
guint timer;
}
struct _GtkItemClass {
_GtkBinClass parent_class;
_BCD_func__17013 select;
_BCD_func__17013 deselect;
_BCD_func__17013 toggle;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkItem {
_GtkBin bin;
}
struct _GtkCheckButtonClass {
_GtkToggleButtonClass parent_class;
_BCD_func__17016 draw_indicator;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkCheckButton {
_GtkToggleButton toggle_button;
}
struct _GtkToggleButtonClass {
_GtkButtonClass parent_class;
_BCD_func__17019 toggled;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkToggleButton {
_GtkButton button;
guint bitfield0;
// guint active // bits 0 .. 1
// guint draw_indicator // bits 1 .. 2
// guint inconsistent // bits 2 .. 3
}
struct _GtkCellViewClass {
_GtkWidgetClass parent_class;
}
struct _GtkCellView {
_GtkWidget parent_instance;
void * priv;
}
struct _GtkCellRendererToggleClass {
_GtkCellRendererClass parent_class;
_BCD_func__17024 toggled;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkCellRendererToggle {
_GtkCellRenderer parent;
guint bitfield0;
// guint active // bits 0 .. 1
// guint activatable // bits 1 .. 2
// guint radio // bits 2 .. 3
}
struct _GtkCellRendererSpinClass {
_GtkCellRendererTextClass parent;
}
struct _GtkCellRendererSpin {
_GtkCellRendererText parent;
}
struct _GtkCellRendererProgressClass {
_GtkCellRendererClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkCellRendererProgress {
_GtkCellRenderer parent_instance;
void * priv;
}
struct _GtkCellRendererPixbufClass {
_GtkCellRendererClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkCellRendererPixbuf {
_GtkCellRenderer parent;
void * pixbuf;
void * pixbuf_expander_open;
void * pixbuf_expander_closed;
}
struct _GtkCellRendererComboClass {
_GtkCellRendererTextClass parent;
}
struct _GtkCellRendererCombo {
_GtkCellRendererText parent;
void * model;
gint text_column;
gint has_entry;
guint focus_out_id;
}
struct _GtkCellRendererAccelClass {
_GtkCellRendererTextClass parent_class;
_BCD_func__17035 accel_edited;
_BCD_func__17036 accel_cleared;
_BCD_func__12122 _gtk_reserved0;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkCellRendererAccel {
_GtkCellRendererText parent;
guint accel_key;
gint accel_mods;
guint keycode;
gint accel_mode;
_GtkWidget * edit_widget;
_GtkWidget * grab_widget;
_GtkWidget * sizing_label;
}
struct _GtkCellRendererTextClass {
_GtkCellRendererClass parent_class;
_BCD_func__17039 edited;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkCellRendererText {
_GtkCellRenderer parent;
char * text;
void * font;
double font_scale;
_PangoColor foreground;
_PangoColor background;
void * extra_attrs;
gint underline_style;
gint rise;
gint fixed_height_rows;
guint bitfield0;
// guint strikethrough // bits 0 .. 1
// guint editable // bits 1 .. 2
// guint scale_set // bits 2 .. 3
// guint foreground_set // bits 3 .. 4
// guint background_set // bits 4 .. 5
// guint underline_set // bits 5 .. 6
// guint rise_set // bits 6 .. 7
// guint strikethrough_set // bits 7 .. 8
// guint editable_set // bits 8 .. 9
// guint calc_fixed_height // bits 9 .. 10
}
struct _GtkCellLayoutIface {
_GTypeInterface g_iface;
_BCD_func__17042 pack_start;
_BCD_func__17042 pack_end;
_BCD_func__17043 clear;
_BCD_func__17044 add_attribute;
_BCD_func__17045 set_cell_data_func;
_BCD_func__17046 clear_attributes;
_BCD_func__17042 reorder;
_BCD_func__17047 get_cells;
}
struct _GtkTreeViewColumnClass {
_GtkObjectClass parent_class;
_BCD_func__17049 clicked;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkTreeViewColumn {
_GtkObject parent;
_GtkWidget * tree_view;
_GtkWidget * button;
_GtkWidget * child;
_GtkWidget * arrow;
_GtkWidget * alignment;
_GdkDrawable * window;
void * editable_widget;
float xalign;
guint property_changed_signal;
gint spacing;
gint column_type;
gint requested_width;
gint button_request;
gint resized_width;
gint width;
gint fixed_width;
gint min_width;
gint max_width;
gint drag_x;
gint drag_y;
char * title;
_GList * cell_list;
guint sort_clicked_signal;
guint sort_column_changed_signal;
gint sort_column_id;
gint sort_order;
guint bitfield0;
// guint visible // bits 0 .. 1
// guint resizable // bits 1 .. 2
// guint clickable // bits 2 .. 3
// guint dirty // bits 3 .. 4
// guint show_sort_indicator // bits 4 .. 5
// guint maybe_reordered // bits 5 .. 6
// guint reorderable // bits 6 .. 7
// guint use_resized_width // bits 7 .. 8
// guint expand // bits 8 .. 9
}
struct _GtkTreeSortableIface {
_GTypeInterface g_iface;
_BCD_func__17052 sort_column_changed;
_BCD_func__17053 get_sort_column_id;
_BCD_func__17054 set_sort_column_id;
_BCD_func__17055 set_sort_func;
_BCD_func__17056 set_default_sort_func;
_BCD_func__17057 has_default_sort_func;
}
struct _GtkTreeModelIface {
_GTypeInterface g_iface;
_BCD_func__17059 row_changed;
_BCD_func__17059 row_inserted;
_BCD_func__17059 row_has_child_toggled;
_BCD_func__17060 row_deleted;
_BCD_func__17061 rows_reordered;
_BCD_func__17062 get_flags;
_BCD_func__17063 get_n_columns;
_BCD_func__17064 get_column_type;
_BCD_func__17065 get_iter;
_BCD_func__17066 get_path;
_BCD_func__17067 get_value;
_BCD_func__17068 iter_next;
_BCD_func__17069 iter_children;
_BCD_func__17068 iter_has_child;
_BCD_func__17070 iter_n_children;
_BCD_func__17071 iter_nth_child;
_BCD_func__17069 iter_parent;
_BCD_func__17072 ref_node;
_BCD_func__17072 unref_node;
}
struct _GtkTreeIter {
gint stamp;
void * user_data;
void * user_data2;
void * user_data3;
}
struct _GtkCellRendererClass {
_GtkObjectClass parent_class;
_BCD_func__17075 get_size;
_BCD_func__17076 render;
_BCD_func__17077 activate;
_BCD_func__17078 start_editing;
_BCD_func__17079 editing_canceled;
_BCD_func__17080 editing_started;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
}
struct _GtkCellRenderer {
_GtkObject parent;
float xalign;
float yalign;
gint width;
gint height;
ushort xpad;
ushort ypad;
guint bitfield0;
// guint mode // bits 0 .. 2
// guint visible // bits 2 .. 3
// guint is_expander // bits 3 .. 4
// guint is_expanded // bits 4 .. 5
// guint cell_background_set // bits 5 .. 6
// guint sensitive // bits 6 .. 7
// guint editing // bits 7 .. 8
}
struct _GtkCellEditableIface {
_GTypeInterface g_iface;
_BCD_func__17083 editing_done;
_BCD_func__17083 remove_widget;
_BCD_func__17084 start_editing;
}
struct _GtkCalendarClass {
_GtkWidgetClass parent_class;
_BCD_func__17086 month_changed;
_BCD_func__17086 day_selected;
_BCD_func__17086 day_selected_double_click;
_BCD_func__17086 prev_month;
_BCD_func__17086 next_month;
_BCD_func__17086 prev_year;
_BCD_func__17086 next_year;
}
struct _GtkCalendar {
_GtkWidget widget;
_GtkStyle * header_style;
_GtkStyle * label_style;
gint month;
gint year;
gint selected_day;
gint [7] [6] day_month;
gint [7] [6] day;
gint num_marked_dates;
gint [31] marked_date;
gint display_flags;
_GdkColor [31] marked_date_color;
_GdkGC * gc;
_GdkGC * xor_gc;
gint focus_row;
gint focus_col;
gint highlight_row;
gint highlight_col;
void * priv;
char [32] grow_space;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkButtonClass {
_GtkBinClass parent_class;
_BCD_func__17090 pressed;
_BCD_func__17090 released;
_BCD_func__17090 clicked;
_BCD_func__17090 enter;
_BCD_func__17090 leave;
_BCD_func__17090 activate;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkButton {
_GtkBin bin;
_GdkDrawable * event_window;
char * label_text;
guint activate_timeout;
guint bitfield0;
// guint constructed // bits 0 .. 1
// guint in_button // bits 1 .. 2
// guint button_down // bits 2 .. 3
// guint relief // bits 3 .. 5
// guint use_underline // bits 5 .. 6
// guint use_stock // bits 6 .. 7
// guint depressed // bits 7 .. 8
// guint depress_on_activate // bits 8 .. 9
// guint focus_on_click // bits 9 .. 10
}
struct _GtkImageIconNameData {
char * icon_name;
void * pixbuf;
guint theme_change_id;
}
struct _GtkImageAnimationData {
void * anim;
void * iter;
guint frame_timeout;
}
struct _GtkImageIconSetData {
void * icon_set;
}
struct _GtkImageStockData {
char * stock_id;
}
struct _GtkImagePixbufData {
void * pixbuf;
}
struct _GtkImageImageData {
_GdkImage * image;
}
struct _GtkImagePixmapData {
_GdkDrawable * pixmap;
}
struct _GtkImageClass {
_GtkMiscClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
union N9_GtkImage5__218E {
_GtkImagePixmapData pixmap;
_GtkImageImageData image;
_GtkImagePixbufData pixbuf;
_GtkImageStockData stock;
_GtkImageIconSetData icon_set;
_GtkImageAnimationData anim;
_GtkImageIconNameData name;
}
struct _GtkImage {
_GtkMisc misc;
gint storage_type;
N9_GtkImage5__218E data;
_GdkDrawable * mask;
gint icon_size;
}
struct _GtkBuildableIface {
_GTypeInterface g_iface;
_BCD_func__17103 set_name;
_BCD_func__17104 get_name;
_BCD_func__17105 add_child;
_BCD_func__17106 set_buildable_property;
_BCD_func__17107 construct_child;
_BCD_func__17108 custom_tag_start;
_BCD_func__17109 custom_tag_end;
_BCD_func__17110 custom_finished;
_BCD_func__17111 parser_finished;
_BCD_func__17107 get_internal_child;
}
struct _GtkBuilderClass {
_GObjectClass parent_class;
_BCD_func__17113 get_type_from_name;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
_BCD_func__12122 _gtk_reserved5;
_BCD_func__12122 _gtk_reserved6;
_BCD_func__12122 _gtk_reserved7;
_BCD_func__12122 _gtk_reserved8;
}
struct _GtkBuilder {
_GObject parent_instance;
void * priv;
}
union N14_GtkBindingArg5__215E {
glong long_data;
double double_data;
char * string_data;
}
struct _GtkBindingArg {
GType arg_type;
N14_GtkBindingArg5__215E d;
}
struct _GtkBindingSignal {
_GtkBindingSignal * next;
char * signal_name;
guint n_args;
_GtkBindingArg * args;
}
struct _GtkBindingEntry {
guint keyval;
gint modifiers;
_GtkBindingSet * binding_set;
guint bitfield0;
// guint destroyed // bits 0 .. 1
// guint in_emission // bits 1 .. 2
// guint marks_unbound // bits 2 .. 3
_GtkBindingEntry * set_next;
_GtkBindingEntry * hash_next;
_GtkBindingSignal * signals;
}
struct _GtkBindingSet {
char * set_name;
gint priority;
_GSList * widget_path_pspecs;
_GSList * widget_class_pspecs;
_GSList * class_branch_pspecs;
_GtkBindingEntry * entries;
_GtkBindingEntry * current;
guint bitfield0;
// guint parsed // bits 0 .. 1
}
struct _GtkButtonBoxClass {
_GtkBoxClass parent_class;
}
struct _GtkButtonBox {
_GtkBox box;
gint child_min_width;
gint child_min_height;
gint child_ipad_x;
gint child_ipad_y;
gint layout_style;
}
struct _GtkBoxChild {
_GtkWidget * widget;
ushort padding;
ubyte bitfield0;
// guint expand // bits 0 .. 1
// guint fill // bits 1 .. 2
// guint pack // bits 2 .. 3
// guint is_secondary // bits 3 .. 4
}
struct _GtkBoxClass {
_GtkContainerClass parent_class;
}
struct _GtkBox {
_GtkContainer container;
_GList * children;
short spacing;
ubyte bitfield0;
// guint homogeneous // bits 0 .. 1
}
struct _GtkAssistantClass {
_GtkWindowClass parent_class;
_BCD_func__17126 prepare;
_BCD_func__17127 apply;
_BCD_func__17127 close;
_BCD_func__17127 cancel;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
_BCD_func__12122 _gtk_reserved5;
}
struct _GtkAssistant {
_GtkWindow parent;
_GtkWidget * cancel;
_GtkWidget * forward;
_GtkWidget * back;
_GtkWidget * apply;
_GtkWidget * close;
_GtkWidget * last;
void * priv;
}
struct _GtkAspectFrameClass {
_GtkFrameClass parent_class;
}
struct _GtkAspectFrame {
_GtkFrame frame;
float xalign;
float yalign;
float ratio;
gint obey_child;
_GdkRectangle center_allocation;
}
struct _GtkFrameClass {
_GtkBinClass parent_class;
_BCD_func__17132 compute_child_allocation;
}
struct _GtkFrame {
_GtkBin bin;
_GtkWidget * label_widget;
short shadow_type;
float label_xalign;
float label_yalign;
_GdkRectangle child_allocation;
}
struct _GtkArrowClass {
_GtkMiscClass parent_class;
}
struct _GtkArrow {
_GtkMisc misc;
short arrow_type;
short shadow_type;
}
struct _GtkAlignmentClass {
_GtkBinClass parent_class;
}
struct _GtkAlignment {
_GtkBin bin;
float xalign;
float yalign;
float xscale;
float yscale;
}
struct _GtkRadioActionEntry {
char * name;
char * stock_id;
char * label;
char * accelerator;
char * tooltip;
gint value;
}
struct _GtkToggleActionEntry {
char * name;
char * stock_id;
char * label;
char * accelerator;
char * tooltip;
_BCD_func__12122 callback;
gint is_active;
}
struct _GtkActionEntry {
char * name;
char * stock_id;
char * label;
char * accelerator;
char * tooltip;
_BCD_func__12122 callback;
}
struct _GtkActionGroupClass {
_GObjectClass parent_class;
_BCD_func__17142 get_action;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkActionGroup {
_GObject parent;
void * private_data;
}
struct GtkMenuEntry {
char * path;
char * accelerator;
_BCD_func__12090 callback;
void * callback_data;
_GtkWidget * widget;
}
struct _GtkItemFactoryItem {
char * path;
_GSList * widgets;
}
struct _GtkItemFactoryEntry {
char * path;
char * accelerator;
_BCD_func__12122 callback;
guint callback_action;
char * item_type;
void * extra_data;
}
struct _GtkItemFactoryClass {
_GtkObjectClass object_class;
void * item_ht;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkItemFactory {
_GtkObject object;
char * path;
_GtkAccelGroup * accel_group;
_GtkWidget * widget;
_GSList * items;
_BCD_func__12124 translate_func;
void * translate_data;
_BCD_func__13158 translate_notify;
}
struct _GtkActionClass {
_GObjectClass parent_class;
_BCD_func__17150 activate;
GType menu_item_type;
GType toolbar_item_type;
_BCD_func__17151 create_menu_item;
_BCD_func__17151 create_tool_item;
_BCD_func__17152 connect_proxy;
_BCD_func__17152 disconnect_proxy;
_BCD_func__17151 create_menu;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkAction {
_GObject object;
void * private_data;
}
struct _GtkAccessibleClass {
_AtkObjectClass parent_class;
_BCD_func__17155 connect_widget_destroyed;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkAccessible {
_AtkObject parent;
_GtkWidget * widget;
}
struct _GtkAccelLabelClass {
_GtkLabelClass parent_class;
char * signal_quote1;
char * signal_quote2;
char * mod_name_shift;
char * mod_name_control;
char * mod_name_alt;
char * mod_separator;
char * accel_seperator;
guint bitfield0;
// guint latin1_to_char // bits 0 .. 1
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkAccelLabel {
_GtkLabel label;
guint gtk_reserved;
guint accel_padding;
_GtkWidget * accel_widget;
_GClosure * accel_closure;
_GtkAccelGroup * accel_group;
char * accel_string;
ushort accel_string_width;
}
struct _GtkLabelClass {
_GtkMiscClass parent_class;
_BCD_func__17291 move_cursor;
_BCD_func__17292 copy_clipboard;
_BCD_func__17293 populate_popup;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkLabel {
_GtkMisc misc;
char * label;
guint bitfield0;
// guint jtype // bits 0 .. 2
// guint wrap // bits 2 .. 3
// guint use_underline // bits 3 .. 4
// guint use_markup // bits 4 .. 5
// guint ellipsize // bits 5 .. 8
// guint single_line_mode // bits 8 .. 9
// guint have_transform // bits 9 .. 10
// guint in_click // bits 10 .. 11
// guint wrap_mode // bits 11 .. 14
// guint pattern_set // bits 14 .. 15
guint mnemonic_keyval;
char * text;
void * attrs;
void * effective_attrs;
void * layout;
_GtkWidget * mnemonic_widget;
_GtkWindow * mnemonic_window;
void * select_info;
}
struct _GtkMenuClass {
_GtkMenuShellClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkMenu {
_GtkMenuShell menu_shell;
_GtkWidget * parent_menu_item;
_GtkWidget * old_active_menu_item;
_GtkAccelGroup * accel_group;
char * accel_path;
_BCD_func__12553 position_func;
void * position_func_data;
guint toggle_size;
_GtkWidget * toplevel;
_GtkWidget * tearoff_window;
_GtkWidget * tearoff_hbox;
_GtkWidget * tearoff_scrollbar;
_GtkAdjustment * tearoff_adjustment;
_GdkDrawable * view_window;
_GdkDrawable * bin_window;
gint scroll_offset;
gint saved_scroll_offset;
gint scroll_step;
guint timeout_id;
void * navigation_region;
guint navigation_timeout;
guint bitfield0;
// guint needs_destruction_ref_count // bits 0 .. 1
// guint torn_off // bits 1 .. 2
// guint tearoff_active // bits 2 .. 3
// guint scroll_fast // bits 3 .. 4
// guint upper_arrow_visible // bits 4 .. 5
// guint lower_arrow_visible // bits 5 .. 6
// guint upper_arrow_prelight // bits 6 .. 7
// guint lower_arrow_prelight // bits 7 .. 8
}
struct _GtkMenuShellClass {
_GtkContainerClass parent_class;
guint bitfield0;
// guint submenu_placement // bits 0 .. 1
_BCD_func__17298 deactivate;
_BCD_func__17298 selection_done;
_BCD_func__17299 move_current;
_BCD_func__17300 activate_current;
_BCD_func__17298 cancel;
_BCD_func__17301 select_item;
_BCD_func__17302 insert;
_BCD_func__17303 get_popup_delay;
_BCD_func__17304 move_selected;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
}
struct _GtkMenuShell {
_GtkContainer container;
_GList * children;
_GtkWidget * active_menu_item;
_GtkWidget * parent_menu_shell;
guint button;
guint32 activate_time;
guint bitfield0;
// guint active // bits 0 .. 1
// guint have_grab // bits 1 .. 2
// guint have_xgrab // bits 2 .. 3
// guint ignore_leave // bits 3 .. 4
// guint menu_flag // bits 4 .. 5
// guint ignore_enter // bits 5 .. 6
}
struct _GtkMiscClass {
_GtkWidgetClass parent_class;
}
struct _GtkMisc {
_GtkWidget widget;
float xalign;
float yalign;
ushort xpad;
ushort ypad;
}
struct _GtkAboutDialogClass {
_GtkDialogClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkAboutDialog {
_GtkDialog parent_instance;
void * private_data;
}
struct _GtkDialogClass {
_GtkWindowClass parent_class;
_BCD_func__17311 response;
_BCD_func__17312 close;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkDialog {
_GtkWindow window;
_GtkWidget * vbox;
_GtkWidget * action_area;
_GtkWidget * separator;
}
struct _GtkWindowGroupClass {
_GObjectClass parent_class;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkWindowGroup {
_GObject parent_instance;
_GSList * grabs;
}
struct _GtkWindowClass {
_GtkBinClass parent_class;
_BCD_func__17317 set_focus;
_BCD_func__17318 frame_event;
_BCD_func__17319 activate_focus;
_BCD_func__17319 activate_default;
_BCD_func__17320 move_focus;
_BCD_func__17319 keys_changed;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkBinClass {
_GtkContainerClass parent_class;
}
struct _GtkBin {
_GtkContainer container;
_GtkWidget * child;
}
struct _GtkContainerClass {
_GtkWidgetClass parent_class;
_BCD_func__17324 add;
_BCD_func__17324 remove;
_BCD_func__17325 check_resize;
_BCD_func__17326 forall;
_BCD_func__17324 set_focus_child;
_BCD_func__17327 child_type;
_BCD_func__17328 composite_name;
_BCD_func__17329 set_child_property;
_BCD_func__17330 get_child_property;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkContainer {
_GtkWidget widget;
_GtkWidget * focus_child;
guint bitfield0;
// guint border_width // bits 0 .. 16
// guint need_resize // bits 16 .. 17
// guint resize_mode // bits 17 .. 19
// guint reallocate_redraws // bits 19 .. 20
// guint has_focus_chain // bits 20 .. 21
}
struct _GtkWindow {
_GtkBin bin;
char * title;
char * wmclass_name;
char * wmclass_class;
char * wm_role;
_GtkWidget * focus_widget;
_GtkWidget * default_widget;
_GtkWindow * transient_parent;
void * geometry_info;
_GdkDrawable * frame;
_GtkWindowGroup * group;
ushort configure_request_count;
guint bitfield0;
// guint allow_shrink // bits 0 .. 1
// guint allow_grow // bits 1 .. 2
// guint configure_notify_received // bits 2 .. 3
// guint need_default_position // bits 3 .. 4
// guint need_default_size // bits 4 .. 5
// guint position // bits 5 .. 8
// guint type // bits 8 .. 12
// guint has_user_ref_count // bits 12 .. 13
// guint has_focus // bits 13 .. 14
// guint modal // bits 14 .. 15
// guint destroy_with_parent // bits 15 .. 16
// guint has_frame // bits 16 .. 17
// guint iconify_initially // bits 17 .. 18
// guint stick_initially // bits 18 .. 19
// guint maximize_initially // bits 19 .. 20
// guint decorated // bits 20 .. 21
// guint type_hint // bits 21 .. 24
// guint gravity // bits 24 .. 29
// guint is_active // bits 29 .. 30
// guint has_toplevel_focus // bits 30 .. 31
guint frame_left;
guint frame_top;
guint frame_right;
guint frame_bottom;
guint keys_changed_handler;
gint mnemonic_modifier;
_GdkScreen * screen;
}
struct _GtkWidgetShapeInfo {
short offset_x;
short offset_y;
_GdkDrawable * shape_mask;
}
struct _GtkWidgetAuxInfo {
gint x;
gint y;
gint width;
gint height;
guint bitfield0;
// guint x_set // bits 0 .. 1
// guint y_set // bits 1 .. 2
}
struct _GtkWidgetClass {
_GtkObjectClass parent_class;
guint activate_signal;
guint set_scroll_adjustments_signal;
_BCD_func__17336 dispatch_child_properties_changed;
_BCD_func__17337 show;
_BCD_func__17337 show_all;
_BCD_func__17337 hide;
_BCD_func__17337 hide_all;
_BCD_func__17337 map;
_BCD_func__17337 unmap;
_BCD_func__17337 realize;
_BCD_func__17337 unrealize;
_BCD_func__17338 size_request;
_BCD_func__17339 size_allocate;
_BCD_func__17340 state_changed;
_BCD_func__17341 parent_set;
_BCD_func__17341 hierarchy_changed;
_BCD_func__17342 style_set;
_BCD_func__17343 direction_changed;
_BCD_func__17344 grab_notify;
_BCD_func__17345 child_notify;
_BCD_func__17346 mnemonic_activate;
_BCD_func__17337 grab_focus;
_BCD_func__17347 focus;
_BCD_func__17348 event;
_BCD_func__17349 button_press_event;
_BCD_func__17349 button_release_event;
_BCD_func__17350 scroll_event;
_BCD_func__17351 motion_notify_event;
_BCD_func__17352 delete_event;
_BCD_func__17352 destroy_event;
_BCD_func__17353 expose_event;
_BCD_func__17354 key_press_event;
_BCD_func__17354 key_release_event;
_BCD_func__17355 enter_notify_event;
_BCD_func__17355 leave_notify_event;
_BCD_func__17356 configure_event;
_BCD_func__17357 focus_in_event;
_BCD_func__17357 focus_out_event;
_BCD_func__17352 map_event;
_BCD_func__17352 unmap_event;
_BCD_func__17358 property_notify_event;
_BCD_func__17359 selection_clear_event;
_BCD_func__17359 selection_request_event;
_BCD_func__17359 selection_notify_event;
_BCD_func__17360 proximity_in_event;
_BCD_func__17360 proximity_out_event;
_BCD_func__17361 visibility_notify_event;
_BCD_func__17362 client_event;
_BCD_func__17352 no_expose_event;
_BCD_func__17363 window_state_event;
_BCD_func__17364 selection_get;
_BCD_func__17365 selection_received;
_BCD_func__17366 drag_begin;
_BCD_func__17366 drag_end;
_BCD_func__17367 drag_data_get;
_BCD_func__17366 drag_data_delete;
_BCD_func__17368 drag_leave;
_BCD_func__17369 drag_motion;
_BCD_func__17369 drag_drop;
_BCD_func__17370 drag_data_received;
_BCD_func__17371 popup_menu;
_BCD_func__17372 show_help;
_BCD_func__17373 get_accessible;
_BCD_func__17374 screen_changed;
_BCD_func__17375 can_activate_accel;
_BCD_func__17376 grab_broken_event;
_BCD_func__17337 composited_changed;
_BCD_func__17377 query_tooltip;
_BCD_func__12122 _gtk_reserved5;
_BCD_func__12122 _gtk_reserved6;
_BCD_func__12122 _gtk_reserved7;
}
struct _GtkSelectionData {
void * selection;
void * target;
void * type;
gint format;
char * data;
gint length;
_GdkDisplay * display;
}
struct _GtkRequisition {
gint width;
gint height;
}
struct _GtkSettingsValue {
char * origin;
_GValue value;
}
struct _GtkSettingsClass {
_GObjectClass parent_class;
}
struct _GtkRcStyleClass {
_GObjectClass parent_class;
_BCD_func__17411 create_rc_style;
_BCD_func__17412 parse;
_BCD_func__17413 merge;
_BCD_func__17414 create_style;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkIconFactory {
_GObject parent_instance;
void * icons;
}
struct _GtkWidget {
_GtkObject object;
ushort private_flags;
char state;
char saved_state;
char * name;
_GtkStyle * style;
_GtkRequisition requisition;
_GdkRectangle allocation;
_GdkDrawable * window;
_GtkWidget * parent;
}
struct _GtkSettings {
_GObject parent_instance;
void * queued_settings;
void * property_values;
void * rc_context;
_GdkScreen * screen;
}
struct _GtkRcProperty {
GQuark type_name;
GQuark property_name;
char * origin;
_GValue value;
}
struct _GtkRcStyle {
_GObject parent_instance;
char * name;
char * [5] bg_pixmap_name;
void * font_desc;
gint [5] color_flags;
_GdkColor [5] fg;
_GdkColor [5] bg;
_GdkColor [5] text;
_GdkColor [5] base;
gint xthickness;
gint ythickness;
_GArray * rc_properties;
_GSList * rc_style_lists;
_GSList * icon_factories;
guint bitfield0;
// guint engine_specified // bits 0 .. 1
}
struct _GtkStyleClass {
_GObjectClass parent_class;
_BCD_func__17421 realize;
_BCD_func__17421 unrealize;
_BCD_func__17422 copy;
_BCD_func__17423 clone;
_BCD_func__17424 init_from_rc;
_BCD_func__17425 set_background;
_BCD_func__17426 render_icon;
_BCD_func__17427 draw_hline;
_BCD_func__17427 draw_vline;
_BCD_func__17428 draw_shadow;
_BCD_func__17429 draw_polygon;
_BCD_func__17430 draw_arrow;
_BCD_func__17428 draw_diamond;
_BCD_func__17431 draw_string;
_BCD_func__17428 draw_box;
_BCD_func__17428 draw_flat_box;
_BCD_func__17428 draw_check;
_BCD_func__17428 draw_option;
_BCD_func__17428 draw_tab;
_BCD_func__17432 draw_shadow_gap;
_BCD_func__17432 draw_box_gap;
_BCD_func__17433 draw_extension;
_BCD_func__17434 draw_focus;
_BCD_func__17435 draw_slider;
_BCD_func__17435 draw_handle;
_BCD_func__17436 draw_expander;
_BCD_func__17437 draw_layout;
_BCD_func__17438 draw_resize_grip;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
_BCD_func__12122 _gtk_reserved5;
_BCD_func__12122 _gtk_reserved6;
_BCD_func__12122 _gtk_reserved7;
_BCD_func__12122 _gtk_reserved8;
_BCD_func__12122 _gtk_reserved9;
_BCD_func__12122 _gtk_reserved10;
_BCD_func__12122 _gtk_reserved11;
_BCD_func__12122 _gtk_reserved12;
}
struct _GtkStyle {
_GObject parent_instance;
_GdkColor [5] fg;
_GdkColor [5] bg;
_GdkColor [5] light;
_GdkColor [5] dark;
_GdkColor [5] mid;
_GdkColor [5] text;
_GdkColor [5] base;
_GdkColor [5] text_aa;
_GdkColor black;
_GdkColor white;
void * font_desc;
gint xthickness;
gint ythickness;
_GdkGC * [5] fg_gc;
_GdkGC * [5] bg_gc;
_GdkGC * [5] light_gc;
_GdkGC * [5] dark_gc;
_GdkGC * [5] mid_gc;
_GdkGC * [5] text_gc;
_GdkGC * [5] base_gc;
_GdkGC * [5] text_aa_gc;
_GdkGC * black_gc;
_GdkGC * white_gc;
_GdkDrawable * [5] bg_pixmap;
gint attach_count;
gint depth;
_GdkColormap * colormap;
_GdkFont * private_font;
void * private_font_desc;
_GtkRcStyle * rc_style;
_GSList * styles;
_GArray * property_cache;
_GSList * icon_factories;
}
struct _GtkBorder {
gint left;
gint right;
gint top;
gint bottom;
}
struct _GtkAdjustmentClass {
_GtkObjectClass parent_class;
_BCD_func__17442 changed;
_BCD_func__17442 value_changed;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkAdjustment {
_GtkObject parent_instance;
double lower;
double upper;
double value;
double step_increment;
double page_increment;
double page_size;
}
struct _GtkObjectClass {
_GObjectClass parent_class;
_BCD_func__17445 set_arg;
_BCD_func__17445 get_arg;
_BCD_func__17446 destroy;
}
struct _GtkTypeInfo {
char * type_name;
guint object_size;
guint class_size;
_BCD_func__13158 class_init_func;
_BCD_func__13169 object_init_func;
void * reserved_1;
void * reserved_2;
_BCD_func__13158 base_class_init_func;
}
struct _GtkObject {
_GObject parent_instance;
guint flags;
}
struct N7_GtkArg5__1925__193E {
_BCD_func__12122 f;
void * d;
}
union N7_GtkArg5__192E {
char char_data;
char uchar_data;
gint bool_data;
gint int_data;
guint uint_data;
gint long_data;
guint ulong_data;
float float_data;
double double_data;
char * string_data;
_GtkObject * object_data;
void * pointer_data;
N7_GtkArg5__1925__193E signal_data;
}
struct _GtkArg {
guint type;
char * name;
N7_GtkArg5__192E d;
}
struct _GtkAccelGroupEntry {
_GtkAccelKey key;
_GClosure * closure;
GQuark accel_path_quark;
}
struct _GtkAccelKey {
guint accel_key;
gint accel_mods;
guint bitfield0;
// guint accel_flags // bits 0 .. 16
}
struct _GtkAccelGroupClass {
_GObjectClass parent_class;
_BCD_func__17462 accel_changed;
_BCD_func__12122 _gtk_reserved1;
_BCD_func__12122 _gtk_reserved2;
_BCD_func__12122 _gtk_reserved3;
_BCD_func__12122 _gtk_reserved4;
}
struct _GtkAccelGroup {
_GObject parent;
guint lock_count;
gint modifier_mask;
_GSList * acceleratables;
guint n_accels;
_GtkAccelGroupEntry * priv_accels;
}
version(DYNLINK){
mixin(gshared!(
"alias extern (C) _GtkWidget * function()TGTKgtk_vseparator_new; extern(D) TGTKgtk_vseparator_new gtk_vseparator_new;
alias extern (C) GType function()TGTKgtk_vseparator_get_type; extern(D) TGTKgtk_vseparator_get_type gtk_vseparator_get_type;
alias extern (C) _GtkWidget * function(double, double, double)TGTKgtk_vscale_new_with_range; extern(D) TGTKgtk_vscale_new_with_range gtk_vscale_new_with_range;
alias extern (C) _GtkWidget * function(aGtkAdjustment *)TGTKgtk_vscale_new; extern(D) TGTKgtk_vscale_new gtk_vscale_new;
alias extern (C) GType function()TGTKgtk_vscale_get_type; extern(D) TGTKgtk_vscale_get_type gtk_vscale_get_type;
alias extern (C) _GtkWidget * function()TGTKgtk_vruler_new; extern(D) TGTKgtk_vruler_new gtk_vruler_new;
alias extern (C) guint function()TGTKgtk_vruler_get_type; extern(D) TGTKgtk_vruler_get_type gtk_vruler_get_type;
alias extern (C) _GtkWidget * function()TGTKgtk_vpaned_new; extern(D) TGTKgtk_vpaned_new gtk_vpaned_new;
alias extern (C) GType function()TGTKgtk_vpaned_get_type; extern(D) TGTKgtk_vpaned_get_type gtk_vpaned_get_type;
alias extern (C) _GtkWidget * function()TGTKgtk_volume_button_new; extern(D) TGTKgtk_volume_button_new gtk_volume_button_new;
alias extern (C) GType function()TGTKgtk_volume_button_get_type; extern(D) TGTKgtk_volume_button_get_type gtk_volume_button_get_type;
alias extern (C) void function(gint)TGTKgtk_vbutton_box_set_layout_default; extern(D) TGTKgtk_vbutton_box_set_layout_default gtk_vbutton_box_set_layout_default;
alias extern (C) gint function()TGTKgtk_vbutton_box_get_layout_default; extern(D) TGTKgtk_vbutton_box_get_layout_default gtk_vbutton_box_get_layout_default;
alias extern (C) void function(gint)TGTKgtk_vbutton_box_set_spacing_default; extern(D) TGTKgtk_vbutton_box_set_spacing_default gtk_vbutton_box_set_spacing_default;
alias extern (C) gint function()TGTKgtk_vbutton_box_get_spacing_default; extern(D) TGTKgtk_vbutton_box_get_spacing_default gtk_vbutton_box_get_spacing_default;
alias extern (C) _GtkWidget * function()TGTKgtk_vbutton_box_new; extern(D) TGTKgtk_vbutton_box_new gtk_vbutton_box_new;
alias extern (C) GType function()TGTKgtk_vbutton_box_get_type; extern(D) TGTKgtk_vbutton_box_get_type gtk_vbutton_box_get_type;
alias extern (C) guint function(aGtkUIManager *)TGTKgtk_ui_manager_new_merge_id; extern(D) TGTKgtk_ui_manager_new_merge_id gtk_ui_manager_new_merge_id;
alias extern (C) void function(aGtkUIManager *)TGTKgtk_ui_manager_ensure_update; extern(D) TGTKgtk_ui_manager_ensure_update gtk_ui_manager_ensure_update;
alias extern (C) char * function(aGtkUIManager *)TGTKgtk_ui_manager_get_ui; extern(D) TGTKgtk_ui_manager_get_ui gtk_ui_manager_get_ui;
alias extern (C) void function(aGtkUIManager *, guint)TGTKgtk_ui_manager_remove_ui; extern(D) TGTKgtk_ui_manager_remove_ui gtk_ui_manager_remove_ui;
alias extern (C) void function(aGtkUIManager *, guint, char *, char *, char *, gint, gint)TGTKgtk_ui_manager_add_ui; extern(D) TGTKgtk_ui_manager_add_ui gtk_ui_manager_add_ui;
alias extern (C) guint function(aGtkUIManager *, char *, _GError * *)TGTKgtk_ui_manager_add_ui_from_file; extern(D) TGTKgtk_ui_manager_add_ui_from_file gtk_ui_manager_add_ui_from_file;
alias extern (C) guint function(aGtkUIManager *, char *, gssize, _GError * *)TGTKgtk_ui_manager_add_ui_from_string; extern(D) TGTKgtk_ui_manager_add_ui_from_string gtk_ui_manager_add_ui_from_string;
alias extern (C) _GtkAction * function(aGtkUIManager *, char *)TGTKgtk_ui_manager_get_action; extern(D) TGTKgtk_ui_manager_get_action gtk_ui_manager_get_action;
alias extern (C) _GSList * function(aGtkUIManager *, gint)TGTKgtk_ui_manager_get_toplevels; extern(D) TGTKgtk_ui_manager_get_toplevels gtk_ui_manager_get_toplevels;
alias extern (C) _GtkWidget * function(aGtkUIManager *, char *)TGTKgtk_ui_manager_get_widget; extern(D) TGTKgtk_ui_manager_get_widget gtk_ui_manager_get_widget;
alias extern (C) _GtkAccelGroup * function(aGtkUIManager *)TGTKgtk_ui_manager_get_accel_group; extern(D) TGTKgtk_ui_manager_get_accel_group gtk_ui_manager_get_accel_group;
alias extern (C) _GList * function(aGtkUIManager *)TGTKgtk_ui_manager_get_action_groups; extern(D) TGTKgtk_ui_manager_get_action_groups gtk_ui_manager_get_action_groups;
alias extern (C) void function(aGtkUIManager *, aGtkActionGroup *)TGTKgtk_ui_manager_remove_action_group; extern(D) TGTKgtk_ui_manager_remove_action_group gtk_ui_manager_remove_action_group;
alias extern (C) void function(aGtkUIManager *, aGtkActionGroup *, gint)TGTKgtk_ui_manager_insert_action_group; extern(D) TGTKgtk_ui_manager_insert_action_group gtk_ui_manager_insert_action_group;
alias extern (C) gint function(aGtkUIManager *)TGTKgtk_ui_manager_get_add_tearoffs; extern(D) TGTKgtk_ui_manager_get_add_tearoffs gtk_ui_manager_get_add_tearoffs;
alias extern (C) void function(aGtkUIManager *, gint)TGTKgtk_ui_manager_set_add_tearoffs; extern(D) TGTKgtk_ui_manager_set_add_tearoffs gtk_ui_manager_set_add_tearoffs;
alias extern (C) _GtkUIManager * function()TGTKgtk_ui_manager_new; extern(D) TGTKgtk_ui_manager_new gtk_ui_manager_new;
alias extern (C) GType function()TGTKgtk_ui_manager_get_type; extern(D) TGTKgtk_ui_manager_get_type gtk_ui_manager_get_type;
alias extern (C) void function(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *)TGTKgtk_tree_store_move_after; extern(D) TGTKgtk_tree_store_move_after gtk_tree_store_move_after;
alias extern (C) void function(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *)TGTKgtk_tree_store_move_before; extern(D) TGTKgtk_tree_store_move_before gtk_tree_store_move_before;
alias extern (C) void function(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *)TGTKgtk_tree_store_swap; extern(D) TGTKgtk_tree_store_swap gtk_tree_store_swap;
alias extern (C) void function(aGtkTreeStore *, aGtkTreeIter *, gint *)TGTKgtk_tree_store_reorder; extern(D) TGTKgtk_tree_store_reorder gtk_tree_store_reorder;
alias extern (C) gint function(aGtkTreeStore *, aGtkTreeIter *)TGTKgtk_tree_store_iter_is_valid; extern(D) TGTKgtk_tree_store_iter_is_valid gtk_tree_store_iter_is_valid;
alias extern (C) void function(aGtkTreeStore *)TGTKgtk_tree_store_clear; extern(D) TGTKgtk_tree_store_clear gtk_tree_store_clear;
alias extern (C) gint function(aGtkTreeStore *, aGtkTreeIter *)TGTKgtk_tree_store_iter_depth; extern(D) TGTKgtk_tree_store_iter_depth gtk_tree_store_iter_depth;
alias extern (C) gint function(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *)TGTKgtk_tree_store_is_ancestor; extern(D) TGTKgtk_tree_store_is_ancestor gtk_tree_store_is_ancestor;
alias extern (C) void function(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *)TGTKgtk_tree_store_append; extern(D) TGTKgtk_tree_store_append gtk_tree_store_append;
alias extern (C) void function(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *)TGTKgtk_tree_store_prepend; extern(D) TGTKgtk_tree_store_prepend gtk_tree_store_prepend;
alias extern (C) void function(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *, gint, gint *, _GValue *, gint)TGTKgtk_tree_store_insert_with_valuesv; extern(D) TGTKgtk_tree_store_insert_with_valuesv gtk_tree_store_insert_with_valuesv;
alias extern (C) void function(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *, gint, ...)TGTKgtk_tree_store_insert_with_values; extern(D) TGTKgtk_tree_store_insert_with_values gtk_tree_store_insert_with_values;
alias extern (C) void function(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *, aGtkTreeIter *)TGTKgtk_tree_store_insert_after; extern(D) TGTKgtk_tree_store_insert_after gtk_tree_store_insert_after;
alias extern (C) void function(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *, aGtkTreeIter *)TGTKgtk_tree_store_insert_before; extern(D) TGTKgtk_tree_store_insert_before gtk_tree_store_insert_before;
alias extern (C) void function(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *, gint)TGTKgtk_tree_store_insert; extern(D) TGTKgtk_tree_store_insert gtk_tree_store_insert;
alias extern (C) gint function(aGtkTreeStore *, aGtkTreeIter *)TGTKgtk_tree_store_remove; extern(D) TGTKgtk_tree_store_remove gtk_tree_store_remove;
alias extern (C) void function(aGtkTreeStore *, aGtkTreeIter *, char *)TGTKgtk_tree_store_set_valist; extern(D) TGTKgtk_tree_store_set_valist gtk_tree_store_set_valist;
alias extern (C) void function(aGtkTreeStore *, aGtkTreeIter *, gint *, _GValue *, gint)TGTKgtk_tree_store_set_valuesv; extern(D) TGTKgtk_tree_store_set_valuesv gtk_tree_store_set_valuesv;
alias extern (C) void function(aGtkTreeStore *, aGtkTreeIter *, ...)TGTKgtk_tree_store_set; extern(D) TGTKgtk_tree_store_set gtk_tree_store_set;
alias extern (C) void function(aGtkTreeStore *, aGtkTreeIter *, gint, _GValue *)TGTKgtk_tree_store_set_value; extern(D) TGTKgtk_tree_store_set_value gtk_tree_store_set_value;
alias extern (C) void function(aGtkTreeStore *, gint, GType *)TGTKgtk_tree_store_set_column_types; extern(D) TGTKgtk_tree_store_set_column_types gtk_tree_store_set_column_types;
alias extern (C) _GtkTreeStore * function(gint, GType *)TGTKgtk_tree_store_newv; extern(D) TGTKgtk_tree_store_newv gtk_tree_store_newv;
alias extern (C) _GtkTreeStore * function(gint, ...)TGTKgtk_tree_store_new; extern(D) TGTKgtk_tree_store_new gtk_tree_store_new;
alias extern (C) GType function()TGTKgtk_tree_store_get_type; extern(D) TGTKgtk_tree_store_get_type gtk_tree_store_get_type;
alias extern (C) void function(aGtkTreeSelection *, void *, void *)TGTKgtk_tree_selection_unselect_range; extern(D) TGTKgtk_tree_selection_unselect_range gtk_tree_selection_unselect_range;
alias extern (C) void function(aGtkTreeSelection *, void *, void *)TGTKgtk_tree_selection_select_range; extern(D) TGTKgtk_tree_selection_select_range gtk_tree_selection_select_range;
alias extern (C) void function(aGtkTreeSelection *)TGTKgtk_tree_selection_unselect_all; extern(D) TGTKgtk_tree_selection_unselect_all gtk_tree_selection_unselect_all;
alias extern (C) void function(aGtkTreeSelection *)TGTKgtk_tree_selection_select_all; extern(D) TGTKgtk_tree_selection_select_all gtk_tree_selection_select_all;
alias extern (C) gint function(aGtkTreeSelection *, aGtkTreeIter *)TGTKgtk_tree_selection_iter_is_selected; extern(D) TGTKgtk_tree_selection_iter_is_selected gtk_tree_selection_iter_is_selected;
alias extern (C) gint function(aGtkTreeSelection *, void *)TGTKgtk_tree_selection_path_is_selected; extern(D) TGTKgtk_tree_selection_path_is_selected gtk_tree_selection_path_is_selected;
alias extern (C) void function(aGtkTreeSelection *, aGtkTreeIter *)TGTKgtk_tree_selection_unselect_iter; extern(D) TGTKgtk_tree_selection_unselect_iter gtk_tree_selection_unselect_iter;
alias extern (C) void function(aGtkTreeSelection *, aGtkTreeIter *)TGTKgtk_tree_selection_select_iter; extern(D) TGTKgtk_tree_selection_select_iter gtk_tree_selection_select_iter;
alias extern (C) void function(aGtkTreeSelection *, void *)TGTKgtk_tree_selection_unselect_path; extern(D) TGTKgtk_tree_selection_unselect_path gtk_tree_selection_unselect_path;
alias extern (C) void function(aGtkTreeSelection *, void *)TGTKgtk_tree_selection_select_path; extern(D) TGTKgtk_tree_selection_select_path gtk_tree_selection_select_path;
alias extern (C) void function(aGtkTreeSelection *, _BCD_func__9093, void *)TGTKgtk_tree_selection_selected_foreach; extern(D) TGTKgtk_tree_selection_selected_foreach gtk_tree_selection_selected_foreach;
alias extern (C) gint function(aGtkTreeSelection *)TGTKgtk_tree_selection_count_selected_rows; extern(D) TGTKgtk_tree_selection_count_selected_rows gtk_tree_selection_count_selected_rows;
alias extern (C) _GList * function(aGtkTreeSelection *, void * *)TGTKgtk_tree_selection_get_selected_rows; extern(D) TGTKgtk_tree_selection_get_selected_rows gtk_tree_selection_get_selected_rows;
alias extern (C) gint function(aGtkTreeSelection *, void * *, aGtkTreeIter *)TGTKgtk_tree_selection_get_selected; extern(D) TGTKgtk_tree_selection_get_selected gtk_tree_selection_get_selected;
alias extern (C) _GtkTreeView * function(aGtkTreeSelection *)TGTKgtk_tree_selection_get_tree_view; extern(D) TGTKgtk_tree_selection_get_tree_view gtk_tree_selection_get_tree_view;
alias extern (C) void * function(aGtkTreeSelection *)TGTKgtk_tree_selection_get_user_data; extern(D) TGTKgtk_tree_selection_get_user_data gtk_tree_selection_get_user_data;
alias extern (C) void function(aGtkTreeSelection *, _BCD_func__9094, void *, _BCD_func__13158)TGTKgtk_tree_selection_set_select_function; extern(D) TGTKgtk_tree_selection_set_select_function gtk_tree_selection_set_select_function;
alias extern (C) gint function(aGtkTreeSelection *)TGTKgtk_tree_selection_get_mode; extern(D) TGTKgtk_tree_selection_get_mode gtk_tree_selection_get_mode;
alias extern (C) void function(aGtkTreeSelection *, gint)TGTKgtk_tree_selection_set_mode; extern(D) TGTKgtk_tree_selection_set_mode gtk_tree_selection_set_mode;
alias extern (C) GType function()TGTKgtk_tree_selection_get_type; extern(D) TGTKgtk_tree_selection_get_type gtk_tree_selection_get_type;
alias extern (C) gint function(aGtkTreeModelSort *, aGtkTreeIter *)TGTKgtk_tree_model_sort_iter_is_valid; extern(D) TGTKgtk_tree_model_sort_iter_is_valid gtk_tree_model_sort_iter_is_valid;
alias extern (C) void function(aGtkTreeModelSort *)TGTKgtk_tree_model_sort_clear_cache; extern(D) TGTKgtk_tree_model_sort_clear_cache gtk_tree_model_sort_clear_cache;
alias extern (C) void function(aGtkTreeModelSort *)TGTKgtk_tree_model_sort_reset_default_sort_func; extern(D) TGTKgtk_tree_model_sort_reset_default_sort_func gtk_tree_model_sort_reset_default_sort_func;
alias extern (C) void function(aGtkTreeModelSort *, aGtkTreeIter *, aGtkTreeIter *)TGTKgtk_tree_model_sort_convert_iter_to_child_iter; extern(D) TGTKgtk_tree_model_sort_convert_iter_to_child_iter gtk_tree_model_sort_convert_iter_to_child_iter;
alias extern (C) void * function(aGtkTreeModelSort *, void *)TGTKgtk_tree_model_sort_convert_path_to_child_path; extern(D) TGTKgtk_tree_model_sort_convert_path_to_child_path gtk_tree_model_sort_convert_path_to_child_path;
alias extern (C) void function(aGtkTreeModelSort *, aGtkTreeIter *, aGtkTreeIter *)TGTKgtk_tree_model_sort_convert_child_iter_to_iter; extern(D) TGTKgtk_tree_model_sort_convert_child_iter_to_iter gtk_tree_model_sort_convert_child_iter_to_iter;
alias extern (C) void * function(aGtkTreeModelSort *, void *)TGTKgtk_tree_model_sort_convert_child_path_to_path; extern(D) TGTKgtk_tree_model_sort_convert_child_path_to_path gtk_tree_model_sort_convert_child_path_to_path;
alias extern (C) void * function(aGtkTreeModelSort *)TGTKgtk_tree_model_sort_get_model; extern(D) TGTKgtk_tree_model_sort_get_model gtk_tree_model_sort_get_model;
alias extern (C) void * function(void *)TGTKgtk_tree_model_sort_new_with_model; extern(D) TGTKgtk_tree_model_sort_new_with_model gtk_tree_model_sort_new_with_model;
alias extern (C) GType function()TGTKgtk_tree_model_sort_get_type; extern(D) TGTKgtk_tree_model_sort_get_type gtk_tree_model_sort_get_type;
alias extern (C) gint function(aGtkSelectionData *, void * *, void * *)TGTKgtk_tree_get_row_drag_data; extern(D) TGTKgtk_tree_get_row_drag_data gtk_tree_get_row_drag_data;
alias extern (C) gint function(aGtkSelectionData *, void *, void *)TGTKgtk_tree_set_row_drag_data; extern(D) TGTKgtk_tree_set_row_drag_data gtk_tree_set_row_drag_data;
alias extern (C) gint function(void *, void *, aGtkSelectionData *)TGTKgtk_tree_drag_dest_row_drop_possible; extern(D) TGTKgtk_tree_drag_dest_row_drop_possible gtk_tree_drag_dest_row_drop_possible;
alias extern (C) gint function(void *, void *, aGtkSelectionData *)TGTKgtk_tree_drag_dest_drag_data_received; extern(D) TGTKgtk_tree_drag_dest_drag_data_received gtk_tree_drag_dest_drag_data_received;
alias extern (C) GType function()TGTKgtk_tree_drag_dest_get_type; extern(D) TGTKgtk_tree_drag_dest_get_type gtk_tree_drag_dest_get_type;
alias extern (C) gint function(void *, void *, aGtkSelectionData *)TGTKgtk_tree_drag_source_drag_data_get; extern(D) TGTKgtk_tree_drag_source_drag_data_get gtk_tree_drag_source_drag_data_get;
alias extern (C) gint function(void *, void *)TGTKgtk_tree_drag_source_drag_data_delete; extern(D) TGTKgtk_tree_drag_source_drag_data_delete gtk_tree_drag_source_drag_data_delete;
alias extern (C) gint function(void *, void *)TGTKgtk_tree_drag_source_row_draggable; extern(D) TGTKgtk_tree_drag_source_row_draggable gtk_tree_drag_source_row_draggable;
alias extern (C) GType function()TGTKgtk_tree_drag_source_get_type; extern(D) TGTKgtk_tree_drag_source_get_type gtk_tree_drag_source_get_type;
alias extern (C) void function(aGtkToolbar *, aGtkWidget *, char *, char *, gint)TGTKgtk_toolbar_insert_widget; extern(D) TGTKgtk_toolbar_insert_widget gtk_toolbar_insert_widget;
alias extern (C) void function(aGtkToolbar *, aGtkWidget *, char *, char *)TGTKgtk_toolbar_prepend_widget; extern(D) TGTKgtk_toolbar_prepend_widget gtk_toolbar_prepend_widget;
alias extern (C) void function(aGtkToolbar *, aGtkWidget *, char *, char *)TGTKgtk_toolbar_append_widget; extern(D) TGTKgtk_toolbar_append_widget gtk_toolbar_append_widget;
alias extern (C) _GtkWidget * function(aGtkToolbar *, gint, aGtkWidget *, char *, char *, char *, aGtkWidget *, _BCD_func__12122, void *, gint)TGTKgtk_toolbar_insert_element; extern(D) TGTKgtk_toolbar_insert_element gtk_toolbar_insert_element;
alias extern (C) _GtkWidget * function(aGtkToolbar *, gint, aGtkWidget *, char *, char *, char *, aGtkWidget *, _BCD_func__12122, void *)TGTKgtk_toolbar_prepend_element; extern(D) TGTKgtk_toolbar_prepend_element gtk_toolbar_prepend_element;
alias extern (C) _GtkWidget * function(aGtkToolbar *, gint, aGtkWidget *, char *, char *, char *, aGtkWidget *, _BCD_func__12122, void *)TGTKgtk_toolbar_append_element; extern(D) TGTKgtk_toolbar_append_element gtk_toolbar_append_element;
alias extern (C) void function(aGtkToolbar *, gint)TGTKgtk_toolbar_remove_space; extern(D) TGTKgtk_toolbar_remove_space gtk_toolbar_remove_space;
alias extern (C) void function(aGtkToolbar *, gint)TGTKgtk_toolbar_insert_space; extern(D) TGTKgtk_toolbar_insert_space gtk_toolbar_insert_space;
alias extern (C) void function(aGtkToolbar *)TGTKgtk_toolbar_prepend_space; extern(D) TGTKgtk_toolbar_prepend_space gtk_toolbar_prepend_space;
alias extern (C) void function(aGtkToolbar *)TGTKgtk_toolbar_append_space; extern(D) TGTKgtk_toolbar_append_space gtk_toolbar_append_space;
alias extern (C) _GtkWidget * function(aGtkToolbar *, char *, char *, char *, _BCD_func__12122, void *, gint)TGTKgtk_toolbar_insert_stock; extern(D) TGTKgtk_toolbar_insert_stock gtk_toolbar_insert_stock;
alias extern (C) _GtkWidget * function(aGtkToolbar *, char *, char *, char *, aGtkWidget *, _BCD_func__12122, void *, gint)TGTKgtk_toolbar_insert_item; extern(D) TGTKgtk_toolbar_insert_item gtk_toolbar_insert_item;
alias extern (C) _GtkWidget * function(aGtkToolbar *, char *, char *, char *, aGtkWidget *, _BCD_func__12122, void *)TGTKgtk_toolbar_prepend_item; extern(D) TGTKgtk_toolbar_prepend_item gtk_toolbar_prepend_item;
alias extern (C) _GtkWidget * function(aGtkToolbar *, char *, char *, char *, aGtkWidget *, _BCD_func__12122, void *)TGTKgtk_toolbar_append_item; extern(D) TGTKgtk_toolbar_append_item gtk_toolbar_append_item;
alias extern (C) void function(aGtkToolbar *)TGTKgtk_toolbar_unset_icon_size; extern(D) TGTKgtk_toolbar_unset_icon_size gtk_toolbar_unset_icon_size;
alias extern (C) void function(aGtkToolbar *, gint)TGTKgtk_toolbar_set_icon_size; extern(D) TGTKgtk_toolbar_set_icon_size gtk_toolbar_set_icon_size;
//alias extern (C) void function(aGtkToolbar *)TGTK_gtk_toolbar_rebuild_menu; extern(D) TGTK_gtk_toolbar_rebuild_menu _gtk_toolbar_rebuild_menu;
//alias extern (C) gint function()TGTK_gtk_toolbar_get_default_space_size; extern(D) TGTK_gtk_toolbar_get_default_space_size _gtk_toolbar_get_default_space_size;
//alias extern (C) void function(aGtkWidget *, aGtkToolbar *, _GdkRectangle *, _GdkRectangle *)TGTK_gtk_toolbar_paint_space_line; extern(D) TGTK_gtk_toolbar_paint_space_line _gtk_toolbar_paint_space_line;
//alias extern (C) char * function(char *)TGTK_gtk_toolbar_elide_underscores; extern(D) TGTK_gtk_toolbar_elide_underscores _gtk_toolbar_elide_underscores;
alias extern (C) void function(aGtkToolbar *, aGtkToolItem *, gint)TGTKgtk_toolbar_set_drop_highlight_item; extern(D) TGTKgtk_toolbar_set_drop_highlight_item gtk_toolbar_set_drop_highlight_item;
alias extern (C) gint function(aGtkToolbar *, gint, gint)TGTKgtk_toolbar_get_drop_index; extern(D) TGTKgtk_toolbar_get_drop_index gtk_toolbar_get_drop_index;
alias extern (C) gint function(aGtkToolbar *)TGTKgtk_toolbar_get_relief_style; extern(D) TGTKgtk_toolbar_get_relief_style gtk_toolbar_get_relief_style;
alias extern (C) gint function(aGtkToolbar *)TGTKgtk_toolbar_get_icon_size; extern(D) TGTKgtk_toolbar_get_icon_size gtk_toolbar_get_icon_size;
alias extern (C) void function(aGtkToolbar *)TGTKgtk_toolbar_unset_style; extern(D) TGTKgtk_toolbar_unset_style gtk_toolbar_unset_style;
alias extern (C) void function(aGtkToolbar *, gint)TGTKgtk_toolbar_set_style; extern(D) TGTKgtk_toolbar_set_style gtk_toolbar_set_style;
alias extern (C) gint function(aGtkToolbar *)TGTKgtk_toolbar_get_style; extern(D) TGTKgtk_toolbar_get_style gtk_toolbar_get_style;
alias extern (C) void function(aGtkToolbar *, gint)TGTKgtk_toolbar_set_tooltips; extern(D) TGTKgtk_toolbar_set_tooltips gtk_toolbar_set_tooltips;
alias extern (C) gint function(aGtkToolbar *)TGTKgtk_toolbar_get_tooltips; extern(D) TGTKgtk_toolbar_get_tooltips gtk_toolbar_get_tooltips;
alias extern (C) void function(aGtkToolbar *, gint)TGTKgtk_toolbar_set_orientation; extern(D) TGTKgtk_toolbar_set_orientation gtk_toolbar_set_orientation;
alias extern (C) gint function(aGtkToolbar *)TGTKgtk_toolbar_get_orientation; extern(D) TGTKgtk_toolbar_get_orientation gtk_toolbar_get_orientation;
alias extern (C) void function(aGtkToolbar *, gint)TGTKgtk_toolbar_set_show_arrow; extern(D) TGTKgtk_toolbar_set_show_arrow gtk_toolbar_set_show_arrow;
alias extern (C) gint function(aGtkToolbar *)TGTKgtk_toolbar_get_show_arrow; extern(D) TGTKgtk_toolbar_get_show_arrow gtk_toolbar_get_show_arrow;
alias extern (C) _GtkToolItem * function(aGtkToolbar *, gint)TGTKgtk_toolbar_get_nth_item; extern(D) TGTKgtk_toolbar_get_nth_item gtk_toolbar_get_nth_item;
alias extern (C) gint function(aGtkToolbar *)TGTKgtk_toolbar_get_n_items; extern(D) TGTKgtk_toolbar_get_n_items gtk_toolbar_get_n_items;
alias extern (C) gint function(aGtkToolbar *, aGtkToolItem *)TGTKgtk_toolbar_get_item_index; extern(D) TGTKgtk_toolbar_get_item_index gtk_toolbar_get_item_index;
alias extern (C) void function(aGtkToolbar *, aGtkToolItem *, gint)TGTKgtk_toolbar_insert; extern(D) TGTKgtk_toolbar_insert gtk_toolbar_insert;
alias extern (C) _GtkWidget * function()TGTKgtk_toolbar_new; extern(D) TGTKgtk_toolbar_new gtk_toolbar_new;
alias extern (C) GType function()TGTKgtk_toolbar_get_type; extern(D) TGTKgtk_toolbar_get_type gtk_toolbar_get_type;
alias extern (C) void function(aGtkTipsQuery *, char *, char *)TGTKgtk_tips_query_set_labels; extern(D) TGTKgtk_tips_query_set_labels gtk_tips_query_set_labels;
alias extern (C) void function(aGtkTipsQuery *, aGtkWidget *)TGTKgtk_tips_query_set_caller; extern(D) TGTKgtk_tips_query_set_caller gtk_tips_query_set_caller;
alias extern (C) void function(aGtkTipsQuery *)TGTKgtk_tips_query_stop_query; extern(D) TGTKgtk_tips_query_stop_query gtk_tips_query_stop_query;
alias extern (C) void function(aGtkTipsQuery *)TGTKgtk_tips_query_start_query; extern(D) TGTKgtk_tips_query_start_query gtk_tips_query_start_query;
alias extern (C) _GtkWidget * function()TGTKgtk_tips_query_new; extern(D) TGTKgtk_tips_query_new gtk_tips_query_new;
alias extern (C) guint function()TGTKgtk_tips_query_get_type; extern(D) TGTKgtk_tips_query_get_type gtk_tips_query_get_type;
alias extern (C) _GtkTextAttributes * function(aGtkTextView *)TGTKgtk_text_view_get_default_attributes; extern(D) TGTKgtk_text_view_get_default_attributes gtk_text_view_get_default_attributes;
alias extern (C) void * function(aGtkTextView *)TGTKgtk_text_view_get_tabs; extern(D) TGTKgtk_text_view_get_tabs gtk_text_view_get_tabs;
alias extern (C) void function(aGtkTextView *, void *)TGTKgtk_text_view_set_tabs; extern(D) TGTKgtk_text_view_set_tabs gtk_text_view_set_tabs;
alias extern (C) gint function(aGtkTextView *)TGTKgtk_text_view_get_indent; extern(D) TGTKgtk_text_view_get_indent gtk_text_view_get_indent;
alias extern (C) void function(aGtkTextView *, gint)TGTKgtk_text_view_set_indent; extern(D) TGTKgtk_text_view_set_indent gtk_text_view_set_indent;
alias extern (C) gint function(aGtkTextView *)TGTKgtk_text_view_get_right_margin; extern(D) TGTKgtk_text_view_get_right_margin gtk_text_view_get_right_margin;
alias extern (C) void function(aGtkTextView *, gint)TGTKgtk_text_view_set_right_margin; extern(D) TGTKgtk_text_view_set_right_margin gtk_text_view_set_right_margin;
alias extern (C) gint function(aGtkTextView *)TGTKgtk_text_view_get_left_margin; extern(D) TGTKgtk_text_view_get_left_margin gtk_text_view_get_left_margin;
alias extern (C) void function(aGtkTextView *, gint)TGTKgtk_text_view_set_left_margin; extern(D) TGTKgtk_text_view_set_left_margin gtk_text_view_set_left_margin;
alias extern (C) gint function(aGtkTextView *)TGTKgtk_text_view_get_justification; extern(D) TGTKgtk_text_view_get_justification gtk_text_view_get_justification;
alias extern (C) void function(aGtkTextView *, gint)TGTKgtk_text_view_set_justification; extern(D) TGTKgtk_text_view_set_justification gtk_text_view_set_justification;
alias extern (C) gint function(aGtkTextView *)TGTKgtk_text_view_get_pixels_inside_wrap; extern(D) TGTKgtk_text_view_get_pixels_inside_wrap gtk_text_view_get_pixels_inside_wrap;
alias extern (C) void function(aGtkTextView *, gint)TGTKgtk_text_view_set_pixels_inside_wrap; extern(D) TGTKgtk_text_view_set_pixels_inside_wrap gtk_text_view_set_pixels_inside_wrap;
alias extern (C) gint function(aGtkTextView *)TGTKgtk_text_view_get_pixels_below_lines; extern(D) TGTKgtk_text_view_get_pixels_below_lines gtk_text_view_get_pixels_below_lines;
alias extern (C) void function(aGtkTextView *, gint)TGTKgtk_text_view_set_pixels_below_lines; extern(D) TGTKgtk_text_view_set_pixels_below_lines gtk_text_view_set_pixels_below_lines;
alias extern (C) gint function(aGtkTextView *)TGTKgtk_text_view_get_pixels_above_lines; extern(D) TGTKgtk_text_view_get_pixels_above_lines gtk_text_view_get_pixels_above_lines;
alias extern (C) void function(aGtkTextView *, gint)TGTKgtk_text_view_set_pixels_above_lines; extern(D) TGTKgtk_text_view_set_pixels_above_lines gtk_text_view_set_pixels_above_lines;
alias extern (C) gint function(aGtkTextView *)TGTKgtk_text_view_get_accepts_tab; extern(D) TGTKgtk_text_view_get_accepts_tab gtk_text_view_get_accepts_tab;
alias extern (C) void function(aGtkTextView *, gint)TGTKgtk_text_view_set_accepts_tab; extern(D) TGTKgtk_text_view_set_accepts_tab gtk_text_view_set_accepts_tab;
alias extern (C) gint function(aGtkTextView *)TGTKgtk_text_view_get_overwrite; extern(D) TGTKgtk_text_view_get_overwrite gtk_text_view_get_overwrite;
alias extern (C) void function(aGtkTextView *, gint)TGTKgtk_text_view_set_overwrite; extern(D) TGTKgtk_text_view_set_overwrite gtk_text_view_set_overwrite;
alias extern (C) gint function(aGtkTextView *)TGTKgtk_text_view_get_editable; extern(D) TGTKgtk_text_view_get_editable gtk_text_view_get_editable;
alias extern (C) void function(aGtkTextView *, gint)TGTKgtk_text_view_set_editable; extern(D) TGTKgtk_text_view_set_editable gtk_text_view_set_editable;
alias extern (C) gint function(aGtkTextView *)TGTKgtk_text_view_get_wrap_mode; extern(D) TGTKgtk_text_view_get_wrap_mode gtk_text_view_get_wrap_mode;
alias extern (C) void function(aGtkTextView *, gint)TGTKgtk_text_view_set_wrap_mode; extern(D) TGTKgtk_text_view_set_wrap_mode gtk_text_view_set_wrap_mode;
alias extern (C) void function(aGtkTextView *, aGtkWidget *, gint, gint)TGTKgtk_text_view_move_child; extern(D) TGTKgtk_text_view_move_child gtk_text_view_move_child;
alias extern (C) void function(aGtkTextView *, aGtkWidget *, gint, gint, gint)TGTKgtk_text_view_add_child_in_window; extern(D) TGTKgtk_text_view_add_child_in_window gtk_text_view_add_child_in_window;
alias extern (C) void function(aGtkTextView *, aGtkWidget *, aGtkTextChildAnchor *)TGTKgtk_text_view_add_child_at_anchor; extern(D) TGTKgtk_text_view_add_child_at_anchor gtk_text_view_add_child_at_anchor;
alias extern (C) gint function(aGtkTextView *, aGtkTextIter *, gint)TGTKgtk_text_view_move_visually; extern(D) TGTKgtk_text_view_move_visually gtk_text_view_move_visually;
alias extern (C) gint function(aGtkTextView *, aGtkTextIter *)TGTKgtk_text_view_starts_display_line; extern(D) TGTKgtk_text_view_starts_display_line gtk_text_view_starts_display_line;
alias extern (C) gint function(aGtkTextView *, aGtkTextIter *)TGTKgtk_text_view_backward_display_line_start; extern(D) TGTKgtk_text_view_backward_display_line_start gtk_text_view_backward_display_line_start;
alias extern (C) gint function(aGtkTextView *, aGtkTextIter *)TGTKgtk_text_view_forward_display_line_end; extern(D) TGTKgtk_text_view_forward_display_line_end gtk_text_view_forward_display_line_end;
alias extern (C) gint function(aGtkTextView *, aGtkTextIter *)TGTKgtk_text_view_backward_display_line; extern(D) TGTKgtk_text_view_backward_display_line gtk_text_view_backward_display_line;
alias extern (C) gint function(aGtkTextView *, aGtkTextIter *)TGTKgtk_text_view_forward_display_line; extern(D) TGTKgtk_text_view_forward_display_line gtk_text_view_forward_display_line;
alias extern (C) gint function(aGtkTextView *, gint)TGTKgtk_text_view_get_border_window_size; extern(D) TGTKgtk_text_view_get_border_window_size gtk_text_view_get_border_window_size;
alias extern (C) void function(aGtkTextView *, gint, gint)TGTKgtk_text_view_set_border_window_size; extern(D) TGTKgtk_text_view_set_border_window_size gtk_text_view_set_border_window_size;
alias extern (C) gint function(aGtkTextView *, _GdkDrawable *)TGTKgtk_text_view_get_window_type; extern(D) TGTKgtk_text_view_get_window_type gtk_text_view_get_window_type;
alias extern (C) _GdkDrawable * function(aGtkTextView *, gint)TGTKgtk_text_view_get_window; extern(D) TGTKgtk_text_view_get_window gtk_text_view_get_window;
alias extern (C) void function(aGtkTextView *, gint, gint, gint, gint *, gint *)TGTKgtk_text_view_window_to_buffer_coords; extern(D) TGTKgtk_text_view_window_to_buffer_coords gtk_text_view_window_to_buffer_coords;
alias extern (C) void function(aGtkTextView *, gint, gint, gint, gint *, gint *)TGTKgtk_text_view_buffer_to_window_coords; extern(D) TGTKgtk_text_view_buffer_to_window_coords gtk_text_view_buffer_to_window_coords;
alias extern (C) void function(aGtkTextView *, aGtkTextIter *, gint, gint *)TGTKgtk_text_view_get_line_at_y; extern(D) TGTKgtk_text_view_get_line_at_y gtk_text_view_get_line_at_y;
alias extern (C) void function(aGtkTextView *, aGtkTextIter *, gint *, gint *)TGTKgtk_text_view_get_line_yrange; extern(D) TGTKgtk_text_view_get_line_yrange gtk_text_view_get_line_yrange;
alias extern (C) void function(aGtkTextView *, aGtkTextIter *, gint *, gint, gint)TGTKgtk_text_view_get_iter_at_position; extern(D) TGTKgtk_text_view_get_iter_at_position gtk_text_view_get_iter_at_position;
alias extern (C) void function(aGtkTextView *, aGtkTextIter *, gint, gint)TGTKgtk_text_view_get_iter_at_location; extern(D) TGTKgtk_text_view_get_iter_at_location gtk_text_view_get_iter_at_location;
alias extern (C) void function(aGtkTextView *, aGtkTextIter *, _GdkRectangle *)TGTKgtk_text_view_get_iter_location; extern(D) TGTKgtk_text_view_get_iter_location gtk_text_view_get_iter_location;
alias extern (C) gint function(aGtkTextView *)TGTKgtk_text_view_get_cursor_visible; extern(D) TGTKgtk_text_view_get_cursor_visible gtk_text_view_get_cursor_visible;
alias extern (C) void function(aGtkTextView *, gint)TGTKgtk_text_view_set_cursor_visible; extern(D) TGTKgtk_text_view_set_cursor_visible gtk_text_view_set_cursor_visible;
alias extern (C) void function(aGtkTextView *, _GdkRectangle *)TGTKgtk_text_view_get_visible_rect; extern(D) TGTKgtk_text_view_get_visible_rect gtk_text_view_get_visible_rect;
alias extern (C) gint function(aGtkTextView *)TGTKgtk_text_view_place_cursor_onscreen; extern(D) TGTKgtk_text_view_place_cursor_onscreen gtk_text_view_place_cursor_onscreen;
alias extern (C) gint function(aGtkTextView *, aGtkTextMark *)TGTKgtk_text_view_move_mark_onscreen; extern(D) TGTKgtk_text_view_move_mark_onscreen gtk_text_view_move_mark_onscreen;
alias extern (C) void function(aGtkTextView *, aGtkTextMark *)TGTKgtk_text_view_scroll_mark_onscreen; extern(D) TGTKgtk_text_view_scroll_mark_onscreen gtk_text_view_scroll_mark_onscreen;
alias extern (C) void function(aGtkTextView *, aGtkTextMark *, double, gint, double, double)TGTKgtk_text_view_scroll_to_mark; extern(D) TGTKgtk_text_view_scroll_to_mark gtk_text_view_scroll_to_mark;
alias extern (C) gint function(aGtkTextView *, aGtkTextIter *, double, gint, double, double)TGTKgtk_text_view_scroll_to_iter; extern(D) TGTKgtk_text_view_scroll_to_iter gtk_text_view_scroll_to_iter;
alias extern (C) _GtkTextBuffer * function(aGtkTextView *)TGTKgtk_text_view_get_buffer; extern(D) TGTKgtk_text_view_get_buffer gtk_text_view_get_buffer;
alias extern (C) void function(aGtkTextView *, aGtkTextBuffer *)TGTKgtk_text_view_set_buffer; extern(D) TGTKgtk_text_view_set_buffer gtk_text_view_set_buffer;
alias extern (C) _GtkWidget * function(aGtkTextBuffer *)TGTKgtk_text_view_new_with_buffer; extern(D) TGTKgtk_text_view_new_with_buffer gtk_text_view_new_with_buffer;
alias extern (C) _GtkWidget * function()TGTKgtk_text_view_new; extern(D) TGTKgtk_text_view_new gtk_text_view_new;
alias extern (C) GType function()TGTKgtk_text_view_get_type; extern(D) TGTKgtk_text_view_get_type gtk_text_view_get_type;
alias extern (C) gint function(aGtkTextBuffer *, aGtkTextBuffer *, void *, aGtkTextIter *, char *, gsize, _GError * *)TGTKgtk_text_buffer_deserialize; extern(D) TGTKgtk_text_buffer_deserialize gtk_text_buffer_deserialize;
alias extern (C) char * function(aGtkTextBuffer *, aGtkTextBuffer *, void *, aGtkTextIter *, aGtkTextIter *, gsize *)TGTKgtk_text_buffer_serialize; extern(D) TGTKgtk_text_buffer_serialize gtk_text_buffer_serialize;
alias extern (C) void * * function(aGtkTextBuffer *, gint *)TGTKgtk_text_buffer_get_deserialize_formats; extern(D) TGTKgtk_text_buffer_get_deserialize_formats gtk_text_buffer_get_deserialize_formats;
alias extern (C) void * * function(aGtkTextBuffer *, gint *)TGTKgtk_text_buffer_get_serialize_formats; extern(D) TGTKgtk_text_buffer_get_serialize_formats gtk_text_buffer_get_serialize_formats;
alias extern (C) gint function(aGtkTextBuffer *, void *)TGTKgtk_text_buffer_deserialize_get_can_create_tags; extern(D) TGTKgtk_text_buffer_deserialize_get_can_create_tags gtk_text_buffer_deserialize_get_can_create_tags;
alias extern (C) void function(aGtkTextBuffer *, void *, gint)TGTKgtk_text_buffer_deserialize_set_can_create_tags; extern(D) TGTKgtk_text_buffer_deserialize_set_can_create_tags gtk_text_buffer_deserialize_set_can_create_tags;
alias extern (C) void function(aGtkTextBuffer *, void *)TGTKgtk_text_buffer_unregister_deserialize_format; extern(D) TGTKgtk_text_buffer_unregister_deserialize_format gtk_text_buffer_unregister_deserialize_format;
alias extern (C) void function(aGtkTextBuffer *, void *)TGTKgtk_text_buffer_unregister_serialize_format; extern(D) TGTKgtk_text_buffer_unregister_serialize_format gtk_text_buffer_unregister_serialize_format;
alias extern (C) void * function(aGtkTextBuffer *, char *)TGTKgtk_text_buffer_register_deserialize_tagset; extern(D) TGTKgtk_text_buffer_register_deserialize_tagset gtk_text_buffer_register_deserialize_tagset;
alias extern (C) void * function(aGtkTextBuffer *, char *, _BCD_func__9281, void *, _BCD_func__13158)TGTKgtk_text_buffer_register_deserialize_format; extern(D) TGTKgtk_text_buffer_register_deserialize_format gtk_text_buffer_register_deserialize_format;
alias extern (C) void * function(aGtkTextBuffer *, char *)TGTKgtk_text_buffer_register_serialize_tagset; extern(D) TGTKgtk_text_buffer_register_serialize_tagset gtk_text_buffer_register_serialize_tagset;
alias extern (C) void * function(aGtkTextBuffer *, char *, _BCD_func__9282, void *, _BCD_func__13158)TGTKgtk_text_buffer_register_serialize_format; extern(D) TGTKgtk_text_buffer_register_serialize_format gtk_text_buffer_register_serialize_format;
//alias extern (C) void function(aGtkTextBuffer *, aGtkTextTag *)TGTK_gtk_text_buffer_notify_will_remove_tag; extern(D) TGTK_gtk_text_buffer_notify_will_remove_tag _gtk_text_buffer_notify_will_remove_tag;
//alias extern (C) _PangoLogAttr * function(aGtkTextBuffer *, aGtkTextIter *, gint *)TGTK_gtk_text_buffer_get_line_log_attrs; extern(D) TGTK_gtk_text_buffer_get_line_log_attrs _gtk_text_buffer_get_line_log_attrs;
//alias extern (C) void * function(aGtkTextBuffer *)TGTK_gtk_text_buffer_get_btree; extern(D) TGTK_gtk_text_buffer_get_btree _gtk_text_buffer_get_btree;
//alias extern (C) void function(aGtkTextBuffer *)TGTK_gtk_text_buffer_spew; extern(D) TGTK_gtk_text_buffer_spew _gtk_text_buffer_spew;
alias extern (C) _GtkTargetList * function(aGtkTextBuffer *)TGTKgtk_text_buffer_get_paste_target_list; extern(D) TGTKgtk_text_buffer_get_paste_target_list gtk_text_buffer_get_paste_target_list;
alias extern (C) _GtkTargetList * function(aGtkTextBuffer *)TGTKgtk_text_buffer_get_copy_target_list; extern(D) TGTKgtk_text_buffer_get_copy_target_list gtk_text_buffer_get_copy_target_list;
alias extern (C) void function(aGtkTextBuffer *)TGTKgtk_text_buffer_end_user_action; extern(D) TGTKgtk_text_buffer_end_user_action gtk_text_buffer_end_user_action;
alias extern (C) void function(aGtkTextBuffer *)TGTKgtk_text_buffer_begin_user_action; extern(D) TGTKgtk_text_buffer_begin_user_action gtk_text_buffer_begin_user_action;
alias extern (C) gint function(aGtkTextBuffer *, gint, gint)TGTKgtk_text_buffer_delete_selection; extern(D) TGTKgtk_text_buffer_delete_selection gtk_text_buffer_delete_selection;
alias extern (C) gint function(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_buffer_get_selection_bounds; extern(D) TGTKgtk_text_buffer_get_selection_bounds gtk_text_buffer_get_selection_bounds;
alias extern (C) void function(aGtkTextBuffer *, void *, aGtkTextIter *, gint)TGTKgtk_text_buffer_paste_clipboard; extern(D) TGTKgtk_text_buffer_paste_clipboard gtk_text_buffer_paste_clipboard;
alias extern (C) void function(aGtkTextBuffer *, void *)TGTKgtk_text_buffer_copy_clipboard; extern(D) TGTKgtk_text_buffer_copy_clipboard gtk_text_buffer_copy_clipboard;
alias extern (C) void function(aGtkTextBuffer *, void *, gint)TGTKgtk_text_buffer_cut_clipboard; extern(D) TGTKgtk_text_buffer_cut_clipboard gtk_text_buffer_cut_clipboard;
alias extern (C) void function(aGtkTextBuffer *, void *)TGTKgtk_text_buffer_remove_selection_clipboard; extern(D) TGTKgtk_text_buffer_remove_selection_clipboard gtk_text_buffer_remove_selection_clipboard;
alias extern (C) void function(aGtkTextBuffer *, void *)TGTKgtk_text_buffer_add_selection_clipboard; extern(D) TGTKgtk_text_buffer_add_selection_clipboard gtk_text_buffer_add_selection_clipboard;
alias extern (C) gint function(aGtkTextBuffer *)TGTKgtk_text_buffer_get_has_selection; extern(D) TGTKgtk_text_buffer_get_has_selection gtk_text_buffer_get_has_selection;
alias extern (C) void function(aGtkTextBuffer *, gint)TGTKgtk_text_buffer_set_modified; extern(D) TGTKgtk_text_buffer_set_modified gtk_text_buffer_set_modified;
alias extern (C) gint function(aGtkTextBuffer *)TGTKgtk_text_buffer_get_modified; extern(D) TGTKgtk_text_buffer_get_modified gtk_text_buffer_get_modified;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextIter *, aGtkTextChildAnchor *)TGTKgtk_text_buffer_get_iter_at_child_anchor; extern(D) TGTKgtk_text_buffer_get_iter_at_child_anchor gtk_text_buffer_get_iter_at_child_anchor;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextIter *, aGtkTextMark *)TGTKgtk_text_buffer_get_iter_at_mark; extern(D) TGTKgtk_text_buffer_get_iter_at_mark gtk_text_buffer_get_iter_at_mark;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_buffer_get_bounds; extern(D) TGTKgtk_text_buffer_get_bounds gtk_text_buffer_get_bounds;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextIter *)TGTKgtk_text_buffer_get_end_iter; extern(D) TGTKgtk_text_buffer_get_end_iter gtk_text_buffer_get_end_iter;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextIter *)TGTKgtk_text_buffer_get_start_iter; extern(D) TGTKgtk_text_buffer_get_start_iter gtk_text_buffer_get_start_iter;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextIter *, gint)TGTKgtk_text_buffer_get_iter_at_line; extern(D) TGTKgtk_text_buffer_get_iter_at_line gtk_text_buffer_get_iter_at_line;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextIter *, gint)TGTKgtk_text_buffer_get_iter_at_offset; extern(D) TGTKgtk_text_buffer_get_iter_at_offset gtk_text_buffer_get_iter_at_offset;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextIter *, gint, gint)TGTKgtk_text_buffer_get_iter_at_line_index; extern(D) TGTKgtk_text_buffer_get_iter_at_line_index gtk_text_buffer_get_iter_at_line_index;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextIter *, gint, gint)TGTKgtk_text_buffer_get_iter_at_line_offset; extern(D) TGTKgtk_text_buffer_get_iter_at_line_offset gtk_text_buffer_get_iter_at_line_offset;
alias extern (C) _GtkTextTag * function(aGtkTextBuffer *, char *, char *, ...)TGTKgtk_text_buffer_create_tag; extern(D) TGTKgtk_text_buffer_create_tag gtk_text_buffer_create_tag;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_buffer_remove_all_tags; extern(D) TGTKgtk_text_buffer_remove_all_tags gtk_text_buffer_remove_all_tags;
alias extern (C) void function(aGtkTextBuffer *, char *, aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_buffer_remove_tag_by_name; extern(D) TGTKgtk_text_buffer_remove_tag_by_name gtk_text_buffer_remove_tag_by_name;
alias extern (C) void function(aGtkTextBuffer *, char *, aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_buffer_apply_tag_by_name; extern(D) TGTKgtk_text_buffer_apply_tag_by_name gtk_text_buffer_apply_tag_by_name;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextTag *, aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_buffer_remove_tag; extern(D) TGTKgtk_text_buffer_remove_tag gtk_text_buffer_remove_tag;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextTag *, aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_buffer_apply_tag; extern(D) TGTKgtk_text_buffer_apply_tag gtk_text_buffer_apply_tag;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_buffer_select_range; extern(D) TGTKgtk_text_buffer_select_range gtk_text_buffer_select_range;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextIter *)TGTKgtk_text_buffer_place_cursor; extern(D) TGTKgtk_text_buffer_place_cursor gtk_text_buffer_place_cursor;
alias extern (C) _GtkTextMark * function(aGtkTextBuffer *)TGTKgtk_text_buffer_get_selection_bound; extern(D) TGTKgtk_text_buffer_get_selection_bound gtk_text_buffer_get_selection_bound;
alias extern (C) _GtkTextMark * function(aGtkTextBuffer *)TGTKgtk_text_buffer_get_insert; extern(D) TGTKgtk_text_buffer_get_insert gtk_text_buffer_get_insert;
alias extern (C) void function(aGtkTextBuffer *, char *)TGTKgtk_text_buffer_delete_mark_by_name; extern(D) TGTKgtk_text_buffer_delete_mark_by_name gtk_text_buffer_delete_mark_by_name;
alias extern (C) void function(aGtkTextBuffer *, char *, aGtkTextIter *)TGTKgtk_text_buffer_move_mark_by_name; extern(D) TGTKgtk_text_buffer_move_mark_by_name gtk_text_buffer_move_mark_by_name;
alias extern (C) _GtkTextMark * function(aGtkTextBuffer *, char *)TGTKgtk_text_buffer_get_mark; extern(D) TGTKgtk_text_buffer_get_mark gtk_text_buffer_get_mark;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextMark *)TGTKgtk_text_buffer_delete_mark; extern(D) TGTKgtk_text_buffer_delete_mark gtk_text_buffer_delete_mark;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextMark *, aGtkTextIter *)TGTKgtk_text_buffer_move_mark; extern(D) TGTKgtk_text_buffer_move_mark gtk_text_buffer_move_mark;
alias extern (C) _GtkTextMark * function(aGtkTextBuffer *, char *, aGtkTextIter *, gint)TGTKgtk_text_buffer_create_mark; extern(D) TGTKgtk_text_buffer_create_mark gtk_text_buffer_create_mark;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextMark *, aGtkTextIter *)TGTKgtk_text_buffer_add_mark; extern(D) TGTKgtk_text_buffer_add_mark gtk_text_buffer_add_mark;
alias extern (C) _GtkTextChildAnchor * function(aGtkTextBuffer *, aGtkTextIter *)TGTKgtk_text_buffer_create_child_anchor; extern(D) TGTKgtk_text_buffer_create_child_anchor gtk_text_buffer_create_child_anchor;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextIter *, aGtkTextChildAnchor *)TGTKgtk_text_buffer_insert_child_anchor; extern(D) TGTKgtk_text_buffer_insert_child_anchor gtk_text_buffer_insert_child_anchor;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextIter *, void *)TGTKgtk_text_buffer_insert_pixbuf; extern(D) TGTKgtk_text_buffer_insert_pixbuf gtk_text_buffer_insert_pixbuf;
alias extern (C) char * function(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *, gint)TGTKgtk_text_buffer_get_slice; extern(D) TGTKgtk_text_buffer_get_slice gtk_text_buffer_get_slice;
alias extern (C) char * function(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *, gint)TGTKgtk_text_buffer_get_text; extern(D) TGTKgtk_text_buffer_get_text gtk_text_buffer_get_text;
alias extern (C) gint function(aGtkTextBuffer *, aGtkTextIter *, gint, gint)TGTKgtk_text_buffer_backspace; extern(D) TGTKgtk_text_buffer_backspace gtk_text_buffer_backspace;
alias extern (C) gint function(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *, gint)TGTKgtk_text_buffer_delete_interactive; extern(D) TGTKgtk_text_buffer_delete_interactive gtk_text_buffer_delete_interactive;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_buffer_delete; extern(D) TGTKgtk_text_buffer_delete gtk_text_buffer_delete;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextIter *, char *, gint, char *, ...)TGTKgtk_text_buffer_insert_with_tags_by_name; extern(D) TGTKgtk_text_buffer_insert_with_tags_by_name gtk_text_buffer_insert_with_tags_by_name;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextIter *, char *, gint, aGtkTextTag *, ...)TGTKgtk_text_buffer_insert_with_tags; extern(D) TGTKgtk_text_buffer_insert_with_tags gtk_text_buffer_insert_with_tags;
alias extern (C) gint function(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *, aGtkTextIter *, gint)TGTKgtk_text_buffer_insert_range_interactive; extern(D) TGTKgtk_text_buffer_insert_range_interactive gtk_text_buffer_insert_range_interactive;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_buffer_insert_range; extern(D) TGTKgtk_text_buffer_insert_range gtk_text_buffer_insert_range;
alias extern (C) gint function(aGtkTextBuffer *, char *, gint, gint)TGTKgtk_text_buffer_insert_interactive_at_cursor; extern(D) TGTKgtk_text_buffer_insert_interactive_at_cursor gtk_text_buffer_insert_interactive_at_cursor;
alias extern (C) gint function(aGtkTextBuffer *, aGtkTextIter *, char *, gint, gint)TGTKgtk_text_buffer_insert_interactive; extern(D) TGTKgtk_text_buffer_insert_interactive gtk_text_buffer_insert_interactive;
alias extern (C) void function(aGtkTextBuffer *, char *, gint)TGTKgtk_text_buffer_insert_at_cursor; extern(D) TGTKgtk_text_buffer_insert_at_cursor gtk_text_buffer_insert_at_cursor;
alias extern (C) void function(aGtkTextBuffer *, aGtkTextIter *, in char *, gint)TGTKgtk_text_buffer_insert; extern(D) TGTKgtk_text_buffer_insert gtk_text_buffer_insert;
alias extern (C) void function(aGtkTextBuffer *, in char *, gint)TGTKgtk_text_buffer_set_text; extern(D) TGTKgtk_text_buffer_set_text gtk_text_buffer_set_text;
alias extern (C) _GtkTextTagTable * function(aGtkTextBuffer *)TGTKgtk_text_buffer_get_tag_table; extern(D) TGTKgtk_text_buffer_get_tag_table gtk_text_buffer_get_tag_table;
alias extern (C) gint function(aGtkTextBuffer *)TGTKgtk_text_buffer_get_char_count; extern(D) TGTKgtk_text_buffer_get_char_count gtk_text_buffer_get_char_count;
alias extern (C) gint function(aGtkTextBuffer *)TGTKgtk_text_buffer_get_line_count; extern(D) TGTKgtk_text_buffer_get_line_count gtk_text_buffer_get_line_count;
alias extern (C) _GtkTextBuffer * function(aGtkTextTagTable *)TGTKgtk_text_buffer_new; extern(D) TGTKgtk_text_buffer_new gtk_text_buffer_new;
alias extern (C) GType function()TGTKgtk_text_buffer_get_type; extern(D) TGTKgtk_text_buffer_get_type gtk_text_buffer_get_type;
alias extern (C) gint function(aGtkTextMark *)TGTKgtk_text_mark_get_left_gravity; extern(D) TGTKgtk_text_mark_get_left_gravity gtk_text_mark_get_left_gravity;
alias extern (C) _GtkTextBuffer * function(aGtkTextMark *)TGTKgtk_text_mark_get_buffer; extern(D) TGTKgtk_text_mark_get_buffer gtk_text_mark_get_buffer;
alias extern (C) gint function(aGtkTextMark *)TGTKgtk_text_mark_get_deleted; extern(D) TGTKgtk_text_mark_get_deleted gtk_text_mark_get_deleted;
alias extern (C) char * function(aGtkTextMark *)TGTKgtk_text_mark_get_name; extern(D) TGTKgtk_text_mark_get_name gtk_text_mark_get_name;
alias extern (C) _GtkTextMark * function(char *, gint)TGTKgtk_text_mark_new; extern(D) TGTKgtk_text_mark_new gtk_text_mark_new;
alias extern (C) gint function(aGtkTextMark *)TGTKgtk_text_mark_get_visible; extern(D) TGTKgtk_text_mark_get_visible gtk_text_mark_get_visible;
alias extern (C) void function(aGtkTextMark *, gint)TGTKgtk_text_mark_set_visible; extern(D) TGTKgtk_text_mark_set_visible gtk_text_mark_set_visible;
alias extern (C) GType function()TGTKgtk_text_mark_get_type; extern(D) TGTKgtk_text_mark_get_type gtk_text_mark_get_type;
//alias extern (C) void function(aGtkTextTagTable *, void *)TGTK_gtk_text_tag_table_remove_buffer; extern(D) TGTK_gtk_text_tag_table_remove_buffer _gtk_text_tag_table_remove_buffer;
//alias extern (C) void function(aGtkTextTagTable *, void *)TGTK_gtk_text_tag_table_add_buffer; extern(D) TGTK_gtk_text_tag_table_add_buffer _gtk_text_tag_table_add_buffer;
alias extern (C) gint function(aGtkTextTagTable *)TGTKgtk_text_tag_table_get_size; extern(D) TGTKgtk_text_tag_table_get_size gtk_text_tag_table_get_size;
alias extern (C) void function(aGtkTextTagTable *, _BCD_func__9332, void *)TGTKgtk_text_tag_table_foreach; extern(D) TGTKgtk_text_tag_table_foreach gtk_text_tag_table_foreach;
alias extern (C) _GtkTextTag * function(aGtkTextTagTable *, char *)TGTKgtk_text_tag_table_lookup; extern(D) TGTKgtk_text_tag_table_lookup gtk_text_tag_table_lookup;
alias extern (C) void function(aGtkTextTagTable *, aGtkTextTag *)TGTKgtk_text_tag_table_remove; extern(D) TGTKgtk_text_tag_table_remove gtk_text_tag_table_remove;
alias extern (C) void function(aGtkTextTagTable *, aGtkTextTag *)TGTKgtk_text_tag_table_add; extern(D) TGTKgtk_text_tag_table_add gtk_text_tag_table_add;
alias extern (C) _GtkTextTagTable * function()TGTKgtk_text_tag_table_new; extern(D) TGTKgtk_text_tag_table_new gtk_text_tag_table_new;
alias extern (C) GType function()TGTKgtk_text_tag_table_get_type; extern(D) TGTKgtk_text_tag_table_get_type gtk_text_tag_table_get_type;
alias extern (C) _GtkWidget * function()TGTKgtk_tearoff_menu_item_new; extern(D) TGTKgtk_tearoff_menu_item_new gtk_tearoff_menu_item_new;
alias extern (C) GType function()TGTKgtk_tearoff_menu_item_get_type; extern(D) TGTKgtk_tearoff_menu_item_get_type gtk_tearoff_menu_item_get_type;
alias extern (C) gint function(aGtkTable *)TGTKgtk_table_get_homogeneous; extern(D) TGTKgtk_table_get_homogeneous gtk_table_get_homogeneous;
alias extern (C) void function(aGtkTable *, gint)TGTKgtk_table_set_homogeneous; extern(D) TGTKgtk_table_set_homogeneous gtk_table_set_homogeneous;
alias extern (C) guint function(aGtkTable *)TGTKgtk_table_get_default_col_spacing; extern(D) TGTKgtk_table_get_default_col_spacing gtk_table_get_default_col_spacing;
alias extern (C) void function(aGtkTable *, guint)TGTKgtk_table_set_col_spacings; extern(D) TGTKgtk_table_set_col_spacings gtk_table_set_col_spacings;
alias extern (C) guint function(aGtkTable *)TGTKgtk_table_get_default_row_spacing; extern(D) TGTKgtk_table_get_default_row_spacing gtk_table_get_default_row_spacing;
alias extern (C) void function(aGtkTable *, guint)TGTKgtk_table_set_row_spacings; extern(D) TGTKgtk_table_set_row_spacings gtk_table_set_row_spacings;
alias extern (C) guint function(aGtkTable *, guint)TGTKgtk_table_get_col_spacing; extern(D) TGTKgtk_table_get_col_spacing gtk_table_get_col_spacing;
alias extern (C) void function(aGtkTable *, guint, guint)TGTKgtk_table_set_col_spacing; extern(D) TGTKgtk_table_set_col_spacing gtk_table_set_col_spacing;
alias extern (C) guint function(aGtkTable *, guint)TGTKgtk_table_get_row_spacing; extern(D) TGTKgtk_table_get_row_spacing gtk_table_get_row_spacing;
alias extern (C) void function(aGtkTable *, guint, guint)TGTKgtk_table_set_row_spacing; extern(D) TGTKgtk_table_set_row_spacing gtk_table_set_row_spacing;
alias extern (C) void function(aGtkTable *, aGtkWidget *, guint, guint, guint, guint)TGTKgtk_table_attach_defaults; extern(D) TGTKgtk_table_attach_defaults gtk_table_attach_defaults;
alias extern (C) void function(aGtkTable *, aGtkWidget *, guint, guint, guint, guint, gint, gint, guint, guint)TGTKgtk_table_attach; extern(D) TGTKgtk_table_attach gtk_table_attach;
alias extern (C) void function(aGtkTable *, guint, guint)TGTKgtk_table_resize; extern(D) TGTKgtk_table_resize gtk_table_resize;
alias extern (C) _GtkWidget * function(guint, guint, gint)TGTKgtk_table_new; extern(D) TGTKgtk_table_new gtk_table_new;
alias extern (C) GType function()TGTKgtk_table_get_type; extern(D) TGTKgtk_table_get_type gtk_table_get_type;
alias extern (C) void function(char *, _BCD_func__12124, void *, _BCD_func__13158)TGTKgtk_stock_set_translate_func; extern(D) TGTKgtk_stock_set_translate_func gtk_stock_set_translate_func;
alias extern (C) void function(aGtkStockItem *)TGTKgtk_stock_item_free; extern(D) TGTKgtk_stock_item_free gtk_stock_item_free;
alias extern (C) _GtkStockItem * function(aGtkStockItem *)TGTKgtk_stock_item_copy; extern(D) TGTKgtk_stock_item_copy gtk_stock_item_copy;
alias extern (C) _GSList * function()TGTKgtk_stock_list_ids; extern(D) TGTKgtk_stock_list_ids gtk_stock_list_ids;
alias extern (C) gint function(char *, aGtkStockItem *)TGTKgtk_stock_lookup; extern(D) TGTKgtk_stock_lookup gtk_stock_lookup;
alias extern (C) void function(aGtkStockItem *, guint)TGTKgtk_stock_add_static; extern(D) TGTKgtk_stock_add_static gtk_stock_add_static;
alias extern (C) void function(aGtkStockItem *, guint)TGTKgtk_stock_add; extern(D) TGTKgtk_stock_add gtk_stock_add;
alias extern (C) gint function(aGtkStatusIcon *, _GdkScreen * *, _GdkRectangle *, gint *)TGTKgtk_status_icon_get_geometry; extern(D) TGTKgtk_status_icon_get_geometry gtk_status_icon_get_geometry;
alias extern (C) void function(aGtkMenu *, gint *, gint *, gint *, void *)TGTKgtk_status_icon_position_menu; extern(D) TGTKgtk_status_icon_position_menu gtk_status_icon_position_menu;
alias extern (C) gint function(aGtkStatusIcon *)TGTKgtk_status_icon_is_embedded; extern(D) TGTKgtk_status_icon_is_embedded gtk_status_icon_is_embedded;
alias extern (C) gint function(aGtkStatusIcon *)TGTKgtk_status_icon_get_blinking; extern(D) TGTKgtk_status_icon_get_blinking gtk_status_icon_get_blinking;
alias extern (C) void function(aGtkStatusIcon *, gint)TGTKgtk_status_icon_set_blinking; extern(D) TGTKgtk_status_icon_set_blinking gtk_status_icon_set_blinking;
alias extern (C) gint function(aGtkStatusIcon *)TGTKgtk_status_icon_get_visible; extern(D) TGTKgtk_status_icon_get_visible gtk_status_icon_get_visible;
alias extern (C) void function(aGtkStatusIcon *, gint)TGTKgtk_status_icon_set_visible; extern(D) TGTKgtk_status_icon_set_visible gtk_status_icon_set_visible;
alias extern (C) void function(aGtkStatusIcon *, char *)TGTKgtk_status_icon_set_tooltip; extern(D) TGTKgtk_status_icon_set_tooltip gtk_status_icon_set_tooltip;
alias extern (C) _GdkScreen * function(aGtkStatusIcon *)TGTKgtk_status_icon_get_screen; extern(D) TGTKgtk_status_icon_get_screen gtk_status_icon_get_screen;
alias extern (C) void function(aGtkStatusIcon *, _GdkScreen *)TGTKgtk_status_icon_set_screen; extern(D) TGTKgtk_status_icon_set_screen gtk_status_icon_set_screen;
alias extern (C) gint function(aGtkStatusIcon *)TGTKgtk_status_icon_get_size; extern(D) TGTKgtk_status_icon_get_size gtk_status_icon_get_size;
alias extern (C) char * function(aGtkStatusIcon *)TGTKgtk_status_icon_get_icon_name; extern(D) TGTKgtk_status_icon_get_icon_name gtk_status_icon_get_icon_name;
alias extern (C) char * function(aGtkStatusIcon *)TGTKgtk_status_icon_get_stock; extern(D) TGTKgtk_status_icon_get_stock gtk_status_icon_get_stock;
alias extern (C) void * function(aGtkStatusIcon *)TGTKgtk_status_icon_get_pixbuf; extern(D) TGTKgtk_status_icon_get_pixbuf gtk_status_icon_get_pixbuf;
alias extern (C) gint function(aGtkStatusIcon *)TGTKgtk_status_icon_get_storage_type; extern(D) TGTKgtk_status_icon_get_storage_type gtk_status_icon_get_storage_type;
alias extern (C) void function(aGtkStatusIcon *, char *)TGTKgtk_status_icon_set_from_icon_name; extern(D) TGTKgtk_status_icon_set_from_icon_name gtk_status_icon_set_from_icon_name;
alias extern (C) void function(aGtkStatusIcon *, char *)TGTKgtk_status_icon_set_from_stock; extern(D) TGTKgtk_status_icon_set_from_stock gtk_status_icon_set_from_stock;
alias extern (C) void function(aGtkStatusIcon *, char *)TGTKgtk_status_icon_set_from_file; extern(D) TGTKgtk_status_icon_set_from_file gtk_status_icon_set_from_file;
alias extern (C) void function(aGtkStatusIcon *, void *)TGTKgtk_status_icon_set_from_pixbuf; extern(D) TGTKgtk_status_icon_set_from_pixbuf gtk_status_icon_set_from_pixbuf;
alias extern (C) _GtkStatusIcon * function(char *)TGTKgtk_status_icon_new_from_icon_name; extern(D) TGTKgtk_status_icon_new_from_icon_name gtk_status_icon_new_from_icon_name;
alias extern (C) _GtkStatusIcon * function(char *)TGTKgtk_status_icon_new_from_stock; extern(D) TGTKgtk_status_icon_new_from_stock gtk_status_icon_new_from_stock;
alias extern (C) _GtkStatusIcon * function(char *)TGTKgtk_status_icon_new_from_file; extern(D) TGTKgtk_status_icon_new_from_file gtk_status_icon_new_from_file;
alias extern (C) _GtkStatusIcon * function(void *)TGTKgtk_status_icon_new_from_pixbuf; extern(D) TGTKgtk_status_icon_new_from_pixbuf gtk_status_icon_new_from_pixbuf;
alias extern (C) _GtkStatusIcon * function()TGTKgtk_status_icon_new; extern(D) TGTKgtk_status_icon_new gtk_status_icon_new;
alias extern (C) GType function()TGTKgtk_status_icon_get_type; extern(D) TGTKgtk_status_icon_get_type gtk_status_icon_get_type;
alias extern (C) gint function(aGtkStatusbar *)TGTKgtk_statusbar_get_has_resize_grip; extern(D) TGTKgtk_statusbar_get_has_resize_grip gtk_statusbar_get_has_resize_grip;
alias extern (C) void function(aGtkStatusbar *, gint)TGTKgtk_statusbar_set_has_resize_grip; extern(D) TGTKgtk_statusbar_set_has_resize_grip gtk_statusbar_set_has_resize_grip;
alias extern (C) void function(aGtkStatusbar *, guint, guint)TGTKgtk_statusbar_remove; extern(D) TGTKgtk_statusbar_remove gtk_statusbar_remove;
alias extern (C) void function(aGtkStatusbar *, guint)TGTKgtk_statusbar_pop; extern(D) TGTKgtk_statusbar_pop gtk_statusbar_pop;
alias extern (C) guint function(aGtkStatusbar *, guint, char *)TGTKgtk_statusbar_push; extern(D) TGTKgtk_statusbar_push gtk_statusbar_push;
alias extern (C) guint function(aGtkStatusbar *, char *)TGTKgtk_statusbar_get_context_id; extern(D) TGTKgtk_statusbar_get_context_id gtk_statusbar_get_context_id;
alias extern (C) _GtkWidget * function()TGTKgtk_statusbar_new; extern(D) TGTKgtk_statusbar_new gtk_statusbar_new;
alias extern (C) GType function()TGTKgtk_statusbar_get_type; extern(D) TGTKgtk_statusbar_get_type gtk_statusbar_get_type;
alias extern (C) void function(aGtkSpinButton *)TGTKgtk_spin_button_update; extern(D) TGTKgtk_spin_button_update gtk_spin_button_update;
alias extern (C) gint function(aGtkSpinButton *)TGTKgtk_spin_button_get_snap_to_ticks; extern(D) TGTKgtk_spin_button_get_snap_to_ticks gtk_spin_button_get_snap_to_ticks;
alias extern (C) void function(aGtkSpinButton *, gint)TGTKgtk_spin_button_set_snap_to_ticks; extern(D) TGTKgtk_spin_button_set_snap_to_ticks gtk_spin_button_set_snap_to_ticks;
alias extern (C) gint function(aGtkSpinButton *)TGTKgtk_spin_button_get_wrap; extern(D) TGTKgtk_spin_button_get_wrap gtk_spin_button_get_wrap;
alias extern (C) void function(aGtkSpinButton *, gint)TGTKgtk_spin_button_set_wrap; extern(D) TGTKgtk_spin_button_set_wrap gtk_spin_button_set_wrap;
alias extern (C) void function(aGtkSpinButton *, gint, double)TGTKgtk_spin_button_spin; extern(D) TGTKgtk_spin_button_spin gtk_spin_button_spin;
alias extern (C) gint function(aGtkSpinButton *)TGTKgtk_spin_button_get_numeric; extern(D) TGTKgtk_spin_button_get_numeric gtk_spin_button_get_numeric;
alias extern (C) void function(aGtkSpinButton *, gint)TGTKgtk_spin_button_set_numeric; extern(D) TGTKgtk_spin_button_set_numeric gtk_spin_button_set_numeric;
alias extern (C) gint function(aGtkSpinButton *)TGTKgtk_spin_button_get_update_policy; extern(D) TGTKgtk_spin_button_get_update_policy gtk_spin_button_get_update_policy;
alias extern (C) void function(aGtkSpinButton *, gint)TGTKgtk_spin_button_set_update_policy; extern(D) TGTKgtk_spin_button_set_update_policy gtk_spin_button_set_update_policy;
alias extern (C) void function(aGtkSpinButton *, double)TGTKgtk_spin_button_set_value; extern(D) TGTKgtk_spin_button_set_value gtk_spin_button_set_value;
alias extern (C) gint function(aGtkSpinButton *)TGTKgtk_spin_button_get_value_as_int; extern(D) TGTKgtk_spin_button_get_value_as_int gtk_spin_button_get_value_as_int;
alias extern (C) double function(aGtkSpinButton *)TGTKgtk_spin_button_get_value; extern(D) TGTKgtk_spin_button_get_value gtk_spin_button_get_value;
alias extern (C) void function(aGtkSpinButton *, double *, double *)TGTKgtk_spin_button_get_range; extern(D) TGTKgtk_spin_button_get_range gtk_spin_button_get_range;
alias extern (C) void function(aGtkSpinButton *, double, double)TGTKgtk_spin_button_set_range; extern(D) TGTKgtk_spin_button_set_range gtk_spin_button_set_range;
alias extern (C) void function(aGtkSpinButton *, double *, double *)TGTKgtk_spin_button_get_increments; extern(D) TGTKgtk_spin_button_get_increments gtk_spin_button_get_increments;
alias extern (C) void function(aGtkSpinButton *, double, double)TGTKgtk_spin_button_set_increments; extern(D) TGTKgtk_spin_button_set_increments gtk_spin_button_set_increments;
alias extern (C) guint function(aGtkSpinButton *)TGTKgtk_spin_button_get_digits; extern(D) TGTKgtk_spin_button_get_digits gtk_spin_button_get_digits;
alias extern (C) void function(aGtkSpinButton *, guint)TGTKgtk_spin_button_set_digits; extern(D) TGTKgtk_spin_button_set_digits gtk_spin_button_set_digits;
alias extern (C) _GtkAdjustment * function(aGtkSpinButton *)TGTKgtk_spin_button_get_adjustment; extern(D) TGTKgtk_spin_button_get_adjustment gtk_spin_button_get_adjustment;
alias extern (C) void function(aGtkSpinButton *, aGtkAdjustment *)TGTKgtk_spin_button_set_adjustment; extern(D) TGTKgtk_spin_button_set_adjustment gtk_spin_button_set_adjustment;
alias extern (C) _GtkWidget * function(double, double, double)TGTKgtk_spin_button_new_with_range; extern(D) TGTKgtk_spin_button_new_with_range gtk_spin_button_new_with_range;
alias extern (C) _GtkWidget * function(aGtkAdjustment *, double, guint)TGTKgtk_spin_button_new; extern(D) TGTKgtk_spin_button_new gtk_spin_button_new;
alias extern (C) void function(aGtkSpinButton *, aGtkAdjustment *, double, guint)TGTKgtk_spin_button_configure; extern(D) TGTKgtk_spin_button_configure gtk_spin_button_configure;
alias extern (C) GType function()TGTKgtk_spin_button_get_type; extern(D) TGTKgtk_spin_button_get_type gtk_spin_button_get_type;
//alias extern (C) void function(aGtkWidget *)TGTK_gtk_size_group_queue_resize; extern(D) TGTK_gtk_size_group_queue_resize _gtk_size_group_queue_resize;
//alias extern (C) void function(aGtkWidget *, aGtkRequisition *)TGTK_gtk_size_group_compute_requisition; extern(D) TGTK_gtk_size_group_compute_requisition _gtk_size_group_compute_requisition;
//alias extern (C) void function(aGtkWidget *, aGtkRequisition *)TGTK_gtk_size_group_get_child_requisition; extern(D) TGTK_gtk_size_group_get_child_requisition _gtk_size_group_get_child_requisition;
alias extern (C) _GSList * function(aGtkSizeGroup *)TGTKgtk_size_group_get_widgets; extern(D) TGTKgtk_size_group_get_widgets gtk_size_group_get_widgets;
alias extern (C) void function(aGtkSizeGroup *, aGtkWidget *)TGTKgtk_size_group_remove_widget; extern(D) TGTKgtk_size_group_remove_widget gtk_size_group_remove_widget;
alias extern (C) void function(aGtkSizeGroup *, aGtkWidget *)TGTKgtk_size_group_add_widget; extern(D) TGTKgtk_size_group_add_widget gtk_size_group_add_widget;
alias extern (C) gint function(aGtkSizeGroup *)TGTKgtk_size_group_get_ignore_hidden; extern(D) TGTKgtk_size_group_get_ignore_hidden gtk_size_group_get_ignore_hidden;
alias extern (C) void function(aGtkSizeGroup *, gint)TGTKgtk_size_group_set_ignore_hidden; extern(D) TGTKgtk_size_group_set_ignore_hidden gtk_size_group_set_ignore_hidden;
alias extern (C) gint function(aGtkSizeGroup *)TGTKgtk_size_group_get_mode; extern(D) TGTKgtk_size_group_get_mode gtk_size_group_get_mode;
alias extern (C) void function(aGtkSizeGroup *, gint)TGTKgtk_size_group_set_mode; extern(D) TGTKgtk_size_group_set_mode gtk_size_group_set_mode;
alias extern (C) _GtkSizeGroup * function(gint)TGTKgtk_size_group_new; extern(D) TGTKgtk_size_group_new gtk_size_group_new;
alias extern (C) GType function()TGTKgtk_size_group_get_type; extern(D) TGTKgtk_size_group_get_type gtk_size_group_get_type;
alias extern (C) void function(aGtkSeparatorToolItem *, gint)TGTKgtk_separator_tool_item_set_draw; extern(D) TGTKgtk_separator_tool_item_set_draw gtk_separator_tool_item_set_draw;
alias extern (C) gint function(aGtkSeparatorToolItem *)TGTKgtk_separator_tool_item_get_draw; extern(D) TGTKgtk_separator_tool_item_get_draw gtk_separator_tool_item_get_draw;
alias extern (C) _GtkToolItem * function()TGTKgtk_separator_tool_item_new; extern(D) TGTKgtk_separator_tool_item_new gtk_separator_tool_item_new;
alias extern (C) GType function()TGTKgtk_separator_tool_item_get_type; extern(D) TGTKgtk_separator_tool_item_get_type gtk_separator_tool_item_get_type;
alias extern (C) _GtkWidget * function()TGTKgtk_separator_menu_item_new; extern(D) TGTKgtk_separator_menu_item_new gtk_separator_menu_item_new;
alias extern (C) GType function()TGTKgtk_separator_menu_item_get_type; extern(D) TGTKgtk_separator_menu_item_get_type gtk_separator_menu_item_get_type;
//alias extern (C) gint function(aGtkScrolledWindow *)TGTK_gtk_scrolled_window_get_scrollbar_spacing; extern(D) TGTK_gtk_scrolled_window_get_scrollbar_spacing _gtk_scrolled_window_get_scrollbar_spacing;
alias extern (C) void function(aGtkScrolledWindow *, aGtkWidget *)TGTKgtk_scrolled_window_add_with_viewport; extern(D) TGTKgtk_scrolled_window_add_with_viewport gtk_scrolled_window_add_with_viewport;
alias extern (C) gint function(aGtkScrolledWindow *)TGTKgtk_scrolled_window_get_shadow_type; extern(D) TGTKgtk_scrolled_window_get_shadow_type gtk_scrolled_window_get_shadow_type;
alias extern (C) void function(aGtkScrolledWindow *, gint)TGTKgtk_scrolled_window_set_shadow_type; extern(D) TGTKgtk_scrolled_window_set_shadow_type gtk_scrolled_window_set_shadow_type;
alias extern (C) gint function(aGtkScrolledWindow *)TGTKgtk_scrolled_window_get_placement; extern(D) TGTKgtk_scrolled_window_get_placement gtk_scrolled_window_get_placement;
alias extern (C) void function(aGtkScrolledWindow *)TGTKgtk_scrolled_window_unset_placement; extern(D) TGTKgtk_scrolled_window_unset_placement gtk_scrolled_window_unset_placement;
alias extern (C) void function(aGtkScrolledWindow *, gint)TGTKgtk_scrolled_window_set_placement; extern(D) TGTKgtk_scrolled_window_set_placement gtk_scrolled_window_set_placement;
alias extern (C) void function(aGtkScrolledWindow *, gint *, gint *)TGTKgtk_scrolled_window_get_policy; extern(D) TGTKgtk_scrolled_window_get_policy gtk_scrolled_window_get_policy;
alias extern (C) void function(aGtkScrolledWindow *, gint, gint)TGTKgtk_scrolled_window_set_policy; extern(D) TGTKgtk_scrolled_window_set_policy gtk_scrolled_window_set_policy;
alias extern (C) _GtkWidget * function(aGtkScrolledWindow *)TGTKgtk_scrolled_window_get_vscrollbar; extern(D) TGTKgtk_scrolled_window_get_vscrollbar gtk_scrolled_window_get_vscrollbar;
alias extern (C) _GtkWidget * function(aGtkScrolledWindow *)TGTKgtk_scrolled_window_get_hscrollbar; extern(D) TGTKgtk_scrolled_window_get_hscrollbar gtk_scrolled_window_get_hscrollbar;
alias extern (C) _GtkAdjustment * function(aGtkScrolledWindow *)TGTKgtk_scrolled_window_get_vadjustment; extern(D) TGTKgtk_scrolled_window_get_vadjustment gtk_scrolled_window_get_vadjustment;
alias extern (C) _GtkAdjustment * function(aGtkScrolledWindow *)TGTKgtk_scrolled_window_get_hadjustment; extern(D) TGTKgtk_scrolled_window_get_hadjustment gtk_scrolled_window_get_hadjustment;
alias extern (C) void function(aGtkScrolledWindow *, aGtkAdjustment *)TGTKgtk_scrolled_window_set_vadjustment; extern(D) TGTKgtk_scrolled_window_set_vadjustment gtk_scrolled_window_set_vadjustment;
alias extern (C) void function(aGtkScrolledWindow *, aGtkAdjustment *)TGTKgtk_scrolled_window_set_hadjustment; extern(D) TGTKgtk_scrolled_window_set_hadjustment gtk_scrolled_window_set_hadjustment;
alias extern (C) _GtkWidget * function(aGtkAdjustment *, aGtkAdjustment *)TGTKgtk_scrolled_window_new; extern(D) TGTKgtk_scrolled_window_new gtk_scrolled_window_new;
alias extern (C) GType function()TGTKgtk_scrolled_window_get_type; extern(D) TGTKgtk_scrolled_window_get_type gtk_scrolled_window_get_type;
alias extern (C) gint function(aGtkViewport *)TGTKgtk_viewport_get_shadow_type; extern(D) TGTKgtk_viewport_get_shadow_type gtk_viewport_get_shadow_type;
alias extern (C) void function(aGtkViewport *, gint)TGTKgtk_viewport_set_shadow_type; extern(D) TGTKgtk_viewport_set_shadow_type gtk_viewport_set_shadow_type;
alias extern (C) void function(aGtkViewport *, aGtkAdjustment *)TGTKgtk_viewport_set_vadjustment; extern(D) TGTKgtk_viewport_set_vadjustment gtk_viewport_set_vadjustment;
alias extern (C) void function(aGtkViewport *, aGtkAdjustment *)TGTKgtk_viewport_set_hadjustment; extern(D) TGTKgtk_viewport_set_hadjustment gtk_viewport_set_hadjustment;
alias extern (C) _GtkAdjustment * function(aGtkViewport *)TGTKgtk_viewport_get_vadjustment; extern(D) TGTKgtk_viewport_get_vadjustment gtk_viewport_get_vadjustment;
alias extern (C) _GtkAdjustment * function(aGtkViewport *)TGTKgtk_viewport_get_hadjustment; extern(D) TGTKgtk_viewport_get_hadjustment gtk_viewport_get_hadjustment;
alias extern (C) _GtkWidget * function(aGtkAdjustment *, aGtkAdjustment *)TGTKgtk_viewport_new; extern(D) TGTKgtk_viewport_new gtk_viewport_new;
alias extern (C) GType function()TGTKgtk_viewport_get_type; extern(D) TGTKgtk_viewport_get_type gtk_viewport_get_type;
alias extern (C) void function(aGtkScaleButton *, aGtkAdjustment *)TGTKgtk_scale_button_set_adjustment; extern(D) TGTKgtk_scale_button_set_adjustment gtk_scale_button_set_adjustment;
alias extern (C) _GtkAdjustment * function(aGtkScaleButton *)TGTKgtk_scale_button_get_adjustment; extern(D) TGTKgtk_scale_button_get_adjustment gtk_scale_button_get_adjustment;
alias extern (C) void function(aGtkScaleButton *, double)TGTKgtk_scale_button_set_value; extern(D) TGTKgtk_scale_button_set_value gtk_scale_button_set_value;
alias extern (C) double function(aGtkScaleButton *)TGTKgtk_scale_button_get_value; extern(D) TGTKgtk_scale_button_get_value gtk_scale_button_get_value;
alias extern (C) void function(aGtkScaleButton *, char * *)TGTKgtk_scale_button_set_icons; extern(D) TGTKgtk_scale_button_set_icons gtk_scale_button_set_icons;
alias extern (C) _GtkWidget * function(gint, double, double, double, char * *)TGTKgtk_scale_button_new; extern(D) TGTKgtk_scale_button_new gtk_scale_button_new;
alias extern (C) GType function()TGTKgtk_scale_button_get_type; extern(D) TGTKgtk_scale_button_get_type gtk_scale_button_get_type;
alias extern (C) _GtkWidget * function(aGtkRecentManager *)TGTKgtk_recent_chooser_widget_new_for_manager; extern(D) TGTKgtk_recent_chooser_widget_new_for_manager gtk_recent_chooser_widget_new_for_manager;
alias extern (C) _GtkWidget * function()TGTKgtk_recent_chooser_widget_new; extern(D) TGTKgtk_recent_chooser_widget_new gtk_recent_chooser_widget_new;
alias extern (C) GType function()TGTKgtk_recent_chooser_widget_get_type; extern(D) TGTKgtk_recent_chooser_widget_get_type gtk_recent_chooser_widget_get_type;
alias extern (C) void function(aGtkRecentChooserMenu *, gint)TGTKgtk_recent_chooser_menu_set_show_numbers; extern(D) TGTKgtk_recent_chooser_menu_set_show_numbers gtk_recent_chooser_menu_set_show_numbers;
alias extern (C) gint function(aGtkRecentChooserMenu *)TGTKgtk_recent_chooser_menu_get_show_numbers; extern(D) TGTKgtk_recent_chooser_menu_get_show_numbers gtk_recent_chooser_menu_get_show_numbers;
alias extern (C) _GtkWidget * function(aGtkRecentManager *)TGTKgtk_recent_chooser_menu_new_for_manager; extern(D) TGTKgtk_recent_chooser_menu_new_for_manager gtk_recent_chooser_menu_new_for_manager;
alias extern (C) _GtkWidget * function()TGTKgtk_recent_chooser_menu_new; extern(D) TGTKgtk_recent_chooser_menu_new gtk_recent_chooser_menu_new;
alias extern (C) GType function()TGTKgtk_recent_chooser_menu_get_type; extern(D) TGTKgtk_recent_chooser_menu_get_type gtk_recent_chooser_menu_get_type;
alias extern (C) _GtkWidget * function(char *, aGtkWindow *, aGtkRecentManager *, char *, ...)TGTKgtk_recent_chooser_dialog_new_for_manager; extern(D) TGTKgtk_recent_chooser_dialog_new_for_manager gtk_recent_chooser_dialog_new_for_manager;
alias extern (C) _GtkWidget * function(char *, aGtkWindow *, char *, ...)TGTKgtk_recent_chooser_dialog_new; extern(D) TGTKgtk_recent_chooser_dialog_new gtk_recent_chooser_dialog_new;
alias extern (C) GType function()TGTKgtk_recent_chooser_dialog_get_type; extern(D) TGTKgtk_recent_chooser_dialog_get_type gtk_recent_chooser_dialog_get_type;
alias extern (C) void * function(void *)TGTKgtk_recent_chooser_get_filter; extern(D) TGTKgtk_recent_chooser_get_filter gtk_recent_chooser_get_filter;
alias extern (C) void function(void *, void *)TGTKgtk_recent_chooser_set_filter; extern(D) TGTKgtk_recent_chooser_set_filter gtk_recent_chooser_set_filter;
alias extern (C) _GSList * function(void *)TGTKgtk_recent_chooser_list_filters; extern(D) TGTKgtk_recent_chooser_list_filters gtk_recent_chooser_list_filters;
alias extern (C) void function(void *, void *)TGTKgtk_recent_chooser_remove_filter; extern(D) TGTKgtk_recent_chooser_remove_filter gtk_recent_chooser_remove_filter;
alias extern (C) void function(void *, void *)TGTKgtk_recent_chooser_add_filter; extern(D) TGTKgtk_recent_chooser_add_filter gtk_recent_chooser_add_filter;
alias extern (C) char * * function(void *, gsize *)TGTKgtk_recent_chooser_get_uris; extern(D) TGTKgtk_recent_chooser_get_uris gtk_recent_chooser_get_uris;
alias extern (C) _GList * function(void *)TGTKgtk_recent_chooser_get_items; extern(D) TGTKgtk_recent_chooser_get_items gtk_recent_chooser_get_items;
alias extern (C) void function(void *)TGTKgtk_recent_chooser_unselect_all; extern(D) TGTKgtk_recent_chooser_unselect_all gtk_recent_chooser_unselect_all;
alias extern (C) void function(void *)TGTKgtk_recent_chooser_select_all; extern(D) TGTKgtk_recent_chooser_select_all gtk_recent_chooser_select_all;
alias extern (C) void function(void *, char *)TGTKgtk_recent_chooser_unselect_uri; extern(D) TGTKgtk_recent_chooser_unselect_uri gtk_recent_chooser_unselect_uri;
alias extern (C) gint function(void *, char *, _GError * *)TGTKgtk_recent_chooser_select_uri; extern(D) TGTKgtk_recent_chooser_select_uri gtk_recent_chooser_select_uri;
alias extern (C) void * function(void *)TGTKgtk_recent_chooser_get_current_item; extern(D) TGTKgtk_recent_chooser_get_current_item gtk_recent_chooser_get_current_item;
alias extern (C) char * function(void *)TGTKgtk_recent_chooser_get_current_uri; extern(D) TGTKgtk_recent_chooser_get_current_uri gtk_recent_chooser_get_current_uri;
alias extern (C) gint function(void *, char *, _GError * *)TGTKgtk_recent_chooser_set_current_uri; extern(D) TGTKgtk_recent_chooser_set_current_uri gtk_recent_chooser_set_current_uri;
alias extern (C) void function(void *, _BCD_func__9605, void *, _BCD_func__13158)TGTKgtk_recent_chooser_set_sort_func; extern(D) TGTKgtk_recent_chooser_set_sort_func gtk_recent_chooser_set_sort_func;
alias extern (C) gint function(void *)TGTKgtk_recent_chooser_get_sort_type; extern(D) TGTKgtk_recent_chooser_get_sort_type gtk_recent_chooser_get_sort_type;
alias extern (C) void function(void *, gint)TGTKgtk_recent_chooser_set_sort_type; extern(D) TGTKgtk_recent_chooser_set_sort_type gtk_recent_chooser_set_sort_type;
alias extern (C) gint function(void *)TGTKgtk_recent_chooser_get_show_icons; extern(D) TGTKgtk_recent_chooser_get_show_icons gtk_recent_chooser_get_show_icons;
alias extern (C) void function(void *, gint)TGTKgtk_recent_chooser_set_show_icons; extern(D) TGTKgtk_recent_chooser_set_show_icons gtk_recent_chooser_set_show_icons;
alias extern (C) gint function(void *)TGTKgtk_recent_chooser_get_show_numbers; extern(D) TGTKgtk_recent_chooser_get_show_numbers gtk_recent_chooser_get_show_numbers;
alias extern (C) void function(void *, gint)TGTKgtk_recent_chooser_set_show_numbers; extern(D) TGTKgtk_recent_chooser_set_show_numbers gtk_recent_chooser_set_show_numbers;
alias extern (C) gint function(void *)TGTKgtk_recent_chooser_get_show_tips; extern(D) TGTKgtk_recent_chooser_get_show_tips gtk_recent_chooser_get_show_tips;
alias extern (C) void function(void *, gint)TGTKgtk_recent_chooser_set_show_tips; extern(D) TGTKgtk_recent_chooser_set_show_tips gtk_recent_chooser_set_show_tips;
alias extern (C) gint function(void *)TGTKgtk_recent_chooser_get_local_only; extern(D) TGTKgtk_recent_chooser_get_local_only gtk_recent_chooser_get_local_only;
alias extern (C) void function(void *, gint)TGTKgtk_recent_chooser_set_local_only; extern(D) TGTKgtk_recent_chooser_set_local_only gtk_recent_chooser_set_local_only;
alias extern (C) gint function(void *)TGTKgtk_recent_chooser_get_limit; extern(D) TGTKgtk_recent_chooser_get_limit gtk_recent_chooser_get_limit;
alias extern (C) void function(void *, gint)TGTKgtk_recent_chooser_set_limit; extern(D) TGTKgtk_recent_chooser_set_limit gtk_recent_chooser_set_limit;
alias extern (C) gint function(void *)TGTKgtk_recent_chooser_get_select_multiple; extern(D) TGTKgtk_recent_chooser_get_select_multiple gtk_recent_chooser_get_select_multiple;
alias extern (C) void function(void *, gint)TGTKgtk_recent_chooser_set_select_multiple; extern(D) TGTKgtk_recent_chooser_set_select_multiple gtk_recent_chooser_set_select_multiple;
alias extern (C) gint function(void *)TGTKgtk_recent_chooser_get_show_not_found; extern(D) TGTKgtk_recent_chooser_get_show_not_found gtk_recent_chooser_get_show_not_found;
alias extern (C) void function(void *, gint)TGTKgtk_recent_chooser_set_show_not_found; extern(D) TGTKgtk_recent_chooser_set_show_not_found gtk_recent_chooser_set_show_not_found;
alias extern (C) gint function(void *)TGTKgtk_recent_chooser_get_show_private; extern(D) TGTKgtk_recent_chooser_get_show_private gtk_recent_chooser_get_show_private;
alias extern (C) void function(void *, gint)TGTKgtk_recent_chooser_set_show_private; extern(D) TGTKgtk_recent_chooser_set_show_private gtk_recent_chooser_set_show_private;
alias extern (C) GType function()TGTKgtk_recent_chooser_get_type; extern(D) TGTKgtk_recent_chooser_get_type gtk_recent_chooser_get_type;
alias extern (C) GQuark function()TGTKgtk_recent_chooser_error_quark; extern(D) TGTKgtk_recent_chooser_error_quark gtk_recent_chooser_error_quark;
alias extern (C) gint function(void *, aGtkRecentFilterInfo *)TGTKgtk_recent_filter_filter; extern(D) TGTKgtk_recent_filter_filter gtk_recent_filter_filter;
alias extern (C) gint function(void *)TGTKgtk_recent_filter_get_needed; extern(D) TGTKgtk_recent_filter_get_needed gtk_recent_filter_get_needed;
alias extern (C) void function(void *, gint, _BCD_func__9607, void *, _BCD_func__13158)TGTKgtk_recent_filter_add_custom; extern(D) TGTKgtk_recent_filter_add_custom gtk_recent_filter_add_custom;
alias extern (C) void function(void *, gint)TGTKgtk_recent_filter_add_age; extern(D) TGTKgtk_recent_filter_add_age gtk_recent_filter_add_age;
alias extern (C) void function(void *, char *)TGTKgtk_recent_filter_add_group; extern(D) TGTKgtk_recent_filter_add_group gtk_recent_filter_add_group;
alias extern (C) void function(void *, char *)TGTKgtk_recent_filter_add_application; extern(D) TGTKgtk_recent_filter_add_application gtk_recent_filter_add_application;
alias extern (C) void function(void *)TGTKgtk_recent_filter_add_pixbuf_formats; extern(D) TGTKgtk_recent_filter_add_pixbuf_formats gtk_recent_filter_add_pixbuf_formats;
alias extern (C) void function(void *, char *)TGTKgtk_recent_filter_add_pattern; extern(D) TGTKgtk_recent_filter_add_pattern gtk_recent_filter_add_pattern;
alias extern (C) void function(void *, char *)TGTKgtk_recent_filter_add_mime_type; extern(D) TGTKgtk_recent_filter_add_mime_type gtk_recent_filter_add_mime_type;
alias extern (C) char * function(void *)TGTKgtk_recent_filter_get_name; extern(D) TGTKgtk_recent_filter_get_name gtk_recent_filter_get_name;
alias extern (C) void function(void *, char *)TGTKgtk_recent_filter_set_name; extern(D) TGTKgtk_recent_filter_set_name gtk_recent_filter_set_name;
alias extern (C) void * function()TGTKgtk_recent_filter_new; extern(D) TGTKgtk_recent_filter_new gtk_recent_filter_new;
alias extern (C) GType function()TGTKgtk_recent_filter_get_type; extern(D) TGTKgtk_recent_filter_get_type gtk_recent_filter_get_type;
alias extern (C) void function(aGtkRecentAction *, gint)TGTKgtk_recent_action_set_show_numbers; extern(D) TGTKgtk_recent_action_set_show_numbers gtk_recent_action_set_show_numbers;
alias extern (C) gint function(aGtkRecentAction *)TGTKgtk_recent_action_get_show_numbers; extern(D) TGTKgtk_recent_action_get_show_numbers gtk_recent_action_get_show_numbers;
alias extern (C) _GtkAction * function(char *, char *, char *, char *, aGtkRecentManager *)TGTKgtk_recent_action_new_for_manager; extern(D) TGTKgtk_recent_action_new_for_manager gtk_recent_action_new_for_manager;
alias extern (C) _GtkAction * function(char *, char *, char *, char *)TGTKgtk_recent_action_new; extern(D) TGTKgtk_recent_action_new gtk_recent_action_new;
alias extern (C) GType function()TGTKgtk_recent_action_get_type; extern(D) TGTKgtk_recent_action_get_type gtk_recent_action_get_type;
//alias extern (C) void function()TGTK_gtk_recent_manager_sync; extern(D) TGTK_gtk_recent_manager_sync _gtk_recent_manager_sync;
alias extern (C) gint function(void *, void *)TGTKgtk_recent_info_match; extern(D) TGTKgtk_recent_info_match gtk_recent_info_match;
alias extern (C) gint function(void *)TGTKgtk_recent_info_exists; extern(D) TGTKgtk_recent_info_exists gtk_recent_info_exists;
alias extern (C) gint function(void *)TGTKgtk_recent_info_is_local; extern(D) TGTKgtk_recent_info_is_local gtk_recent_info_is_local;
alias extern (C) gint function(void *)TGTKgtk_recent_info_get_age; extern(D) TGTKgtk_recent_info_get_age gtk_recent_info_get_age;
alias extern (C) char * function(void *)TGTKgtk_recent_info_get_uri_display; extern(D) TGTKgtk_recent_info_get_uri_display gtk_recent_info_get_uri_display;
alias extern (C) char * function(void *)TGTKgtk_recent_info_get_short_name; extern(D) TGTKgtk_recent_info_get_short_name gtk_recent_info_get_short_name;
alias extern (C) void * function(void *, gint)TGTKgtk_recent_info_get_icon; extern(D) TGTKgtk_recent_info_get_icon gtk_recent_info_get_icon;
alias extern (C) gint function(void *, char *)TGTKgtk_recent_info_has_group; extern(D) TGTKgtk_recent_info_has_group gtk_recent_info_has_group;
alias extern (C) char * * function(void *, gsize *)TGTKgtk_recent_info_get_groups; extern(D) TGTKgtk_recent_info_get_groups gtk_recent_info_get_groups;
alias extern (C) gint function(void *, char *)TGTKgtk_recent_info_has_application; extern(D) TGTKgtk_recent_info_has_application gtk_recent_info_has_application;
alias extern (C) char * function(void *)TGTKgtk_recent_info_last_application; extern(D) TGTKgtk_recent_info_last_application gtk_recent_info_last_application;
alias extern (C) char * * function(void *, gsize *)TGTKgtk_recent_info_get_applications; extern(D) TGTKgtk_recent_info_get_applications gtk_recent_info_get_applications;
alias extern (C) gint function(void *, char *, char * *, guint *, gint *)TGTKgtk_recent_info_get_application_info; extern(D) TGTKgtk_recent_info_get_application_info gtk_recent_info_get_application_info;
alias extern (C) gint function(void *)TGTKgtk_recent_info_get_private_hint; extern(D) TGTKgtk_recent_info_get_private_hint gtk_recent_info_get_private_hint;
alias extern (C) gint function(void *)TGTKgtk_recent_info_get_visited; extern(D) TGTKgtk_recent_info_get_visited gtk_recent_info_get_visited;
alias extern (C) gint function(void *)TGTKgtk_recent_info_get_modified; extern(D) TGTKgtk_recent_info_get_modified gtk_recent_info_get_modified;
alias extern (C) gint function(void *)TGTKgtk_recent_info_get_added; extern(D) TGTKgtk_recent_info_get_added gtk_recent_info_get_added;
alias extern (C) char * function(void *)TGTKgtk_recent_info_get_mime_type; extern(D) TGTKgtk_recent_info_get_mime_type gtk_recent_info_get_mime_type;
alias extern (C) char * function(void *)TGTKgtk_recent_info_get_description; extern(D) TGTKgtk_recent_info_get_description gtk_recent_info_get_description;
alias extern (C) char * function(void *)TGTKgtk_recent_info_get_display_name; extern(D) TGTKgtk_recent_info_get_display_name gtk_recent_info_get_display_name;
alias extern (C) char * function(void *)TGTKgtk_recent_info_get_uri; extern(D) TGTKgtk_recent_info_get_uri gtk_recent_info_get_uri;
alias extern (C) void function(void *)TGTKgtk_recent_info_unref; extern(D) TGTKgtk_recent_info_unref gtk_recent_info_unref;
alias extern (C) void * function(void *)TGTKgtk_recent_info_ref; extern(D) TGTKgtk_recent_info_ref gtk_recent_info_ref;
alias extern (C) GType function()TGTKgtk_recent_info_get_type; extern(D) TGTKgtk_recent_info_get_type gtk_recent_info_get_type;
alias extern (C) gint function(aGtkRecentManager *, _GError * *)TGTKgtk_recent_manager_purge_items; extern(D) TGTKgtk_recent_manager_purge_items gtk_recent_manager_purge_items;
alias extern (C) _GList * function(aGtkRecentManager *)TGTKgtk_recent_manager_get_items; extern(D) TGTKgtk_recent_manager_get_items gtk_recent_manager_get_items;
alias extern (C) gint function(aGtkRecentManager *)TGTKgtk_recent_manager_get_limit; extern(D) TGTKgtk_recent_manager_get_limit gtk_recent_manager_get_limit;
alias extern (C) void function(aGtkRecentManager *, gint)TGTKgtk_recent_manager_set_limit; extern(D) TGTKgtk_recent_manager_set_limit gtk_recent_manager_set_limit;
alias extern (C) gint function(aGtkRecentManager *, char *, char *, _GError * *)TGTKgtk_recent_manager_move_item; extern(D) TGTKgtk_recent_manager_move_item gtk_recent_manager_move_item;
alias extern (C) gint function(aGtkRecentManager *, char *)TGTKgtk_recent_manager_has_item; extern(D) TGTKgtk_recent_manager_has_item gtk_recent_manager_has_item;
alias extern (C) void * function(aGtkRecentManager *, char *, _GError * *)TGTKgtk_recent_manager_lookup_item; extern(D) TGTKgtk_recent_manager_lookup_item gtk_recent_manager_lookup_item;
alias extern (C) gint function(aGtkRecentManager *, char *, _GError * *)TGTKgtk_recent_manager_remove_item; extern(D) TGTKgtk_recent_manager_remove_item gtk_recent_manager_remove_item;
alias extern (C) gint function(aGtkRecentManager *, char *, aGtkRecentData *)TGTKgtk_recent_manager_add_full; extern(D) TGTKgtk_recent_manager_add_full gtk_recent_manager_add_full;
alias extern (C) gint function(aGtkRecentManager *, char *)TGTKgtk_recent_manager_add_item; extern(D) TGTKgtk_recent_manager_add_item gtk_recent_manager_add_item;
alias extern (C) void function(aGtkRecentManager *, _GdkScreen *)TGTKgtk_recent_manager_set_screen; extern(D) TGTKgtk_recent_manager_set_screen gtk_recent_manager_set_screen;
alias extern (C) _GtkRecentManager * function(_GdkScreen *)TGTKgtk_recent_manager_get_for_screen; extern(D) TGTKgtk_recent_manager_get_for_screen gtk_recent_manager_get_for_screen;
alias extern (C) _GtkRecentManager * function()TGTKgtk_recent_manager_get_default; extern(D) TGTKgtk_recent_manager_get_default gtk_recent_manager_get_default;
alias extern (C) _GtkRecentManager * function()TGTKgtk_recent_manager_new; extern(D) TGTKgtk_recent_manager_new gtk_recent_manager_new;
alias extern (C) GType function()TGTKgtk_recent_manager_get_type; extern(D) TGTKgtk_recent_manager_get_type gtk_recent_manager_get_type;
alias extern (C) GQuark function()TGTKgtk_recent_manager_error_quark; extern(D) TGTKgtk_recent_manager_error_quark gtk_recent_manager_error_quark;
alias extern (C) void function(aGtkRadioToolButton *, _GSList *)TGTKgtk_radio_tool_button_set_group; extern(D) TGTKgtk_radio_tool_button_set_group gtk_radio_tool_button_set_group;
alias extern (C) _GSList * function(aGtkRadioToolButton *)TGTKgtk_radio_tool_button_get_group; extern(D) TGTKgtk_radio_tool_button_get_group gtk_radio_tool_button_get_group;
alias extern (C) _GtkToolItem * function(aGtkRadioToolButton *, char *)TGTKgtk_radio_tool_button_new_with_stock_from_widget; extern(D) TGTKgtk_radio_tool_button_new_with_stock_from_widget gtk_radio_tool_button_new_with_stock_from_widget;
alias extern (C) _GtkToolItem * function(aGtkRadioToolButton *)TGTKgtk_radio_tool_button_new_from_widget; extern(D) TGTKgtk_radio_tool_button_new_from_widget gtk_radio_tool_button_new_from_widget;
alias extern (C) _GtkToolItem * function(_GSList *, char *)TGTKgtk_radio_tool_button_new_from_stock; extern(D) TGTKgtk_radio_tool_button_new_from_stock gtk_radio_tool_button_new_from_stock;
alias extern (C) _GtkToolItem * function(_GSList *)TGTKgtk_radio_tool_button_new; extern(D) TGTKgtk_radio_tool_button_new gtk_radio_tool_button_new;
alias extern (C) GType function()TGTKgtk_radio_tool_button_get_type; extern(D) TGTKgtk_radio_tool_button_get_type gtk_radio_tool_button_get_type;
alias extern (C) gint function(aGtkToggleToolButton *)TGTKgtk_toggle_tool_button_get_active; extern(D) TGTKgtk_toggle_tool_button_get_active gtk_toggle_tool_button_get_active;
alias extern (C) void function(aGtkToggleToolButton *, gint)TGTKgtk_toggle_tool_button_set_active; extern(D) TGTKgtk_toggle_tool_button_set_active gtk_toggle_tool_button_set_active;
alias extern (C) _GtkToolItem * function(char *)TGTKgtk_toggle_tool_button_new_from_stock; extern(D) TGTKgtk_toggle_tool_button_new_from_stock gtk_toggle_tool_button_new_from_stock;
alias extern (C) _GtkToolItem * function()TGTKgtk_toggle_tool_button_new; extern(D) TGTKgtk_toggle_tool_button_new gtk_toggle_tool_button_new;
alias extern (C) GType function()TGTKgtk_toggle_tool_button_get_type; extern(D) TGTKgtk_toggle_tool_button_get_type gtk_toggle_tool_button_get_type;
alias extern (C) void function(aGtkRadioMenuItem *, _GSList *)TGTKgtk_radio_menu_item_set_group; extern(D) TGTKgtk_radio_menu_item_set_group gtk_radio_menu_item_set_group;
alias extern (C) _GSList * function(aGtkRadioMenuItem *)TGTKgtk_radio_menu_item_get_group; extern(D) TGTKgtk_radio_menu_item_get_group gtk_radio_menu_item_get_group;
alias extern (C) _GtkWidget * function(aGtkRadioMenuItem *, char *)TGTKgtk_radio_menu_item_new_with_label_from_widget; extern(D) TGTKgtk_radio_menu_item_new_with_label_from_widget gtk_radio_menu_item_new_with_label_from_widget;
alias extern (C) _GtkWidget * function(aGtkRadioMenuItem *, char *)TGTKgtk_radio_menu_item_new_with_mnemonic_from_widget; extern(D) TGTKgtk_radio_menu_item_new_with_mnemonic_from_widget gtk_radio_menu_item_new_with_mnemonic_from_widget;
alias extern (C) _GtkWidget * function(aGtkRadioMenuItem *)TGTKgtk_radio_menu_item_new_from_widget; extern(D) TGTKgtk_radio_menu_item_new_from_widget gtk_radio_menu_item_new_from_widget;
alias extern (C) _GtkWidget * function(_GSList *, in char *)TGTKgtk_radio_menu_item_new_with_mnemonic; extern(D) TGTKgtk_radio_menu_item_new_with_mnemonic gtk_radio_menu_item_new_with_mnemonic;
alias extern (C) _GtkWidget * function(_GSList *, in char *)TGTKgtk_radio_menu_item_new_with_label; extern(D) TGTKgtk_radio_menu_item_new_with_label gtk_radio_menu_item_new_with_label;
alias extern (C) _GtkWidget * function(_GSList *)TGTKgtk_radio_menu_item_new; extern(D) TGTKgtk_radio_menu_item_new gtk_radio_menu_item_new;
alias extern (C) GType function()TGTKgtk_radio_menu_item_get_type; extern(D) TGTKgtk_radio_menu_item_get_type gtk_radio_menu_item_get_type;
alias extern (C) void function(aGtkRadioButton *, _GSList *)TGTKgtk_radio_button_set_group; extern(D) TGTKgtk_radio_button_set_group gtk_radio_button_set_group;
alias extern (C) _GSList * function(aGtkRadioButton *)TGTKgtk_radio_button_get_group; extern(D) TGTKgtk_radio_button_get_group gtk_radio_button_get_group;
alias extern (C) _GtkWidget * function(aGtkRadioButton *, char *)TGTKgtk_radio_button_new_with_mnemonic_from_widget; extern(D) TGTKgtk_radio_button_new_with_mnemonic_from_widget gtk_radio_button_new_with_mnemonic_from_widget;
alias extern (C) _GtkWidget * function(_GSList *, char *)TGTKgtk_radio_button_new_with_mnemonic; extern(D) TGTKgtk_radio_button_new_with_mnemonic gtk_radio_button_new_with_mnemonic;
alias extern (C) _GtkWidget * function(aGtkRadioButton *, char *)TGTKgtk_radio_button_new_with_label_from_widget; extern(D) TGTKgtk_radio_button_new_with_label_from_widget gtk_radio_button_new_with_label_from_widget;
alias extern (C) _GtkWidget * function(_GSList *, char *)TGTKgtk_radio_button_new_with_label; extern(D) TGTKgtk_radio_button_new_with_label gtk_radio_button_new_with_label;
alias extern (C) _GtkWidget * function(aGtkRadioButton *)TGTKgtk_radio_button_new_from_widget; extern(D) TGTKgtk_radio_button_new_from_widget gtk_radio_button_new_from_widget;
alias extern (C) _GtkWidget * function(_GSList *)TGTKgtk_radio_button_new; extern(D) TGTKgtk_radio_button_new gtk_radio_button_new;
alias extern (C) GType function()TGTKgtk_radio_button_get_type; extern(D) TGTKgtk_radio_button_get_type gtk_radio_button_get_type;
alias extern (C) void function(aGtkRadioAction *, gint)TGTKgtk_radio_action_set_current_value; extern(D) TGTKgtk_radio_action_set_current_value gtk_radio_action_set_current_value;
alias extern (C) gint function(aGtkRadioAction *)TGTKgtk_radio_action_get_current_value; extern(D) TGTKgtk_radio_action_get_current_value gtk_radio_action_get_current_value;
alias extern (C) void function(aGtkRadioAction *, _GSList *)TGTKgtk_radio_action_set_group; extern(D) TGTKgtk_radio_action_set_group gtk_radio_action_set_group;
alias extern (C) _GSList * function(aGtkRadioAction *)TGTKgtk_radio_action_get_group; extern(D) TGTKgtk_radio_action_get_group gtk_radio_action_get_group;
alias extern (C) _GtkRadioAction * function(char *, char *, char *, char *, gint)TGTKgtk_radio_action_new; extern(D) TGTKgtk_radio_action_new gtk_radio_action_new;
alias extern (C) GType function()TGTKgtk_radio_action_get_type; extern(D) TGTKgtk_radio_action_get_type gtk_radio_action_get_type;
alias extern (C) gint function(aGtkToggleAction *)TGTKgtk_toggle_action_get_draw_as_radio; extern(D) TGTKgtk_toggle_action_get_draw_as_radio gtk_toggle_action_get_draw_as_radio;
alias extern (C) void function(aGtkToggleAction *, gint)TGTKgtk_toggle_action_set_draw_as_radio; extern(D) TGTKgtk_toggle_action_set_draw_as_radio gtk_toggle_action_set_draw_as_radio;
alias extern (C) gint function(aGtkToggleAction *)TGTKgtk_toggle_action_get_active; extern(D) TGTKgtk_toggle_action_get_active gtk_toggle_action_get_active;
alias extern (C) void function(aGtkToggleAction *, gint)TGTKgtk_toggle_action_set_active; extern(D) TGTKgtk_toggle_action_set_active gtk_toggle_action_set_active;
alias extern (C) void function(aGtkToggleAction *)TGTKgtk_toggle_action_toggled; extern(D) TGTKgtk_toggle_action_toggled gtk_toggle_action_toggled;
alias extern (C) _GtkToggleAction * function(char *, char *, char *, char *)TGTKgtk_toggle_action_new; extern(D) TGTKgtk_toggle_action_new gtk_toggle_action_new;
alias extern (C) GType function()TGTKgtk_toggle_action_get_type; extern(D) TGTKgtk_toggle_action_get_type gtk_toggle_action_get_type;
alias extern (C) void function(aGtkProgressBar *, double)TGTKgtk_progress_bar_update; extern(D) TGTKgtk_progress_bar_update gtk_progress_bar_update;
alias extern (C) void function(aGtkProgressBar *, guint)TGTKgtk_progress_bar_set_activity_blocks; extern(D) TGTKgtk_progress_bar_set_activity_blocks gtk_progress_bar_set_activity_blocks;
alias extern (C) void function(aGtkProgressBar *, guint)TGTKgtk_progress_bar_set_activity_step; extern(D) TGTKgtk_progress_bar_set_activity_step gtk_progress_bar_set_activity_step;
alias extern (C) void function(aGtkProgressBar *, guint)TGTKgtk_progress_bar_set_discrete_blocks; extern(D) TGTKgtk_progress_bar_set_discrete_blocks gtk_progress_bar_set_discrete_blocks;
alias extern (C) void function(aGtkProgressBar *, gint)TGTKgtk_progress_bar_set_bar_style; extern(D) TGTKgtk_progress_bar_set_bar_style gtk_progress_bar_set_bar_style;
alias extern (C) _GtkWidget * function(aGtkAdjustment *)TGTKgtk_progress_bar_new_with_adjustment; extern(D) TGTKgtk_progress_bar_new_with_adjustment gtk_progress_bar_new_with_adjustment;
alias extern (C) gint function(aGtkProgressBar *)TGTKgtk_progress_bar_get_ellipsize; extern(D) TGTKgtk_progress_bar_get_ellipsize gtk_progress_bar_get_ellipsize;
alias extern (C) void function(aGtkProgressBar *, gint)TGTKgtk_progress_bar_set_ellipsize; extern(D) TGTKgtk_progress_bar_set_ellipsize gtk_progress_bar_set_ellipsize;
alias extern (C) gint function(aGtkProgressBar *)TGTKgtk_progress_bar_get_orientation; extern(D) TGTKgtk_progress_bar_get_orientation gtk_progress_bar_get_orientation;
alias extern (C) double function(aGtkProgressBar *)TGTKgtk_progress_bar_get_pulse_step; extern(D) TGTKgtk_progress_bar_get_pulse_step gtk_progress_bar_get_pulse_step;
alias extern (C) double function(aGtkProgressBar *)TGTKgtk_progress_bar_get_fraction; extern(D) TGTKgtk_progress_bar_get_fraction gtk_progress_bar_get_fraction;
alias extern (C) char * function(aGtkProgressBar *)TGTKgtk_progress_bar_get_text; extern(D) TGTKgtk_progress_bar_get_text gtk_progress_bar_get_text;
alias extern (C) void function(aGtkProgressBar *, gint)TGTKgtk_progress_bar_set_orientation; extern(D) TGTKgtk_progress_bar_set_orientation gtk_progress_bar_set_orientation;
alias extern (C) void function(aGtkProgressBar *, double)TGTKgtk_progress_bar_set_pulse_step; extern(D) TGTKgtk_progress_bar_set_pulse_step gtk_progress_bar_set_pulse_step;
alias extern (C) void function(aGtkProgressBar *, double)TGTKgtk_progress_bar_set_fraction; extern(D) TGTKgtk_progress_bar_set_fraction gtk_progress_bar_set_fraction;
alias extern (C) void function(aGtkProgressBar *, char *)TGTKgtk_progress_bar_set_text; extern(D) TGTKgtk_progress_bar_set_text gtk_progress_bar_set_text;
alias extern (C) void function(aGtkProgressBar *)TGTKgtk_progress_bar_pulse; extern(D) TGTKgtk_progress_bar_pulse gtk_progress_bar_pulse;
alias extern (C) _GtkWidget * function()TGTKgtk_progress_bar_new; extern(D) TGTKgtk_progress_bar_new gtk_progress_bar_new;
alias extern (C) GType function()TGTKgtk_progress_bar_get_type; extern(D) TGTKgtk_progress_bar_get_type gtk_progress_bar_get_type;
alias extern (C) double function(aGtkProgress *, double)TGTKgtk_progress_get_percentage_from_value; extern(D) TGTKgtk_progress_get_percentage_from_value gtk_progress_get_percentage_from_value;
alias extern (C) double function(aGtkProgress *)TGTKgtk_progress_get_current_percentage; extern(D) TGTKgtk_progress_get_current_percentage gtk_progress_get_current_percentage;
alias extern (C) char * function(aGtkProgress *, double)TGTKgtk_progress_get_text_from_value; extern(D) TGTKgtk_progress_get_text_from_value gtk_progress_get_text_from_value;
alias extern (C) char * function(aGtkProgress *)TGTKgtk_progress_get_current_text; extern(D) TGTKgtk_progress_get_current_text gtk_progress_get_current_text;
alias extern (C) void function(aGtkProgress *, gint)TGTKgtk_progress_set_activity_mode; extern(D) TGTKgtk_progress_set_activity_mode gtk_progress_set_activity_mode;
alias extern (C) double function(aGtkProgress *)TGTKgtk_progress_get_value; extern(D) TGTKgtk_progress_get_value gtk_progress_get_value;
alias extern (C) void function(aGtkProgress *, double)TGTKgtk_progress_set_value; extern(D) TGTKgtk_progress_set_value gtk_progress_set_value;
alias extern (C) void function(aGtkProgress *, double)TGTKgtk_progress_set_percentage; extern(D) TGTKgtk_progress_set_percentage gtk_progress_set_percentage;
alias extern (C) void function(aGtkProgress *, double, double, double)TGTKgtk_progress_configure; extern(D) TGTKgtk_progress_configure gtk_progress_configure;
alias extern (C) void function(aGtkProgress *, aGtkAdjustment *)TGTKgtk_progress_set_adjustment; extern(D) TGTKgtk_progress_set_adjustment gtk_progress_set_adjustment;
alias extern (C) void function(aGtkProgress *, char *)TGTKgtk_progress_set_format_string; extern(D) TGTKgtk_progress_set_format_string gtk_progress_set_format_string;
alias extern (C) void function(aGtkProgress *, float, float)TGTKgtk_progress_set_text_alignment; extern(D) TGTKgtk_progress_set_text_alignment gtk_progress_set_text_alignment;
alias extern (C) void function(aGtkProgress *, gint)TGTKgtk_progress_set_show_text; extern(D) TGTKgtk_progress_set_show_text gtk_progress_set_show_text;
alias extern (C) guint function()TGTKgtk_progress_get_type; extern(D) TGTKgtk_progress_get_type gtk_progress_get_type;
alias extern (C) void function(aGtkWindow *, void *, void *, _BCD_func__9769, void *)TGTKgtk_print_run_page_setup_dialog_async; extern(D) TGTKgtk_print_run_page_setup_dialog_async gtk_print_run_page_setup_dialog_async;
alias extern (C) void * function(aGtkWindow *, void *, void *)TGTKgtk_print_run_page_setup_dialog; extern(D) TGTKgtk_print_run_page_setup_dialog gtk_print_run_page_setup_dialog;
alias extern (C) void function(aGtkPrintOperation *)TGTKgtk_print_operation_cancel; extern(D) TGTKgtk_print_operation_cancel gtk_print_operation_cancel;
alias extern (C) gint function(aGtkPrintOperation *)TGTKgtk_print_operation_is_finished; extern(D) TGTKgtk_print_operation_is_finished gtk_print_operation_is_finished;
alias extern (C) char * function(aGtkPrintOperation *)TGTKgtk_print_operation_get_status_string; extern(D) TGTKgtk_print_operation_get_status_string gtk_print_operation_get_status_string;
alias extern (C) gint function(aGtkPrintOperation *)TGTKgtk_print_operation_get_status; extern(D) TGTKgtk_print_operation_get_status gtk_print_operation_get_status;
alias extern (C) void function(aGtkPrintOperation *, _GError * *)TGTKgtk_print_operation_get_error; extern(D) TGTKgtk_print_operation_get_error gtk_print_operation_get_error;
alias extern (C) gint function(aGtkPrintOperation *, gint, aGtkWindow *, _GError * *)TGTKgtk_print_operation_run; extern(D) TGTKgtk_print_operation_run gtk_print_operation_run;
alias extern (C) void function(aGtkPrintOperation *, char *)TGTKgtk_print_operation_set_custom_tab_label; extern(D) TGTKgtk_print_operation_set_custom_tab_label gtk_print_operation_set_custom_tab_label;
alias extern (C) void function(aGtkPrintOperation *, gint)TGTKgtk_print_operation_set_allow_async; extern(D) TGTKgtk_print_operation_set_allow_async gtk_print_operation_set_allow_async;
alias extern (C) void function(aGtkPrintOperation *, gint)TGTKgtk_print_operation_set_show_progress; extern(D) TGTKgtk_print_operation_set_show_progress gtk_print_operation_set_show_progress;
alias extern (C) void function(aGtkPrintOperation *, gint)TGTKgtk_print_operation_set_track_print_status; extern(D) TGTKgtk_print_operation_set_track_print_status gtk_print_operation_set_track_print_status;
alias extern (C) void function(aGtkPrintOperation *, char *)TGTKgtk_print_operation_set_export_filename; extern(D) TGTKgtk_print_operation_set_export_filename gtk_print_operation_set_export_filename;
alias extern (C) void function(aGtkPrintOperation *, gint)TGTKgtk_print_operation_set_unit; extern(D) TGTKgtk_print_operation_set_unit gtk_print_operation_set_unit;
alias extern (C) void function(aGtkPrintOperation *, gint)TGTKgtk_print_operation_set_use_full_page; extern(D) TGTKgtk_print_operation_set_use_full_page gtk_print_operation_set_use_full_page;
alias extern (C) void function(aGtkPrintOperation *, gint)TGTKgtk_print_operation_set_current_page; extern(D) TGTKgtk_print_operation_set_current_page gtk_print_operation_set_current_page;
alias extern (C) void function(aGtkPrintOperation *, gint)TGTKgtk_print_operation_set_n_pages; extern(D) TGTKgtk_print_operation_set_n_pages gtk_print_operation_set_n_pages;
alias extern (C) void function(aGtkPrintOperation *, char *)TGTKgtk_print_operation_set_job_name; extern(D) TGTKgtk_print_operation_set_job_name gtk_print_operation_set_job_name;
alias extern (C) void * function(aGtkPrintOperation *)TGTKgtk_print_operation_get_print_settings; extern(D) TGTKgtk_print_operation_get_print_settings gtk_print_operation_get_print_settings;
alias extern (C) void function(aGtkPrintOperation *, void *)TGTKgtk_print_operation_set_print_settings; extern(D) TGTKgtk_print_operation_set_print_settings gtk_print_operation_set_print_settings;
alias extern (C) void * function(aGtkPrintOperation *)TGTKgtk_print_operation_get_default_page_setup; extern(D) TGTKgtk_print_operation_get_default_page_setup gtk_print_operation_get_default_page_setup;
alias extern (C) void function(aGtkPrintOperation *, void *)TGTKgtk_print_operation_set_default_page_setup; extern(D) TGTKgtk_print_operation_set_default_page_setup gtk_print_operation_set_default_page_setup;
alias extern (C) _GtkPrintOperation * function()TGTKgtk_print_operation_new; extern(D) TGTKgtk_print_operation_new gtk_print_operation_new;
alias extern (C) GType function()TGTKgtk_print_operation_get_type; extern(D) TGTKgtk_print_operation_get_type gtk_print_operation_get_type;
alias extern (C) GQuark function()TGTKgtk_print_error_quark; extern(D) TGTKgtk_print_error_quark gtk_print_error_quark;
alias extern (C) gint function(void *, gint)TGTKgtk_print_operation_preview_is_selected; extern(D) TGTKgtk_print_operation_preview_is_selected gtk_print_operation_preview_is_selected;
alias extern (C) void function(void *)TGTKgtk_print_operation_preview_end_preview; extern(D) TGTKgtk_print_operation_preview_end_preview gtk_print_operation_preview_end_preview;
alias extern (C) void function(void *, gint)TGTKgtk_print_operation_preview_render_page; extern(D) TGTKgtk_print_operation_preview_render_page gtk_print_operation_preview_render_page;
alias extern (C) GType function()TGTKgtk_print_operation_preview_get_type; extern(D) TGTKgtk_print_operation_preview_get_type gtk_print_operation_preview_get_type;
alias extern (C) void function(void *, void *, double, double)TGTKgtk_print_context_set_cairo_context; extern(D) TGTKgtk_print_context_set_cairo_context gtk_print_context_set_cairo_context;
alias extern (C) void * function(void *)TGTKgtk_print_context_create_pango_layout; extern(D) TGTKgtk_print_context_create_pango_layout gtk_print_context_create_pango_layout;
alias extern (C) void * function(void *)TGTKgtk_print_context_create_pango_context; extern(D) TGTKgtk_print_context_create_pango_context gtk_print_context_create_pango_context;
alias extern (C) void * function(void *)TGTKgtk_print_context_get_pango_fontmap; extern(D) TGTKgtk_print_context_get_pango_fontmap gtk_print_context_get_pango_fontmap;
alias extern (C) double function(void *)TGTKgtk_print_context_get_dpi_y; extern(D) TGTKgtk_print_context_get_dpi_y gtk_print_context_get_dpi_y;
alias extern (C) double function(void *)TGTKgtk_print_context_get_dpi_x; extern(D) TGTKgtk_print_context_get_dpi_x gtk_print_context_get_dpi_x;
alias extern (C) double function(void *)TGTKgtk_print_context_get_height; extern(D) TGTKgtk_print_context_get_height gtk_print_context_get_height;
alias extern (C) double function(void *)TGTKgtk_print_context_get_width; extern(D) TGTKgtk_print_context_get_width gtk_print_context_get_width;
alias extern (C) void * function(void *)TGTKgtk_print_context_get_page_setup; extern(D) TGTKgtk_print_context_get_page_setup gtk_print_context_get_page_setup;
alias extern (C) void * function(void *)TGTKgtk_print_context_get_cairo_context; extern(D) TGTKgtk_print_context_get_cairo_context gtk_print_context_get_cairo_context;
alias extern (C) GType function()TGTKgtk_print_context_get_type; extern(D) TGTKgtk_print_context_get_type gtk_print_context_get_type;
alias extern (C) void function(void *, char *)TGTKgtk_print_settings_set_output_bin; extern(D) TGTKgtk_print_settings_set_output_bin gtk_print_settings_set_output_bin;
alias extern (C) char * function(void *)TGTKgtk_print_settings_get_output_bin; extern(D) TGTKgtk_print_settings_get_output_bin gtk_print_settings_get_output_bin;
alias extern (C) void function(void *, char *)TGTKgtk_print_settings_set_finishings; extern(D) TGTKgtk_print_settings_set_finishings gtk_print_settings_set_finishings;
alias extern (C) char * function(void *)TGTKgtk_print_settings_get_finishings; extern(D) TGTKgtk_print_settings_get_finishings gtk_print_settings_get_finishings;
alias extern (C) void function(void *, char *)TGTKgtk_print_settings_set_dither; extern(D) TGTKgtk_print_settings_set_dither gtk_print_settings_set_dither;
alias extern (C) char * function(void *)TGTKgtk_print_settings_get_dither; extern(D) TGTKgtk_print_settings_get_dither gtk_print_settings_get_dither;
alias extern (C) void function(void *, char *)TGTKgtk_print_settings_set_media_type; extern(D) TGTKgtk_print_settings_set_media_type gtk_print_settings_set_media_type;
alias extern (C) char * function(void *)TGTKgtk_print_settings_get_media_type; extern(D) TGTKgtk_print_settings_get_media_type gtk_print_settings_get_media_type;
alias extern (C) void function(void *, char *)TGTKgtk_print_settings_set_default_source; extern(D) TGTKgtk_print_settings_set_default_source gtk_print_settings_set_default_source;
alias extern (C) char * function(void *)TGTKgtk_print_settings_get_default_source; extern(D) TGTKgtk_print_settings_get_default_source gtk_print_settings_get_default_source;
alias extern (C) void function(void *, gint)TGTKgtk_print_settings_set_page_set; extern(D) TGTKgtk_print_settings_set_page_set gtk_print_settings_set_page_set;
alias extern (C) gint function(void *)TGTKgtk_print_settings_get_page_set; extern(D) TGTKgtk_print_settings_get_page_set gtk_print_settings_get_page_set;
alias extern (C) void function(void *, aGtkPageRange *, gint)TGTKgtk_print_settings_set_page_ranges; extern(D) TGTKgtk_print_settings_set_page_ranges gtk_print_settings_set_page_ranges;
alias extern (C) _GtkPageRange * function(void *, gint *)TGTKgtk_print_settings_get_page_ranges; extern(D) TGTKgtk_print_settings_get_page_ranges gtk_print_settings_get_page_ranges;
alias extern (C) void function(void *, gint)TGTKgtk_print_settings_set_print_pages; extern(D) TGTKgtk_print_settings_set_print_pages gtk_print_settings_set_print_pages;
alias extern (C) gint function(void *)TGTKgtk_print_settings_get_print_pages; extern(D) TGTKgtk_print_settings_get_print_pages gtk_print_settings_get_print_pages;
alias extern (C) void function(void *, double)TGTKgtk_print_settings_set_scale; extern(D) TGTKgtk_print_settings_set_scale gtk_print_settings_set_scale;
alias extern (C) double function(void *)TGTKgtk_print_settings_get_scale; extern(D) TGTKgtk_print_settings_get_scale gtk_print_settings_get_scale;
alias extern (C) void function(void *, gint)TGTKgtk_print_settings_set_resolution; extern(D) TGTKgtk_print_settings_set_resolution gtk_print_settings_set_resolution;
alias extern (C) gint function(void *)TGTKgtk_print_settings_get_resolution; extern(D) TGTKgtk_print_settings_get_resolution gtk_print_settings_get_resolution;
alias extern (C) void function(void *, gint)TGTKgtk_print_settings_set_number_up; extern(D) TGTKgtk_print_settings_set_number_up gtk_print_settings_set_number_up;
alias extern (C) gint function(void *)TGTKgtk_print_settings_get_number_up; extern(D) TGTKgtk_print_settings_get_number_up gtk_print_settings_get_number_up;
alias extern (C) void function(void *, gint)TGTKgtk_print_settings_set_n_copies; extern(D) TGTKgtk_print_settings_set_n_copies gtk_print_settings_set_n_copies;
alias extern (C) gint function(void *)TGTKgtk_print_settings_get_n_copies; extern(D) TGTKgtk_print_settings_get_n_copies gtk_print_settings_get_n_copies;
alias extern (C) void function(void *, gint)TGTKgtk_print_settings_set_quality; extern(D) TGTKgtk_print_settings_set_quality gtk_print_settings_set_quality;
alias extern (C) gint function(void *)TGTKgtk_print_settings_get_quality; extern(D) TGTKgtk_print_settings_get_quality gtk_print_settings_get_quality;
alias extern (C) void function(void *, gint)TGTKgtk_print_settings_set_duplex; extern(D) TGTKgtk_print_settings_set_duplex gtk_print_settings_set_duplex;
alias extern (C) gint function(void *)TGTKgtk_print_settings_get_duplex; extern(D) TGTKgtk_print_settings_get_duplex gtk_print_settings_get_duplex;
alias extern (C) void function(void *, gint)TGTKgtk_print_settings_set_reverse; extern(D) TGTKgtk_print_settings_set_reverse gtk_print_settings_set_reverse;
alias extern (C) gint function(void *)TGTKgtk_print_settings_get_reverse; extern(D) TGTKgtk_print_settings_get_reverse gtk_print_settings_get_reverse;
alias extern (C) void function(void *, gint)TGTKgtk_print_settings_set_collate; extern(D) TGTKgtk_print_settings_set_collate gtk_print_settings_set_collate;
alias extern (C) gint function(void *)TGTKgtk_print_settings_get_collate; extern(D) TGTKgtk_print_settings_get_collate gtk_print_settings_get_collate;
alias extern (C) void function(void *, gint)TGTKgtk_print_settings_set_use_color; extern(D) TGTKgtk_print_settings_set_use_color gtk_print_settings_set_use_color;
alias extern (C) gint function(void *)TGTKgtk_print_settings_get_use_color; extern(D) TGTKgtk_print_settings_get_use_color gtk_print_settings_get_use_color;
alias extern (C) void function(void *, double, gint)TGTKgtk_print_settings_set_paper_height; extern(D) TGTKgtk_print_settings_set_paper_height gtk_print_settings_set_paper_height;
alias extern (C) double function(void *, gint)TGTKgtk_print_settings_get_paper_height; extern(D) TGTKgtk_print_settings_get_paper_height gtk_print_settings_get_paper_height;
alias extern (C) void function(void *, double, gint)TGTKgtk_print_settings_set_paper_width; extern(D) TGTKgtk_print_settings_set_paper_width gtk_print_settings_set_paper_width;
alias extern (C) double function(void *, gint)TGTKgtk_print_settings_get_paper_width; extern(D) TGTKgtk_print_settings_get_paper_width gtk_print_settings_get_paper_width;
alias extern (C) void function(void *, void *)TGTKgtk_print_settings_set_paper_size; extern(D) TGTKgtk_print_settings_set_paper_size gtk_print_settings_set_paper_size;
alias extern (C) void * function(void *)TGTKgtk_print_settings_get_paper_size; extern(D) TGTKgtk_print_settings_get_paper_size gtk_print_settings_get_paper_size;
alias extern (C) void function(void *, gint)TGTKgtk_print_settings_set_orientation; extern(D) TGTKgtk_print_settings_set_orientation gtk_print_settings_set_orientation;
alias extern (C) gint function(void *)TGTKgtk_print_settings_get_orientation; extern(D) TGTKgtk_print_settings_get_orientation gtk_print_settings_get_orientation;
alias extern (C) void function(void *, char *)TGTKgtk_print_settings_set_printer; extern(D) TGTKgtk_print_settings_set_printer gtk_print_settings_set_printer;
alias extern (C) char * function(void *)TGTKgtk_print_settings_get_printer; extern(D) TGTKgtk_print_settings_get_printer gtk_print_settings_get_printer;
alias extern (C) void function(void *, char *, gint)TGTKgtk_print_settings_set_int; extern(D) TGTKgtk_print_settings_set_int gtk_print_settings_set_int;
alias extern (C) gint function(void *, char *, gint)TGTKgtk_print_settings_get_int_with_default; extern(D) TGTKgtk_print_settings_get_int_with_default gtk_print_settings_get_int_with_default;
alias extern (C) gint function(void *, char *)TGTKgtk_print_settings_get_int; extern(D) TGTKgtk_print_settings_get_int gtk_print_settings_get_int;
alias extern (C) void function(void *, char *, double, gint)TGTKgtk_print_settings_set_length; extern(D) TGTKgtk_print_settings_set_length gtk_print_settings_set_length;
alias extern (C) double function(void *, char *, gint)TGTKgtk_print_settings_get_length; extern(D) TGTKgtk_print_settings_get_length gtk_print_settings_get_length;
alias extern (C) void function(void *, char *, double)TGTKgtk_print_settings_set_double; extern(D) TGTKgtk_print_settings_set_double gtk_print_settings_set_double;
alias extern (C) double function(void *, char *, double)TGTKgtk_print_settings_get_double_with_default; extern(D) TGTKgtk_print_settings_get_double_with_default gtk_print_settings_get_double_with_default;
alias extern (C) double function(void *, char *)TGTKgtk_print_settings_get_double; extern(D) TGTKgtk_print_settings_get_double gtk_print_settings_get_double;
alias extern (C) void function(void *, char *, gint)TGTKgtk_print_settings_set_bool; extern(D) TGTKgtk_print_settings_set_bool gtk_print_settings_set_bool;
alias extern (C) gint function(void *, char *)TGTKgtk_print_settings_get_bool; extern(D) TGTKgtk_print_settings_get_bool gtk_print_settings_get_bool;
alias extern (C) void function(void *, _BCD_func__9823, void *)TGTKgtk_print_settings_foreach; extern(D) TGTKgtk_print_settings_foreach gtk_print_settings_foreach;
alias extern (C) void function(void *, char *)TGTKgtk_print_settings_unset; extern(D) TGTKgtk_print_settings_unset gtk_print_settings_unset;
alias extern (C) void function(void *, in char *, in char *)TGTKgtk_print_settings_set; extern(D) TGTKgtk_print_settings_set gtk_print_settings_set;
alias extern (C) char * function(void *, in char *)TGTKgtk_print_settings_get; extern(D) TGTKgtk_print_settings_get gtk_print_settings_get;
alias extern (C) gint function(void *, char *)TGTKgtk_print_settings_has_key; extern(D) TGTKgtk_print_settings_has_key gtk_print_settings_has_key;
alias extern (C) void function(void *, void *, char *)TGTKgtk_print_settings_to_key_file; extern(D) TGTKgtk_print_settings_to_key_file gtk_print_settings_to_key_file;
alias extern (C) void * function(void *, char *, _GError * *)TGTKgtk_print_settings_new_from_key_file; extern(D) TGTKgtk_print_settings_new_from_key_file gtk_print_settings_new_from_key_file;
alias extern (C) gint function(void *, char *, _GError * *)TGTKgtk_print_settings_to_file; extern(D) TGTKgtk_print_settings_to_file gtk_print_settings_to_file;
alias extern (C) void * function(char *, _GError * *)TGTKgtk_print_settings_new_from_file; extern(D) TGTKgtk_print_settings_new_from_file gtk_print_settings_new_from_file;
alias extern (C) void * function(void *)TGTKgtk_print_settings_copy; extern(D) TGTKgtk_print_settings_copy gtk_print_settings_copy;
alias extern (C) void * function()TGTKgtk_print_settings_new; extern(D) TGTKgtk_print_settings_new gtk_print_settings_new;
alias extern (C) GType function()TGTKgtk_print_settings_get_type; extern(D) TGTKgtk_print_settings_get_type gtk_print_settings_get_type;
alias extern (C) void function(void *, void *, char *)TGTKgtk_page_setup_to_key_file; extern(D) TGTKgtk_page_setup_to_key_file gtk_page_setup_to_key_file;
alias extern (C) void * function(void *, char *, _GError * *)TGTKgtk_page_setup_new_from_key_file; extern(D) TGTKgtk_page_setup_new_from_key_file gtk_page_setup_new_from_key_file;
alias extern (C) gint function(void *, char *, _GError * *)TGTKgtk_page_setup_to_file; extern(D) TGTKgtk_page_setup_to_file gtk_page_setup_to_file;
alias extern (C) void * function(char *, _GError * *)TGTKgtk_page_setup_new_from_file; extern(D) TGTKgtk_page_setup_new_from_file gtk_page_setup_new_from_file;
alias extern (C) double function(void *, gint)TGTKgtk_page_setup_get_page_height; extern(D) TGTKgtk_page_setup_get_page_height gtk_page_setup_get_page_height;
alias extern (C) double function(void *, gint)TGTKgtk_page_setup_get_page_width; extern(D) TGTKgtk_page_setup_get_page_width gtk_page_setup_get_page_width;
alias extern (C) double function(void *, gint)TGTKgtk_page_setup_get_paper_height; extern(D) TGTKgtk_page_setup_get_paper_height gtk_page_setup_get_paper_height;
alias extern (C) double function(void *, gint)TGTKgtk_page_setup_get_paper_width; extern(D) TGTKgtk_page_setup_get_paper_width gtk_page_setup_get_paper_width;
alias extern (C) void function(void *, void *)TGTKgtk_page_setup_set_paper_size_and_default_margins; extern(D) TGTKgtk_page_setup_set_paper_size_and_default_margins gtk_page_setup_set_paper_size_and_default_margins;
alias extern (C) void function(void *, double, gint)TGTKgtk_page_setup_set_right_margin; extern(D) TGTKgtk_page_setup_set_right_margin gtk_page_setup_set_right_margin;
alias extern (C) double function(void *, gint)TGTKgtk_page_setup_get_right_margin; extern(D) TGTKgtk_page_setup_get_right_margin gtk_page_setup_get_right_margin;
alias extern (C) void function(void *, double, gint)TGTKgtk_page_setup_set_left_margin; extern(D) TGTKgtk_page_setup_set_left_margin gtk_page_setup_set_left_margin;
alias extern (C) double function(void *, gint)TGTKgtk_page_setup_get_left_margin; extern(D) TGTKgtk_page_setup_get_left_margin gtk_page_setup_get_left_margin;
alias extern (C) void function(void *, double, gint)TGTKgtk_page_setup_set_bottom_margin; extern(D) TGTKgtk_page_setup_set_bottom_margin gtk_page_setup_set_bottom_margin;
alias extern (C) double function(void *, gint)TGTKgtk_page_setup_get_bottom_margin; extern(D) TGTKgtk_page_setup_get_bottom_margin gtk_page_setup_get_bottom_margin;
alias extern (C) void function(void *, double, gint)TGTKgtk_page_setup_set_top_margin; extern(D) TGTKgtk_page_setup_set_top_margin gtk_page_setup_set_top_margin;
alias extern (C) double function(void *, gint)TGTKgtk_page_setup_get_top_margin; extern(D) TGTKgtk_page_setup_get_top_margin gtk_page_setup_get_top_margin;
alias extern (C) void function(void *, void *)TGTKgtk_page_setup_set_paper_size; extern(D) TGTKgtk_page_setup_set_paper_size gtk_page_setup_set_paper_size;
alias extern (C) void * function(void *)TGTKgtk_page_setup_get_paper_size; extern(D) TGTKgtk_page_setup_get_paper_size gtk_page_setup_get_paper_size;
alias extern (C) void function(void *, gint)TGTKgtk_page_setup_set_orientation; extern(D) TGTKgtk_page_setup_set_orientation gtk_page_setup_set_orientation;
alias extern (C) gint function(void *)TGTKgtk_page_setup_get_orientation; extern(D) TGTKgtk_page_setup_get_orientation gtk_page_setup_get_orientation;
alias extern (C) void * function(void *)TGTKgtk_page_setup_copy; extern(D) TGTKgtk_page_setup_copy gtk_page_setup_copy;
alias extern (C) void * function()TGTKgtk_page_setup_new; extern(D) TGTKgtk_page_setup_new gtk_page_setup_new;
alias extern (C) GType function()TGTKgtk_page_setup_get_type; extern(D) TGTKgtk_page_setup_get_type gtk_page_setup_get_type;
alias extern (C) void function(void *, void *, char *)TGTKgtk_paper_size_to_key_file; extern(D) TGTKgtk_paper_size_to_key_file gtk_paper_size_to_key_file;
alias extern (C) void * function(void *, char *, _GError * *)TGTKgtk_paper_size_new_from_key_file; extern(D) TGTKgtk_paper_size_new_from_key_file gtk_paper_size_new_from_key_file;
alias extern (C) char * function()TGTKgtk_paper_size_get_default; extern(D) TGTKgtk_paper_size_get_default gtk_paper_size_get_default;
alias extern (C) double function(void *, gint)TGTKgtk_paper_size_get_default_right_margin; extern(D) TGTKgtk_paper_size_get_default_right_margin gtk_paper_size_get_default_right_margin;
alias extern (C) double function(void *, gint)TGTKgtk_paper_size_get_default_left_margin; extern(D) TGTKgtk_paper_size_get_default_left_margin gtk_paper_size_get_default_left_margin;
alias extern (C) double function(void *, gint)TGTKgtk_paper_size_get_default_bottom_margin; extern(D) TGTKgtk_paper_size_get_default_bottom_margin gtk_paper_size_get_default_bottom_margin;
alias extern (C) double function(void *, gint)TGTKgtk_paper_size_get_default_top_margin; extern(D) TGTKgtk_paper_size_get_default_top_margin gtk_paper_size_get_default_top_margin;
alias extern (C) void function(void *, double, double, gint)TGTKgtk_paper_size_set_size; extern(D) TGTKgtk_paper_size_set_size gtk_paper_size_set_size;
alias extern (C) gint function(void *)TGTKgtk_paper_size_is_custom; extern(D) TGTKgtk_paper_size_is_custom gtk_paper_size_is_custom;
alias extern (C) double function(void *, gint)TGTKgtk_paper_size_get_height; extern(D) TGTKgtk_paper_size_get_height gtk_paper_size_get_height;
alias extern (C) double function(void *, gint)TGTKgtk_paper_size_get_width; extern(D) TGTKgtk_paper_size_get_width gtk_paper_size_get_width;
alias extern (C) char * function(void *)TGTKgtk_paper_size_get_ppd_name; extern(D) TGTKgtk_paper_size_get_ppd_name gtk_paper_size_get_ppd_name;
alias extern (C) char * function(void *)TGTKgtk_paper_size_get_display_name; extern(D) TGTKgtk_paper_size_get_display_name gtk_paper_size_get_display_name;
alias extern (C) char * function(void *)TGTKgtk_paper_size_get_name; extern(D) TGTKgtk_paper_size_get_name gtk_paper_size_get_name;
alias extern (C) _GList * function(gint)TGTKgtk_paper_size_get_paper_sizes; extern(D) TGTKgtk_paper_size_get_paper_sizes gtk_paper_size_get_paper_sizes;
alias extern (C) gint function(void *, void *)TGTKgtk_paper_size_is_equal; extern(D) TGTKgtk_paper_size_is_equal gtk_paper_size_is_equal;
alias extern (C) void function(void *)TGTKgtk_paper_size_free; extern(D) TGTKgtk_paper_size_free gtk_paper_size_free;
alias extern (C) void * function(void *)TGTKgtk_paper_size_copy; extern(D) TGTKgtk_paper_size_copy gtk_paper_size_copy;
alias extern (C) void * function(in char *, in char *, double, double, gint)TGTKgtk_paper_size_new_custom; extern(D) TGTKgtk_paper_size_new_custom gtk_paper_size_new_custom;
alias extern (C) void * function(in char *, in char *, double, double)TGTKgtk_paper_size_new_from_ppd; extern(D) TGTKgtk_paper_size_new_from_ppd gtk_paper_size_new_from_ppd;
alias extern (C) void * function(in char *)TGTKgtk_paper_size_new; extern(D) TGTKgtk_paper_size_new gtk_paper_size_new;
alias extern (C) GType function()TGTKgtk_paper_size_get_type; extern(D) TGTKgtk_paper_size_get_type gtk_paper_size_get_type;
alias extern (C) void function()TGTKgtk_preview_reset; extern(D) TGTKgtk_preview_reset gtk_preview_reset;
alias extern (C) _GtkPreviewInfo * function()TGTKgtk_preview_get_info; extern(D) TGTKgtk_preview_get_info gtk_preview_get_info;
alias extern (C) _GdkColormap * function()TGTKgtk_preview_get_cmap; extern(D) TGTKgtk_preview_get_cmap gtk_preview_get_cmap;
alias extern (C) _GdkVisual * function()TGTKgtk_preview_get_visual; extern(D) TGTKgtk_preview_get_visual gtk_preview_get_visual;
alias extern (C) void function(aGtkPreview *, gint)TGTKgtk_preview_set_dither; extern(D) TGTKgtk_preview_set_dither gtk_preview_set_dither;
alias extern (C) void function(gint)TGTKgtk_preview_set_reserved; extern(D) TGTKgtk_preview_set_reserved gtk_preview_set_reserved;
alias extern (C) void function(gint)TGTKgtk_preview_set_install_cmap; extern(D) TGTKgtk_preview_set_install_cmap gtk_preview_set_install_cmap;
alias extern (C) void function(guint, guint, guint, guint)TGTKgtk_preview_set_color_cube; extern(D) TGTKgtk_preview_set_color_cube gtk_preview_set_color_cube;
alias extern (C) void function(double)TGTKgtk_preview_set_gamma; extern(D) TGTKgtk_preview_set_gamma gtk_preview_set_gamma;
alias extern (C) void function(aGtkPreview *, gint)TGTKgtk_preview_set_expand; extern(D) TGTKgtk_preview_set_expand gtk_preview_set_expand;
alias extern (C) void function(aGtkPreview *, char *, gint, gint, gint)TGTKgtk_preview_draw_row; extern(D) TGTKgtk_preview_draw_row gtk_preview_draw_row;
alias extern (C) void function(aGtkPreview *, _GdkDrawable *, _GdkGC *, gint, gint, gint, gint, gint, gint)TGTKgtk_preview_put; extern(D) TGTKgtk_preview_put gtk_preview_put;
alias extern (C) void function(aGtkPreview *, gint, gint)TGTKgtk_preview_size; extern(D) TGTKgtk_preview_size gtk_preview_size;
alias extern (C) _GtkWidget * function(gint)TGTKgtk_preview_new; extern(D) TGTKgtk_preview_new gtk_preview_new;
alias extern (C) void function()TGTKgtk_preview_uninit; extern(D) TGTKgtk_preview_uninit gtk_preview_uninit;
alias extern (C) guint function()TGTKgtk_preview_get_type; extern(D) TGTKgtk_preview_get_type gtk_preview_get_type;
//alias extern (C) void function(aGtkPlug *, aGtkSocket *)TGTK_gtk_plug_remove_from_socket; extern(D) TGTK_gtk_plug_remove_from_socket _gtk_plug_remove_from_socket;
//alias extern (C) void function(aGtkPlug *, aGtkSocket *)TGTK_gtk_plug_add_to_socket; extern(D) TGTK_gtk_plug_add_to_socket _gtk_plug_add_to_socket;
alias extern (C) guint function(aGtkPlug *)TGTKgtk_plug_get_id; extern(D) TGTKgtk_plug_get_id gtk_plug_get_id;
alias extern (C) _GtkWidget * function(_GdkDisplay *, guint)TGTKgtk_plug_new_for_display; extern(D) TGTKgtk_plug_new_for_display gtk_plug_new_for_display;
alias extern (C) void function(aGtkPlug *, _GdkDisplay *, guint)TGTKgtk_plug_construct_for_display; extern(D) TGTKgtk_plug_construct_for_display gtk_plug_construct_for_display;
alias extern (C) _GtkWidget * function(GdkNativeWindow)TGTKgtk_plug_new; extern(D) TGTKgtk_plug_new gtk_plug_new;
alias extern (C) void function(aGtkPlug *, guint)TGTKgtk_plug_construct; extern(D) TGTKgtk_plug_construct gtk_plug_construct;
alias extern (C) GType function()TGTKgtk_plug_get_type; extern(D) TGTKgtk_plug_get_type gtk_plug_get_type;
alias extern (C) void function(aGtkSocket *, guint)TGTKgtk_socket_steal; extern(D) TGTKgtk_socket_steal gtk_socket_steal;
alias extern (C) guint function(aGtkSocket *)TGTKgtk_socket_get_id; extern(D) TGTKgtk_socket_get_id gtk_socket_get_id;
alias extern (C) void function(aGtkSocket *, guint)TGTKgtk_socket_add_id; extern(D) TGTKgtk_socket_add_id gtk_socket_add_id;
alias extern (C) _GtkWidget * function()TGTKgtk_socket_new; extern(D) TGTKgtk_socket_new gtk_socket_new;
alias extern (C) GType function()TGTKgtk_socket_get_type; extern(D) TGTKgtk_socket_get_type gtk_socket_get_type;
alias extern (C) void function(aGtkPixmap *, gint)TGTKgtk_pixmap_set_build_insensitive; extern(D) TGTKgtk_pixmap_set_build_insensitive gtk_pixmap_set_build_insensitive;
alias extern (C) void function(aGtkPixmap *, _GdkDrawable * *, _GdkDrawable * *)TGTKgtk_pixmap_get; extern(D) TGTKgtk_pixmap_get gtk_pixmap_get;
alias extern (C) void function(aGtkPixmap *, _GdkDrawable *, _GdkDrawable *)TGTKgtk_pixmap_set; extern(D) TGTKgtk_pixmap_set gtk_pixmap_set;
alias extern (C) _GtkWidget * function(_GdkDrawable *, _GdkDrawable *)TGTKgtk_pixmap_new; extern(D) TGTKgtk_pixmap_new gtk_pixmap_new;
alias extern (C) guint function()TGTKgtk_pixmap_get_type; extern(D) TGTKgtk_pixmap_get_type gtk_pixmap_get_type;
alias extern (C) void function(aGtkOptionMenu *, guint)TGTKgtk_option_menu_set_history; extern(D) TGTKgtk_option_menu_set_history gtk_option_menu_set_history;
alias extern (C) gint function(aGtkOptionMenu *)TGTKgtk_option_menu_get_history; extern(D) TGTKgtk_option_menu_get_history gtk_option_menu_get_history;
alias extern (C) void function(aGtkOptionMenu *)TGTKgtk_option_menu_remove_menu; extern(D) TGTKgtk_option_menu_remove_menu gtk_option_menu_remove_menu;
alias extern (C) void function(aGtkOptionMenu *, aGtkWidget *)TGTKgtk_option_menu_set_menu; extern(D) TGTKgtk_option_menu_set_menu gtk_option_menu_set_menu;
alias extern (C) _GtkWidget * function(aGtkOptionMenu *)TGTKgtk_option_menu_get_menu; extern(D) TGTKgtk_option_menu_get_menu gtk_option_menu_get_menu;
alias extern (C) _GtkWidget * function()TGTKgtk_option_menu_new; extern(D) TGTKgtk_option_menu_new gtk_option_menu_new;
alias extern (C) guint function()TGTKgtk_option_menu_get_type; extern(D) TGTKgtk_option_menu_get_type gtk_option_menu_get_type;
alias extern (C) void function(aGtkOldEditable *)TGTKgtk_old_editable_changed; extern(D) TGTKgtk_old_editable_changed gtk_old_editable_changed;
alias extern (C) void function(aGtkOldEditable *, gint, guint)TGTKgtk_old_editable_claim_selection; extern(D) TGTKgtk_old_editable_claim_selection gtk_old_editable_claim_selection;
alias extern (C) guint function()TGTKgtk_old_editable_get_type; extern(D) TGTKgtk_old_editable_get_type gtk_old_editable_get_type;
alias extern (C) void function(aGtkNotebook *, aGtkWidget *, gint)TGTKgtk_notebook_set_tab_detachable; extern(D) TGTKgtk_notebook_set_tab_detachable gtk_notebook_set_tab_detachable;
alias extern (C) gint function(aGtkNotebook *, aGtkWidget *)TGTKgtk_notebook_get_tab_detachable; extern(D) TGTKgtk_notebook_get_tab_detachable gtk_notebook_get_tab_detachable;
alias extern (C) void function(aGtkNotebook *, aGtkWidget *, gint)TGTKgtk_notebook_set_tab_reorderable; extern(D) TGTKgtk_notebook_set_tab_reorderable gtk_notebook_set_tab_reorderable;
alias extern (C) gint function(aGtkNotebook *, aGtkWidget *)TGTKgtk_notebook_get_tab_reorderable; extern(D) TGTKgtk_notebook_get_tab_reorderable gtk_notebook_get_tab_reorderable;
alias extern (C) void function(aGtkNotebook *, aGtkWidget *, gint)TGTKgtk_notebook_reorder_child; extern(D) TGTKgtk_notebook_reorder_child gtk_notebook_reorder_child;
alias extern (C) void function(aGtkNotebook *, aGtkWidget *, gint, gint, gint)TGTKgtk_notebook_set_tab_label_packing; extern(D) TGTKgtk_notebook_set_tab_label_packing gtk_notebook_set_tab_label_packing;
alias extern (C) void function(aGtkNotebook *, aGtkWidget *, gint *, gint *, gint *)TGTKgtk_notebook_query_tab_label_packing; extern(D) TGTKgtk_notebook_query_tab_label_packing gtk_notebook_query_tab_label_packing;
alias extern (C) char * function(aGtkNotebook *, aGtkWidget *)TGTKgtk_notebook_get_menu_label_text; extern(D) TGTKgtk_notebook_get_menu_label_text gtk_notebook_get_menu_label_text;
alias extern (C) void function(aGtkNotebook *, aGtkWidget *, char *)TGTKgtk_notebook_set_menu_label_text; extern(D) TGTKgtk_notebook_set_menu_label_text gtk_notebook_set_menu_label_text;
alias extern (C) void function(aGtkNotebook *, aGtkWidget *, aGtkWidget *)TGTKgtk_notebook_set_menu_label; extern(D) TGTKgtk_notebook_set_menu_label gtk_notebook_set_menu_label;
alias extern (C) _GtkWidget * function(aGtkNotebook *, aGtkWidget *)TGTKgtk_notebook_get_menu_label; extern(D) TGTKgtk_notebook_get_menu_label gtk_notebook_get_menu_label;
alias extern (C) char * function(aGtkNotebook *, aGtkWidget *)TGTKgtk_notebook_get_tab_label_text; extern(D) TGTKgtk_notebook_get_tab_label_text gtk_notebook_get_tab_label_text;
alias extern (C) void function(aGtkNotebook *, aGtkWidget *, char *)TGTKgtk_notebook_set_tab_label_text; extern(D) TGTKgtk_notebook_set_tab_label_text gtk_notebook_set_tab_label_text;
alias extern (C) void function(aGtkNotebook *, aGtkWidget *, aGtkWidget *)TGTKgtk_notebook_set_tab_label; extern(D) TGTKgtk_notebook_set_tab_label gtk_notebook_set_tab_label;
alias extern (C) _GtkWidget * function(aGtkNotebook *, aGtkWidget *)TGTKgtk_notebook_get_tab_label; extern(D) TGTKgtk_notebook_get_tab_label gtk_notebook_get_tab_label;
alias extern (C) void function(aGtkNotebook *)TGTKgtk_notebook_popup_disable; extern(D) TGTKgtk_notebook_popup_disable gtk_notebook_popup_disable;
alias extern (C) void function(aGtkNotebook *)TGTKgtk_notebook_popup_enable; extern(D) TGTKgtk_notebook_popup_enable gtk_notebook_popup_enable;
alias extern (C) gint function(aGtkNotebook *)TGTKgtk_notebook_get_scrollable; extern(D) TGTKgtk_notebook_get_scrollable gtk_notebook_get_scrollable;
alias extern (C) void function(aGtkNotebook *, gint)TGTKgtk_notebook_set_scrollable; extern(D) TGTKgtk_notebook_set_scrollable gtk_notebook_set_scrollable;
alias extern (C) void function(aGtkNotebook *, guint)TGTKgtk_notebook_set_tab_vborder; extern(D) TGTKgtk_notebook_set_tab_vborder gtk_notebook_set_tab_vborder;
alias extern (C) void function(aGtkNotebook *, guint)TGTKgtk_notebook_set_tab_hborder; extern(D) TGTKgtk_notebook_set_tab_hborder gtk_notebook_set_tab_hborder;
alias extern (C) void function(aGtkNotebook *, guint)TGTKgtk_notebook_set_tab_border; extern(D) TGTKgtk_notebook_set_tab_border gtk_notebook_set_tab_border;
alias extern (C) void function(aGtkNotebook *, gint)TGTKgtk_notebook_set_homogeneous_tabs; extern(D) TGTKgtk_notebook_set_homogeneous_tabs gtk_notebook_set_homogeneous_tabs;
alias extern (C) gint function(aGtkNotebook *)TGTKgtk_notebook_get_tab_pos; extern(D) TGTKgtk_notebook_get_tab_pos gtk_notebook_get_tab_pos;
alias extern (C) void function(aGtkNotebook *, gint)TGTKgtk_notebook_set_tab_pos; extern(D) TGTKgtk_notebook_set_tab_pos gtk_notebook_set_tab_pos;
alias extern (C) gint function(aGtkNotebook *)TGTKgtk_notebook_get_show_tabs; extern(D) TGTKgtk_notebook_get_show_tabs gtk_notebook_get_show_tabs;
alias extern (C) void function(aGtkNotebook *, gint)TGTKgtk_notebook_set_show_tabs; extern(D) TGTKgtk_notebook_set_show_tabs gtk_notebook_set_show_tabs;
alias extern (C) gint function(aGtkNotebook *)TGTKgtk_notebook_get_show_border; extern(D) TGTKgtk_notebook_get_show_border gtk_notebook_get_show_border;
alias extern (C) void function(aGtkNotebook *, gint)TGTKgtk_notebook_set_show_border; extern(D) TGTKgtk_notebook_set_show_border gtk_notebook_set_show_border;
alias extern (C) void function(aGtkNotebook *)TGTKgtk_notebook_prev_page; extern(D) TGTKgtk_notebook_prev_page gtk_notebook_prev_page;
alias extern (C) void function(aGtkNotebook *)TGTKgtk_notebook_next_page; extern(D) TGTKgtk_notebook_next_page gtk_notebook_next_page;
alias extern (C) void function(aGtkNotebook *, gint)TGTKgtk_notebook_set_current_page; extern(D) TGTKgtk_notebook_set_current_page gtk_notebook_set_current_page;
alias extern (C) gint function(aGtkNotebook *, aGtkWidget *)TGTKgtk_notebook_page_num; extern(D) TGTKgtk_notebook_page_num gtk_notebook_page_num;
alias extern (C) gint function(aGtkNotebook *)TGTKgtk_notebook_get_n_pages; extern(D) TGTKgtk_notebook_get_n_pages gtk_notebook_get_n_pages;
alias extern (C) _GtkWidget * function(aGtkNotebook *, gint)TGTKgtk_notebook_get_nth_page; extern(D) TGTKgtk_notebook_get_nth_page gtk_notebook_get_nth_page;
alias extern (C) gint function(aGtkNotebook *)TGTKgtk_notebook_get_current_page; extern(D) TGTKgtk_notebook_get_current_page gtk_notebook_get_current_page;
alias extern (C) void * function(aGtkNotebook *)TGTKgtk_notebook_get_group; extern(D) TGTKgtk_notebook_get_group gtk_notebook_get_group;
alias extern (C) void function(aGtkNotebook *, void *)TGTKgtk_notebook_set_group; extern(D) TGTKgtk_notebook_set_group gtk_notebook_set_group;
alias extern (C) gint function(aGtkNotebook *)TGTKgtk_notebook_get_group_id; extern(D) TGTKgtk_notebook_get_group_id gtk_notebook_get_group_id;
alias extern (C) void function(aGtkNotebook *, gint)TGTKgtk_notebook_set_group_id; extern(D) TGTKgtk_notebook_set_group_id gtk_notebook_set_group_id;
alias extern (C) void function(_BCD_func__9964, void *, _BCD_func__13158)TGTKgtk_notebook_set_window_creation_hook; extern(D) TGTKgtk_notebook_set_window_creation_hook gtk_notebook_set_window_creation_hook;
alias extern (C) void function(aGtkNotebook *, gint)TGTKgtk_notebook_remove_page; extern(D) TGTKgtk_notebook_remove_page gtk_notebook_remove_page;
alias extern (C) gint function(aGtkNotebook *, aGtkWidget *, aGtkWidget *, aGtkWidget *, gint)TGTKgtk_notebook_insert_page_menu; extern(D) TGTKgtk_notebook_insert_page_menu gtk_notebook_insert_page_menu;
alias extern (C) gint function(aGtkNotebook *, aGtkWidget *, aGtkWidget *, gint)TGTKgtk_notebook_insert_page; extern(D) TGTKgtk_notebook_insert_page gtk_notebook_insert_page;
alias extern (C) gint function(aGtkNotebook *, aGtkWidget *, aGtkWidget *, aGtkWidget *)TGTKgtk_notebook_prepend_page_menu; extern(D) TGTKgtk_notebook_prepend_page_menu gtk_notebook_prepend_page_menu;
alias extern (C) gint function(aGtkNotebook *, aGtkWidget *, aGtkWidget *)TGTKgtk_notebook_prepend_page; extern(D) TGTKgtk_notebook_prepend_page gtk_notebook_prepend_page;
alias extern (C) gint function(aGtkNotebook *, aGtkWidget *, aGtkWidget *, aGtkWidget *)TGTKgtk_notebook_append_page_menu; extern(D) TGTKgtk_notebook_append_page_menu gtk_notebook_append_page_menu;
alias extern (C) gint function(aGtkNotebook *, aGtkWidget *, aGtkWidget *)TGTKgtk_notebook_append_page; extern(D) TGTKgtk_notebook_append_page gtk_notebook_append_page;
alias extern (C) _GtkWidget * function()TGTKgtk_notebook_new; extern(D) TGTKgtk_notebook_new gtk_notebook_new;
alias extern (C) GType function()TGTKgtk_notebook_get_type; extern(D) TGTKgtk_notebook_get_type gtk_notebook_get_type;
//alias extern (C) void function(aGtkSettings *, char *)TGTK_gtk_modules_settings_changed; extern(D) TGTK_gtk_modules_settings_changed _gtk_modules_settings_changed;
//alias extern (C) void function(gint *, char * * *, char *)TGTK_gtk_modules_init; extern(D) TGTK_gtk_modules_init _gtk_modules_init;
//alias extern (C) char * * function(char *)TGTK_gtk_get_module_path; extern(D) TGTK_gtk_get_module_path _gtk_get_module_path;
//alias extern (C) char * function(char *, char *)TGTK_gtk_find_module; extern(D) TGTK_gtk_find_module _gtk_find_module;
alias extern (C) void function(aGtkMessageDialog *, char *, ...)TGTKgtk_message_dialog_format_secondary_markup; extern(D) TGTKgtk_message_dialog_format_secondary_markup gtk_message_dialog_format_secondary_markup;
alias extern (C) void function(aGtkMessageDialog *, char *, ...)TGTKgtk_message_dialog_format_secondary_text; extern(D) TGTKgtk_message_dialog_format_secondary_text gtk_message_dialog_format_secondary_text;
alias extern (C) void function(aGtkMessageDialog *, char *)TGTKgtk_message_dialog_set_markup; extern(D) TGTKgtk_message_dialog_set_markup gtk_message_dialog_set_markup;
alias extern (C) void function(aGtkMessageDialog *, aGtkWidget *)TGTKgtk_message_dialog_set_image; extern(D) TGTKgtk_message_dialog_set_image gtk_message_dialog_set_image;
alias extern (C) _GtkWidget * function(aGtkWindow *, gint, gint, gint, char *, ...)TGTKgtk_message_dialog_new_with_markup; extern(D) TGTKgtk_message_dialog_new_with_markup gtk_message_dialog_new_with_markup;
alias extern (C) _GtkWidget * function(aGtkWindow *, gint, gint, gint, char *, ...)TGTKgtk_message_dialog_new; extern(D) TGTKgtk_message_dialog_new gtk_message_dialog_new;
alias extern (C) GType function()TGTKgtk_message_dialog_get_type; extern(D) TGTKgtk_message_dialog_get_type gtk_message_dialog_get_type;
alias extern (C) void function(aGtkMenuToolButton *, char *)TGTKgtk_menu_tool_button_set_arrow_tooltip_markup; extern(D) TGTKgtk_menu_tool_button_set_arrow_tooltip_markup gtk_menu_tool_button_set_arrow_tooltip_markup;
alias extern (C) void function(aGtkMenuToolButton *, char *)TGTKgtk_menu_tool_button_set_arrow_tooltip_text; extern(D) TGTKgtk_menu_tool_button_set_arrow_tooltip_text gtk_menu_tool_button_set_arrow_tooltip_text;
alias extern (C) void function(aGtkMenuToolButton *, aGtkTooltips *, char *, char *)TGTKgtk_menu_tool_button_set_arrow_tooltip; extern(D) TGTKgtk_menu_tool_button_set_arrow_tooltip gtk_menu_tool_button_set_arrow_tooltip;
alias extern (C) _GtkWidget * function(aGtkMenuToolButton *)TGTKgtk_menu_tool_button_get_menu; extern(D) TGTKgtk_menu_tool_button_get_menu gtk_menu_tool_button_get_menu;
alias extern (C) void function(aGtkMenuToolButton *, aGtkWidget *)TGTKgtk_menu_tool_button_set_menu; extern(D) TGTKgtk_menu_tool_button_set_menu gtk_menu_tool_button_set_menu;
alias extern (C) _GtkToolItem * function(char *)TGTKgtk_menu_tool_button_new_from_stock; extern(D) TGTKgtk_menu_tool_button_new_from_stock gtk_menu_tool_button_new_from_stock;
alias extern (C) _GtkToolItem * function(aGtkWidget *, char *)TGTKgtk_menu_tool_button_new; extern(D) TGTKgtk_menu_tool_button_new gtk_menu_tool_button_new;
alias extern (C) GType function()TGTKgtk_menu_tool_button_get_type; extern(D) TGTKgtk_menu_tool_button_get_type gtk_menu_tool_button_get_type;
//alias extern (C) _GtkWidget * function(aGtkToolButton *)TGTK_gtk_tool_button_get_button; extern(D) TGTK_gtk_tool_button_get_button _gtk_tool_button_get_button;
alias extern (C) _GtkWidget * function(aGtkToolButton *)TGTKgtk_tool_button_get_label_widget; extern(D) TGTKgtk_tool_button_get_label_widget gtk_tool_button_get_label_widget;
alias extern (C) void function(aGtkToolButton *, aGtkWidget *)TGTKgtk_tool_button_set_label_widget; extern(D) TGTKgtk_tool_button_set_label_widget gtk_tool_button_set_label_widget;
alias extern (C) _GtkWidget * function(aGtkToolButton *)TGTKgtk_tool_button_get_icon_widget; extern(D) TGTKgtk_tool_button_get_icon_widget gtk_tool_button_get_icon_widget;
alias extern (C) void function(aGtkToolButton *, aGtkWidget *)TGTKgtk_tool_button_set_icon_widget; extern(D) TGTKgtk_tool_button_set_icon_widget gtk_tool_button_set_icon_widget;
alias extern (C) char * function(aGtkToolButton *)TGTKgtk_tool_button_get_icon_name; extern(D) TGTKgtk_tool_button_get_icon_name gtk_tool_button_get_icon_name;
alias extern (C) void function(aGtkToolButton *, char *)TGTKgtk_tool_button_set_icon_name; extern(D) TGTKgtk_tool_button_set_icon_name gtk_tool_button_set_icon_name;
alias extern (C) char * function(aGtkToolButton *)TGTKgtk_tool_button_get_stock_id; extern(D) TGTKgtk_tool_button_get_stock_id gtk_tool_button_get_stock_id;
alias extern (C) void function(aGtkToolButton *, char *)TGTKgtk_tool_button_set_stock_id; extern(D) TGTKgtk_tool_button_set_stock_id gtk_tool_button_set_stock_id;
alias extern (C) gint function(aGtkToolButton *)TGTKgtk_tool_button_get_use_underline; extern(D) TGTKgtk_tool_button_get_use_underline gtk_tool_button_get_use_underline;
alias extern (C) void function(aGtkToolButton *, gint)TGTKgtk_tool_button_set_use_underline; extern(D) TGTKgtk_tool_button_set_use_underline gtk_tool_button_set_use_underline;
alias extern (C) char * function(aGtkToolButton *)TGTKgtk_tool_button_get_label; extern(D) TGTKgtk_tool_button_get_label gtk_tool_button_get_label;
alias extern (C) void function(aGtkToolButton *, char *)TGTKgtk_tool_button_set_label; extern(D) TGTKgtk_tool_button_set_label gtk_tool_button_set_label;
alias extern (C) _GtkToolItem * function(char *)TGTKgtk_tool_button_new_from_stock; extern(D) TGTKgtk_tool_button_new_from_stock gtk_tool_button_new_from_stock;
alias extern (C) _GtkToolItem * function(aGtkWidget *, char *)TGTKgtk_tool_button_new; extern(D) TGTKgtk_tool_button_new gtk_tool_button_new;
alias extern (C) GType function()TGTKgtk_tool_button_get_type; extern(D) TGTKgtk_tool_button_get_type gtk_tool_button_get_type;
//alias extern (C) void function(aGtkToolItem *)TGTK_gtk_tool_item_toolbar_reconfigured; extern(D) TGTK_gtk_tool_item_toolbar_reconfigured _gtk_tool_item_toolbar_reconfigured;
alias extern (C) void function(aGtkToolItem *)TGTKgtk_tool_item_rebuild_menu; extern(D) TGTKgtk_tool_item_rebuild_menu gtk_tool_item_rebuild_menu;
alias extern (C) void function(aGtkToolItem *, char *, aGtkWidget *)TGTKgtk_tool_item_set_proxy_menu_item; extern(D) TGTKgtk_tool_item_set_proxy_menu_item gtk_tool_item_set_proxy_menu_item;
alias extern (C) _GtkWidget * function(aGtkToolItem *, char *)TGTKgtk_tool_item_get_proxy_menu_item; extern(D) TGTKgtk_tool_item_get_proxy_menu_item gtk_tool_item_get_proxy_menu_item;
alias extern (C) _GtkWidget * function(aGtkToolItem *)TGTKgtk_tool_item_retrieve_proxy_menu_item; extern(D) TGTKgtk_tool_item_retrieve_proxy_menu_item gtk_tool_item_retrieve_proxy_menu_item;
alias extern (C) gint function(aGtkToolItem *)TGTKgtk_tool_item_get_relief_style; extern(D) TGTKgtk_tool_item_get_relief_style gtk_tool_item_get_relief_style;
alias extern (C) gint function(aGtkToolItem *)TGTKgtk_tool_item_get_toolbar_style; extern(D) TGTKgtk_tool_item_get_toolbar_style gtk_tool_item_get_toolbar_style;
alias extern (C) gint function(aGtkToolItem *)TGTKgtk_tool_item_get_orientation; extern(D) TGTKgtk_tool_item_get_orientation gtk_tool_item_get_orientation;
alias extern (C) gint function(aGtkToolItem *)TGTKgtk_tool_item_get_icon_size; extern(D) TGTKgtk_tool_item_get_icon_size gtk_tool_item_get_icon_size;
alias extern (C) void function(aGtkToolItem *, gint)TGTKgtk_tool_item_set_is_important; extern(D) TGTKgtk_tool_item_set_is_important gtk_tool_item_set_is_important;
alias extern (C) gint function(aGtkToolItem *)TGTKgtk_tool_item_get_is_important; extern(D) TGTKgtk_tool_item_get_is_important gtk_tool_item_get_is_important;
alias extern (C) gint function(aGtkToolItem *)TGTKgtk_tool_item_get_visible_vertical; extern(D) TGTKgtk_tool_item_get_visible_vertical gtk_tool_item_get_visible_vertical;
alias extern (C) void function(aGtkToolItem *, gint)TGTKgtk_tool_item_set_visible_vertical; extern(D) TGTKgtk_tool_item_set_visible_vertical gtk_tool_item_set_visible_vertical;
alias extern (C) gint function(aGtkToolItem *)TGTKgtk_tool_item_get_visible_horizontal; extern(D) TGTKgtk_tool_item_get_visible_horizontal gtk_tool_item_get_visible_horizontal;
alias extern (C) void function(aGtkToolItem *, gint)TGTKgtk_tool_item_set_visible_horizontal; extern(D) TGTKgtk_tool_item_set_visible_horizontal gtk_tool_item_set_visible_horizontal;
alias extern (C) gint function(aGtkToolItem *)TGTKgtk_tool_item_get_use_drag_window; extern(D) TGTKgtk_tool_item_get_use_drag_window gtk_tool_item_get_use_drag_window;
alias extern (C) void function(aGtkToolItem *, gint)TGTKgtk_tool_item_set_use_drag_window; extern(D) TGTKgtk_tool_item_set_use_drag_window gtk_tool_item_set_use_drag_window;
alias extern (C) void function(aGtkToolItem *, char *)TGTKgtk_tool_item_set_tooltip_markup; extern(D) TGTKgtk_tool_item_set_tooltip_markup gtk_tool_item_set_tooltip_markup;
alias extern (C) void function(aGtkToolItem *, char *)TGTKgtk_tool_item_set_tooltip_text; extern(D) TGTKgtk_tool_item_set_tooltip_text gtk_tool_item_set_tooltip_text;
alias extern (C) void function(aGtkToolItem *, aGtkTooltips *, char *, char *)TGTKgtk_tool_item_set_tooltip; extern(D) TGTKgtk_tool_item_set_tooltip gtk_tool_item_set_tooltip;
alias extern (C) gint function(aGtkToolItem *)TGTKgtk_tool_item_get_expand; extern(D) TGTKgtk_tool_item_get_expand gtk_tool_item_get_expand;
alias extern (C) void function(aGtkToolItem *, gint)TGTKgtk_tool_item_set_expand; extern(D) TGTKgtk_tool_item_set_expand gtk_tool_item_set_expand;
alias extern (C) gint function(aGtkToolItem *)TGTKgtk_tool_item_get_homogeneous; extern(D) TGTKgtk_tool_item_get_homogeneous gtk_tool_item_get_homogeneous;
alias extern (C) void function(aGtkToolItem *, gint)TGTKgtk_tool_item_set_homogeneous; extern(D) TGTKgtk_tool_item_set_homogeneous gtk_tool_item_set_homogeneous;
alias extern (C) _GtkToolItem * function()TGTKgtk_tool_item_new; extern(D) TGTKgtk_tool_item_new gtk_tool_item_new;
alias extern (C) GType function()TGTKgtk_tool_item_get_type; extern(D) TGTKgtk_tool_item_get_type gtk_tool_item_get_type;
alias extern (C) gint function(aGtkWindow *, _GtkTooltips * *, _GtkWidget * *)TGTKgtk_tooltips_get_info_from_tip_window; extern(D) TGTKgtk_tooltips_get_info_from_tip_window gtk_tooltips_get_info_from_tip_window;
alias extern (C) void function(aGtkTooltips *)TGTKgtk_tooltips_force_window; extern(D) TGTKgtk_tooltips_force_window gtk_tooltips_force_window;
alias extern (C) _GtkTooltipsData * function(aGtkWidget *)TGTKgtk_tooltips_data_get; extern(D) TGTKgtk_tooltips_data_get gtk_tooltips_data_get;
alias extern (C) void function(aGtkTooltips *, aGtkWidget *, char *, char *)TGTKgtk_tooltips_set_tip; extern(D) TGTKgtk_tooltips_set_tip gtk_tooltips_set_tip;
alias extern (C) void function(aGtkTooltips *, guint)TGTKgtk_tooltips_set_delay; extern(D) TGTKgtk_tooltips_set_delay gtk_tooltips_set_delay;
alias extern (C) void function(aGtkTooltips *)TGTKgtk_tooltips_disable; extern(D) TGTKgtk_tooltips_disable gtk_tooltips_disable;
alias extern (C) void function(aGtkTooltips *)TGTKgtk_tooltips_enable; extern(D) TGTKgtk_tooltips_enable gtk_tooltips_enable;
alias extern (C) _GtkTooltips * function()TGTKgtk_tooltips_new; extern(D) TGTKgtk_tooltips_new gtk_tooltips_new;
alias extern (C) guint function()TGTKgtk_tooltips_get_type; extern(D) TGTKgtk_tooltips_get_type gtk_tooltips_get_type;
//alias extern (C) void function(aGtkMenuBar *, gint)TGTK_gtk_menu_bar_cycle_focus; extern(D) TGTK_gtk_menu_bar_cycle_focus _gtk_menu_bar_cycle_focus;
alias extern (C) void function(aGtkMenuBar *, gint)TGTKgtk_menu_bar_set_child_pack_direction; extern(D) TGTKgtk_menu_bar_set_child_pack_direction gtk_menu_bar_set_child_pack_direction;
alias extern (C) gint function(aGtkMenuBar *)TGTKgtk_menu_bar_get_child_pack_direction; extern(D) TGTKgtk_menu_bar_get_child_pack_direction gtk_menu_bar_get_child_pack_direction;
alias extern (C) void function(aGtkMenuBar *, gint)TGTKgtk_menu_bar_set_pack_direction; extern(D) TGTKgtk_menu_bar_set_pack_direction gtk_menu_bar_set_pack_direction;
alias extern (C) gint function(aGtkMenuBar *)TGTKgtk_menu_bar_get_pack_direction; extern(D) TGTKgtk_menu_bar_get_pack_direction gtk_menu_bar_get_pack_direction;
alias extern (C) _GtkWidget * function()TGTKgtk_menu_bar_new; extern(D) TGTKgtk_menu_bar_new gtk_menu_bar_new;
alias extern (C) GType function()TGTKgtk_menu_bar_get_type; extern(D) TGTKgtk_menu_bar_get_type gtk_menu_bar_get_type;
//alias extern (C) char * function()TGTK_gtk_get_lc_ctype; extern(D) TGTK_gtk_get_lc_ctype _gtk_get_lc_ctype;
//alias extern (C) gint function(_GSignalInvocationHint *, _GValue *, _GValue *, void *)TGTK_gtk_boolean_handled_accumulator; extern(D) TGTK_gtk_boolean_handled_accumulator _gtk_boolean_handled_accumulator;
alias extern (C) void function(aGtkWidget *, _GdkEvent *)TGTKgtk_propagate_event; extern(D) TGTKgtk_propagate_event gtk_propagate_event;
alias extern (C) _GtkWidget * function(_GdkEvent *)TGTKgtk_get_event_widget; extern(D) TGTKgtk_get_event_widget gtk_get_event_widget;
alias extern (C) gint function(gint *)TGTKgtk_get_current_event_state; extern(D) TGTKgtk_get_current_event_state gtk_get_current_event_state;
alias extern (C) guint32 function()TGTKgtk_get_current_event_time; extern(D) TGTKgtk_get_current_event_time gtk_get_current_event_time;
alias extern (C) _GdkEvent * function()TGTKgtk_get_current_event; extern(D) TGTKgtk_get_current_event gtk_get_current_event;
alias extern (C) void function(guint)TGTKgtk_key_snooper_remove; extern(D) TGTKgtk_key_snooper_remove gtk_key_snooper_remove;
alias extern (C) guint function(_BCD_func__10115, void *)TGTKgtk_key_snooper_install; extern(D) TGTKgtk_key_snooper_install gtk_key_snooper_install;
alias extern (C) void function(guint)TGTKgtk_input_remove; extern(D) TGTKgtk_input_remove gtk_input_remove;
alias extern (C) guint function(gint, gint, _BCD_func__13745, _BCD_func__13157, void *, _BCD_func__13158)TGTKgtk_input_add_full; extern(D) TGTKgtk_input_add_full gtk_input_add_full;
alias extern (C) void function(void *)TGTKgtk_idle_remove_by_data; extern(D) TGTKgtk_idle_remove_by_data gtk_idle_remove_by_data;
alias extern (C) void function(guint)TGTKgtk_idle_remove; extern(D) TGTKgtk_idle_remove gtk_idle_remove;
alias extern (C) guint function(gint, _BCD_func__12884, _BCD_func__13157, void *, _BCD_func__13158)TGTKgtk_idle_add_full; extern(D) TGTKgtk_idle_add_full gtk_idle_add_full;
alias extern (C) guint function(gint, _BCD_func__12884, void *)TGTKgtk_idle_add_priority; extern(D) TGTKgtk_idle_add_priority gtk_idle_add_priority;
alias extern (C) guint function(_BCD_func__12884, void *)TGTKgtk_idle_add; extern(D) TGTKgtk_idle_add gtk_idle_add;
alias extern (C) void function(guint)TGTKgtk_timeout_remove; extern(D) TGTKgtk_timeout_remove gtk_timeout_remove;
alias extern (C) guint function(guint, _BCD_func__12884, _BCD_func__13157, void *, _BCD_func__13158)TGTKgtk_timeout_add_full; extern(D) TGTKgtk_timeout_add_full gtk_timeout_add_full;
alias extern (C) guint function(guint, _BCD_func__12884, void *)TGTKgtk_timeout_add; extern(D) TGTKgtk_timeout_add gtk_timeout_add;
alias extern (C) void function(void *)TGTKgtk_quit_remove_by_data; extern(D) TGTKgtk_quit_remove_by_data gtk_quit_remove_by_data;
alias extern (C) void function(guint)TGTKgtk_quit_remove; extern(D) TGTKgtk_quit_remove gtk_quit_remove;
alias extern (C) guint function(guint, _BCD_func__12884, _BCD_func__13157, void *, _BCD_func__13158)TGTKgtk_quit_add_full; extern(D) TGTKgtk_quit_add_full gtk_quit_add_full;
alias extern (C) guint function(guint, _BCD_func__12884, void *)TGTKgtk_quit_add; extern(D) TGTKgtk_quit_add gtk_quit_add;
alias extern (C) void function(guint, aGtkObject *)TGTKgtk_quit_add_destroy; extern(D) TGTKgtk_quit_add_destroy gtk_quit_add_destroy;
alias extern (C) void function(_BCD_func__12884, void *)TGTKgtk_init_add; extern(D) TGTKgtk_init_add gtk_init_add;
alias extern (C) void function(aGtkWidget *)TGTKgtk_grab_remove; extern(D) TGTKgtk_grab_remove gtk_grab_remove;
alias extern (C) _GtkWidget * function()TGTKgtk_grab_get_current; extern(D) TGTKgtk_grab_get_current gtk_grab_get_current;
alias extern (C) void function(aGtkWidget *)TGTKgtk_grab_add; extern(D) TGTKgtk_grab_add gtk_grab_add;
alias extern (C) gint function()TGTKgtk_false; extern(D) TGTKgtk_false gtk_false;
alias extern (C) gint function()TGTKgtk_true; extern(D) TGTKgtk_true gtk_true;
alias extern (C) gint function(gint)TGTKgtk_main_iteration_do; extern(D) TGTKgtk_main_iteration_do gtk_main_iteration_do;
alias extern (C) gint function()TGTKgtk_main_iteration; extern(D) TGTKgtk_main_iteration gtk_main_iteration;
alias extern (C) void function()TGTKgtk_main_quit; extern(D) TGTKgtk_main_quit gtk_main_quit;
alias extern (C) guint function()TGTKgtk_main_level; extern(D) TGTKgtk_main_level gtk_main_level;
alias extern (C) void function()TGTKgtk_main; extern(D) TGTKgtk_main gtk_main;
alias extern (C) void function(_GdkEvent *)TGTKgtk_main_do_event; extern(D) TGTKgtk_main_do_event gtk_main_do_event;
alias extern (C) gint function()TGTKgtk_events_pending; extern(D) TGTKgtk_events_pending gtk_events_pending;
alias extern (C) void * function()TGTKgtk_get_default_language; extern(D) TGTKgtk_get_default_language gtk_get_default_language;
//alias extern (C) char * function()TGTKgtk_set_locale; extern(D) TGTKgtk_set_locale gtk_set_locale;
alias extern (C) void function()TGTKgtk_disable_setlocale; extern(D) TGTKgtk_disable_setlocale gtk_disable_setlocale;
alias extern (C) void function(gint)TGTKgtk_exit; extern(D) TGTKgtk_exit gtk_exit;
alias extern (C) void * function(gint)TGTKgtk_get_option_group; extern(D) TGTKgtk_get_option_group gtk_get_option_group;
alias extern (C) gint function(gint *, char * * *, char *, _GOptionEntry *, char *, _GError * *)TGTKgtk_init_with_args; extern(D) TGTKgtk_init_with_args gtk_init_with_args;
//alias extern (C) gint function(gint *, char * * *)TGTKgtk_init_check; extern(D) TGTKgtk_init_check gtk_init_check;
alias extern (C) void function(gint *, char * * *)TGTKgtk_init; extern(D) TGTKgtk_init gtk_init;
alias extern (C) gint function(gint *, char * * *)TGTKgtk_parse_args; extern(D) TGTKgtk_parse_args gtk_parse_args;
alias extern (C) char * function(guint, guint, guint)TGTKgtk_check_version; extern(D) TGTKgtk_check_version gtk_check_version;
// alias extern (C) guint* TGTKgtk_interface_age; extern(D) TGTKgtk_interface_age gtk_interface_age;
// alias extern (C) guint* TGTKgtk_binary_age; extern(D) TGTKgtk_binary_age gtk_binary_age;
// alias extern (C) guint* TGTKgtk_micro_version; extern(D) TGTKgtk_micro_version gtk_micro_version;
// alias extern (C) guint* TGTKgtk_minor_version; extern(D) TGTKgtk_minor_version gtk_minor_version;
// alias extern (C) guint* TGTKgtk_major_version; extern(D) TGTKgtk_major_version gtk_major_version;
alias extern (C) void function(aGtkList *)TGTKgtk_list_end_drag_selection; extern(D) TGTKgtk_list_end_drag_selection gtk_list_end_drag_selection;
alias extern (C) void function(aGtkList *)TGTKgtk_list_undo_selection; extern(D) TGTKgtk_list_undo_selection gtk_list_undo_selection;
alias extern (C) void function(aGtkList *, aGtkWidget *)TGTKgtk_list_toggle_row; extern(D) TGTKgtk_list_toggle_row gtk_list_toggle_row;
alias extern (C) void function(aGtkList *)TGTKgtk_list_toggle_focus_row; extern(D) TGTKgtk_list_toggle_focus_row gtk_list_toggle_focus_row;
alias extern (C) void function(aGtkList *)TGTKgtk_list_toggle_add_mode; extern(D) TGTKgtk_list_toggle_add_mode gtk_list_toggle_add_mode;
alias extern (C) void function(aGtkList *, gint, float)TGTKgtk_list_scroll_vertical; extern(D) TGTKgtk_list_scroll_vertical gtk_list_scroll_vertical;
alias extern (C) void function(aGtkList *, gint, float)TGTKgtk_list_scroll_horizontal; extern(D) TGTKgtk_list_scroll_horizontal gtk_list_scroll_horizontal;
alias extern (C) void function(aGtkList *)TGTKgtk_list_unselect_all; extern(D) TGTKgtk_list_unselect_all gtk_list_unselect_all;
alias extern (C) void function(aGtkList *)TGTKgtk_list_select_all; extern(D) TGTKgtk_list_select_all gtk_list_select_all;
alias extern (C) void function(aGtkList *)TGTKgtk_list_end_selection; extern(D) TGTKgtk_list_end_selection gtk_list_end_selection;
alias extern (C) void function(aGtkList *)TGTKgtk_list_start_selection; extern(D) TGTKgtk_list_start_selection gtk_list_start_selection;
alias extern (C) void function(aGtkList *, gint, float, gint)TGTKgtk_list_extend_selection; extern(D) TGTKgtk_list_extend_selection gtk_list_extend_selection;
alias extern (C) void function(aGtkList *, gint)TGTKgtk_list_set_selection_mode; extern(D) TGTKgtk_list_set_selection_mode gtk_list_set_selection_mode;
alias extern (C) gint function(aGtkList *, aGtkWidget *)TGTKgtk_list_child_position; extern(D) TGTKgtk_list_child_position gtk_list_child_position;
alias extern (C) void function(aGtkList *, aGtkWidget *)TGTKgtk_list_unselect_child; extern(D) TGTKgtk_list_unselect_child gtk_list_unselect_child;
alias extern (C) void function(aGtkList *, aGtkWidget *)TGTKgtk_list_select_child; extern(D) TGTKgtk_list_select_child gtk_list_select_child;
alias extern (C) void function(aGtkList *, gint)TGTKgtk_list_unselect_item; extern(D) TGTKgtk_list_unselect_item gtk_list_unselect_item;
alias extern (C) void function(aGtkList *, gint)TGTKgtk_list_select_item; extern(D) TGTKgtk_list_select_item gtk_list_select_item;
alias extern (C) void function(aGtkList *, gint, gint)TGTKgtk_list_clear_items; extern(D) TGTKgtk_list_clear_items gtk_list_clear_items;
alias extern (C) void function(aGtkList *, _GList *)TGTKgtk_list_remove_items_no_unref; extern(D) TGTKgtk_list_remove_items_no_unref gtk_list_remove_items_no_unref;
alias extern (C) void function(aGtkList *, _GList *)TGTKgtk_list_remove_items; extern(D) TGTKgtk_list_remove_items gtk_list_remove_items;
alias extern (C) void function(aGtkList *, _GList *)TGTKgtk_list_prepend_items; extern(D) TGTKgtk_list_prepend_items gtk_list_prepend_items;
alias extern (C) void function(aGtkList *, _GList *)TGTKgtk_list_append_items; extern(D) TGTKgtk_list_append_items gtk_list_append_items;
alias extern (C) void function(aGtkList *, _GList *, gint)TGTKgtk_list_insert_items; extern(D) TGTKgtk_list_insert_items gtk_list_insert_items;
alias extern (C) _GtkWidget * function()TGTKgtk_list_new; extern(D) TGTKgtk_list_new gtk_list_new;
alias extern (C) guint function()TGTKgtk_list_get_type; extern(D) TGTKgtk_list_get_type gtk_list_get_type;
alias extern (C) void function(aGtkListItem *)TGTKgtk_list_item_deselect; extern(D) TGTKgtk_list_item_deselect gtk_list_item_deselect;
alias extern (C) void function(aGtkListItem *)TGTKgtk_list_item_select; extern(D) TGTKgtk_list_item_select gtk_list_item_select;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_list_item_new_with_label; extern(D) TGTKgtk_list_item_new_with_label gtk_list_item_new_with_label;
alias extern (C) _GtkWidget * function()TGTKgtk_list_item_new; extern(D) TGTKgtk_list_item_new gtk_list_item_new;
alias extern (C) guint function()TGTKgtk_list_item_get_type; extern(D) TGTKgtk_list_item_get_type gtk_list_item_get_type;
alias extern (C) _BCD_func__10158 function(_BCD_func__10158, void *, _BCD_func__13158)TGTKgtk_link_button_set_uri_hook; extern(D) TGTKgtk_link_button_set_uri_hook gtk_link_button_set_uri_hook;
alias extern (C) void function(aGtkLinkButton *, char *)TGTKgtk_link_button_set_uri; extern(D) TGTKgtk_link_button_set_uri gtk_link_button_set_uri;
alias extern (C) char * function(aGtkLinkButton *)TGTKgtk_link_button_get_uri; extern(D) TGTKgtk_link_button_get_uri gtk_link_button_get_uri;
alias extern (C) _GtkWidget * function(in char *, in char *)TGTKgtk_link_button_new_with_label; extern(D) TGTKgtk_link_button_new_with_label gtk_link_button_new_with_label;
alias extern (C) _GtkWidget * function(in char *)TGTKgtk_link_button_new; extern(D) TGTKgtk_link_button_new gtk_link_button_new;
alias extern (C) GType function()TGTKgtk_link_button_get_type; extern(D) TGTKgtk_link_button_get_type gtk_link_button_get_type;
alias extern (C) void function(aGtkLayout *)TGTKgtk_layout_thaw; extern(D) TGTKgtk_layout_thaw gtk_layout_thaw;
alias extern (C) void function(aGtkLayout *)TGTKgtk_layout_freeze; extern(D) TGTKgtk_layout_freeze gtk_layout_freeze;
alias extern (C) void function(aGtkLayout *, aGtkAdjustment *)TGTKgtk_layout_set_vadjustment; extern(D) TGTKgtk_layout_set_vadjustment gtk_layout_set_vadjustment;
alias extern (C) void function(aGtkLayout *, aGtkAdjustment *)TGTKgtk_layout_set_hadjustment; extern(D) TGTKgtk_layout_set_hadjustment gtk_layout_set_hadjustment;
alias extern (C) _GtkAdjustment * function(aGtkLayout *)TGTKgtk_layout_get_vadjustment; extern(D) TGTKgtk_layout_get_vadjustment gtk_layout_get_vadjustment;
alias extern (C) _GtkAdjustment * function(aGtkLayout *)TGTKgtk_layout_get_hadjustment; extern(D) TGTKgtk_layout_get_hadjustment gtk_layout_get_hadjustment;
alias extern (C) void function(aGtkLayout *, guint *, guint *)TGTKgtk_layout_get_size; extern(D) TGTKgtk_layout_get_size gtk_layout_get_size;
alias extern (C) void function(aGtkLayout *, guint, guint)TGTKgtk_layout_set_size; extern(D) TGTKgtk_layout_set_size gtk_layout_set_size;
alias extern (C) void function(aGtkLayout *, aGtkWidget *, gint, gint)TGTKgtk_layout_move; extern(D) TGTKgtk_layout_move gtk_layout_move;
alias extern (C) void function(aGtkLayout *, aGtkWidget *, gint, gint)TGTKgtk_layout_put; extern(D) TGTKgtk_layout_put gtk_layout_put;
alias extern (C) _GtkWidget * function(aGtkAdjustment *, aGtkAdjustment *)TGTKgtk_layout_new; extern(D) TGTKgtk_layout_new gtk_layout_new;
alias extern (C) GType function()TGTKgtk_layout_get_type; extern(D) TGTKgtk_layout_get_type gtk_layout_get_type;
alias extern (C) _GdkScreen * function(aGtkInvisible *)TGTKgtk_invisible_get_screen; extern(D) TGTKgtk_invisible_get_screen gtk_invisible_get_screen;
alias extern (C) void function(aGtkInvisible *, _GdkScreen *)TGTKgtk_invisible_set_screen; extern(D) TGTKgtk_invisible_set_screen gtk_invisible_set_screen;
alias extern (C) _GtkWidget * function(_GdkScreen *)TGTKgtk_invisible_new_for_screen; extern(D) TGTKgtk_invisible_new_for_screen gtk_invisible_new_for_screen;
alias extern (C) _GtkWidget * function()TGTKgtk_invisible_new; extern(D) TGTKgtk_invisible_new gtk_invisible_new;
alias extern (C) GType function()TGTKgtk_invisible_get_type; extern(D) TGTKgtk_invisible_get_type gtk_invisible_get_type;
alias extern (C) _GtkWidget * function()TGTKgtk_input_dialog_new; extern(D) TGTKgtk_input_dialog_new gtk_input_dialog_new;
alias extern (C) guint function()TGTKgtk_input_dialog_get_type; extern(D) TGTKgtk_input_dialog_get_type gtk_input_dialog_get_type;
alias extern (C) void function(aGtkIMMulticontext *, aGtkMenuShell *)TGTKgtk_im_multicontext_append_menuitems; extern(D) TGTKgtk_im_multicontext_append_menuitems gtk_im_multicontext_append_menuitems;
alias extern (C) _GtkIMContext * function()TGTKgtk_im_multicontext_new; extern(D) TGTKgtk_im_multicontext_new gtk_im_multicontext_new;
alias extern (C) GType function()TGTKgtk_im_multicontext_get_type; extern(D) TGTKgtk_im_multicontext_get_type gtk_im_multicontext_get_type;
alias extern (C) void function(aGtkIMContextSimple *, ushort *, gint, gint)TGTKgtk_im_context_simple_add_table; extern(D) TGTKgtk_im_context_simple_add_table gtk_im_context_simple_add_table;
alias extern (C) _GtkIMContext * function()TGTKgtk_im_context_simple_new; extern(D) TGTKgtk_im_context_simple_new gtk_im_context_simple_new;
alias extern (C) GType function()TGTKgtk_im_context_simple_get_type; extern(D) TGTKgtk_im_context_simple_get_type gtk_im_context_simple_get_type;
alias extern (C) _GtkWidget * function(aGtkImageMenuItem *)TGTKgtk_image_menu_item_get_image; extern(D) TGTKgtk_image_menu_item_get_image gtk_image_menu_item_get_image;
alias extern (C) void function(aGtkImageMenuItem *, aGtkWidget *)TGTKgtk_image_menu_item_set_image; extern(D) TGTKgtk_image_menu_item_set_image gtk_image_menu_item_set_image;
alias extern (C) _GtkWidget * function(in char *, aGtkAccelGroup *)TGTKgtk_image_menu_item_new_from_stock; extern(D) TGTKgtk_image_menu_item_new_from_stock gtk_image_menu_item_new_from_stock;
alias extern (C) _GtkWidget * function(in char *)TGTKgtk_image_menu_item_new_with_mnemonic; extern(D) TGTKgtk_image_menu_item_new_with_mnemonic gtk_image_menu_item_new_with_mnemonic;
alias extern (C) _GtkWidget * function(in char *)TGTKgtk_image_menu_item_new_with_label; extern(D) TGTKgtk_image_menu_item_new_with_label gtk_image_menu_item_new_with_label;
alias extern (C) _GtkWidget * function()TGTKgtk_image_menu_item_new; extern(D) TGTKgtk_image_menu_item_new gtk_image_menu_item_new;
alias extern (C) GType function()TGTKgtk_image_menu_item_get_type; extern(D) TGTKgtk_image_menu_item_get_type gtk_image_menu_item_get_type;
alias extern (C) gint function(aGtkIconView *)TGTKgtk_icon_view_get_tooltip_column; extern(D) TGTKgtk_icon_view_get_tooltip_column gtk_icon_view_get_tooltip_column;
alias extern (C) void function(aGtkIconView *, gint)TGTKgtk_icon_view_set_tooltip_column; extern(D) TGTKgtk_icon_view_set_tooltip_column gtk_icon_view_set_tooltip_column;
alias extern (C) gint function(aGtkIconView *, gint *, gint *, gint, void * *, void * *, aGtkTreeIter *)TGTKgtk_icon_view_get_tooltip_context; extern(D) TGTKgtk_icon_view_get_tooltip_context gtk_icon_view_get_tooltip_context;
alias extern (C) void function(aGtkIconView *, void *, void *, aGtkCellRenderer *)TGTKgtk_icon_view_set_tooltip_cell; extern(D) TGTKgtk_icon_view_set_tooltip_cell gtk_icon_view_set_tooltip_cell;
alias extern (C) void function(aGtkIconView *, void *, void *)TGTKgtk_icon_view_set_tooltip_item; extern(D) TGTKgtk_icon_view_set_tooltip_item gtk_icon_view_set_tooltip_item;
alias extern (C) void function(aGtkIconView *, gint, gint, gint *, gint *)TGTKgtk_icon_view_convert_widget_to_bin_window_coords; extern(D) TGTKgtk_icon_view_convert_widget_to_bin_window_coords gtk_icon_view_convert_widget_to_bin_window_coords;
alias extern (C) _GdkDrawable * function(aGtkIconView *, void *)TGTKgtk_icon_view_create_drag_icon; extern(D) TGTKgtk_icon_view_create_drag_icon gtk_icon_view_create_drag_icon;
alias extern (C) gint function(aGtkIconView *, gint, gint, void * *, gint *)TGTKgtk_icon_view_get_dest_item_at_pos; extern(D) TGTKgtk_icon_view_get_dest_item_at_pos gtk_icon_view_get_dest_item_at_pos;
alias extern (C) void function(aGtkIconView *, void * *, gint *)TGTKgtk_icon_view_get_drag_dest_item; extern(D) TGTKgtk_icon_view_get_drag_dest_item gtk_icon_view_get_drag_dest_item;
alias extern (C) void function(aGtkIconView *, void *, gint)TGTKgtk_icon_view_set_drag_dest_item; extern(D) TGTKgtk_icon_view_set_drag_dest_item gtk_icon_view_set_drag_dest_item;
alias extern (C) gint function(aGtkIconView *)TGTKgtk_icon_view_get_reorderable; extern(D) TGTKgtk_icon_view_get_reorderable gtk_icon_view_get_reorderable;
alias extern (C) void function(aGtkIconView *, gint)TGTKgtk_icon_view_set_reorderable; extern(D) TGTKgtk_icon_view_set_reorderable gtk_icon_view_set_reorderable;
alias extern (C) void function(aGtkIconView *)TGTKgtk_icon_view_unset_model_drag_dest; extern(D) TGTKgtk_icon_view_unset_model_drag_dest gtk_icon_view_unset_model_drag_dest;
alias extern (C) void function(aGtkIconView *)TGTKgtk_icon_view_unset_model_drag_source; extern(D) TGTKgtk_icon_view_unset_model_drag_source gtk_icon_view_unset_model_drag_source;
alias extern (C) void function(aGtkIconView *, aGtkTargetEntry *, gint, gint)TGTKgtk_icon_view_enable_model_drag_dest; extern(D) TGTKgtk_icon_view_enable_model_drag_dest gtk_icon_view_enable_model_drag_dest;
alias extern (C) void function(aGtkIconView *, gint, aGtkTargetEntry *, gint, gint)TGTKgtk_icon_view_enable_model_drag_source; extern(D) TGTKgtk_icon_view_enable_model_drag_source gtk_icon_view_enable_model_drag_source;
alias extern (C) void function(aGtkIconView *, void *, gint, float, float)TGTKgtk_icon_view_scroll_to_path; extern(D) TGTKgtk_icon_view_scroll_to_path gtk_icon_view_scroll_to_path;
alias extern (C) gint function(aGtkIconView *, void * *, _GtkCellRenderer * *)TGTKgtk_icon_view_get_cursor; extern(D) TGTKgtk_icon_view_get_cursor gtk_icon_view_get_cursor;
alias extern (C) void function(aGtkIconView *, void *, aGtkCellRenderer *, gint)TGTKgtk_icon_view_set_cursor; extern(D) TGTKgtk_icon_view_set_cursor gtk_icon_view_set_cursor;
alias extern (C) void function(aGtkIconView *, void *)TGTKgtk_icon_view_item_activated; extern(D) TGTKgtk_icon_view_item_activated gtk_icon_view_item_activated;
alias extern (C) void function(aGtkIconView *)TGTKgtk_icon_view_unselect_all; extern(D) TGTKgtk_icon_view_unselect_all gtk_icon_view_unselect_all;
alias extern (C) void function(aGtkIconView *)TGTKgtk_icon_view_select_all; extern(D) TGTKgtk_icon_view_select_all gtk_icon_view_select_all;
alias extern (C) _GList * function(aGtkIconView *)TGTKgtk_icon_view_get_selected_items; extern(D) TGTKgtk_icon_view_get_selected_items gtk_icon_view_get_selected_items;
alias extern (C) gint function(aGtkIconView *, void *)TGTKgtk_icon_view_path_is_selected; extern(D) TGTKgtk_icon_view_path_is_selected gtk_icon_view_path_is_selected;
alias extern (C) void function(aGtkIconView *, void *)TGTKgtk_icon_view_unselect_path; extern(D) TGTKgtk_icon_view_unselect_path gtk_icon_view_unselect_path;
alias extern (C) void function(aGtkIconView *, void *)TGTKgtk_icon_view_select_path; extern(D) TGTKgtk_icon_view_select_path gtk_icon_view_select_path;
alias extern (C) gint function(aGtkIconView *)TGTKgtk_icon_view_get_selection_mode; extern(D) TGTKgtk_icon_view_get_selection_mode gtk_icon_view_get_selection_mode;
alias extern (C) void function(aGtkIconView *, gint)TGTKgtk_icon_view_set_selection_mode; extern(D) TGTKgtk_icon_view_set_selection_mode gtk_icon_view_set_selection_mode;
alias extern (C) void function(aGtkIconView *, _BCD_func__10270, void *)TGTKgtk_icon_view_selected_foreach; extern(D) TGTKgtk_icon_view_selected_foreach gtk_icon_view_selected_foreach;
alias extern (C) gint function(aGtkIconView *, void * *, void * *)TGTKgtk_icon_view_get_visible_range; extern(D) TGTKgtk_icon_view_get_visible_range gtk_icon_view_get_visible_range;
alias extern (C) gint function(aGtkIconView *, gint, gint, void * *, _GtkCellRenderer * *)TGTKgtk_icon_view_get_item_at_pos; extern(D) TGTKgtk_icon_view_get_item_at_pos gtk_icon_view_get_item_at_pos;
alias extern (C) void * function(aGtkIconView *, gint, gint)TGTKgtk_icon_view_get_path_at_pos; extern(D) TGTKgtk_icon_view_get_path_at_pos gtk_icon_view_get_path_at_pos;
alias extern (C) gint function(aGtkIconView *)TGTKgtk_icon_view_get_margin; extern(D) TGTKgtk_icon_view_get_margin gtk_icon_view_get_margin;
alias extern (C) void function(aGtkIconView *, gint)TGTKgtk_icon_view_set_margin; extern(D) TGTKgtk_icon_view_set_margin gtk_icon_view_set_margin;
alias extern (C) gint function(aGtkIconView *)TGTKgtk_icon_view_get_column_spacing; extern(D) TGTKgtk_icon_view_get_column_spacing gtk_icon_view_get_column_spacing;
alias extern (C) void function(aGtkIconView *, gint)TGTKgtk_icon_view_set_column_spacing; extern(D) TGTKgtk_icon_view_set_column_spacing gtk_icon_view_set_column_spacing;
alias extern (C) gint function(aGtkIconView *)TGTKgtk_icon_view_get_row_spacing; extern(D) TGTKgtk_icon_view_get_row_spacing gtk_icon_view_get_row_spacing;
alias extern (C) void function(aGtkIconView *, gint)TGTKgtk_icon_view_set_row_spacing; extern(D) TGTKgtk_icon_view_set_row_spacing gtk_icon_view_set_row_spacing;
alias extern (C) gint function(aGtkIconView *)TGTKgtk_icon_view_get_spacing; extern(D) TGTKgtk_icon_view_get_spacing gtk_icon_view_get_spacing;
alias extern (C) void function(aGtkIconView *, gint)TGTKgtk_icon_view_set_spacing; extern(D) TGTKgtk_icon_view_set_spacing gtk_icon_view_set_spacing;
alias extern (C) gint function(aGtkIconView *)TGTKgtk_icon_view_get_item_width; extern(D) TGTKgtk_icon_view_get_item_width gtk_icon_view_get_item_width;
alias extern (C) void function(aGtkIconView *, gint)TGTKgtk_icon_view_set_item_width; extern(D) TGTKgtk_icon_view_set_item_width gtk_icon_view_set_item_width;
alias extern (C) gint function(aGtkIconView *)TGTKgtk_icon_view_get_columns; extern(D) TGTKgtk_icon_view_get_columns gtk_icon_view_get_columns;
alias extern (C) void function(aGtkIconView *, gint)TGTKgtk_icon_view_set_columns; extern(D) TGTKgtk_icon_view_set_columns gtk_icon_view_set_columns;
alias extern (C) gint function(aGtkIconView *)TGTKgtk_icon_view_get_orientation; extern(D) TGTKgtk_icon_view_get_orientation gtk_icon_view_get_orientation;
alias extern (C) void function(aGtkIconView *, gint)TGTKgtk_icon_view_set_orientation; extern(D) TGTKgtk_icon_view_set_orientation gtk_icon_view_set_orientation;
alias extern (C) gint function(aGtkIconView *)TGTKgtk_icon_view_get_pixbuf_column; extern(D) TGTKgtk_icon_view_get_pixbuf_column gtk_icon_view_get_pixbuf_column;
alias extern (C) void function(aGtkIconView *, gint)TGTKgtk_icon_view_set_pixbuf_column; extern(D) TGTKgtk_icon_view_set_pixbuf_column gtk_icon_view_set_pixbuf_column;
alias extern (C) gint function(aGtkIconView *)TGTKgtk_icon_view_get_markup_column; extern(D) TGTKgtk_icon_view_get_markup_column gtk_icon_view_get_markup_column;
alias extern (C) void function(aGtkIconView *, gint)TGTKgtk_icon_view_set_markup_column; extern(D) TGTKgtk_icon_view_set_markup_column gtk_icon_view_set_markup_column;
alias extern (C) gint function(aGtkIconView *)TGTKgtk_icon_view_get_text_column; extern(D) TGTKgtk_icon_view_get_text_column gtk_icon_view_get_text_column;
alias extern (C) void function(aGtkIconView *, gint)TGTKgtk_icon_view_set_text_column; extern(D) TGTKgtk_icon_view_set_text_column gtk_icon_view_set_text_column;
alias extern (C) void * function(aGtkIconView *)TGTKgtk_icon_view_get_model; extern(D) TGTKgtk_icon_view_get_model gtk_icon_view_get_model;
alias extern (C) void function(aGtkIconView *, void *)TGTKgtk_icon_view_set_model; extern(D) TGTKgtk_icon_view_set_model gtk_icon_view_set_model;
alias extern (C) _GtkWidget * function(void *)TGTKgtk_icon_view_new_with_model; extern(D) TGTKgtk_icon_view_new_with_model gtk_icon_view_new_with_model;
alias extern (C) _GtkWidget * function()TGTKgtk_icon_view_new; extern(D) TGTKgtk_icon_view_new gtk_icon_view_new;
alias extern (C) GType function()TGTKgtk_icon_view_get_type; extern(D) TGTKgtk_icon_view_get_type gtk_icon_view_get_type;
//alias extern (C) void function(aGtkWidget *)TGTK_gtk_tooltip_hide; extern(D) TGTK_gtk_tooltip_hide _gtk_tooltip_hide;
//alias extern (C) void function(_GdkEvent *)TGTK_gtk_tooltip_handle_event; extern(D) TGTK_gtk_tooltip_handle_event _gtk_tooltip_handle_event;
//alias extern (C) void function(aGtkWidget *)TGTK_gtk_tooltip_toggle_keyboard_mode; extern(D) TGTK_gtk_tooltip_toggle_keyboard_mode _gtk_tooltip_toggle_keyboard_mode;
//alias extern (C) void function(aGtkWidget *)TGTK_gtk_tooltip_focus_out; extern(D) TGTK_gtk_tooltip_focus_out _gtk_tooltip_focus_out;
//alias extern (C) void function(aGtkWidget *)TGTK_gtk_tooltip_focus_in; extern(D) TGTK_gtk_tooltip_focus_in _gtk_tooltip_focus_in;
alias extern (C) void function(_GdkDisplay *)TGTKgtk_tooltip_trigger_tooltip_query; extern(D) TGTKgtk_tooltip_trigger_tooltip_query gtk_tooltip_trigger_tooltip_query;
alias extern (C) void function(void *, _GdkRectangle *)TGTKgtk_tooltip_set_tip_area; extern(D) TGTKgtk_tooltip_set_tip_area gtk_tooltip_set_tip_area;
alias extern (C) void function(void *, aGtkWidget *)TGTKgtk_tooltip_set_custom; extern(D) TGTKgtk_tooltip_set_custom gtk_tooltip_set_custom;
alias extern (C) void function(void *, in char *, gint)TGTKgtk_tooltip_set_icon_from_stock; extern(D) TGTKgtk_tooltip_set_icon_from_stock gtk_tooltip_set_icon_from_stock;
alias extern (C) void function(void *, void *)TGTKgtk_tooltip_set_icon; extern(D) TGTKgtk_tooltip_set_icon gtk_tooltip_set_icon;
alias extern (C) void function(void *, in char *)TGTKgtk_tooltip_set_text; extern(D) TGTKgtk_tooltip_set_text gtk_tooltip_set_text;
alias extern (C) void function(void *, in char *)TGTKgtk_tooltip_set_markup; extern(D) TGTKgtk_tooltip_set_markup gtk_tooltip_set_markup;
alias extern (C) GType function()TGTKgtk_tooltip_get_type; extern(D) TGTKgtk_tooltip_get_type gtk_tooltip_get_type;
//alias extern (C) void function()TGTK_gtk_icon_theme_ensure_builtin_cache; extern(D) TGTK_gtk_icon_theme_ensure_builtin_cache _gtk_icon_theme_ensure_builtin_cache;
//alias extern (C) void function(_GdkDisplay *)TGTK_gtk_icon_theme_check_reload; extern(D) TGTK_gtk_icon_theme_check_reload _gtk_icon_theme_check_reload;
alias extern (C) char * function(void *)TGTKgtk_icon_info_get_display_name; extern(D) TGTKgtk_icon_info_get_display_name gtk_icon_info_get_display_name;
alias extern (C) gint function(void *, _GdkPoint * *, gint *)TGTKgtk_icon_info_get_attach_points; extern(D) TGTKgtk_icon_info_get_attach_points gtk_icon_info_get_attach_points;
alias extern (C) gint function(void *, _GdkRectangle *)TGTKgtk_icon_info_get_embedded_rect; extern(D) TGTKgtk_icon_info_get_embedded_rect gtk_icon_info_get_embedded_rect;
alias extern (C) void function(void *, gint)TGTKgtk_icon_info_set_raw_coordinates; extern(D) TGTKgtk_icon_info_set_raw_coordinates gtk_icon_info_set_raw_coordinates;
alias extern (C) void * function(void *, _GError * *)TGTKgtk_icon_info_load_icon; extern(D) TGTKgtk_icon_info_load_icon gtk_icon_info_load_icon;
alias extern (C) void * function(void *)TGTKgtk_icon_info_get_builtin_pixbuf; extern(D) TGTKgtk_icon_info_get_builtin_pixbuf gtk_icon_info_get_builtin_pixbuf;
alias extern (C) char * function(void *)TGTKgtk_icon_info_get_filename; extern(D) TGTKgtk_icon_info_get_filename gtk_icon_info_get_filename;
alias extern (C) gint function(void *)TGTKgtk_icon_info_get_base_size; extern(D) TGTKgtk_icon_info_get_base_size gtk_icon_info_get_base_size;
alias extern (C) void function(void *)TGTKgtk_icon_info_free; extern(D) TGTKgtk_icon_info_free gtk_icon_info_free;
alias extern (C) void * function(void *)TGTKgtk_icon_info_copy; extern(D) TGTKgtk_icon_info_copy gtk_icon_info_copy;
alias extern (C) GType function()TGTKgtk_icon_info_get_type; extern(D) TGTKgtk_icon_info_get_type gtk_icon_info_get_type;
alias extern (C) void function(char *, gint, void *)TGTKgtk_icon_theme_add_builtin_icon; extern(D) TGTKgtk_icon_theme_add_builtin_icon gtk_icon_theme_add_builtin_icon;
alias extern (C) gint function(aGtkIconTheme *)TGTKgtk_icon_theme_rescan_if_needed; extern(D) TGTKgtk_icon_theme_rescan_if_needed gtk_icon_theme_rescan_if_needed;
alias extern (C) char * function(aGtkIconTheme *)TGTKgtk_icon_theme_get_example_icon_name; extern(D) TGTKgtk_icon_theme_get_example_icon_name gtk_icon_theme_get_example_icon_name;
alias extern (C) _GList * function(aGtkIconTheme *)TGTKgtk_icon_theme_list_contexts; extern(D) TGTKgtk_icon_theme_list_contexts gtk_icon_theme_list_contexts;
alias extern (C) _GList * function(aGtkIconTheme *, char *)TGTKgtk_icon_theme_list_icons; extern(D) TGTKgtk_icon_theme_list_icons gtk_icon_theme_list_icons;
alias extern (C) void * function(aGtkIconTheme *, char *, gint, gint, _GError * *)TGTKgtk_icon_theme_load_icon; extern(D) TGTKgtk_icon_theme_load_icon gtk_icon_theme_load_icon;
alias extern (C) void * function(aGtkIconTheme *, char * *, gint, gint)TGTKgtk_icon_theme_choose_icon; extern(D) TGTKgtk_icon_theme_choose_icon gtk_icon_theme_choose_icon;
alias extern (C) void * function(aGtkIconTheme *, char *, gint, gint)TGTKgtk_icon_theme_lookup_icon; extern(D) TGTKgtk_icon_theme_lookup_icon gtk_icon_theme_lookup_icon;
alias extern (C) gint * function(aGtkIconTheme *, char *)TGTKgtk_icon_theme_get_icon_sizes; extern(D) TGTKgtk_icon_theme_get_icon_sizes gtk_icon_theme_get_icon_sizes;
alias extern (C) gint function(aGtkIconTheme *, char *)TGTKgtk_icon_theme_has_icon; extern(D) TGTKgtk_icon_theme_has_icon gtk_icon_theme_has_icon;
alias extern (C) void function(aGtkIconTheme *, char *)TGTKgtk_icon_theme_set_custom_theme; extern(D) TGTKgtk_icon_theme_set_custom_theme gtk_icon_theme_set_custom_theme;
alias extern (C) void function(aGtkIconTheme *, char *)TGTKgtk_icon_theme_prepend_search_path; extern(D) TGTKgtk_icon_theme_prepend_search_path gtk_icon_theme_prepend_search_path;
alias extern (C) void function(aGtkIconTheme *, char *)TGTKgtk_icon_theme_append_search_path; extern(D) TGTKgtk_icon_theme_append_search_path gtk_icon_theme_append_search_path;
alias extern (C) void function(aGtkIconTheme *, char * * *, gint *)TGTKgtk_icon_theme_get_search_path; extern(D) TGTKgtk_icon_theme_get_search_path gtk_icon_theme_get_search_path;
alias extern (C) void function(aGtkIconTheme *, char * *, gint)TGTKgtk_icon_theme_set_search_path; extern(D) TGTKgtk_icon_theme_set_search_path gtk_icon_theme_set_search_path;
alias extern (C) void function(aGtkIconTheme *, _GdkScreen *)TGTKgtk_icon_theme_set_screen; extern(D) TGTKgtk_icon_theme_set_screen gtk_icon_theme_set_screen;
alias extern (C) _GtkIconTheme * function(_GdkScreen *)TGTKgtk_icon_theme_get_for_screen; extern(D) TGTKgtk_icon_theme_get_for_screen gtk_icon_theme_get_for_screen;
alias extern (C) _GtkIconTheme * function()TGTKgtk_icon_theme_get_default; extern(D) TGTKgtk_icon_theme_get_default gtk_icon_theme_get_default;
alias extern (C) _GtkIconTheme * function()TGTKgtk_icon_theme_new; extern(D) TGTKgtk_icon_theme_new gtk_icon_theme_new;
alias extern (C) GType function()TGTKgtk_icon_theme_get_type; extern(D) TGTKgtk_icon_theme_get_type gtk_icon_theme_get_type;
alias extern (C) GQuark function()TGTKgtk_icon_theme_error_quark; extern(D) TGTKgtk_icon_theme_error_quark gtk_icon_theme_error_quark;
//alias extern (C) void function()TGTK_gtk_icon_factory_ensure_default_icons; extern(D) TGTK_gtk_icon_factory_ensure_default_icons _gtk_icon_factory_ensure_default_icons;
//alias extern (C) _GList * function()TGTK_gtk_icon_factory_list_ids; extern(D) TGTK_gtk_icon_factory_list_ids _gtk_icon_factory_list_ids;
//alias extern (C) void function()TGTK_gtk_icon_set_invalidate_caches; extern(D) TGTK_gtk_icon_set_invalidate_caches _gtk_icon_set_invalidate_caches;
alias extern (C) gint function(void *)TGTKgtk_icon_source_get_size; extern(D) TGTKgtk_icon_source_get_size gtk_icon_source_get_size;
alias extern (C) gint function(void *)TGTKgtk_icon_source_get_state; extern(D) TGTKgtk_icon_source_get_state gtk_icon_source_get_state;
alias extern (C) gint function(void *)TGTKgtk_icon_source_get_direction; extern(D) TGTKgtk_icon_source_get_direction gtk_icon_source_get_direction;
alias extern (C) void function(void *, gint)TGTKgtk_icon_source_set_size; extern(D) TGTKgtk_icon_source_set_size gtk_icon_source_set_size;
alias extern (C) void function(void *, gint)TGTKgtk_icon_source_set_state; extern(D) TGTKgtk_icon_source_set_state gtk_icon_source_set_state;
alias extern (C) void function(void *, gint)TGTKgtk_icon_source_set_direction; extern(D) TGTKgtk_icon_source_set_direction gtk_icon_source_set_direction;
alias extern (C) gint function(void *)TGTKgtk_icon_source_get_direction_wildcarded; extern(D) TGTKgtk_icon_source_get_direction_wildcarded gtk_icon_source_get_direction_wildcarded;
alias extern (C) gint function(void *)TGTKgtk_icon_source_get_state_wildcarded; extern(D) TGTKgtk_icon_source_get_state_wildcarded gtk_icon_source_get_state_wildcarded;
alias extern (C) gint function(void *)TGTKgtk_icon_source_get_size_wildcarded; extern(D) TGTKgtk_icon_source_get_size_wildcarded gtk_icon_source_get_size_wildcarded;
alias extern (C) void function(void *, gint)TGTKgtk_icon_source_set_size_wildcarded; extern(D) TGTKgtk_icon_source_set_size_wildcarded gtk_icon_source_set_size_wildcarded;
alias extern (C) void function(void *, gint)TGTKgtk_icon_source_set_state_wildcarded; extern(D) TGTKgtk_icon_source_set_state_wildcarded gtk_icon_source_set_state_wildcarded;
alias extern (C) void function(void *, gint)TGTKgtk_icon_source_set_direction_wildcarded; extern(D) TGTKgtk_icon_source_set_direction_wildcarded gtk_icon_source_set_direction_wildcarded;
alias extern (C) void * function(void *)TGTKgtk_icon_source_get_pixbuf; extern(D) TGTKgtk_icon_source_get_pixbuf gtk_icon_source_get_pixbuf;
alias extern (C) char * function(void *)TGTKgtk_icon_source_get_icon_name; extern(D) TGTKgtk_icon_source_get_icon_name gtk_icon_source_get_icon_name;
alias extern (C) char * function(void *)TGTKgtk_icon_source_get_filename; extern(D) TGTKgtk_icon_source_get_filename gtk_icon_source_get_filename;
alias extern (C) void function(void *, void *)TGTKgtk_icon_source_set_pixbuf; extern(D) TGTKgtk_icon_source_set_pixbuf gtk_icon_source_set_pixbuf;
alias extern (C) void function(void *, char *)TGTKgtk_icon_source_set_icon_name; extern(D) TGTKgtk_icon_source_set_icon_name gtk_icon_source_set_icon_name;
alias extern (C) void function(void *, char *)TGTKgtk_icon_source_set_filename; extern(D) TGTKgtk_icon_source_set_filename gtk_icon_source_set_filename;
alias extern (C) void function(void *)TGTKgtk_icon_source_free; extern(D) TGTKgtk_icon_source_free gtk_icon_source_free;
alias extern (C) void * function(void *)TGTKgtk_icon_source_copy; extern(D) TGTKgtk_icon_source_copy gtk_icon_source_copy;
alias extern (C) void * function()TGTKgtk_icon_source_new; extern(D) TGTKgtk_icon_source_new gtk_icon_source_new;
alias extern (C) GType function()TGTKgtk_icon_source_get_type; extern(D) TGTKgtk_icon_source_get_type gtk_icon_source_get_type;
alias extern (C) void function(void *, gint * *, gint *)TGTKgtk_icon_set_get_sizes; extern(D) TGTKgtk_icon_set_get_sizes gtk_icon_set_get_sizes;
alias extern (C) void function(void *, void *)TGTKgtk_icon_set_add_source; extern(D) TGTKgtk_icon_set_add_source gtk_icon_set_add_source;
alias extern (C) void * function(void *, aGtkStyle *, gint, gint, gint, aGtkWidget *, char *)TGTKgtk_icon_set_render_icon; extern(D) TGTKgtk_icon_set_render_icon gtk_icon_set_render_icon;
alias extern (C) void * function(void *)TGTKgtk_icon_set_copy; extern(D) TGTKgtk_icon_set_copy gtk_icon_set_copy;
alias extern (C) void function(void *)TGTKgtk_icon_set_unref; extern(D) TGTKgtk_icon_set_unref gtk_icon_set_unref;
alias extern (C) void * function(void *)TGTKgtk_icon_set_ref; extern(D) TGTKgtk_icon_set_ref gtk_icon_set_ref;
alias extern (C) void * function(void *)TGTKgtk_icon_set_new_from_pixbuf; extern(D) TGTKgtk_icon_set_new_from_pixbuf gtk_icon_set_new_from_pixbuf;
alias extern (C) void * function()TGTKgtk_icon_set_new; extern(D) TGTKgtk_icon_set_new gtk_icon_set_new;
alias extern (C) GType function()TGTKgtk_icon_set_get_type; extern(D) TGTKgtk_icon_set_get_type gtk_icon_set_get_type;
alias extern (C) char * function(gint)TGTKgtk_icon_size_get_name; extern(D) TGTKgtk_icon_size_get_name gtk_icon_size_get_name;
alias extern (C) gint function(char *)TGTKgtk_icon_size_from_name; extern(D) TGTKgtk_icon_size_from_name gtk_icon_size_from_name;
alias extern (C) void function(char *, gint)TGTKgtk_icon_size_register_alias; extern(D) TGTKgtk_icon_size_register_alias gtk_icon_size_register_alias;
alias extern (C) gint function(char *, gint, gint)TGTKgtk_icon_size_register; extern(D) TGTKgtk_icon_size_register gtk_icon_size_register;
alias extern (C) gint function(aGtkSettings *, gint, gint *, gint *)TGTKgtk_icon_size_lookup_for_settings; extern(D) TGTKgtk_icon_size_lookup_for_settings gtk_icon_size_lookup_for_settings;
alias extern (C) gint function(gint, gint *, gint *)TGTKgtk_icon_size_lookup; extern(D) TGTKgtk_icon_size_lookup gtk_icon_size_lookup;
alias extern (C) void * function(in char *)TGTKgtk_icon_factory_lookup_default; extern(D) TGTKgtk_icon_factory_lookup_default gtk_icon_factory_lookup_default;
alias extern (C) void function(aGtkIconFactory *)TGTKgtk_icon_factory_remove_default; extern(D) TGTKgtk_icon_factory_remove_default gtk_icon_factory_remove_default;
alias extern (C) void function(aGtkIconFactory *)TGTKgtk_icon_factory_add_default; extern(D) TGTKgtk_icon_factory_add_default gtk_icon_factory_add_default;
alias extern (C) void * function(aGtkIconFactory *, in char *)TGTKgtk_icon_factory_lookup; extern(D) TGTKgtk_icon_factory_lookup gtk_icon_factory_lookup;
alias extern (C) void function(aGtkIconFactory *, char *, void *)TGTKgtk_icon_factory_add; extern(D) TGTKgtk_icon_factory_add gtk_icon_factory_add;
alias extern (C) _GtkIconFactory * function()TGTKgtk_icon_factory_new; extern(D) TGTKgtk_icon_factory_new gtk_icon_factory_new;
alias extern (C) GType function()TGTKgtk_icon_factory_get_type; extern(D) TGTKgtk_icon_factory_get_type gtk_icon_factory_get_type;
alias extern (C) _GtkWidget * function()TGTKgtk_hseparator_new; extern(D) TGTKgtk_hseparator_new gtk_hseparator_new;
alias extern (C) GType function()TGTKgtk_hseparator_get_type; extern(D) TGTKgtk_hseparator_get_type gtk_hseparator_get_type;
alias extern (C) GType function()TGTKgtk_separator_get_type; extern(D) TGTKgtk_separator_get_type gtk_separator_get_type;
alias extern (C) _GtkWidget * function(double, double, double)TGTKgtk_hscale_new_with_range; extern(D) TGTKgtk_hscale_new_with_range gtk_hscale_new_with_range;
alias extern (C) _GtkWidget * function(aGtkAdjustment *)TGTKgtk_hscale_new; extern(D) TGTKgtk_hscale_new gtk_hscale_new;
alias extern (C) GType function()TGTKgtk_hscale_get_type; extern(D) TGTKgtk_hscale_get_type gtk_hscale_get_type;
//alias extern (C) char * function(aGtkScale *, double)TGTK_gtk_scale_format_value; extern(D) TGTK_gtk_scale_format_value _gtk_scale_format_value;
//alias extern (C) void function(aGtkScale *, gint *, gint *)TGTK_gtk_scale_get_value_size; extern(D) TGTK_gtk_scale_get_value_size _gtk_scale_get_value_size;
//alias extern (C) void function(aGtkScale *)TGTK_gtk_scale_clear_layout; extern(D) TGTK_gtk_scale_clear_layout _gtk_scale_clear_layout;
alias extern (C) void function(aGtkScale *, gint *, gint *)TGTKgtk_scale_get_layout_offsets; extern(D) TGTKgtk_scale_get_layout_offsets gtk_scale_get_layout_offsets;
alias extern (C) void * function(aGtkScale *)TGTKgtk_scale_get_layout; extern(D) TGTKgtk_scale_get_layout gtk_scale_get_layout;
alias extern (C) gint function(aGtkScale *)TGTKgtk_scale_get_value_pos; extern(D) TGTKgtk_scale_get_value_pos gtk_scale_get_value_pos;
alias extern (C) void function(aGtkScale *, gint)TGTKgtk_scale_set_value_pos; extern(D) TGTKgtk_scale_set_value_pos gtk_scale_set_value_pos;
alias extern (C) gint function(aGtkScale *)TGTKgtk_scale_get_draw_value; extern(D) TGTKgtk_scale_get_draw_value gtk_scale_get_draw_value;
alias extern (C) void function(aGtkScale *, gint)TGTKgtk_scale_set_draw_value; extern(D) TGTKgtk_scale_set_draw_value gtk_scale_set_draw_value;
alias extern (C) gint function(aGtkScale *)TGTKgtk_scale_get_digits; extern(D) TGTKgtk_scale_get_digits gtk_scale_get_digits;
alias extern (C) void function(aGtkScale *, gint)TGTKgtk_scale_set_digits; extern(D) TGTKgtk_scale_set_digits gtk_scale_set_digits;
alias extern (C) GType function()TGTKgtk_scale_get_type; extern(D) TGTKgtk_scale_get_type gtk_scale_get_type;
alias extern (C) _GtkWidget * function()TGTKgtk_hruler_new; extern(D) TGTKgtk_hruler_new gtk_hruler_new;
alias extern (C) guint function()TGTKgtk_hruler_get_type; extern(D) TGTKgtk_hruler_get_type gtk_hruler_get_type;
alias extern (C) void function(aGtkRuler *, double *, double *, double *, double *)TGTKgtk_ruler_get_range; extern(D) TGTKgtk_ruler_get_range gtk_ruler_get_range;
alias extern (C) gint function(aGtkRuler *)TGTKgtk_ruler_get_metric; extern(D) TGTKgtk_ruler_get_metric gtk_ruler_get_metric;
alias extern (C) void function(aGtkRuler *)TGTKgtk_ruler_draw_pos; extern(D) TGTKgtk_ruler_draw_pos gtk_ruler_draw_pos;
alias extern (C) void function(aGtkRuler *)TGTKgtk_ruler_draw_ticks; extern(D) TGTKgtk_ruler_draw_ticks gtk_ruler_draw_ticks;
alias extern (C) void function(aGtkRuler *, double, double, double, double)TGTKgtk_ruler_set_range; extern(D) TGTKgtk_ruler_set_range gtk_ruler_set_range;
alias extern (C) void function(aGtkRuler *, gint)TGTKgtk_ruler_set_metric; extern(D) TGTKgtk_ruler_set_metric gtk_ruler_set_metric;
alias extern (C) guint function()TGTKgtk_ruler_get_type; extern(D) TGTKgtk_ruler_get_type gtk_ruler_get_type;
alias extern (C) _GtkWidget * function()TGTKgtk_hpaned_new; extern(D) TGTKgtk_hpaned_new gtk_hpaned_new;
alias extern (C) GType function()TGTKgtk_hpaned_get_type; extern(D) TGTKgtk_hpaned_get_type gtk_hpaned_get_type;
alias extern (C) void function(aGtkPaned *, gint, gint, gint)TGTKgtk_paned_compute_position; extern(D) TGTKgtk_paned_compute_position gtk_paned_compute_position;
alias extern (C) _GtkWidget * function(aGtkPaned *)TGTKgtk_paned_get_child2; extern(D) TGTKgtk_paned_get_child2 gtk_paned_get_child2;
alias extern (C) _GtkWidget * function(aGtkPaned *)TGTKgtk_paned_get_child1; extern(D) TGTKgtk_paned_get_child1 gtk_paned_get_child1;
alias extern (C) void function(aGtkPaned *, gint)TGTKgtk_paned_set_position; extern(D) TGTKgtk_paned_set_position gtk_paned_set_position;
alias extern (C) gint function(aGtkPaned *)TGTKgtk_paned_get_position; extern(D) TGTKgtk_paned_get_position gtk_paned_get_position;
alias extern (C) void function(aGtkPaned *, aGtkWidget *, gint, gint)TGTKgtk_paned_pack2; extern(D) TGTKgtk_paned_pack2 gtk_paned_pack2;
alias extern (C) void function(aGtkPaned *, aGtkWidget *, gint, gint)TGTKgtk_paned_pack1; extern(D) TGTKgtk_paned_pack1 gtk_paned_pack1;
alias extern (C) void function(aGtkPaned *, aGtkWidget *)TGTKgtk_paned_add2; extern(D) TGTKgtk_paned_add2 gtk_paned_add2;
alias extern (C) void function(aGtkPaned *, aGtkWidget *)TGTKgtk_paned_add1; extern(D) TGTKgtk_paned_add1 gtk_paned_add1;
alias extern (C) GType function()TGTKgtk_paned_get_type; extern(D) TGTKgtk_paned_get_type gtk_paned_get_type;
alias extern (C) void function(gint)TGTKgtk_hbutton_box_set_layout_default; extern(D) TGTKgtk_hbutton_box_set_layout_default gtk_hbutton_box_set_layout_default;
alias extern (C) void function(gint)TGTKgtk_hbutton_box_set_spacing_default; extern(D) TGTKgtk_hbutton_box_set_spacing_default gtk_hbutton_box_set_spacing_default;
alias extern (C) gint function()TGTKgtk_hbutton_box_get_layout_default; extern(D) TGTKgtk_hbutton_box_get_layout_default gtk_hbutton_box_get_layout_default;
alias extern (C) gint function()TGTKgtk_hbutton_box_get_spacing_default; extern(D) TGTKgtk_hbutton_box_get_spacing_default gtk_hbutton_box_get_spacing_default;
alias extern (C) _GtkWidget * function()TGTKgtk_hbutton_box_new; extern(D) TGTKgtk_hbutton_box_new gtk_hbutton_box_new;
alias extern (C) GType function()TGTKgtk_hbutton_box_get_type; extern(D) TGTKgtk_hbutton_box_get_type gtk_hbutton_box_get_type;
alias extern (C) gint function(aGtkHandleBox *)TGTKgtk_handle_box_get_snap_edge; extern(D) TGTKgtk_handle_box_get_snap_edge gtk_handle_box_get_snap_edge;
alias extern (C) void function(aGtkHandleBox *, gint)TGTKgtk_handle_box_set_snap_edge; extern(D) TGTKgtk_handle_box_set_snap_edge gtk_handle_box_set_snap_edge;
alias extern (C) gint function(aGtkHandleBox *)TGTKgtk_handle_box_get_handle_position; extern(D) TGTKgtk_handle_box_get_handle_position gtk_handle_box_get_handle_position;
alias extern (C) void function(aGtkHandleBox *, gint)TGTKgtk_handle_box_set_handle_position; extern(D) TGTKgtk_handle_box_set_handle_position gtk_handle_box_set_handle_position;
alias extern (C) gint function(aGtkHandleBox *)TGTKgtk_handle_box_get_shadow_type; extern(D) TGTKgtk_handle_box_get_shadow_type gtk_handle_box_get_shadow_type;
alias extern (C) void function(aGtkHandleBox *, gint)TGTKgtk_handle_box_set_shadow_type; extern(D) TGTKgtk_handle_box_set_shadow_type gtk_handle_box_set_shadow_type;
alias extern (C) _GtkWidget * function()TGTKgtk_handle_box_new; extern(D) TGTKgtk_handle_box_new gtk_handle_box_new;
alias extern (C) GType function()TGTKgtk_handle_box_get_type; extern(D) TGTKgtk_handle_box_get_type gtk_handle_box_get_type;
alias extern (C) void function(_GdkGC *)TGTKgtk_gc_release; extern(D) TGTKgtk_gc_release gtk_gc_release;
alias extern (C) _GdkGC * function(gint, _GdkColormap *, _GdkGCValues *, gint)TGTKgtk_gc_get; extern(D) TGTKgtk_gc_get gtk_gc_get;
alias extern (C) _GtkWidget * function()TGTKgtk_gamma_curve_new; extern(D) TGTKgtk_gamma_curve_new gtk_gamma_curve_new;
alias extern (C) guint function()TGTKgtk_gamma_curve_get_type; extern(D) TGTKgtk_gamma_curve_get_type gtk_gamma_curve_get_type;
alias extern (C) void function(aGtkFontSelectionDialog *, char *)TGTKgtk_font_selection_dialog_set_preview_text; extern(D) TGTKgtk_font_selection_dialog_set_preview_text gtk_font_selection_dialog_set_preview_text;
alias extern (C) char * function(aGtkFontSelectionDialog *)TGTKgtk_font_selection_dialog_get_preview_text; extern(D) TGTKgtk_font_selection_dialog_get_preview_text gtk_font_selection_dialog_get_preview_text;
alias extern (C) gint function(aGtkFontSelectionDialog *, char *)TGTKgtk_font_selection_dialog_set_font_name; extern(D) TGTKgtk_font_selection_dialog_set_font_name gtk_font_selection_dialog_set_font_name;
alias extern (C) _GdkFont * function(aGtkFontSelectionDialog *)TGTKgtk_font_selection_dialog_get_font; extern(D) TGTKgtk_font_selection_dialog_get_font gtk_font_selection_dialog_get_font;
alias extern (C) char * function(aGtkFontSelectionDialog *)TGTKgtk_font_selection_dialog_get_font_name; extern(D) TGTKgtk_font_selection_dialog_get_font_name gtk_font_selection_dialog_get_font_name;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_font_selection_dialog_new; extern(D) TGTKgtk_font_selection_dialog_new gtk_font_selection_dialog_new;
alias extern (C) GType function()TGTKgtk_font_selection_dialog_get_type; extern(D) TGTKgtk_font_selection_dialog_get_type gtk_font_selection_dialog_get_type;
alias extern (C) void function(aGtkFontSelection *, char *)TGTKgtk_font_selection_set_preview_text; extern(D) TGTKgtk_font_selection_set_preview_text gtk_font_selection_set_preview_text;
alias extern (C) char * function(aGtkFontSelection *)TGTKgtk_font_selection_get_preview_text; extern(D) TGTKgtk_font_selection_get_preview_text gtk_font_selection_get_preview_text;
alias extern (C) gint function(aGtkFontSelection *, char *)TGTKgtk_font_selection_set_font_name; extern(D) TGTKgtk_font_selection_set_font_name gtk_font_selection_set_font_name;
alias extern (C) _GdkFont * function(aGtkFontSelection *)TGTKgtk_font_selection_get_font; extern(D) TGTKgtk_font_selection_get_font gtk_font_selection_get_font;
alias extern (C) char * function(aGtkFontSelection *)TGTKgtk_font_selection_get_font_name; extern(D) TGTKgtk_font_selection_get_font_name gtk_font_selection_get_font_name;
alias extern (C) _GtkWidget * function()TGTKgtk_font_selection_new; extern(D) TGTKgtk_font_selection_new gtk_font_selection_new;
alias extern (C) GType function()TGTKgtk_font_selection_get_type; extern(D) TGTKgtk_font_selection_get_type gtk_font_selection_get_type;
alias extern (C) void function(aGtkFontButton *, gint)TGTKgtk_font_button_set_show_size; extern(D) TGTKgtk_font_button_set_show_size gtk_font_button_set_show_size;
alias extern (C) gint function(aGtkFontButton *)TGTKgtk_font_button_get_show_size; extern(D) TGTKgtk_font_button_get_show_size gtk_font_button_get_show_size;
alias extern (C) void function(aGtkFontButton *, gint)TGTKgtk_font_button_set_show_style; extern(D) TGTKgtk_font_button_set_show_style gtk_font_button_set_show_style;
alias extern (C) gint function(aGtkFontButton *)TGTKgtk_font_button_get_show_style; extern(D) TGTKgtk_font_button_get_show_style gtk_font_button_get_show_style;
alias extern (C) gint function(aGtkFontButton *, char *)TGTKgtk_font_button_set_font_name; extern(D) TGTKgtk_font_button_set_font_name gtk_font_button_set_font_name;
alias extern (C) char * function(aGtkFontButton *)TGTKgtk_font_button_get_font_name; extern(D) TGTKgtk_font_button_get_font_name gtk_font_button_get_font_name;
alias extern (C) void function(aGtkFontButton *, gint)TGTKgtk_font_button_set_use_size; extern(D) TGTKgtk_font_button_set_use_size gtk_font_button_set_use_size;
alias extern (C) gint function(aGtkFontButton *)TGTKgtk_font_button_get_use_size; extern(D) TGTKgtk_font_button_get_use_size gtk_font_button_get_use_size;
alias extern (C) void function(aGtkFontButton *, gint)TGTKgtk_font_button_set_use_font; extern(D) TGTKgtk_font_button_set_use_font gtk_font_button_set_use_font;
alias extern (C) gint function(aGtkFontButton *)TGTKgtk_font_button_get_use_font; extern(D) TGTKgtk_font_button_get_use_font gtk_font_button_get_use_font;
alias extern (C) void function(aGtkFontButton *, char *)TGTKgtk_font_button_set_title; extern(D) TGTKgtk_font_button_set_title gtk_font_button_set_title;
alias extern (C) char * function(aGtkFontButton *)TGTKgtk_font_button_get_title; extern(D) TGTKgtk_font_button_get_title gtk_font_button_get_title;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_font_button_new_with_font; extern(D) TGTKgtk_font_button_new_with_font gtk_font_button_new_with_font;
alias extern (C) _GtkWidget * function()TGTKgtk_font_button_new; extern(D) TGTKgtk_font_button_new gtk_font_button_new;
alias extern (C) GType function()TGTKgtk_font_button_get_type; extern(D) TGTKgtk_font_button_get_type gtk_font_button_get_type;
alias extern (C) _GtkWidget * function(gint, char *)TGTKgtk_file_chooser_widget_new_with_backend; extern(D) TGTKgtk_file_chooser_widget_new_with_backend gtk_file_chooser_widget_new_with_backend;
alias extern (C) _GtkWidget * function(gint)TGTKgtk_file_chooser_widget_new; extern(D) TGTKgtk_file_chooser_widget_new gtk_file_chooser_widget_new;
alias extern (C) GType function()TGTKgtk_file_chooser_widget_get_type; extern(D) TGTKgtk_file_chooser_widget_get_type gtk_file_chooser_widget_get_type;
alias extern (C) _GtkWidget * function(char *, aGtkWindow *, gint, char *, char *, ...)TGTKgtk_file_chooser_dialog_new_with_backend; extern(D) TGTKgtk_file_chooser_dialog_new_with_backend gtk_file_chooser_dialog_new_with_backend;
alias extern (C) _GtkWidget * function(in char *, aGtkWindow *, gint, in char *, ...)TGTKgtk_file_chooser_dialog_new; extern(D) TGTKgtk_file_chooser_dialog_new gtk_file_chooser_dialog_new;
alias extern (C) GType function()TGTKgtk_file_chooser_dialog_get_type; extern(D) TGTKgtk_file_chooser_dialog_get_type gtk_file_chooser_dialog_get_type;
alias extern (C) void function(aGtkFileChooserButton *, gint)TGTKgtk_file_chooser_button_set_focus_on_click; extern(D) TGTKgtk_file_chooser_button_set_focus_on_click gtk_file_chooser_button_set_focus_on_click;
alias extern (C) gint function(aGtkFileChooserButton *)TGTKgtk_file_chooser_button_get_focus_on_click; extern(D) TGTKgtk_file_chooser_button_get_focus_on_click gtk_file_chooser_button_get_focus_on_click;
alias extern (C) void function(aGtkFileChooserButton *, gint)TGTKgtk_file_chooser_button_set_width_chars; extern(D) TGTKgtk_file_chooser_button_set_width_chars gtk_file_chooser_button_set_width_chars;
alias extern (C) gint function(aGtkFileChooserButton *)TGTKgtk_file_chooser_button_get_width_chars; extern(D) TGTKgtk_file_chooser_button_get_width_chars gtk_file_chooser_button_get_width_chars;
alias extern (C) void function(aGtkFileChooserButton *, char *)TGTKgtk_file_chooser_button_set_title; extern(D) TGTKgtk_file_chooser_button_set_title gtk_file_chooser_button_set_title;
alias extern (C) char * function(aGtkFileChooserButton *)TGTKgtk_file_chooser_button_get_title; extern(D) TGTKgtk_file_chooser_button_get_title gtk_file_chooser_button_get_title;
alias extern (C) _GtkWidget * function(aGtkWidget *)TGTKgtk_file_chooser_button_new_with_dialog; extern(D) TGTKgtk_file_chooser_button_new_with_dialog gtk_file_chooser_button_new_with_dialog;
alias extern (C) _GtkWidget * function(char *, gint, char *)TGTKgtk_file_chooser_button_new_with_backend; extern(D) TGTKgtk_file_chooser_button_new_with_backend gtk_file_chooser_button_new_with_backend;
alias extern (C) _GtkWidget * function(char *, gint)TGTKgtk_file_chooser_button_new; extern(D) TGTKgtk_file_chooser_button_new gtk_file_chooser_button_new;
alias extern (C) GType function()TGTKgtk_file_chooser_button_get_type; extern(D) TGTKgtk_file_chooser_button_get_type gtk_file_chooser_button_get_type;
alias extern (C) _GSList * function(void *)TGTKgtk_file_chooser_list_shortcut_folder_uris; extern(D) TGTKgtk_file_chooser_list_shortcut_folder_uris gtk_file_chooser_list_shortcut_folder_uris;
alias extern (C) gint function(void *, char *, _GError * *)TGTKgtk_file_chooser_remove_shortcut_folder_uri; extern(D) TGTKgtk_file_chooser_remove_shortcut_folder_uri gtk_file_chooser_remove_shortcut_folder_uri;
alias extern (C) gint function(void *, char *, _GError * *)TGTKgtk_file_chooser_add_shortcut_folder_uri; extern(D) TGTKgtk_file_chooser_add_shortcut_folder_uri gtk_file_chooser_add_shortcut_folder_uri;
alias extern (C) _GSList * function(void *)TGTKgtk_file_chooser_list_shortcut_folders; extern(D) TGTKgtk_file_chooser_list_shortcut_folders gtk_file_chooser_list_shortcut_folders;
alias extern (C) gint function(void *, char *, _GError * *)TGTKgtk_file_chooser_remove_shortcut_folder; extern(D) TGTKgtk_file_chooser_remove_shortcut_folder gtk_file_chooser_remove_shortcut_folder;
alias extern (C) gint function(void *, char *, _GError * *)TGTKgtk_file_chooser_add_shortcut_folder; extern(D) TGTKgtk_file_chooser_add_shortcut_folder gtk_file_chooser_add_shortcut_folder;
alias extern (C) void * function(void *)TGTKgtk_file_chooser_get_filter; extern(D) TGTKgtk_file_chooser_get_filter gtk_file_chooser_get_filter;
alias extern (C) void function(void *, void *)TGTKgtk_file_chooser_set_filter; extern(D) TGTKgtk_file_chooser_set_filter gtk_file_chooser_set_filter;
alias extern (C) _GSList * function(void *)TGTKgtk_file_chooser_list_filters; extern(D) TGTKgtk_file_chooser_list_filters gtk_file_chooser_list_filters;
alias extern (C) void function(void *, void *)TGTKgtk_file_chooser_remove_filter; extern(D) TGTKgtk_file_chooser_remove_filter gtk_file_chooser_remove_filter;
alias extern (C) void function(void *, void *)TGTKgtk_file_chooser_add_filter; extern(D) TGTKgtk_file_chooser_add_filter gtk_file_chooser_add_filter;
alias extern (C) _GtkWidget * function(void *)TGTKgtk_file_chooser_get_extra_widget; extern(D) TGTKgtk_file_chooser_get_extra_widget gtk_file_chooser_get_extra_widget;
alias extern (C) void function(void *, aGtkWidget *)TGTKgtk_file_chooser_set_extra_widget; extern(D) TGTKgtk_file_chooser_set_extra_widget gtk_file_chooser_set_extra_widget;
alias extern (C) char * function(void *)TGTKgtk_file_chooser_get_preview_uri; extern(D) TGTKgtk_file_chooser_get_preview_uri gtk_file_chooser_get_preview_uri;
alias extern (C) char * function(void *)TGTKgtk_file_chooser_get_preview_filename; extern(D) TGTKgtk_file_chooser_get_preview_filename gtk_file_chooser_get_preview_filename;
alias extern (C) gint function(void *)TGTKgtk_file_chooser_get_use_preview_label; extern(D) TGTKgtk_file_chooser_get_use_preview_label gtk_file_chooser_get_use_preview_label;
alias extern (C) void function(void *, gint)TGTKgtk_file_chooser_set_use_preview_label; extern(D) TGTKgtk_file_chooser_set_use_preview_label gtk_file_chooser_set_use_preview_label;
alias extern (C) gint function(void *)TGTKgtk_file_chooser_get_preview_widget_active; extern(D) TGTKgtk_file_chooser_get_preview_widget_active gtk_file_chooser_get_preview_widget_active;
alias extern (C) void function(void *, gint)TGTKgtk_file_chooser_set_preview_widget_active; extern(D) TGTKgtk_file_chooser_set_preview_widget_active gtk_file_chooser_set_preview_widget_active;
alias extern (C) _GtkWidget * function(void *)TGTKgtk_file_chooser_get_preview_widget; extern(D) TGTKgtk_file_chooser_get_preview_widget gtk_file_chooser_get_preview_widget;
alias extern (C) void function(void *, aGtkWidget *)TGTKgtk_file_chooser_set_preview_widget; extern(D) TGTKgtk_file_chooser_set_preview_widget gtk_file_chooser_set_preview_widget;
alias extern (C) char * function(void *)TGTKgtk_file_chooser_get_current_folder_uri; extern(D) TGTKgtk_file_chooser_get_current_folder_uri gtk_file_chooser_get_current_folder_uri;
alias extern (C) gint function(void *, char *)TGTKgtk_file_chooser_set_current_folder_uri; extern(D) TGTKgtk_file_chooser_set_current_folder_uri gtk_file_chooser_set_current_folder_uri;
alias extern (C) _GSList * function(void *)TGTKgtk_file_chooser_get_uris; extern(D) TGTKgtk_file_chooser_get_uris gtk_file_chooser_get_uris;
alias extern (C) void function(void *, char *)TGTKgtk_file_chooser_unselect_uri; extern(D) TGTKgtk_file_chooser_unselect_uri gtk_file_chooser_unselect_uri;
alias extern (C) gint function(void *, char *)TGTKgtk_file_chooser_select_uri; extern(D) TGTKgtk_file_chooser_select_uri gtk_file_chooser_select_uri;
alias extern (C) gint function(void *, char *)TGTKgtk_file_chooser_set_uri; extern(D) TGTKgtk_file_chooser_set_uri gtk_file_chooser_set_uri;
alias extern (C) char * function(void *)TGTKgtk_file_chooser_get_uri; extern(D) TGTKgtk_file_chooser_get_uri gtk_file_chooser_get_uri;
alias extern (C) char * function(void *)TGTKgtk_file_chooser_get_current_folder; extern(D) TGTKgtk_file_chooser_get_current_folder gtk_file_chooser_get_current_folder;
alias extern (C) gint function(void *, char *)TGTKgtk_file_chooser_set_current_folder; extern(D) TGTKgtk_file_chooser_set_current_folder gtk_file_chooser_set_current_folder;
alias extern (C) _GSList * function(void *)TGTKgtk_file_chooser_get_filenames; extern(D) TGTKgtk_file_chooser_get_filenames gtk_file_chooser_get_filenames;
alias extern (C) void function(void *)TGTKgtk_file_chooser_unselect_all; extern(D) TGTKgtk_file_chooser_unselect_all gtk_file_chooser_unselect_all;
alias extern (C) void function(void *)TGTKgtk_file_chooser_select_all; extern(D) TGTKgtk_file_chooser_select_all gtk_file_chooser_select_all;
alias extern (C) void function(void *, char *)TGTKgtk_file_chooser_unselect_filename; extern(D) TGTKgtk_file_chooser_unselect_filename gtk_file_chooser_unselect_filename;
alias extern (C) gint function(void *, char *)TGTKgtk_file_chooser_select_filename; extern(D) TGTKgtk_file_chooser_select_filename gtk_file_chooser_select_filename;
alias extern (C) gint function(void *, char *)TGTKgtk_file_chooser_set_filename; extern(D) TGTKgtk_file_chooser_set_filename gtk_file_chooser_set_filename;
alias extern (C) char * function(void *)TGTKgtk_file_chooser_get_filename; extern(D) TGTKgtk_file_chooser_get_filename gtk_file_chooser_get_filename;
alias extern (C) void function(void *, char *)TGTKgtk_file_chooser_set_current_name; extern(D) TGTKgtk_file_chooser_set_current_name gtk_file_chooser_set_current_name;
alias extern (C) gint function(void *)TGTKgtk_file_chooser_get_do_overwrite_confirmation; extern(D) TGTKgtk_file_chooser_get_do_overwrite_confirmation gtk_file_chooser_get_do_overwrite_confirmation;
alias extern (C) void function(void *, gint)TGTKgtk_file_chooser_set_do_overwrite_confirmation; extern(D) TGTKgtk_file_chooser_set_do_overwrite_confirmation gtk_file_chooser_set_do_overwrite_confirmation;
alias extern (C) gint function(void *)TGTKgtk_file_chooser_get_show_hidden; extern(D) TGTKgtk_file_chooser_get_show_hidden gtk_file_chooser_get_show_hidden;
alias extern (C) void function(void *, gint)TGTKgtk_file_chooser_set_show_hidden; extern(D) TGTKgtk_file_chooser_set_show_hidden gtk_file_chooser_set_show_hidden;
alias extern (C) gint function(void *)TGTKgtk_file_chooser_get_select_multiple; extern(D) TGTKgtk_file_chooser_get_select_multiple gtk_file_chooser_get_select_multiple;
alias extern (C) void function(void *, gint)TGTKgtk_file_chooser_set_select_multiple; extern(D) TGTKgtk_file_chooser_set_select_multiple gtk_file_chooser_set_select_multiple;
alias extern (C) gint function(void *)TGTKgtk_file_chooser_get_local_only; extern(D) TGTKgtk_file_chooser_get_local_only gtk_file_chooser_get_local_only;
alias extern (C) void function(void *, gint)TGTKgtk_file_chooser_set_local_only; extern(D) TGTKgtk_file_chooser_set_local_only gtk_file_chooser_set_local_only;
alias extern (C) gint function(void *)TGTKgtk_file_chooser_get_action; extern(D) TGTKgtk_file_chooser_get_action gtk_file_chooser_get_action;
alias extern (C) void function(void *, gint)TGTKgtk_file_chooser_set_action; extern(D) TGTKgtk_file_chooser_set_action gtk_file_chooser_set_action;
alias extern (C) GQuark function()TGTKgtk_file_chooser_error_quark; extern(D) TGTKgtk_file_chooser_error_quark gtk_file_chooser_error_quark;
alias extern (C) GType function()TGTKgtk_file_chooser_get_type; extern(D) TGTKgtk_file_chooser_get_type gtk_file_chooser_get_type;
alias extern (C) gint function(void *, aGtkFileFilterInfo *)TGTKgtk_file_filter_filter; extern(D) TGTKgtk_file_filter_filter gtk_file_filter_filter;
alias extern (C) gint function(void *)TGTKgtk_file_filter_get_needed; extern(D) TGTKgtk_file_filter_get_needed gtk_file_filter_get_needed;
alias extern (C) void function(void *, gint, _BCD_func__10568, void *, _BCD_func__13158)TGTKgtk_file_filter_add_custom; extern(D) TGTKgtk_file_filter_add_custom gtk_file_filter_add_custom;
alias extern (C) void function(void *)TGTKgtk_file_filter_add_pixbuf_formats; extern(D) TGTKgtk_file_filter_add_pixbuf_formats gtk_file_filter_add_pixbuf_formats;
alias extern (C) void function(void *, char *)TGTKgtk_file_filter_add_pattern; extern(D) TGTKgtk_file_filter_add_pattern gtk_file_filter_add_pattern;
alias extern (C) void function(void *, char *)TGTKgtk_file_filter_add_mime_type; extern(D) TGTKgtk_file_filter_add_mime_type gtk_file_filter_add_mime_type;
alias extern (C) char * function(void *)TGTKgtk_file_filter_get_name; extern(D) TGTKgtk_file_filter_get_name gtk_file_filter_get_name;
alias extern (C) void function(void *, char *)TGTKgtk_file_filter_set_name; extern(D) TGTKgtk_file_filter_set_name gtk_file_filter_set_name;
alias extern (C) void * function()TGTKgtk_file_filter_new; extern(D) TGTKgtk_file_filter_new gtk_file_filter_new;
alias extern (C) GType function()TGTKgtk_file_filter_get_type; extern(D) TGTKgtk_file_filter_get_type gtk_file_filter_get_type;
alias extern (C) gint function(aGtkFixed *)TGTKgtk_fixed_get_has_window; extern(D) TGTKgtk_fixed_get_has_window gtk_fixed_get_has_window;
alias extern (C) void function(aGtkFixed *, gint)TGTKgtk_fixed_set_has_window; extern(D) TGTKgtk_fixed_set_has_window gtk_fixed_set_has_window;
alias extern (C) void function(aGtkFixed *, aGtkWidget *, gint, gint)TGTKgtk_fixed_move; extern(D) TGTKgtk_fixed_move gtk_fixed_move;
alias extern (C) void function(aGtkFixed *, aGtkWidget *, gint, gint)TGTKgtk_fixed_put; extern(D) TGTKgtk_fixed_put gtk_fixed_put;
alias extern (C) _GtkWidget * function()TGTKgtk_fixed_new; extern(D) TGTKgtk_fixed_new gtk_fixed_new;
alias extern (C) GType function()TGTKgtk_fixed_get_type; extern(D) TGTKgtk_fixed_get_type gtk_fixed_get_type;
alias extern (C) gint function(aGtkFileSelection *)TGTKgtk_file_selection_get_select_multiple; extern(D) TGTKgtk_file_selection_get_select_multiple gtk_file_selection_get_select_multiple;
alias extern (C) void function(aGtkFileSelection *, gint)TGTKgtk_file_selection_set_select_multiple; extern(D) TGTKgtk_file_selection_set_select_multiple gtk_file_selection_set_select_multiple;
alias extern (C) char * * function(aGtkFileSelection *)TGTKgtk_file_selection_get_selections; extern(D) TGTKgtk_file_selection_get_selections gtk_file_selection_get_selections;
alias extern (C) void function(aGtkFileSelection *)TGTKgtk_file_selection_hide_fileop_buttons; extern(D) TGTKgtk_file_selection_hide_fileop_buttons gtk_file_selection_hide_fileop_buttons;
alias extern (C) void function(aGtkFileSelection *)TGTKgtk_file_selection_show_fileop_buttons; extern(D) TGTKgtk_file_selection_show_fileop_buttons gtk_file_selection_show_fileop_buttons;
alias extern (C) void function(aGtkFileSelection *, char *)TGTKgtk_file_selection_complete; extern(D) TGTKgtk_file_selection_complete gtk_file_selection_complete;
alias extern (C) char * function(aGtkFileSelection *)TGTKgtk_file_selection_get_filename; extern(D) TGTKgtk_file_selection_get_filename gtk_file_selection_get_filename;
alias extern (C) void function(aGtkFileSelection *, char *)TGTKgtk_file_selection_set_filename; extern(D) TGTKgtk_file_selection_set_filename gtk_file_selection_set_filename;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_file_selection_new; extern(D) TGTKgtk_file_selection_new gtk_file_selection_new;
alias extern (C) guint function()TGTKgtk_file_selection_get_type; extern(D) TGTKgtk_file_selection_get_type gtk_file_selection_get_type;
alias extern (C) _GtkWidget * function(aGtkExpander *)TGTKgtk_expander_get_label_widget; extern(D) TGTKgtk_expander_get_label_widget gtk_expander_get_label_widget;
alias extern (C) void function(aGtkExpander *, aGtkWidget *)TGTKgtk_expander_set_label_widget; extern(D) TGTKgtk_expander_set_label_widget gtk_expander_set_label_widget;
alias extern (C) gint function(aGtkExpander *)TGTKgtk_expander_get_use_markup; extern(D) TGTKgtk_expander_get_use_markup gtk_expander_get_use_markup;
alias extern (C) void function(aGtkExpander *, gint)TGTKgtk_expander_set_use_markup; extern(D) TGTKgtk_expander_set_use_markup gtk_expander_set_use_markup;
alias extern (C) gint function(aGtkExpander *)TGTKgtk_expander_get_use_underline; extern(D) TGTKgtk_expander_get_use_underline gtk_expander_get_use_underline;
alias extern (C) void function(aGtkExpander *, gint)TGTKgtk_expander_set_use_underline; extern(D) TGTKgtk_expander_set_use_underline gtk_expander_set_use_underline;
alias extern (C) char * function(aGtkExpander *)TGTKgtk_expander_get_label; extern(D) TGTKgtk_expander_get_label gtk_expander_get_label;
alias extern (C) void function(aGtkExpander *, char *)TGTKgtk_expander_set_label; extern(D) TGTKgtk_expander_set_label gtk_expander_set_label;
alias extern (C) gint function(aGtkExpander *)TGTKgtk_expander_get_spacing; extern(D) TGTKgtk_expander_get_spacing gtk_expander_get_spacing;
alias extern (C) void function(aGtkExpander *, gint)TGTKgtk_expander_set_spacing; extern(D) TGTKgtk_expander_set_spacing gtk_expander_set_spacing;
alias extern (C) gint function(aGtkExpander *)TGTKgtk_expander_get_expanded; extern(D) TGTKgtk_expander_get_expanded gtk_expander_get_expanded;
alias extern (C) void function(aGtkExpander *, gint)TGTKgtk_expander_set_expanded; extern(D) TGTKgtk_expander_set_expanded gtk_expander_set_expanded;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_expander_new_with_mnemonic; extern(D) TGTKgtk_expander_new_with_mnemonic gtk_expander_new_with_mnemonic;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_expander_new; extern(D) TGTKgtk_expander_new gtk_expander_new;
alias extern (C) GType function()TGTKgtk_expander_get_type; extern(D) TGTKgtk_expander_get_type gtk_expander_get_type;
alias extern (C) void function(aGtkEventBox *, gint)TGTKgtk_event_box_set_above_child; extern(D) TGTKgtk_event_box_set_above_child gtk_event_box_set_above_child;
alias extern (C) gint function(aGtkEventBox *)TGTKgtk_event_box_get_above_child; extern(D) TGTKgtk_event_box_get_above_child gtk_event_box_get_above_child;
alias extern (C) void function(aGtkEventBox *, gint)TGTKgtk_event_box_set_visible_window; extern(D) TGTKgtk_event_box_set_visible_window gtk_event_box_set_visible_window;
alias extern (C) gint function(aGtkEventBox *)TGTKgtk_event_box_get_visible_window; extern(D) TGTKgtk_event_box_get_visible_window gtk_event_box_get_visible_window;
alias extern (C) _GtkWidget * function()TGTKgtk_event_box_new; extern(D) TGTKgtk_event_box_new gtk_event_box_new;
alias extern (C) GType function()TGTKgtk_event_box_get_type; extern(D) TGTKgtk_event_box_get_type gtk_event_box_get_type;
alias extern (C) void function(aGtkCurve *, gint)TGTKgtk_curve_set_curve_type; extern(D) TGTKgtk_curve_set_curve_type gtk_curve_set_curve_type;
alias extern (C) void function(aGtkCurve *, gint, float *)TGTKgtk_curve_set_vector; extern(D) TGTKgtk_curve_set_vector gtk_curve_set_vector;
alias extern (C) void function(aGtkCurve *, gint, float *)TGTKgtk_curve_get_vector; extern(D) TGTKgtk_curve_get_vector gtk_curve_get_vector;
alias extern (C) void function(aGtkCurve *, float, float, float, float)TGTKgtk_curve_set_range; extern(D) TGTKgtk_curve_set_range gtk_curve_set_range;
alias extern (C) void function(aGtkCurve *, float)TGTKgtk_curve_set_gamma; extern(D) TGTKgtk_curve_set_gamma gtk_curve_set_gamma;
alias extern (C) void function(aGtkCurve *)TGTKgtk_curve_reset; extern(D) TGTKgtk_curve_reset gtk_curve_reset;
alias extern (C) _GtkWidget * function()TGTKgtk_curve_new; extern(D) TGTKgtk_curve_new gtk_curve_new;
alias extern (C) guint function()TGTKgtk_curve_get_type; extern(D) TGTKgtk_curve_get_type gtk_curve_get_type;
alias extern (C) void function(aGtkDrawingArea *, gint, gint)TGTKgtk_drawing_area_size; extern(D) TGTKgtk_drawing_area_size gtk_drawing_area_size;
alias extern (C) _GtkWidget * function()TGTKgtk_drawing_area_new; extern(D) TGTKgtk_drawing_area_new gtk_drawing_area_new;
alias extern (C) GType function()TGTKgtk_drawing_area_get_type; extern(D) TGTKgtk_drawing_area_get_type gtk_drawing_area_get_type;
alias extern (C) guint function()TGTKgtk_ctree_node_get_type; extern(D) TGTKgtk_ctree_node_get_type gtk_ctree_node_get_type;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *)TGTKgtk_ctree_sort_recursive; extern(D) TGTKgtk_ctree_sort_recursive gtk_ctree_sort_recursive;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *)TGTKgtk_ctree_sort_node; extern(D) TGTKgtk_ctree_sort_node gtk_ctree_sort_node;
alias extern (C) void function(aGtkCTree *, _BCD_func__10682)TGTKgtk_ctree_set_drag_compare_func; extern(D) TGTKgtk_ctree_set_drag_compare_func gtk_ctree_set_drag_compare_func;
alias extern (C) void function(aGtkCTree *, gint)TGTKgtk_ctree_set_expander_style; extern(D) TGTKgtk_ctree_set_expander_style gtk_ctree_set_expander_style;
alias extern (C) void function(aGtkCTree *, gint)TGTKgtk_ctree_set_line_style; extern(D) TGTKgtk_ctree_set_line_style gtk_ctree_set_line_style;
alias extern (C) void function(aGtkCTree *, gint)TGTKgtk_ctree_set_show_stub; extern(D) TGTKgtk_ctree_set_show_stub gtk_ctree_set_show_stub;
alias extern (C) void function(aGtkCTree *, gint)TGTKgtk_ctree_set_spacing; extern(D) TGTKgtk_ctree_set_spacing gtk_ctree_set_spacing;
alias extern (C) void function(aGtkCTree *, gint)TGTKgtk_ctree_set_indent; extern(D) TGTKgtk_ctree_set_indent gtk_ctree_set_indent;
alias extern (C) gint function(aGtkCTree *, aGtkCTreeNode *)TGTKgtk_ctree_node_is_visible; extern(D) TGTKgtk_ctree_node_is_visible gtk_ctree_node_is_visible;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, gint, float, float)TGTKgtk_ctree_node_moveto; extern(D) TGTKgtk_ctree_node_moveto gtk_ctree_node_moveto;
alias extern (C) void * function(aGtkCTree *, aGtkCTreeNode *)TGTKgtk_ctree_node_get_row_data; extern(D) TGTKgtk_ctree_node_get_row_data gtk_ctree_node_get_row_data;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, void *, _BCD_func__13158)TGTKgtk_ctree_node_set_row_data_full; extern(D) TGTKgtk_ctree_node_set_row_data_full gtk_ctree_node_set_row_data_full;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, void *)TGTKgtk_ctree_node_set_row_data; extern(D) TGTKgtk_ctree_node_set_row_data gtk_ctree_node_set_row_data;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, _GdkColor *)TGTKgtk_ctree_node_set_background; extern(D) TGTKgtk_ctree_node_set_background gtk_ctree_node_set_background;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, _GdkColor *)TGTKgtk_ctree_node_set_foreground; extern(D) TGTKgtk_ctree_node_set_foreground gtk_ctree_node_set_foreground;
alias extern (C) _GtkStyle * function(aGtkCTree *, aGtkCTreeNode *, gint)TGTKgtk_ctree_node_get_cell_style; extern(D) TGTKgtk_ctree_node_get_cell_style gtk_ctree_node_get_cell_style;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, gint, aGtkStyle *)TGTKgtk_ctree_node_set_cell_style; extern(D) TGTKgtk_ctree_node_set_cell_style gtk_ctree_node_set_cell_style;
alias extern (C) _GtkStyle * function(aGtkCTree *, aGtkCTreeNode *)TGTKgtk_ctree_node_get_row_style; extern(D) TGTKgtk_ctree_node_get_row_style gtk_ctree_node_get_row_style;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, aGtkStyle *)TGTKgtk_ctree_node_set_row_style; extern(D) TGTKgtk_ctree_node_set_row_style gtk_ctree_node_set_row_style;
alias extern (C) gint function(aGtkCTree *, aGtkCTreeNode *, char * *, char *, _GdkDrawable * *, _GdkDrawable * *, _GdkDrawable * *, _GdkDrawable * *, gint *, gint *)TGTKgtk_ctree_get_node_info; extern(D) TGTKgtk_ctree_get_node_info gtk_ctree_get_node_info;
alias extern (C) gint function(aGtkCTree *, aGtkCTreeNode *, gint, char * *, char *, _GdkDrawable * *, _GdkDrawable * *)TGTKgtk_ctree_node_get_pixtext; extern(D) TGTKgtk_ctree_node_get_pixtext gtk_ctree_node_get_pixtext;
alias extern (C) gint function(aGtkCTree *, aGtkCTreeNode *, gint, _GdkDrawable * *, _GdkDrawable * *)TGTKgtk_ctree_node_get_pixmap; extern(D) TGTKgtk_ctree_node_get_pixmap gtk_ctree_node_get_pixmap;
alias extern (C) gint function(aGtkCTree *, aGtkCTreeNode *, gint, char * *)TGTKgtk_ctree_node_get_text; extern(D) TGTKgtk_ctree_node_get_text gtk_ctree_node_get_text;
alias extern (C) gint function(aGtkCTree *, aGtkCTreeNode *, gint)TGTKgtk_ctree_node_get_cell_type; extern(D) TGTKgtk_ctree_node_get_cell_type gtk_ctree_node_get_cell_type;
alias extern (C) gint function(aGtkCTree *, aGtkCTreeNode *)TGTKgtk_ctree_node_get_selectable; extern(D) TGTKgtk_ctree_node_get_selectable gtk_ctree_node_get_selectable;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, gint)TGTKgtk_ctree_node_set_selectable; extern(D) TGTKgtk_ctree_node_set_selectable gtk_ctree_node_set_selectable;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, gint, gint, gint)TGTKgtk_ctree_node_set_shift; extern(D) TGTKgtk_ctree_node_set_shift gtk_ctree_node_set_shift;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, char *, char, _GdkDrawable *, _GdkDrawable *, _GdkDrawable *, _GdkDrawable *, gint, gint)TGTKgtk_ctree_set_node_info; extern(D) TGTKgtk_ctree_set_node_info gtk_ctree_set_node_info;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, gint, char *, char, _GdkDrawable *, _GdkDrawable *)TGTKgtk_ctree_node_set_pixtext; extern(D) TGTKgtk_ctree_node_set_pixtext gtk_ctree_node_set_pixtext;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, gint, _GdkDrawable *, _GdkDrawable *)TGTKgtk_ctree_node_set_pixmap; extern(D) TGTKgtk_ctree_node_set_pixmap gtk_ctree_node_set_pixmap;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, gint, char *)TGTKgtk_ctree_node_set_text; extern(D) TGTKgtk_ctree_node_set_text gtk_ctree_node_set_text;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, gint)TGTKgtk_ctree_real_select_recursive; extern(D) TGTKgtk_ctree_real_select_recursive gtk_ctree_real_select_recursive;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *)TGTKgtk_ctree_unselect_recursive; extern(D) TGTKgtk_ctree_unselect_recursive gtk_ctree_unselect_recursive;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *)TGTKgtk_ctree_unselect; extern(D) TGTKgtk_ctree_unselect gtk_ctree_unselect;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *)TGTKgtk_ctree_select_recursive; extern(D) TGTKgtk_ctree_select_recursive gtk_ctree_select_recursive;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *)TGTKgtk_ctree_select; extern(D) TGTKgtk_ctree_select gtk_ctree_select;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *)TGTKgtk_ctree_toggle_expansion_recursive; extern(D) TGTKgtk_ctree_toggle_expansion_recursive gtk_ctree_toggle_expansion_recursive;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *)TGTKgtk_ctree_toggle_expansion; extern(D) TGTKgtk_ctree_toggle_expansion gtk_ctree_toggle_expansion;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, gint)TGTKgtk_ctree_collapse_to_depth; extern(D) TGTKgtk_ctree_collapse_to_depth gtk_ctree_collapse_to_depth;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *)TGTKgtk_ctree_collapse_recursive; extern(D) TGTKgtk_ctree_collapse_recursive gtk_ctree_collapse_recursive;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *)TGTKgtk_ctree_collapse; extern(D) TGTKgtk_ctree_collapse gtk_ctree_collapse;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, gint)TGTKgtk_ctree_expand_to_depth; extern(D) TGTKgtk_ctree_expand_to_depth gtk_ctree_expand_to_depth;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *)TGTKgtk_ctree_expand_recursive; extern(D) TGTKgtk_ctree_expand_recursive gtk_ctree_expand_recursive;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *)TGTKgtk_ctree_expand; extern(D) TGTKgtk_ctree_expand gtk_ctree_expand;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, aGtkCTreeNode *, aGtkCTreeNode *)TGTKgtk_ctree_move; extern(D) TGTKgtk_ctree_move gtk_ctree_move;
alias extern (C) gint function(aGtkCTree *, gint, gint)TGTKgtk_ctree_is_hot_spot; extern(D) TGTKgtk_ctree_is_hot_spot gtk_ctree_is_hot_spot;
alias extern (C) _GList * function(aGtkCTree *, aGtkCTreeNode *, void *, _BCD_func__14970)TGTKgtk_ctree_find_all_by_row_data_custom; extern(D) TGTKgtk_ctree_find_all_by_row_data_custom gtk_ctree_find_all_by_row_data_custom;
alias extern (C) _GtkCTreeNode * function(aGtkCTree *, aGtkCTreeNode *, void *, _BCD_func__14970)TGTKgtk_ctree_find_by_row_data_custom; extern(D) TGTKgtk_ctree_find_by_row_data_custom gtk_ctree_find_by_row_data_custom;
alias extern (C) _GList * function(aGtkCTree *, aGtkCTreeNode *, void *)TGTKgtk_ctree_find_all_by_row_data; extern(D) TGTKgtk_ctree_find_all_by_row_data gtk_ctree_find_all_by_row_data;
alias extern (C) _GtkCTreeNode * function(aGtkCTree *, aGtkCTreeNode *, void *)TGTKgtk_ctree_find_by_row_data; extern(D) TGTKgtk_ctree_find_by_row_data gtk_ctree_find_by_row_data;
alias extern (C) gint function(aGtkCTree *, aGtkCTreeNode *, aGtkCTreeNode *)TGTKgtk_ctree_is_ancestor; extern(D) TGTKgtk_ctree_is_ancestor gtk_ctree_is_ancestor;
alias extern (C) gint function(aGtkCTree *, aGtkCTreeNode *, aGtkCTreeNode *)TGTKgtk_ctree_find; extern(D) TGTKgtk_ctree_find gtk_ctree_find;
alias extern (C) _GtkCTreeNode * function(aGtkCTree *, guint)TGTKgtk_ctree_node_nth; extern(D) TGTKgtk_ctree_node_nth gtk_ctree_node_nth;
alias extern (C) _GtkCTreeNode * function(aGtkCTree *, aGtkCTreeRow *)TGTKgtk_ctree_find_node_ptr; extern(D) TGTKgtk_ctree_find_node_ptr gtk_ctree_find_node_ptr;
alias extern (C) _GtkCTreeNode * function(aGtkCTree *, aGtkCTreeNode *)TGTKgtk_ctree_last; extern(D) TGTKgtk_ctree_last gtk_ctree_last;
alias extern (C) gint function(aGtkCTree *, aGtkCTreeNode *)TGTKgtk_ctree_is_viewable; extern(D) TGTKgtk_ctree_is_viewable gtk_ctree_is_viewable;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, gint, _BCD_func__10684, void *)TGTKgtk_ctree_pre_recursive_to_depth; extern(D) TGTKgtk_ctree_pre_recursive_to_depth gtk_ctree_pre_recursive_to_depth;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, _BCD_func__10684, void *)TGTKgtk_ctree_pre_recursive; extern(D) TGTKgtk_ctree_pre_recursive gtk_ctree_pre_recursive;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, gint, _BCD_func__10684, void *)TGTKgtk_ctree_post_recursive_to_depth; extern(D) TGTKgtk_ctree_post_recursive_to_depth gtk_ctree_post_recursive_to_depth;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *, _BCD_func__10684, void *)TGTKgtk_ctree_post_recursive; extern(D) TGTKgtk_ctree_post_recursive gtk_ctree_post_recursive;
alias extern (C) _GNode * function(aGtkCTree *, _GNode *, _GNode *, aGtkCTreeNode *, _BCD_func__10683, void *)TGTKgtk_ctree_export_to_gnode; extern(D) TGTKgtk_ctree_export_to_gnode gtk_ctree_export_to_gnode;
alias extern (C) _GtkCTreeNode * function(aGtkCTree *, aGtkCTreeNode *, aGtkCTreeNode *, _GNode *, _BCD_func__10683, void *)TGTKgtk_ctree_insert_gnode; extern(D) TGTKgtk_ctree_insert_gnode gtk_ctree_insert_gnode;
alias extern (C) void function(aGtkCTree *, aGtkCTreeNode *)TGTKgtk_ctree_remove_node; extern(D) TGTKgtk_ctree_remove_node gtk_ctree_remove_node;
alias extern (C) _GtkCTreeNode * function(aGtkCTree *, aGtkCTreeNode *, aGtkCTreeNode *, char * *, char, _GdkDrawable *, _GdkDrawable *, _GdkDrawable *, _GdkDrawable *, gint, gint)TGTKgtk_ctree_insert_node; extern(D) TGTKgtk_ctree_insert_node gtk_ctree_insert_node;
alias extern (C) _GtkWidget * function(gint, gint)TGTKgtk_ctree_new; extern(D) TGTKgtk_ctree_new gtk_ctree_new;
alias extern (C) _GtkWidget * function(gint, gint, char * *)TGTKgtk_ctree_new_with_titles; extern(D) TGTKgtk_ctree_new_with_titles gtk_ctree_new_with_titles;
alias extern (C) guint function()TGTKgtk_ctree_get_type; extern(D) TGTKgtk_ctree_get_type gtk_ctree_get_type;
alias extern (C) _GtkWidget * function()TGTKgtk_combo_box_entry_new_text; extern(D) TGTKgtk_combo_box_entry_new_text gtk_combo_box_entry_new_text;
alias extern (C) gint function(aGtkComboBoxEntry *)TGTKgtk_combo_box_entry_get_text_column; extern(D) TGTKgtk_combo_box_entry_get_text_column gtk_combo_box_entry_get_text_column;
alias extern (C) void function(aGtkComboBoxEntry *, gint)TGTKgtk_combo_box_entry_set_text_column; extern(D) TGTKgtk_combo_box_entry_set_text_column gtk_combo_box_entry_set_text_column;
alias extern (C) _GtkWidget * function(void *, gint)TGTKgtk_combo_box_entry_new_with_model; extern(D) TGTKgtk_combo_box_entry_new_with_model gtk_combo_box_entry_new_with_model;
alias extern (C) _GtkWidget * function()TGTKgtk_combo_box_entry_new; extern(D) TGTKgtk_combo_box_entry_new gtk_combo_box_entry_new;
alias extern (C) guint function()TGTKgtk_combo_box_entry_get_type; extern(D) TGTKgtk_combo_box_entry_get_type gtk_combo_box_entry_get_type;
//alias extern (C) gint function(aGtkComboBox *)TGTK_gtk_combo_box_editing_canceled; extern(D) TGTK_gtk_combo_box_editing_canceled _gtk_combo_box_editing_canceled;
alias extern (C) _AtkObject * function(aGtkComboBox *)TGTKgtk_combo_box_get_popup_accessible; extern(D) TGTKgtk_combo_box_get_popup_accessible gtk_combo_box_get_popup_accessible;
alias extern (C) void function(aGtkComboBox *)TGTKgtk_combo_box_popdown; extern(D) TGTKgtk_combo_box_popdown gtk_combo_box_popdown;
alias extern (C) void function(aGtkComboBox *)TGTKgtk_combo_box_popup; extern(D) TGTKgtk_combo_box_popup gtk_combo_box_popup;
alias extern (C) char * function(aGtkComboBox *)TGTKgtk_combo_box_get_active_text; extern(D) TGTKgtk_combo_box_get_active_text gtk_combo_box_get_active_text;
alias extern (C) void function(aGtkComboBox *, gint)TGTKgtk_combo_box_remove_text; extern(D) TGTKgtk_combo_box_remove_text gtk_combo_box_remove_text;
alias extern (C) void function(aGtkComboBox *, char *)TGTKgtk_combo_box_prepend_text; extern(D) TGTKgtk_combo_box_prepend_text gtk_combo_box_prepend_text;
alias extern (C) void function(aGtkComboBox *, gint, char *)TGTKgtk_combo_box_insert_text; extern(D) TGTKgtk_combo_box_insert_text gtk_combo_box_insert_text;
alias extern (C) void function(aGtkComboBox *, char *)TGTKgtk_combo_box_append_text; extern(D) TGTKgtk_combo_box_append_text gtk_combo_box_append_text;
alias extern (C) _GtkWidget * function()TGTKgtk_combo_box_new_text; extern(D) TGTKgtk_combo_box_new_text gtk_combo_box_new_text;
alias extern (C) void function(aGtkComboBox *, _BCD_func__10753, void *, _BCD_func__13158)TGTKgtk_combo_box_set_row_separator_func; extern(D) TGTKgtk_combo_box_set_row_separator_func gtk_combo_box_set_row_separator_func;
alias extern (C) _BCD_func__10753 function(aGtkComboBox *)TGTKgtk_combo_box_get_row_separator_func; extern(D) TGTKgtk_combo_box_get_row_separator_func gtk_combo_box_get_row_separator_func;
alias extern (C) void * function(aGtkComboBox *)TGTKgtk_combo_box_get_model; extern(D) TGTKgtk_combo_box_get_model gtk_combo_box_get_model;
alias extern (C) void function(aGtkComboBox *, void *)TGTKgtk_combo_box_set_model; extern(D) TGTKgtk_combo_box_set_model gtk_combo_box_set_model;
alias extern (C) void function(aGtkComboBox *, aGtkTreeIter *)TGTKgtk_combo_box_set_active_iter; extern(D) TGTKgtk_combo_box_set_active_iter gtk_combo_box_set_active_iter;
alias extern (C) gint function(aGtkComboBox *, aGtkTreeIter *)TGTKgtk_combo_box_get_active_iter; extern(D) TGTKgtk_combo_box_get_active_iter gtk_combo_box_get_active_iter;
alias extern (C) void function(aGtkComboBox *, gint)TGTKgtk_combo_box_set_active; extern(D) TGTKgtk_combo_box_set_active gtk_combo_box_set_active;
alias extern (C) gint function(aGtkComboBox *)TGTKgtk_combo_box_get_active; extern(D) TGTKgtk_combo_box_get_active gtk_combo_box_get_active;
alias extern (C) void function(aGtkComboBox *, gint)TGTKgtk_combo_box_set_focus_on_click; extern(D) TGTKgtk_combo_box_set_focus_on_click gtk_combo_box_set_focus_on_click;
alias extern (C) gint function(aGtkComboBox *)TGTKgtk_combo_box_get_focus_on_click; extern(D) TGTKgtk_combo_box_get_focus_on_click gtk_combo_box_get_focus_on_click;
alias extern (C) void function(aGtkComboBox *, char *)TGTKgtk_combo_box_set_title; extern(D) TGTKgtk_combo_box_set_title gtk_combo_box_set_title;
alias extern (C) char * function(aGtkComboBox *)TGTKgtk_combo_box_get_title; extern(D) TGTKgtk_combo_box_get_title gtk_combo_box_get_title;
alias extern (C) void function(aGtkComboBox *, gint)TGTKgtk_combo_box_set_add_tearoffs; extern(D) TGTKgtk_combo_box_set_add_tearoffs gtk_combo_box_set_add_tearoffs;
alias extern (C) gint function(aGtkComboBox *)TGTKgtk_combo_box_get_add_tearoffs; extern(D) TGTKgtk_combo_box_get_add_tearoffs gtk_combo_box_get_add_tearoffs;
alias extern (C) void function(aGtkComboBox *, gint)TGTKgtk_combo_box_set_column_span_column; extern(D) TGTKgtk_combo_box_set_column_span_column gtk_combo_box_set_column_span_column;
alias extern (C) gint function(aGtkComboBox *)TGTKgtk_combo_box_get_column_span_column; extern(D) TGTKgtk_combo_box_get_column_span_column gtk_combo_box_get_column_span_column;
alias extern (C) void function(aGtkComboBox *, gint)TGTKgtk_combo_box_set_row_span_column; extern(D) TGTKgtk_combo_box_set_row_span_column gtk_combo_box_set_row_span_column;
alias extern (C) gint function(aGtkComboBox *)TGTKgtk_combo_box_get_row_span_column; extern(D) TGTKgtk_combo_box_get_row_span_column gtk_combo_box_get_row_span_column;
alias extern (C) void function(aGtkComboBox *, gint)TGTKgtk_combo_box_set_wrap_width; extern(D) TGTKgtk_combo_box_set_wrap_width gtk_combo_box_set_wrap_width;
alias extern (C) gint function(aGtkComboBox *)TGTKgtk_combo_box_get_wrap_width; extern(D) TGTKgtk_combo_box_get_wrap_width gtk_combo_box_get_wrap_width;
alias extern (C) _GtkWidget * function(void *)TGTKgtk_combo_box_new_with_model; extern(D) TGTKgtk_combo_box_new_with_model gtk_combo_box_new_with_model;
alias extern (C) _GtkWidget * function()TGTKgtk_combo_box_new; extern(D) TGTKgtk_combo_box_new gtk_combo_box_new;
alias extern (C) GType function()TGTKgtk_combo_box_get_type; extern(D) TGTKgtk_combo_box_get_type gtk_combo_box_get_type;
alias extern (C) gint function(aGtkTreeView *)TGTKgtk_tree_view_get_tooltip_column; extern(D) TGTKgtk_tree_view_get_tooltip_column gtk_tree_view_get_tooltip_column;
alias extern (C) void function(aGtkTreeView *, gint)TGTKgtk_tree_view_set_tooltip_column; extern(D) TGTKgtk_tree_view_set_tooltip_column gtk_tree_view_set_tooltip_column;
alias extern (C) gint function(aGtkTreeView *, gint *, gint *, gint, void * *, void * *, aGtkTreeIter *)TGTKgtk_tree_view_get_tooltip_context; extern(D) TGTKgtk_tree_view_get_tooltip_context gtk_tree_view_get_tooltip_context;
alias extern (C) void function(aGtkTreeView *, void *, void *, aGtkTreeViewColumn *, aGtkCellRenderer *)TGTKgtk_tree_view_set_tooltip_cell; extern(D) TGTKgtk_tree_view_set_tooltip_cell gtk_tree_view_set_tooltip_cell;
alias extern (C) void function(aGtkTreeView *, void *, void *)TGTKgtk_tree_view_set_tooltip_row; extern(D) TGTKgtk_tree_view_set_tooltip_row gtk_tree_view_set_tooltip_row;
alias extern (C) gint function(aGtkTreeView *)TGTKgtk_tree_view_get_level_indentation; extern(D) TGTKgtk_tree_view_get_level_indentation gtk_tree_view_get_level_indentation;
alias extern (C) void function(aGtkTreeView *, gint)TGTKgtk_tree_view_set_level_indentation; extern(D) TGTKgtk_tree_view_set_level_indentation gtk_tree_view_set_level_indentation;
alias extern (C) gint function(aGtkTreeView *)TGTKgtk_tree_view_get_show_expanders; extern(D) TGTKgtk_tree_view_get_show_expanders gtk_tree_view_get_show_expanders;
alias extern (C) void function(aGtkTreeView *, gint)TGTKgtk_tree_view_set_show_expanders; extern(D) TGTKgtk_tree_view_set_show_expanders gtk_tree_view_set_show_expanders;
alias extern (C) void function(aGtkTreeView *, gint)TGTKgtk_tree_view_set_enable_tree_lines; extern(D) TGTKgtk_tree_view_set_enable_tree_lines gtk_tree_view_set_enable_tree_lines;
alias extern (C) gint function(aGtkTreeView *)TGTKgtk_tree_view_get_enable_tree_lines; extern(D) TGTKgtk_tree_view_get_enable_tree_lines gtk_tree_view_get_enable_tree_lines;
alias extern (C) void function(aGtkTreeView *, gint)TGTKgtk_tree_view_set_grid_lines; extern(D) TGTKgtk_tree_view_set_grid_lines gtk_tree_view_set_grid_lines;
alias extern (C) gint function(aGtkTreeView *)TGTKgtk_tree_view_get_grid_lines; extern(D) TGTKgtk_tree_view_get_grid_lines gtk_tree_view_get_grid_lines;
alias extern (C) void function(aGtkTreeView *, _BCD_func__10753, void *, _BCD_func__13158)TGTKgtk_tree_view_set_row_separator_func; extern(D) TGTKgtk_tree_view_set_row_separator_func gtk_tree_view_set_row_separator_func;
alias extern (C) _BCD_func__10753 function(aGtkTreeView *)TGTKgtk_tree_view_get_row_separator_func; extern(D) TGTKgtk_tree_view_get_row_separator_func gtk_tree_view_get_row_separator_func;
alias extern (C) gint function(aGtkTreeView *)TGTKgtk_tree_view_is_rubber_banding_active; extern(D) TGTKgtk_tree_view_is_rubber_banding_active gtk_tree_view_is_rubber_banding_active;
alias extern (C) gint function(aGtkTreeView *)TGTKgtk_tree_view_get_rubber_banding; extern(D) TGTKgtk_tree_view_get_rubber_banding gtk_tree_view_get_rubber_banding;
alias extern (C) void function(aGtkTreeView *, gint)TGTKgtk_tree_view_set_rubber_banding; extern(D) TGTKgtk_tree_view_set_rubber_banding gtk_tree_view_set_rubber_banding;
alias extern (C) gint function(aGtkTreeView *)TGTKgtk_tree_view_get_hover_expand; extern(D) TGTKgtk_tree_view_get_hover_expand gtk_tree_view_get_hover_expand;
alias extern (C) void function(aGtkTreeView *, gint)TGTKgtk_tree_view_set_hover_expand; extern(D) TGTKgtk_tree_view_set_hover_expand gtk_tree_view_set_hover_expand;
alias extern (C) gint function(aGtkTreeView *)TGTKgtk_tree_view_get_hover_selection; extern(D) TGTKgtk_tree_view_get_hover_selection gtk_tree_view_get_hover_selection;
alias extern (C) void function(aGtkTreeView *, gint)TGTKgtk_tree_view_set_hover_selection; extern(D) TGTKgtk_tree_view_set_hover_selection gtk_tree_view_set_hover_selection;
alias extern (C) gint function(aGtkTreeView *)TGTKgtk_tree_view_get_fixed_height_mode; extern(D) TGTKgtk_tree_view_get_fixed_height_mode gtk_tree_view_get_fixed_height_mode;
alias extern (C) void function(aGtkTreeView *, gint)TGTKgtk_tree_view_set_fixed_height_mode; extern(D) TGTKgtk_tree_view_set_fixed_height_mode gtk_tree_view_set_fixed_height_mode;
alias extern (C) void function(aGtkTreeView *, _BCD_func__10748, void *, _BCD_func__13158)TGTKgtk_tree_view_set_destroy_count_func; extern(D) TGTKgtk_tree_view_set_destroy_count_func gtk_tree_view_set_destroy_count_func;
alias extern (C) void function(aGtkTreeView *, gint, gint, gint *, gint *)TGTKgtk_tree_view_convert_bin_window_to_tree_coords; extern(D) TGTKgtk_tree_view_convert_bin_window_to_tree_coords gtk_tree_view_convert_bin_window_to_tree_coords;
alias extern (C) void function(aGtkTreeView *, gint, gint, gint *, gint *)TGTKgtk_tree_view_convert_tree_to_bin_window_coords; extern(D) TGTKgtk_tree_view_convert_tree_to_bin_window_coords gtk_tree_view_convert_tree_to_bin_window_coords;
alias extern (C) void function(aGtkTreeView *, gint, gint, gint *, gint *)TGTKgtk_tree_view_convert_bin_window_to_widget_coords; extern(D) TGTKgtk_tree_view_convert_bin_window_to_widget_coords gtk_tree_view_convert_bin_window_to_widget_coords;
alias extern (C) void function(aGtkTreeView *, gint, gint, gint *, gint *)TGTKgtk_tree_view_convert_widget_to_bin_window_coords; extern(D) TGTKgtk_tree_view_convert_widget_to_bin_window_coords gtk_tree_view_convert_widget_to_bin_window_coords;
alias extern (C) void function(aGtkTreeView *, gint, gint, gint *, gint *)TGTKgtk_tree_view_convert_tree_to_widget_coords; extern(D) TGTKgtk_tree_view_convert_tree_to_widget_coords gtk_tree_view_convert_tree_to_widget_coords;
alias extern (C) void function(aGtkTreeView *, gint, gint, gint *, gint *)TGTKgtk_tree_view_convert_widget_to_tree_coords; extern(D) TGTKgtk_tree_view_convert_widget_to_tree_coords gtk_tree_view_convert_widget_to_tree_coords;
alias extern (C) void function(aGtkTreeView *, _BCD_func__10752, void *, _BCD_func__13158)TGTKgtk_tree_view_set_search_position_func; extern(D) TGTKgtk_tree_view_set_search_position_func gtk_tree_view_set_search_position_func;
alias extern (C) _BCD_func__10752 function(aGtkTreeView *)TGTKgtk_tree_view_get_search_position_func; extern(D) TGTKgtk_tree_view_get_search_position_func gtk_tree_view_get_search_position_func;
alias extern (C) void function(aGtkTreeView *, aGtkEntry *)TGTKgtk_tree_view_set_search_entry; extern(D) TGTKgtk_tree_view_set_search_entry gtk_tree_view_set_search_entry;
alias extern (C) _GtkEntry * function(aGtkTreeView *)TGTKgtk_tree_view_get_search_entry; extern(D) TGTKgtk_tree_view_get_search_entry gtk_tree_view_get_search_entry;
alias extern (C) void function(aGtkTreeView *, _BCD_func__10754, void *, _BCD_func__13158)TGTKgtk_tree_view_set_search_equal_func; extern(D) TGTKgtk_tree_view_set_search_equal_func gtk_tree_view_set_search_equal_func;
alias extern (C) _BCD_func__10754 function(aGtkTreeView *)TGTKgtk_tree_view_get_search_equal_func; extern(D) TGTKgtk_tree_view_get_search_equal_func gtk_tree_view_get_search_equal_func;
alias extern (C) void function(aGtkTreeView *, gint)TGTKgtk_tree_view_set_search_column; extern(D) TGTKgtk_tree_view_set_search_column gtk_tree_view_set_search_column;
alias extern (C) gint function(aGtkTreeView *)TGTKgtk_tree_view_get_search_column; extern(D) TGTKgtk_tree_view_get_search_column gtk_tree_view_get_search_column;
alias extern (C) gint function(aGtkTreeView *)TGTKgtk_tree_view_get_enable_search; extern(D) TGTKgtk_tree_view_get_enable_search gtk_tree_view_get_enable_search;
alias extern (C) void function(aGtkTreeView *, gint)TGTKgtk_tree_view_set_enable_search; extern(D) TGTKgtk_tree_view_set_enable_search gtk_tree_view_set_enable_search;
alias extern (C) _GdkDrawable * function(aGtkTreeView *, void *)TGTKgtk_tree_view_create_row_drag_icon; extern(D) TGTKgtk_tree_view_create_row_drag_icon gtk_tree_view_create_row_drag_icon;
alias extern (C) gint function(aGtkTreeView *, gint, gint, void * *, gint *)TGTKgtk_tree_view_get_dest_row_at_pos; extern(D) TGTKgtk_tree_view_get_dest_row_at_pos gtk_tree_view_get_dest_row_at_pos;
alias extern (C) void function(aGtkTreeView *, void * *, gint *)TGTKgtk_tree_view_get_drag_dest_row; extern(D) TGTKgtk_tree_view_get_drag_dest_row gtk_tree_view_get_drag_dest_row;
alias extern (C) void function(aGtkTreeView *, void *, gint)TGTKgtk_tree_view_set_drag_dest_row; extern(D) TGTKgtk_tree_view_set_drag_dest_row gtk_tree_view_set_drag_dest_row;
alias extern (C) void function(aGtkTreeView *)TGTKgtk_tree_view_unset_rows_drag_dest; extern(D) TGTKgtk_tree_view_unset_rows_drag_dest gtk_tree_view_unset_rows_drag_dest;
alias extern (C) void function(aGtkTreeView *)TGTKgtk_tree_view_unset_rows_drag_source; extern(D) TGTKgtk_tree_view_unset_rows_drag_source gtk_tree_view_unset_rows_drag_source;
alias extern (C) void function(aGtkTreeView *, aGtkTargetEntry *, gint, gint)TGTKgtk_tree_view_enable_model_drag_dest; extern(D) TGTKgtk_tree_view_enable_model_drag_dest gtk_tree_view_enable_model_drag_dest;
alias extern (C) void function(aGtkTreeView *, gint, aGtkTargetEntry *, gint, gint)TGTKgtk_tree_view_enable_model_drag_source; extern(D) TGTKgtk_tree_view_enable_model_drag_source gtk_tree_view_enable_model_drag_source;
alias extern (C) gint function(aGtkTreeView *, void * *, void * *)TGTKgtk_tree_view_get_visible_range; extern(D) TGTKgtk_tree_view_get_visible_range gtk_tree_view_get_visible_range;
alias extern (C) void function(aGtkTreeView *, gint, gint, gint *, gint *)TGTKgtk_tree_view_tree_to_widget_coords; extern(D) TGTKgtk_tree_view_tree_to_widget_coords gtk_tree_view_tree_to_widget_coords;
alias extern (C) void function(aGtkTreeView *, gint, gint, gint *, gint *)TGTKgtk_tree_view_widget_to_tree_coords; extern(D) TGTKgtk_tree_view_widget_to_tree_coords gtk_tree_view_widget_to_tree_coords;
alias extern (C) void function(aGtkTreeView *, _GdkRectangle *)TGTKgtk_tree_view_get_visible_rect; extern(D) TGTKgtk_tree_view_get_visible_rect gtk_tree_view_get_visible_rect;
alias extern (C) void function(aGtkTreeView *, void *, aGtkTreeViewColumn *, _GdkRectangle *)TGTKgtk_tree_view_get_background_area; extern(D) TGTKgtk_tree_view_get_background_area gtk_tree_view_get_background_area;
alias extern (C) void function(aGtkTreeView *, void *, aGtkTreeViewColumn *, _GdkRectangle *)TGTKgtk_tree_view_get_cell_area; extern(D) TGTKgtk_tree_view_get_cell_area gtk_tree_view_get_cell_area;
alias extern (C) gint function(aGtkTreeView *, gint, gint, void * *, _GtkTreeViewColumn * *, gint *, gint *)TGTKgtk_tree_view_get_path_at_pos; extern(D) TGTKgtk_tree_view_get_path_at_pos gtk_tree_view_get_path_at_pos;
alias extern (C) _GdkDrawable * function(aGtkTreeView *)TGTKgtk_tree_view_get_bin_window; extern(D) TGTKgtk_tree_view_get_bin_window gtk_tree_view_get_bin_window;
alias extern (C) void function(aGtkTreeView *, void * *, _GtkTreeViewColumn * *)TGTKgtk_tree_view_get_cursor; extern(D) TGTKgtk_tree_view_get_cursor gtk_tree_view_get_cursor;
alias extern (C) void function(aGtkTreeView *, void *, aGtkTreeViewColumn *, aGtkCellRenderer *, gint)TGTKgtk_tree_view_set_cursor_on_cell; extern(D) TGTKgtk_tree_view_set_cursor_on_cell gtk_tree_view_set_cursor_on_cell;
alias extern (C) void function(aGtkTreeView *, void *, aGtkTreeViewColumn *, gint)TGTKgtk_tree_view_set_cursor; extern(D) TGTKgtk_tree_view_set_cursor gtk_tree_view_set_cursor;
alias extern (C) gint function(aGtkTreeView *)TGTKgtk_tree_view_get_reorderable; extern(D) TGTKgtk_tree_view_get_reorderable gtk_tree_view_get_reorderable;
alias extern (C) void function(aGtkTreeView *, gint)TGTKgtk_tree_view_set_reorderable; extern(D) TGTKgtk_tree_view_set_reorderable gtk_tree_view_set_reorderable;
alias extern (C) gint function(aGtkTreeView *, void *)TGTKgtk_tree_view_row_expanded; extern(D) TGTKgtk_tree_view_row_expanded gtk_tree_view_row_expanded;
alias extern (C) void function(aGtkTreeView *, _BCD_func__10755, void *)TGTKgtk_tree_view_map_expanded_rows; extern(D) TGTKgtk_tree_view_map_expanded_rows gtk_tree_view_map_expanded_rows;
alias extern (C) gint function(aGtkTreeView *, void *)TGTKgtk_tree_view_collapse_row; extern(D) TGTKgtk_tree_view_collapse_row gtk_tree_view_collapse_row;
alias extern (C) gint function(aGtkTreeView *, void *, gint)TGTKgtk_tree_view_expand_row; extern(D) TGTKgtk_tree_view_expand_row gtk_tree_view_expand_row;
alias extern (C) void function(aGtkTreeView *, void *)TGTKgtk_tree_view_expand_to_path; extern(D) TGTKgtk_tree_view_expand_to_path gtk_tree_view_expand_to_path;
alias extern (C) void function(aGtkTreeView *)TGTKgtk_tree_view_collapse_all; extern(D) TGTKgtk_tree_view_collapse_all gtk_tree_view_collapse_all;
alias extern (C) void function(aGtkTreeView *)TGTKgtk_tree_view_expand_all; extern(D) TGTKgtk_tree_view_expand_all gtk_tree_view_expand_all;
alias extern (C) void function(aGtkTreeView *, void *, aGtkTreeViewColumn *)TGTKgtk_tree_view_row_activated; extern(D) TGTKgtk_tree_view_row_activated gtk_tree_view_row_activated;
alias extern (C) void function(aGtkTreeView *, void *, aGtkTreeViewColumn *, gint, float, float)TGTKgtk_tree_view_scroll_to_cell; extern(D) TGTKgtk_tree_view_scroll_to_cell gtk_tree_view_scroll_to_cell;
alias extern (C) void function(aGtkTreeView *, gint, gint)TGTKgtk_tree_view_scroll_to_point; extern(D) TGTKgtk_tree_view_scroll_to_point gtk_tree_view_scroll_to_point;
alias extern (C) void function(aGtkTreeView *, _BCD_func__10756, void *, _BCD_func__13158)TGTKgtk_tree_view_set_column_drag_function; extern(D) TGTKgtk_tree_view_set_column_drag_function gtk_tree_view_set_column_drag_function;
alias extern (C) _GtkTreeViewColumn * function(aGtkTreeView *)TGTKgtk_tree_view_get_expander_column; extern(D) TGTKgtk_tree_view_get_expander_column gtk_tree_view_get_expander_column;
alias extern (C) void function(aGtkTreeView *, aGtkTreeViewColumn *)TGTKgtk_tree_view_set_expander_column; extern(D) TGTKgtk_tree_view_set_expander_column gtk_tree_view_set_expander_column;
alias extern (C) void function(aGtkTreeView *, aGtkTreeViewColumn *, aGtkTreeViewColumn *)TGTKgtk_tree_view_move_column_after; extern(D) TGTKgtk_tree_view_move_column_after gtk_tree_view_move_column_after;
alias extern (C) _GList * function(aGtkTreeView *)TGTKgtk_tree_view_get_columns; extern(D) TGTKgtk_tree_view_get_columns gtk_tree_view_get_columns;
alias extern (C) _GtkTreeViewColumn * function(aGtkTreeView *, gint)TGTKgtk_tree_view_get_column; extern(D) TGTKgtk_tree_view_get_column gtk_tree_view_get_column;
alias extern (C) gint function(aGtkTreeView *, gint, char *, aGtkCellRenderer *, _BCD_func__11636, void *, _BCD_func__13158)TGTKgtk_tree_view_insert_column_with_data_func; extern(D) TGTKgtk_tree_view_insert_column_with_data_func gtk_tree_view_insert_column_with_data_func;
alias extern (C) gint function(aGtkTreeView *, gint, char *, aGtkCellRenderer *, ...)TGTKgtk_tree_view_insert_column_with_attributes; extern(D) TGTKgtk_tree_view_insert_column_with_attributes gtk_tree_view_insert_column_with_attributes;
alias extern (C) gint function(aGtkTreeView *, aGtkTreeViewColumn *, gint)TGTKgtk_tree_view_insert_column; extern(D) TGTKgtk_tree_view_insert_column gtk_tree_view_insert_column;
alias extern (C) gint function(aGtkTreeView *, aGtkTreeViewColumn *)TGTKgtk_tree_view_remove_column; extern(D) TGTKgtk_tree_view_remove_column gtk_tree_view_remove_column;
alias extern (C) gint function(aGtkTreeView *, aGtkTreeViewColumn *)TGTKgtk_tree_view_append_column; extern(D) TGTKgtk_tree_view_append_column gtk_tree_view_append_column;
alias extern (C) gint function(aGtkTreeView *)TGTKgtk_tree_view_get_rules_hint; extern(D) TGTKgtk_tree_view_get_rules_hint gtk_tree_view_get_rules_hint;
alias extern (C) void function(aGtkTreeView *, gint)TGTKgtk_tree_view_set_rules_hint; extern(D) TGTKgtk_tree_view_set_rules_hint gtk_tree_view_set_rules_hint;
alias extern (C) void function(aGtkTreeView *, gint)TGTKgtk_tree_view_set_headers_clickable; extern(D) TGTKgtk_tree_view_set_headers_clickable gtk_tree_view_set_headers_clickable;
alias extern (C) gint function(aGtkTreeView *)TGTKgtk_tree_view_get_headers_clickable; extern(D) TGTKgtk_tree_view_get_headers_clickable gtk_tree_view_get_headers_clickable;
alias extern (C) void function(aGtkTreeView *)TGTKgtk_tree_view_columns_autosize; extern(D) TGTKgtk_tree_view_columns_autosize gtk_tree_view_columns_autosize;
alias extern (C) void function(aGtkTreeView *, gint)TGTKgtk_tree_view_set_headers_visible; extern(D) TGTKgtk_tree_view_set_headers_visible gtk_tree_view_set_headers_visible;
alias extern (C) gint function(aGtkTreeView *)TGTKgtk_tree_view_get_headers_visible; extern(D) TGTKgtk_tree_view_get_headers_visible gtk_tree_view_get_headers_visible;
alias extern (C) void function(aGtkTreeView *, aGtkAdjustment *)TGTKgtk_tree_view_set_vadjustment; extern(D) TGTKgtk_tree_view_set_vadjustment gtk_tree_view_set_vadjustment;
alias extern (C) _GtkAdjustment * function(aGtkTreeView *)TGTKgtk_tree_view_get_vadjustment; extern(D) TGTKgtk_tree_view_get_vadjustment gtk_tree_view_get_vadjustment;
alias extern (C) void function(aGtkTreeView *, aGtkAdjustment *)TGTKgtk_tree_view_set_hadjustment; extern(D) TGTKgtk_tree_view_set_hadjustment gtk_tree_view_set_hadjustment;
alias extern (C) _GtkAdjustment * function(aGtkTreeView *)TGTKgtk_tree_view_get_hadjustment; extern(D) TGTKgtk_tree_view_get_hadjustment gtk_tree_view_get_hadjustment;
alias extern (C) _GtkTreeSelection * function(aGtkTreeView *)TGTKgtk_tree_view_get_selection; extern(D) TGTKgtk_tree_view_get_selection gtk_tree_view_get_selection;
alias extern (C) void function(aGtkTreeView *, void *)TGTKgtk_tree_view_set_model; extern(D) TGTKgtk_tree_view_set_model gtk_tree_view_set_model;
alias extern (C) void * function(aGtkTreeView *)TGTKgtk_tree_view_get_model; extern(D) TGTKgtk_tree_view_get_model gtk_tree_view_get_model;
alias extern (C) _GtkWidget * function(void *)TGTKgtk_tree_view_new_with_model; extern(D) TGTKgtk_tree_view_new_with_model gtk_tree_view_new_with_model;
alias extern (C) _GtkWidget * function()TGTKgtk_tree_view_new; extern(D) TGTKgtk_tree_view_new gtk_tree_view_new;
alias extern (C) GType function()TGTKgtk_tree_view_get_type; extern(D) TGTKgtk_tree_view_get_type gtk_tree_view_get_type;
alias extern (C) void function(aGtkEntry *, gint)TGTKgtk_entry_set_editable; extern(D) TGTKgtk_entry_set_editable gtk_entry_set_editable;
alias extern (C) void function(aGtkEntry *, gint, gint)TGTKgtk_entry_select_region; extern(D) TGTKgtk_entry_select_region gtk_entry_select_region;
alias extern (C) void function(aGtkEntry *, gint)TGTKgtk_entry_set_position; extern(D) TGTKgtk_entry_set_position gtk_entry_set_position;
alias extern (C) void function(aGtkEntry *, char *)TGTKgtk_entry_prepend_text; extern(D) TGTKgtk_entry_prepend_text gtk_entry_prepend_text;
alias extern (C) void function(aGtkEntry *, char *)TGTKgtk_entry_append_text; extern(D) TGTKgtk_entry_append_text gtk_entry_append_text;
alias extern (C) _GtkWidget * function(gint)TGTKgtk_entry_new_with_max_length; extern(D) TGTKgtk_entry_new_with_max_length gtk_entry_new_with_max_length;
alias extern (C) _GtkAdjustment * function(aGtkEntry *)TGTKgtk_entry_get_cursor_hadjustment; extern(D) TGTKgtk_entry_get_cursor_hadjustment gtk_entry_get_cursor_hadjustment;
alias extern (C) void function(aGtkEntry *, aGtkAdjustment *)TGTKgtk_entry_set_cursor_hadjustment; extern(D) TGTKgtk_entry_set_cursor_hadjustment gtk_entry_set_cursor_hadjustment;
alias extern (C) gint function(aGtkEntry *, gint)TGTKgtk_entry_text_index_to_layout_index; extern(D) TGTKgtk_entry_text_index_to_layout_index gtk_entry_text_index_to_layout_index;
alias extern (C) gint function(aGtkEntry *, gint)TGTKgtk_entry_layout_index_to_text_index; extern(D) TGTKgtk_entry_layout_index_to_text_index gtk_entry_layout_index_to_text_index;
alias extern (C) _GtkEntryCompletion * function(aGtkEntry *)TGTKgtk_entry_get_completion; extern(D) TGTKgtk_entry_get_completion gtk_entry_get_completion;
alias extern (C) void function(aGtkEntry *, aGtkEntryCompletion *)TGTKgtk_entry_set_completion; extern(D) TGTKgtk_entry_set_completion gtk_entry_set_completion;
alias extern (C) float function(aGtkEntry *)TGTKgtk_entry_get_alignment; extern(D) TGTKgtk_entry_get_alignment gtk_entry_get_alignment;
alias extern (C) void function(aGtkEntry *, float)TGTKgtk_entry_set_alignment; extern(D) TGTKgtk_entry_set_alignment gtk_entry_set_alignment;
alias extern (C) void function(aGtkEntry *, gint *, gint *)TGTKgtk_entry_get_layout_offsets; extern(D) TGTKgtk_entry_get_layout_offsets gtk_entry_get_layout_offsets;
alias extern (C) void * function(aGtkEntry *)TGTKgtk_entry_get_layout; extern(D) TGTKgtk_entry_get_layout gtk_entry_get_layout;
alias extern (C) char * function(aGtkEntry *)TGTKgtk_entry_get_text; extern(D) TGTKgtk_entry_get_text gtk_entry_get_text;
alias extern (C) void function(aGtkEntry *, in char *)TGTKgtk_entry_set_text; extern(D) TGTKgtk_entry_set_text gtk_entry_set_text;
alias extern (C) gint function(aGtkEntry *)TGTKgtk_entry_get_width_chars; extern(D) TGTKgtk_entry_get_width_chars gtk_entry_get_width_chars;
alias extern (C) void function(aGtkEntry *, gint)TGTKgtk_entry_set_width_chars; extern(D) TGTKgtk_entry_set_width_chars gtk_entry_set_width_chars;
alias extern (C) gint function(aGtkEntry *)TGTKgtk_entry_get_activates_default; extern(D) TGTKgtk_entry_get_activates_default gtk_entry_get_activates_default;
alias extern (C) void function(aGtkEntry *, gint)TGTKgtk_entry_set_activates_default; extern(D) TGTKgtk_entry_set_activates_default gtk_entry_set_activates_default;
alias extern (C) gint function(aGtkEntry *)TGTKgtk_entry_get_max_length; extern(D) TGTKgtk_entry_get_max_length gtk_entry_get_max_length;
alias extern (C) void function(aGtkEntry *, gint)TGTKgtk_entry_set_max_length; extern(D) TGTKgtk_entry_set_max_length gtk_entry_set_max_length;
alias extern (C) _GtkBorder * function(aGtkEntry *)TGTKgtk_entry_get_inner_border; extern(D) TGTKgtk_entry_get_inner_border gtk_entry_get_inner_border;
alias extern (C) void function(aGtkEntry *, aGtkBorder *)TGTKgtk_entry_set_inner_border; extern(D) TGTKgtk_entry_set_inner_border gtk_entry_set_inner_border;
alias extern (C) gint function(aGtkEntry *)TGTKgtk_entry_get_has_frame; extern(D) TGTKgtk_entry_get_has_frame gtk_entry_get_has_frame;
alias extern (C) void function(aGtkEntry *, gint)TGTKgtk_entry_set_has_frame; extern(D) TGTKgtk_entry_set_has_frame gtk_entry_set_has_frame;
alias extern (C) gunichar function(aGtkEntry *)TGTKgtk_entry_get_invisible_char; extern(D) TGTKgtk_entry_get_invisible_char gtk_entry_get_invisible_char;
alias extern (C) void function(aGtkEntry *, gunichar)TGTKgtk_entry_set_invisible_char; extern(D) TGTKgtk_entry_set_invisible_char gtk_entry_set_invisible_char;
alias extern (C) gint function(aGtkEntry *)TGTKgtk_entry_get_visibility; extern(D) TGTKgtk_entry_get_visibility gtk_entry_get_visibility;
alias extern (C) void function(aGtkEntry *, gint)TGTKgtk_entry_set_visibility; extern(D) TGTKgtk_entry_set_visibility gtk_entry_set_visibility;
alias extern (C) _GtkWidget * function()TGTKgtk_entry_new; extern(D) TGTKgtk_entry_new gtk_entry_new;
alias extern (C) GType function()TGTKgtk_entry_get_type; extern(D) TGTKgtk_entry_get_type gtk_entry_get_type;
alias extern (C) gint function(aGtkEntryCompletion *)TGTKgtk_entry_completion_get_text_column; extern(D) TGTKgtk_entry_completion_get_text_column gtk_entry_completion_get_text_column;
alias extern (C) void function(aGtkEntryCompletion *, gint)TGTKgtk_entry_completion_set_text_column; extern(D) TGTKgtk_entry_completion_set_text_column gtk_entry_completion_set_text_column;
alias extern (C) char * function(aGtkEntryCompletion *)TGTKgtk_entry_completion_get_completion_prefix; extern(D) TGTKgtk_entry_completion_get_completion_prefix gtk_entry_completion_get_completion_prefix;
alias extern (C) gint function(aGtkEntryCompletion *)TGTKgtk_entry_completion_get_popup_single_match; extern(D) TGTKgtk_entry_completion_get_popup_single_match gtk_entry_completion_get_popup_single_match;
alias extern (C) void function(aGtkEntryCompletion *, gint)TGTKgtk_entry_completion_set_popup_single_match; extern(D) TGTKgtk_entry_completion_set_popup_single_match gtk_entry_completion_set_popup_single_match;
alias extern (C) gint function(aGtkEntryCompletion *)TGTKgtk_entry_completion_get_popup_set_width; extern(D) TGTKgtk_entry_completion_get_popup_set_width gtk_entry_completion_get_popup_set_width;
alias extern (C) void function(aGtkEntryCompletion *, gint)TGTKgtk_entry_completion_set_popup_set_width; extern(D) TGTKgtk_entry_completion_set_popup_set_width gtk_entry_completion_set_popup_set_width;
alias extern (C) gint function(aGtkEntryCompletion *)TGTKgtk_entry_completion_get_popup_completion; extern(D) TGTKgtk_entry_completion_get_popup_completion gtk_entry_completion_get_popup_completion;
alias extern (C) void function(aGtkEntryCompletion *, gint)TGTKgtk_entry_completion_set_popup_completion; extern(D) TGTKgtk_entry_completion_set_popup_completion gtk_entry_completion_set_popup_completion;
alias extern (C) gint function(aGtkEntryCompletion *)TGTKgtk_entry_completion_get_inline_selection; extern(D) TGTKgtk_entry_completion_get_inline_selection gtk_entry_completion_get_inline_selection;
alias extern (C) void function(aGtkEntryCompletion *, gint)TGTKgtk_entry_completion_set_inline_selection; extern(D) TGTKgtk_entry_completion_set_inline_selection gtk_entry_completion_set_inline_selection;
alias extern (C) gint function(aGtkEntryCompletion *)TGTKgtk_entry_completion_get_inline_completion; extern(D) TGTKgtk_entry_completion_get_inline_completion gtk_entry_completion_get_inline_completion;
alias extern (C) void function(aGtkEntryCompletion *, gint)TGTKgtk_entry_completion_set_inline_completion; extern(D) TGTKgtk_entry_completion_set_inline_completion gtk_entry_completion_set_inline_completion;
alias extern (C) void function(aGtkEntryCompletion *, gint)TGTKgtk_entry_completion_delete_action; extern(D) TGTKgtk_entry_completion_delete_action gtk_entry_completion_delete_action;
alias extern (C) void function(aGtkEntryCompletion *, gint, char *)TGTKgtk_entry_completion_insert_action_markup; extern(D) TGTKgtk_entry_completion_insert_action_markup gtk_entry_completion_insert_action_markup;
alias extern (C) void function(aGtkEntryCompletion *, gint, char *)TGTKgtk_entry_completion_insert_action_text; extern(D) TGTKgtk_entry_completion_insert_action_text gtk_entry_completion_insert_action_text;
alias extern (C) void function(aGtkEntryCompletion *)TGTKgtk_entry_completion_insert_prefix; extern(D) TGTKgtk_entry_completion_insert_prefix gtk_entry_completion_insert_prefix;
alias extern (C) void function(aGtkEntryCompletion *)TGTKgtk_entry_completion_complete; extern(D) TGTKgtk_entry_completion_complete gtk_entry_completion_complete;
alias extern (C) gint function(aGtkEntryCompletion *)TGTKgtk_entry_completion_get_minimum_key_length; extern(D) TGTKgtk_entry_completion_get_minimum_key_length gtk_entry_completion_get_minimum_key_length;
alias extern (C) void function(aGtkEntryCompletion *, gint)TGTKgtk_entry_completion_set_minimum_key_length; extern(D) TGTKgtk_entry_completion_set_minimum_key_length gtk_entry_completion_set_minimum_key_length;
alias extern (C) void function(aGtkEntryCompletion *, _BCD_func__10863, void *, _BCD_func__13158)TGTKgtk_entry_completion_set_match_func; extern(D) TGTKgtk_entry_completion_set_match_func gtk_entry_completion_set_match_func;
alias extern (C) void * function(aGtkEntryCompletion *)TGTKgtk_entry_completion_get_model; extern(D) TGTKgtk_entry_completion_get_model gtk_entry_completion_get_model;
alias extern (C) void function(aGtkEntryCompletion *, void *)TGTKgtk_entry_completion_set_model; extern(D) TGTKgtk_entry_completion_set_model gtk_entry_completion_set_model;
alias extern (C) _GtkWidget * function(aGtkEntryCompletion *)TGTKgtk_entry_completion_get_entry; extern(D) TGTKgtk_entry_completion_get_entry gtk_entry_completion_get_entry;
alias extern (C) _GtkEntryCompletion * function()TGTKgtk_entry_completion_new; extern(D) TGTKgtk_entry_completion_new gtk_entry_completion_new;
alias extern (C) GType function()TGTKgtk_entry_completion_get_type; extern(D) TGTKgtk_entry_completion_get_type gtk_entry_completion_get_type;
alias extern (C) void function(aGtkTreeModelFilter *)TGTKgtk_tree_model_filter_clear_cache; extern(D) TGTKgtk_tree_model_filter_clear_cache gtk_tree_model_filter_clear_cache;
alias extern (C) void function(aGtkTreeModelFilter *)TGTKgtk_tree_model_filter_refilter; extern(D) TGTKgtk_tree_model_filter_refilter gtk_tree_model_filter_refilter;
alias extern (C) void * function(aGtkTreeModelFilter *, void *)TGTKgtk_tree_model_filter_convert_path_to_child_path; extern(D) TGTKgtk_tree_model_filter_convert_path_to_child_path gtk_tree_model_filter_convert_path_to_child_path;
alias extern (C) void * function(aGtkTreeModelFilter *, void *)TGTKgtk_tree_model_filter_convert_child_path_to_path; extern(D) TGTKgtk_tree_model_filter_convert_child_path_to_path gtk_tree_model_filter_convert_child_path_to_path;
alias extern (C) void function(aGtkTreeModelFilter *, aGtkTreeIter *, aGtkTreeIter *)TGTKgtk_tree_model_filter_convert_iter_to_child_iter; extern(D) TGTKgtk_tree_model_filter_convert_iter_to_child_iter gtk_tree_model_filter_convert_iter_to_child_iter;
alias extern (C) gint function(aGtkTreeModelFilter *, aGtkTreeIter *, aGtkTreeIter *)TGTKgtk_tree_model_filter_convert_child_iter_to_iter; extern(D) TGTKgtk_tree_model_filter_convert_child_iter_to_iter gtk_tree_model_filter_convert_child_iter_to_iter;
alias extern (C) void * function(aGtkTreeModelFilter *)TGTKgtk_tree_model_filter_get_model; extern(D) TGTKgtk_tree_model_filter_get_model gtk_tree_model_filter_get_model;
alias extern (C) void function(aGtkTreeModelFilter *, gint)TGTKgtk_tree_model_filter_set_visible_column; extern(D) TGTKgtk_tree_model_filter_set_visible_column gtk_tree_model_filter_set_visible_column;
alias extern (C) void function(aGtkTreeModelFilter *, gint, GType *, _BCD_func__10889, void *, _BCD_func__13158)TGTKgtk_tree_model_filter_set_modify_func; extern(D) TGTKgtk_tree_model_filter_set_modify_func gtk_tree_model_filter_set_modify_func;
alias extern (C) void function(aGtkTreeModelFilter *, _BCD_func__10753, void *, _BCD_func__13158)TGTKgtk_tree_model_filter_set_visible_func; extern(D) TGTKgtk_tree_model_filter_set_visible_func gtk_tree_model_filter_set_visible_func;
alias extern (C) void * function(void *, void *)TGTKgtk_tree_model_filter_new; extern(D) TGTKgtk_tree_model_filter_new gtk_tree_model_filter_new;
alias extern (C) GType function()TGTKgtk_tree_model_filter_get_type; extern(D) TGTKgtk_tree_model_filter_get_type gtk_tree_model_filter_get_type;
alias extern (C) void function(aGtkListStore *, aGtkTreeIter *, aGtkTreeIter *)TGTKgtk_list_store_move_before; extern(D) TGTKgtk_list_store_move_before gtk_list_store_move_before;
alias extern (C) void function(aGtkListStore *, aGtkTreeIter *, aGtkTreeIter *)TGTKgtk_list_store_move_after; extern(D) TGTKgtk_list_store_move_after gtk_list_store_move_after;
alias extern (C) void function(aGtkListStore *, aGtkTreeIter *, aGtkTreeIter *)TGTKgtk_list_store_swap; extern(D) TGTKgtk_list_store_swap gtk_list_store_swap;
alias extern (C) void function(aGtkListStore *, gint *)TGTKgtk_list_store_reorder; extern(D) TGTKgtk_list_store_reorder gtk_list_store_reorder;
alias extern (C) gint function(aGtkListStore *, aGtkTreeIter *)TGTKgtk_list_store_iter_is_valid; extern(D) TGTKgtk_list_store_iter_is_valid gtk_list_store_iter_is_valid;
alias extern (C) void function(aGtkListStore *)TGTKgtk_list_store_clear; extern(D) TGTKgtk_list_store_clear gtk_list_store_clear;
alias extern (C) void function(aGtkListStore *, aGtkTreeIter *)TGTKgtk_list_store_append; extern(D) TGTKgtk_list_store_append gtk_list_store_append;
alias extern (C) void function(aGtkListStore *, aGtkTreeIter *)TGTKgtk_list_store_prepend; extern(D) TGTKgtk_list_store_prepend gtk_list_store_prepend;
alias extern (C) void function(aGtkListStore *, aGtkTreeIter *, gint, gint *, _GValue *, gint)TGTKgtk_list_store_insert_with_valuesv; extern(D) TGTKgtk_list_store_insert_with_valuesv gtk_list_store_insert_with_valuesv;
alias extern (C) void function(aGtkListStore *, aGtkTreeIter *, gint, ...)TGTKgtk_list_store_insert_with_values; extern(D) TGTKgtk_list_store_insert_with_values gtk_list_store_insert_with_values;
alias extern (C) void function(aGtkListStore *, aGtkTreeIter *, aGtkTreeIter *)TGTKgtk_list_store_insert_after; extern(D) TGTKgtk_list_store_insert_after gtk_list_store_insert_after;
alias extern (C) void function(aGtkListStore *, aGtkTreeIter *, aGtkTreeIter *)TGTKgtk_list_store_insert_before; extern(D) TGTKgtk_list_store_insert_before gtk_list_store_insert_before;
alias extern (C) void function(aGtkListStore *, aGtkTreeIter *, gint)TGTKgtk_list_store_insert; extern(D) TGTKgtk_list_store_insert gtk_list_store_insert;
alias extern (C) gint function(aGtkListStore *, aGtkTreeIter *)TGTKgtk_list_store_remove; extern(D) TGTKgtk_list_store_remove gtk_list_store_remove;
alias extern (C) void function(aGtkListStore *, aGtkTreeIter *, char *)TGTKgtk_list_store_set_valist; extern(D) TGTKgtk_list_store_set_valist gtk_list_store_set_valist;
alias extern (C) void function(aGtkListStore *, aGtkTreeIter *, gint *, _GValue *, gint)TGTKgtk_list_store_set_valuesv; extern(D) TGTKgtk_list_store_set_valuesv gtk_list_store_set_valuesv;
alias extern (C) void function(aGtkListStore *, aGtkTreeIter *, ...)TGTKgtk_list_store_set; extern(D) TGTKgtk_list_store_set gtk_list_store_set;
alias extern (C) void function(aGtkListStore *, aGtkTreeIter *, gint, _GValue *)TGTKgtk_list_store_set_value; extern(D) TGTKgtk_list_store_set_value gtk_list_store_set_value;
alias extern (C) void function(aGtkListStore *, gint, GType *)TGTKgtk_list_store_set_column_types; extern(D) TGTKgtk_list_store_set_column_types gtk_list_store_set_column_types;
alias extern (C) _GtkListStore * function(gint, GType *)TGTKgtk_list_store_newv; extern(D) TGTKgtk_list_store_newv gtk_list_store_newv;
alias extern (C) _GtkListStore * function(gint, ...)TGTKgtk_list_store_new; extern(D) TGTKgtk_list_store_new gtk_list_store_new;
alias extern (C) GType function()TGTKgtk_list_store_get_type; extern(D) TGTKgtk_list_store_get_type gtk_list_store_get_type;
alias extern (C) gint function(aGtkIMContext *, gint, gint)TGTKgtk_im_context_delete_surrounding; extern(D) TGTKgtk_im_context_delete_surrounding gtk_im_context_delete_surrounding;
alias extern (C) gint function(aGtkIMContext *, char * *, gint *)TGTKgtk_im_context_get_surrounding; extern(D) TGTKgtk_im_context_get_surrounding gtk_im_context_get_surrounding;
alias extern (C) void function(aGtkIMContext *, char *, gint, gint)TGTKgtk_im_context_set_surrounding; extern(D) TGTKgtk_im_context_set_surrounding gtk_im_context_set_surrounding;
alias extern (C) void function(aGtkIMContext *, gint)TGTKgtk_im_context_set_use_preedit; extern(D) TGTKgtk_im_context_set_use_preedit gtk_im_context_set_use_preedit;
alias extern (C) void function(aGtkIMContext *, _GdkRectangle *)TGTKgtk_im_context_set_cursor_location; extern(D) TGTKgtk_im_context_set_cursor_location gtk_im_context_set_cursor_location;
alias extern (C) void function(aGtkIMContext *)TGTKgtk_im_context_reset; extern(D) TGTKgtk_im_context_reset gtk_im_context_reset;
alias extern (C) void function(aGtkIMContext *)TGTKgtk_im_context_focus_out; extern(D) TGTKgtk_im_context_focus_out gtk_im_context_focus_out;
alias extern (C) void function(aGtkIMContext *)TGTKgtk_im_context_focus_in; extern(D) TGTKgtk_im_context_focus_in gtk_im_context_focus_in;
alias extern (C) gint function(aGtkIMContext *, _GdkEventKey *)TGTKgtk_im_context_filter_keypress; extern(D) TGTKgtk_im_context_filter_keypress gtk_im_context_filter_keypress;
alias extern (C) void function(aGtkIMContext *, char * *, void * *, gint *)TGTKgtk_im_context_get_preedit_string; extern(D) TGTKgtk_im_context_get_preedit_string gtk_im_context_get_preedit_string;
alias extern (C) void function(aGtkIMContext *, _GdkDrawable *)TGTKgtk_im_context_set_client_window; extern(D) TGTKgtk_im_context_set_client_window gtk_im_context_set_client_window;
alias extern (C) GType function()TGTKgtk_im_context_get_type; extern(D) TGTKgtk_im_context_get_type gtk_im_context_get_type;
alias extern (C) gint function(void *)TGTKgtk_editable_get_editable; extern(D) TGTKgtk_editable_get_editable gtk_editable_get_editable;
alias extern (C) void function(void *, gint)TGTKgtk_editable_set_editable; extern(D) TGTKgtk_editable_set_editable gtk_editable_set_editable;
alias extern (C) gint function(void *)TGTKgtk_editable_get_position; extern(D) TGTKgtk_editable_get_position gtk_editable_get_position;
alias extern (C) void function(void *, gint)TGTKgtk_editable_set_position; extern(D) TGTKgtk_editable_set_position gtk_editable_set_position;
alias extern (C) void function(void *)TGTKgtk_editable_delete_selection; extern(D) TGTKgtk_editable_delete_selection gtk_editable_delete_selection;
alias extern (C) void function(void *)TGTKgtk_editable_paste_clipboard; extern(D) TGTKgtk_editable_paste_clipboard gtk_editable_paste_clipboard;
alias extern (C) void function(void *)TGTKgtk_editable_copy_clipboard; extern(D) TGTKgtk_editable_copy_clipboard gtk_editable_copy_clipboard;
alias extern (C) void function(void *)TGTKgtk_editable_cut_clipboard; extern(D) TGTKgtk_editable_cut_clipboard gtk_editable_cut_clipboard;
alias extern (C) char * function(void *, gint, gint)TGTKgtk_editable_get_chars; extern(D) TGTKgtk_editable_get_chars gtk_editable_get_chars;
alias extern (C) void function(void *, gint, gint)TGTKgtk_editable_delete_text; extern(D) TGTKgtk_editable_delete_text gtk_editable_delete_text;
alias extern (C) void function(void *, in char *, gint, gint *)TGTKgtk_editable_insert_text; extern(D) TGTKgtk_editable_insert_text gtk_editable_insert_text;
alias extern (C) gint function(void *, gint *, gint *)TGTKgtk_editable_get_selection_bounds; extern(D) TGTKgtk_editable_get_selection_bounds gtk_editable_get_selection_bounds;
alias extern (C) void function(void *, gint, gint)TGTKgtk_editable_select_region; extern(D) TGTKgtk_editable_select_region gtk_editable_select_region;
alias extern (C) GType function()TGTKgtk_editable_get_type; extern(D) TGTKgtk_editable_get_type gtk_editable_get_type;
alias extern (C) void function(_GdkColormap *, _GdkDrawable *, _GdkDrawable *, gint, gint)TGTKgtk_drag_set_default_icon; extern(D) TGTKgtk_drag_set_default_icon gtk_drag_set_default_icon;
//alias extern (C) void function(aGtkWidget *, _GdkEvent *)TGTK_gtk_drag_dest_handle_event; extern(D) TGTK_gtk_drag_dest_handle_event _gtk_drag_dest_handle_event;
//alias extern (C) void function(aGtkWidget *, _GdkEvent *)TGTK_gtk_drag_source_handle_event; extern(D) TGTK_gtk_drag_source_handle_event _gtk_drag_source_handle_event;
alias extern (C) gint function(aGtkWidget *, gint, gint, gint, gint)TGTKgtk_drag_check_threshold; extern(D) TGTKgtk_drag_check_threshold gtk_drag_check_threshold;
alias extern (C) void function(_GdkDragContext *)TGTKgtk_drag_set_icon_default; extern(D) TGTKgtk_drag_set_icon_default gtk_drag_set_icon_default;
alias extern (C) void function(_GdkDragContext *, char *, gint, gint)TGTKgtk_drag_set_icon_name; extern(D) TGTKgtk_drag_set_icon_name gtk_drag_set_icon_name;
alias extern (C) void function(_GdkDragContext *, char *, gint, gint)TGTKgtk_drag_set_icon_stock; extern(D) TGTKgtk_drag_set_icon_stock gtk_drag_set_icon_stock;
alias extern (C) void function(_GdkDragContext *, void *, gint, gint)TGTKgtk_drag_set_icon_pixbuf; extern(D) TGTKgtk_drag_set_icon_pixbuf gtk_drag_set_icon_pixbuf;
alias extern (C) void function(_GdkDragContext *, _GdkColormap *, _GdkDrawable *, _GdkDrawable *, gint, gint)TGTKgtk_drag_set_icon_pixmap; extern(D) TGTKgtk_drag_set_icon_pixmap gtk_drag_set_icon_pixmap;
alias extern (C) void function(_GdkDragContext *, aGtkWidget *, gint, gint)TGTKgtk_drag_set_icon_widget; extern(D) TGTKgtk_drag_set_icon_widget gtk_drag_set_icon_widget;
alias extern (C) _GdkDragContext * function(aGtkWidget *, aGtkTargetList *, gint, gint, _GdkEvent *)TGTKgtk_drag_begin; extern(D) TGTKgtk_drag_begin gtk_drag_begin;
alias extern (C) void function(aGtkWidget *, char *)TGTKgtk_drag_source_set_icon_name; extern(D) TGTKgtk_drag_source_set_icon_name gtk_drag_source_set_icon_name;
alias extern (C) void function(aGtkWidget *, char *)TGTKgtk_drag_source_set_icon_stock; extern(D) TGTKgtk_drag_source_set_icon_stock gtk_drag_source_set_icon_stock;
alias extern (C) void function(aGtkWidget *, void *)TGTKgtk_drag_source_set_icon_pixbuf; extern(D) TGTKgtk_drag_source_set_icon_pixbuf gtk_drag_source_set_icon_pixbuf;
alias extern (C) void function(aGtkWidget *, _GdkColormap *, _GdkDrawable *, _GdkDrawable *)TGTKgtk_drag_source_set_icon; extern(D) TGTKgtk_drag_source_set_icon gtk_drag_source_set_icon;
alias extern (C) void function(aGtkWidget *)TGTKgtk_drag_source_add_uri_targets; extern(D) TGTKgtk_drag_source_add_uri_targets gtk_drag_source_add_uri_targets;
alias extern (C) void function(aGtkWidget *)TGTKgtk_drag_source_add_image_targets; extern(D) TGTKgtk_drag_source_add_image_targets gtk_drag_source_add_image_targets;
alias extern (C) void function(aGtkWidget *)TGTKgtk_drag_source_add_text_targets; extern(D) TGTKgtk_drag_source_add_text_targets gtk_drag_source_add_text_targets;
alias extern (C) void function(aGtkWidget *, aGtkTargetList *)TGTKgtk_drag_source_set_target_list; extern(D) TGTKgtk_drag_source_set_target_list gtk_drag_source_set_target_list;
alias extern (C) _GtkTargetList * function(aGtkWidget *)TGTKgtk_drag_source_get_target_list; extern(D) TGTKgtk_drag_source_get_target_list gtk_drag_source_get_target_list;
alias extern (C) void function(aGtkWidget *)TGTKgtk_drag_source_unset; extern(D) TGTKgtk_drag_source_unset gtk_drag_source_unset;
alias extern (C) void function(aGtkWidget *, gint, aGtkTargetEntry *, gint, gint)TGTKgtk_drag_source_set; extern(D) TGTKgtk_drag_source_set gtk_drag_source_set;
alias extern (C) gint function(aGtkWidget *)TGTKgtk_drag_dest_get_track_motion; extern(D) TGTKgtk_drag_dest_get_track_motion gtk_drag_dest_get_track_motion;
alias extern (C) void function(aGtkWidget *, gint)TGTKgtk_drag_dest_set_track_motion; extern(D) TGTKgtk_drag_dest_set_track_motion gtk_drag_dest_set_track_motion;
alias extern (C) void function(aGtkWidget *)TGTKgtk_drag_dest_add_uri_targets; extern(D) TGTKgtk_drag_dest_add_uri_targets gtk_drag_dest_add_uri_targets;
alias extern (C) void function(aGtkWidget *)TGTKgtk_drag_dest_add_image_targets; extern(D) TGTKgtk_drag_dest_add_image_targets gtk_drag_dest_add_image_targets;
alias extern (C) void function(aGtkWidget *)TGTKgtk_drag_dest_add_text_targets; extern(D) TGTKgtk_drag_dest_add_text_targets gtk_drag_dest_add_text_targets;
alias extern (C) void function(aGtkWidget *, aGtkTargetList *)TGTKgtk_drag_dest_set_target_list; extern(D) TGTKgtk_drag_dest_set_target_list gtk_drag_dest_set_target_list;
alias extern (C) _GtkTargetList * function(aGtkWidget *)TGTKgtk_drag_dest_get_target_list; extern(D) TGTKgtk_drag_dest_get_target_list gtk_drag_dest_get_target_list;
alias extern (C) void * function(aGtkWidget *, _GdkDragContext *, aGtkTargetList *)TGTKgtk_drag_dest_find_target; extern(D) TGTKgtk_drag_dest_find_target gtk_drag_dest_find_target;
alias extern (C) void function(aGtkWidget *)TGTKgtk_drag_dest_unset; extern(D) TGTKgtk_drag_dest_unset gtk_drag_dest_unset;
alias extern (C) void function(aGtkWidget *, _GdkDrawable *, gint, gint)TGTKgtk_drag_dest_set_proxy; extern(D) TGTKgtk_drag_dest_set_proxy gtk_drag_dest_set_proxy;
alias extern (C) void function(aGtkWidget *, gint, aGtkTargetEntry *, gint, gint)TGTKgtk_drag_dest_set; extern(D) TGTKgtk_drag_dest_set gtk_drag_dest_set;
alias extern (C) void function(aGtkWidget *)TGTKgtk_drag_unhighlight; extern(D) TGTKgtk_drag_unhighlight gtk_drag_unhighlight;
alias extern (C) void function(aGtkWidget *)TGTKgtk_drag_highlight; extern(D) TGTKgtk_drag_highlight gtk_drag_highlight;
alias extern (C) _GtkWidget * function(_GdkDragContext *)TGTKgtk_drag_get_source_widget; extern(D) TGTKgtk_drag_get_source_widget gtk_drag_get_source_widget;
alias extern (C) void function(_GdkDragContext *, gint, gint, guint32)TGTKgtk_drag_finish; extern(D) TGTKgtk_drag_finish gtk_drag_finish;
alias extern (C) void function(aGtkWidget *, _GdkDragContext *, void *, guint32)TGTKgtk_drag_get_data; extern(D) TGTKgtk_drag_get_data gtk_drag_get_data;
alias extern (C) void function(aGtkCombo *)TGTKgtk_combo_disable_activate; extern(D) TGTKgtk_combo_disable_activate gtk_combo_disable_activate;
alias extern (C) void function(aGtkCombo *, _GList *)TGTKgtk_combo_set_popdown_strings; extern(D) TGTKgtk_combo_set_popdown_strings gtk_combo_set_popdown_strings;
alias extern (C) void function(aGtkCombo *, aGtkItem *, char *)TGTKgtk_combo_set_item_string; extern(D) TGTKgtk_combo_set_item_string gtk_combo_set_item_string;
alias extern (C) void function(aGtkCombo *, gint)TGTKgtk_combo_set_case_sensitive; extern(D) TGTKgtk_combo_set_case_sensitive gtk_combo_set_case_sensitive;
alias extern (C) void function(aGtkCombo *, gint)TGTKgtk_combo_set_use_arrows_always; extern(D) TGTKgtk_combo_set_use_arrows_always gtk_combo_set_use_arrows_always;
alias extern (C) void function(aGtkCombo *, gint)TGTKgtk_combo_set_use_arrows; extern(D) TGTKgtk_combo_set_use_arrows gtk_combo_set_use_arrows;
alias extern (C) void function(aGtkCombo *, gint, gint)TGTKgtk_combo_set_value_in_list; extern(D) TGTKgtk_combo_set_value_in_list gtk_combo_set_value_in_list;
alias extern (C) _GtkWidget * function()TGTKgtk_combo_new; extern(D) TGTKgtk_combo_new gtk_combo_new;
alias extern (C) guint function()TGTKgtk_combo_get_type; extern(D) TGTKgtk_combo_get_type gtk_combo_get_type;
alias extern (C) _GtkWidget * function(gint, gint)TGTKgtk_hbox_new; extern(D) TGTKgtk_hbox_new gtk_hbox_new;
alias extern (C) GType function()TGTKgtk_hbox_get_type; extern(D) TGTKgtk_hbox_get_type gtk_hbox_get_type;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_color_selection_dialog_new; extern(D) TGTKgtk_color_selection_dialog_new gtk_color_selection_dialog_new;
alias extern (C) GType function()TGTKgtk_color_selection_dialog_get_type; extern(D) TGTKgtk_color_selection_dialog_get_type gtk_color_selection_dialog_get_type;
alias extern (C) void function(aGtkColorSelection *, gint)TGTKgtk_color_selection_set_update_policy; extern(D) TGTKgtk_color_selection_set_update_policy gtk_color_selection_set_update_policy;
alias extern (C) void function(aGtkColorSelection *, double *)TGTKgtk_color_selection_get_color; extern(D) TGTKgtk_color_selection_get_color gtk_color_selection_get_color;
alias extern (C) void function(aGtkColorSelection *, double *)TGTKgtk_color_selection_set_color; extern(D) TGTKgtk_color_selection_set_color gtk_color_selection_set_color;
alias extern (C) _BCD_func__11008 function(_BCD_func__11008)TGTKgtk_color_selection_set_change_palette_with_screen_hook; extern(D) TGTKgtk_color_selection_set_change_palette_with_screen_hook gtk_color_selection_set_change_palette_with_screen_hook;
alias extern (C) _BCD_func__11009 function(_BCD_func__11009)TGTKgtk_color_selection_set_change_palette_hook; extern(D) TGTKgtk_color_selection_set_change_palette_hook gtk_color_selection_set_change_palette_hook;
alias extern (C) char * function(_GdkColor *, gint)TGTKgtk_color_selection_palette_to_string; extern(D) TGTKgtk_color_selection_palette_to_string gtk_color_selection_palette_to_string;
alias extern (C) gint function(char *, _GdkColor * *, gint *)TGTKgtk_color_selection_palette_from_string; extern(D) TGTKgtk_color_selection_palette_from_string gtk_color_selection_palette_from_string;
alias extern (C) gint function(aGtkColorSelection *)TGTKgtk_color_selection_is_adjusting; extern(D) TGTKgtk_color_selection_is_adjusting gtk_color_selection_is_adjusting;
alias extern (C) ushort function(aGtkColorSelection *)TGTKgtk_color_selection_get_previous_alpha; extern(D) TGTKgtk_color_selection_get_previous_alpha gtk_color_selection_get_previous_alpha;
alias extern (C) void function(aGtkColorSelection *, _GdkColor *)TGTKgtk_color_selection_get_previous_color; extern(D) TGTKgtk_color_selection_get_previous_color gtk_color_selection_get_previous_color;
alias extern (C) void function(aGtkColorSelection *, ushort)TGTKgtk_color_selection_set_previous_alpha; extern(D) TGTKgtk_color_selection_set_previous_alpha gtk_color_selection_set_previous_alpha;
alias extern (C) void function(aGtkColorSelection *, _GdkColor *)TGTKgtk_color_selection_set_previous_color; extern(D) TGTKgtk_color_selection_set_previous_color gtk_color_selection_set_previous_color;
alias extern (C) ushort function(aGtkColorSelection *)TGTKgtk_color_selection_get_current_alpha; extern(D) TGTKgtk_color_selection_get_current_alpha gtk_color_selection_get_current_alpha;
alias extern (C) void function(aGtkColorSelection *, _GdkColor *)TGTKgtk_color_selection_get_current_color; extern(D) TGTKgtk_color_selection_get_current_color gtk_color_selection_get_current_color;
alias extern (C) void function(aGtkColorSelection *, ushort)TGTKgtk_color_selection_set_current_alpha; extern(D) TGTKgtk_color_selection_set_current_alpha gtk_color_selection_set_current_alpha;
alias extern (C) void function(aGtkColorSelection *, _GdkColor *)TGTKgtk_color_selection_set_current_color; extern(D) TGTKgtk_color_selection_set_current_color gtk_color_selection_set_current_color;
alias extern (C) void function(aGtkColorSelection *, gint)TGTKgtk_color_selection_set_has_palette; extern(D) TGTKgtk_color_selection_set_has_palette gtk_color_selection_set_has_palette;
alias extern (C) gint function(aGtkColorSelection *)TGTKgtk_color_selection_get_has_palette; extern(D) TGTKgtk_color_selection_get_has_palette gtk_color_selection_get_has_palette;
alias extern (C) void function(aGtkColorSelection *, gint)TGTKgtk_color_selection_set_has_opacity_control; extern(D) TGTKgtk_color_selection_set_has_opacity_control gtk_color_selection_set_has_opacity_control;
alias extern (C) gint function(aGtkColorSelection *)TGTKgtk_color_selection_get_has_opacity_control; extern(D) TGTKgtk_color_selection_get_has_opacity_control gtk_color_selection_get_has_opacity_control;
alias extern (C) _GtkWidget * function()TGTKgtk_color_selection_new; extern(D) TGTKgtk_color_selection_new gtk_color_selection_new;
alias extern (C) GType function()TGTKgtk_color_selection_get_type; extern(D) TGTKgtk_color_selection_get_type gtk_color_selection_get_type;
alias extern (C) _GtkWidget * function(gint, gint)TGTKgtk_vbox_new; extern(D) TGTKgtk_vbox_new gtk_vbox_new;
alias extern (C) GType function()TGTKgtk_vbox_get_type; extern(D) TGTKgtk_vbox_get_type gtk_vbox_get_type;
alias extern (C) char * function(aGtkColorButton *)TGTKgtk_color_button_get_title; extern(D) TGTKgtk_color_button_get_title gtk_color_button_get_title;
alias extern (C) void function(aGtkColorButton *, char *)TGTKgtk_color_button_set_title; extern(D) TGTKgtk_color_button_set_title gtk_color_button_set_title;
alias extern (C) gint function(aGtkColorButton *)TGTKgtk_color_button_get_use_alpha; extern(D) TGTKgtk_color_button_get_use_alpha gtk_color_button_get_use_alpha;
alias extern (C) void function(aGtkColorButton *, gint)TGTKgtk_color_button_set_use_alpha; extern(D) TGTKgtk_color_button_set_use_alpha gtk_color_button_set_use_alpha;
alias extern (C) ushort function(aGtkColorButton *)TGTKgtk_color_button_get_alpha; extern(D) TGTKgtk_color_button_get_alpha gtk_color_button_get_alpha;
alias extern (C) void function(aGtkColorButton *, _GdkColor *)TGTKgtk_color_button_get_color; extern(D) TGTKgtk_color_button_get_color gtk_color_button_get_color;
alias extern (C) void function(aGtkColorButton *, ushort)TGTKgtk_color_button_set_alpha; extern(D) TGTKgtk_color_button_set_alpha gtk_color_button_set_alpha;
alias extern (C) void function(aGtkColorButton *, _GdkColor *)TGTKgtk_color_button_set_color; extern(D) TGTKgtk_color_button_set_color gtk_color_button_set_color;
alias extern (C) _GtkWidget * function(_GdkColor *)TGTKgtk_color_button_new_with_color; extern(D) TGTKgtk_color_button_new_with_color gtk_color_button_new_with_color;
alias extern (C) _GtkWidget * function()TGTKgtk_color_button_new; extern(D) TGTKgtk_color_button_new gtk_color_button_new;
alias extern (C) GType function()TGTKgtk_color_button_get_type; extern(D) TGTKgtk_color_button_get_type gtk_color_button_get_type;
//alias extern (C) void * function(aGtkCList *, aGtkCListRow *, gint)TGTK_gtk_clist_create_cell_layout; extern(D) TGTK_gtk_clist_create_cell_layout _gtk_clist_create_cell_layout;
alias extern (C) void function(aGtkCList *, gint)TGTKgtk_clist_set_auto_sort; extern(D) TGTKgtk_clist_set_auto_sort gtk_clist_set_auto_sort;
alias extern (C) void function(aGtkCList *)TGTKgtk_clist_sort; extern(D) TGTKgtk_clist_sort gtk_clist_sort;
alias extern (C) void function(aGtkCList *, gint)TGTKgtk_clist_set_sort_type; extern(D) TGTKgtk_clist_set_sort_type gtk_clist_set_sort_type;
alias extern (C) void function(aGtkCList *, gint)TGTKgtk_clist_set_sort_column; extern(D) TGTKgtk_clist_set_sort_column gtk_clist_set_sort_column;
alias extern (C) void function(aGtkCList *, _BCD_func__11051)TGTKgtk_clist_set_compare_func; extern(D) TGTKgtk_clist_set_compare_func gtk_clist_set_compare_func;
alias extern (C) void function(aGtkCList *, gint, gint)TGTKgtk_clist_row_move; extern(D) TGTKgtk_clist_row_move gtk_clist_row_move;
alias extern (C) void function(aGtkCList *, gint, gint)TGTKgtk_clist_swap_rows; extern(D) TGTKgtk_clist_swap_rows gtk_clist_swap_rows;
alias extern (C) void function(aGtkCList *)TGTKgtk_clist_unselect_all; extern(D) TGTKgtk_clist_unselect_all gtk_clist_unselect_all;
alias extern (C) void function(aGtkCList *)TGTKgtk_clist_select_all; extern(D) TGTKgtk_clist_select_all gtk_clist_select_all;
alias extern (C) gint function(aGtkCList *, gint, gint, gint *, gint *)TGTKgtk_clist_get_selection_info; extern(D) TGTKgtk_clist_get_selection_info gtk_clist_get_selection_info;
alias extern (C) void function(aGtkCList *)TGTKgtk_clist_clear; extern(D) TGTKgtk_clist_clear gtk_clist_clear;
alias extern (C) void function(aGtkCList *)TGTKgtk_clist_undo_selection; extern(D) TGTKgtk_clist_undo_selection gtk_clist_undo_selection;
alias extern (C) void function(aGtkCList *, gint, gint)TGTKgtk_clist_unselect_row; extern(D) TGTKgtk_clist_unselect_row gtk_clist_unselect_row;
alias extern (C) void function(aGtkCList *, gint, gint)TGTKgtk_clist_select_row; extern(D) TGTKgtk_clist_select_row gtk_clist_select_row;
alias extern (C) gint function(aGtkCList *, void *)TGTKgtk_clist_find_row_from_data; extern(D) TGTKgtk_clist_find_row_from_data gtk_clist_find_row_from_data;
alias extern (C) void * function(aGtkCList *, gint)TGTKgtk_clist_get_row_data; extern(D) TGTKgtk_clist_get_row_data gtk_clist_get_row_data;
alias extern (C) void function(aGtkCList *, gint, void *, _BCD_func__13158)TGTKgtk_clist_set_row_data_full; extern(D) TGTKgtk_clist_set_row_data_full gtk_clist_set_row_data_full;
alias extern (C) void function(aGtkCList *, gint, void *)TGTKgtk_clist_set_row_data; extern(D) TGTKgtk_clist_set_row_data gtk_clist_set_row_data;
alias extern (C) void function(aGtkCList *, gint)TGTKgtk_clist_remove; extern(D) TGTKgtk_clist_remove gtk_clist_remove;
alias extern (C) gint function(aGtkCList *, gint, char * *)TGTKgtk_clist_insert; extern(D) TGTKgtk_clist_insert gtk_clist_insert;
alias extern (C) gint function(aGtkCList *, char * *)TGTKgtk_clist_append; extern(D) TGTKgtk_clist_append gtk_clist_append;
alias extern (C) gint function(aGtkCList *, char * *)TGTKgtk_clist_prepend; extern(D) TGTKgtk_clist_prepend gtk_clist_prepend;
alias extern (C) gint function(aGtkCList *, gint)TGTKgtk_clist_get_selectable; extern(D) TGTKgtk_clist_get_selectable gtk_clist_get_selectable;
alias extern (C) void function(aGtkCList *, gint, gint)TGTKgtk_clist_set_selectable; extern(D) TGTKgtk_clist_set_selectable gtk_clist_set_selectable;
alias extern (C) void function(aGtkCList *, gint, gint, gint, gint)TGTKgtk_clist_set_shift; extern(D) TGTKgtk_clist_set_shift gtk_clist_set_shift;
alias extern (C) _GtkStyle * function(aGtkCList *, gint)TGTKgtk_clist_get_row_style; extern(D) TGTKgtk_clist_get_row_style gtk_clist_get_row_style;
alias extern (C) void function(aGtkCList *, gint, aGtkStyle *)TGTKgtk_clist_set_row_style; extern(D) TGTKgtk_clist_set_row_style gtk_clist_set_row_style;
alias extern (C) _GtkStyle * function(aGtkCList *, gint, gint)TGTKgtk_clist_get_cell_style; extern(D) TGTKgtk_clist_get_cell_style gtk_clist_get_cell_style;
alias extern (C) void function(aGtkCList *, gint, gint, aGtkStyle *)TGTKgtk_clist_set_cell_style; extern(D) TGTKgtk_clist_set_cell_style gtk_clist_set_cell_style;
alias extern (C) void function(aGtkCList *, gint, _GdkColor *)TGTKgtk_clist_set_background; extern(D) TGTKgtk_clist_set_background gtk_clist_set_background;
alias extern (C) void function(aGtkCList *, gint, _GdkColor *)TGTKgtk_clist_set_foreground; extern(D) TGTKgtk_clist_set_foreground gtk_clist_set_foreground;
alias extern (C) gint function(aGtkCList *, gint, gint, char * *, char *, _GdkDrawable * *, _GdkDrawable * *)TGTKgtk_clist_get_pixtext; extern(D) TGTKgtk_clist_get_pixtext gtk_clist_get_pixtext;
alias extern (C) void function(aGtkCList *, gint, gint, char *, char, _GdkDrawable *, _GdkDrawable *)TGTKgtk_clist_set_pixtext; extern(D) TGTKgtk_clist_set_pixtext gtk_clist_set_pixtext;
alias extern (C) gint function(aGtkCList *, gint, gint, _GdkDrawable * *, _GdkDrawable * *)TGTKgtk_clist_get_pixmap; extern(D) TGTKgtk_clist_get_pixmap gtk_clist_get_pixmap;
alias extern (C) void function(aGtkCList *, gint, gint, _GdkDrawable *, _GdkDrawable *)TGTKgtk_clist_set_pixmap; extern(D) TGTKgtk_clist_set_pixmap gtk_clist_set_pixmap;
alias extern (C) gint function(aGtkCList *, gint, gint, char * *)TGTKgtk_clist_get_text; extern(D) TGTKgtk_clist_get_text gtk_clist_get_text;
alias extern (C) void function(aGtkCList *, gint, gint, char *)TGTKgtk_clist_set_text; extern(D) TGTKgtk_clist_set_text gtk_clist_set_text;
alias extern (C) gint function(aGtkCList *, gint, gint)TGTKgtk_clist_get_cell_type; extern(D) TGTKgtk_clist_get_cell_type gtk_clist_get_cell_type;
alias extern (C) gint function(aGtkCList *, gint)TGTKgtk_clist_row_is_visible; extern(D) TGTKgtk_clist_row_is_visible gtk_clist_row_is_visible;
alias extern (C) void function(aGtkCList *, gint, gint, float, float)TGTKgtk_clist_moveto; extern(D) TGTKgtk_clist_moveto gtk_clist_moveto;
alias extern (C) void function(aGtkCList *, guint)TGTKgtk_clist_set_row_height; extern(D) TGTKgtk_clist_set_row_height gtk_clist_set_row_height;
alias extern (C) void function(aGtkCList *, gint, gint)TGTKgtk_clist_set_column_max_width; extern(D) TGTKgtk_clist_set_column_max_width gtk_clist_set_column_max_width;
alias extern (C) void function(aGtkCList *, gint, gint)TGTKgtk_clist_set_column_min_width; extern(D) TGTKgtk_clist_set_column_min_width gtk_clist_set_column_min_width;
alias extern (C) void function(aGtkCList *, gint, gint)TGTKgtk_clist_set_column_width; extern(D) TGTKgtk_clist_set_column_width gtk_clist_set_column_width;
alias extern (C) gint function(aGtkCList *, gint)TGTKgtk_clist_optimal_column_width; extern(D) TGTKgtk_clist_optimal_column_width gtk_clist_optimal_column_width;
alias extern (C) gint function(aGtkCList *)TGTKgtk_clist_columns_autosize; extern(D) TGTKgtk_clist_columns_autosize gtk_clist_columns_autosize;
alias extern (C) void function(aGtkCList *, gint, gint)TGTKgtk_clist_set_column_auto_resize; extern(D) TGTKgtk_clist_set_column_auto_resize gtk_clist_set_column_auto_resize;
alias extern (C) void function(aGtkCList *, gint, gint)TGTKgtk_clist_set_column_resizeable; extern(D) TGTKgtk_clist_set_column_resizeable gtk_clist_set_column_resizeable;
alias extern (C) void function(aGtkCList *, gint, gint)TGTKgtk_clist_set_column_visibility; extern(D) TGTKgtk_clist_set_column_visibility gtk_clist_set_column_visibility;
alias extern (C) void function(aGtkCList *, gint, gint)TGTKgtk_clist_set_column_justification; extern(D) TGTKgtk_clist_set_column_justification gtk_clist_set_column_justification;
alias extern (C) _GtkWidget * function(aGtkCList *, gint)TGTKgtk_clist_get_column_widget; extern(D) TGTKgtk_clist_get_column_widget gtk_clist_get_column_widget;
alias extern (C) void function(aGtkCList *, gint, aGtkWidget *)TGTKgtk_clist_set_column_widget; extern(D) TGTKgtk_clist_set_column_widget gtk_clist_set_column_widget;
alias extern (C) char * function(aGtkCList *, gint)TGTKgtk_clist_get_column_title; extern(D) TGTKgtk_clist_get_column_title gtk_clist_get_column_title;
alias extern (C) void function(aGtkCList *, gint, char *)TGTKgtk_clist_set_column_title; extern(D) TGTKgtk_clist_set_column_title gtk_clist_set_column_title;
alias extern (C) void function(aGtkCList *)TGTKgtk_clist_column_titles_passive; extern(D) TGTKgtk_clist_column_titles_passive gtk_clist_column_titles_passive;
alias extern (C) void function(aGtkCList *)TGTKgtk_clist_column_titles_active; extern(D) TGTKgtk_clist_column_titles_active gtk_clist_column_titles_active;
alias extern (C) void function(aGtkCList *, gint)TGTKgtk_clist_column_title_passive; extern(D) TGTKgtk_clist_column_title_passive gtk_clist_column_title_passive;
alias extern (C) void function(aGtkCList *, gint)TGTKgtk_clist_column_title_active; extern(D) TGTKgtk_clist_column_title_active gtk_clist_column_title_active;
alias extern (C) void function(aGtkCList *)TGTKgtk_clist_column_titles_hide; extern(D) TGTKgtk_clist_column_titles_hide gtk_clist_column_titles_hide;
alias extern (C) void function(aGtkCList *)TGTKgtk_clist_column_titles_show; extern(D) TGTKgtk_clist_column_titles_show gtk_clist_column_titles_show;
alias extern (C) void function(aGtkCList *)TGTKgtk_clist_thaw; extern(D) TGTKgtk_clist_thaw gtk_clist_thaw;
alias extern (C) void function(aGtkCList *)TGTKgtk_clist_freeze; extern(D) TGTKgtk_clist_freeze gtk_clist_freeze;
alias extern (C) void function(aGtkCList *, guint, char)TGTKgtk_clist_set_button_actions; extern(D) TGTKgtk_clist_set_button_actions gtk_clist_set_button_actions;
alias extern (C) void function(aGtkCList *, gint)TGTKgtk_clist_set_use_drag_icons; extern(D) TGTKgtk_clist_set_use_drag_icons gtk_clist_set_use_drag_icons;
alias extern (C) void function(aGtkCList *, gint)TGTKgtk_clist_set_reorderable; extern(D) TGTKgtk_clist_set_reorderable gtk_clist_set_reorderable;
alias extern (C) void function(aGtkCList *, gint)TGTKgtk_clist_set_selection_mode; extern(D) TGTKgtk_clist_set_selection_mode gtk_clist_set_selection_mode;
alias extern (C) void function(aGtkCList *, gint)TGTKgtk_clist_set_shadow_type; extern(D) TGTKgtk_clist_set_shadow_type gtk_clist_set_shadow_type;
alias extern (C) _GtkAdjustment * function(aGtkCList *)TGTKgtk_clist_get_vadjustment; extern(D) TGTKgtk_clist_get_vadjustment gtk_clist_get_vadjustment;
alias extern (C) _GtkAdjustment * function(aGtkCList *)TGTKgtk_clist_get_hadjustment; extern(D) TGTKgtk_clist_get_hadjustment gtk_clist_get_hadjustment;
alias extern (C) void function(aGtkCList *, aGtkAdjustment *)TGTKgtk_clist_set_vadjustment; extern(D) TGTKgtk_clist_set_vadjustment gtk_clist_set_vadjustment;
alias extern (C) void function(aGtkCList *, aGtkAdjustment *)TGTKgtk_clist_set_hadjustment; extern(D) TGTKgtk_clist_set_hadjustment gtk_clist_set_hadjustment;
alias extern (C) _GtkWidget * function(gint, char * *)TGTKgtk_clist_new_with_titles; extern(D) TGTKgtk_clist_new_with_titles gtk_clist_new_with_titles;
alias extern (C) _GtkWidget * function(gint)TGTKgtk_clist_new; extern(D) TGTKgtk_clist_new gtk_clist_new;
alias extern (C) guint function()TGTKgtk_clist_get_type; extern(D) TGTKgtk_clist_get_type gtk_clist_get_type;
alias extern (C) _GtkWidget * function(aGtkAdjustment *)TGTKgtk_vscrollbar_new; extern(D) TGTKgtk_vscrollbar_new gtk_vscrollbar_new;
alias extern (C) GType function()TGTKgtk_vscrollbar_get_type; extern(D) TGTKgtk_vscrollbar_get_type gtk_vscrollbar_get_type;
alias extern (C) _GtkWidget * function(aGtkAdjustment *)TGTKgtk_hscrollbar_new; extern(D) TGTKgtk_hscrollbar_new gtk_hscrollbar_new;
alias extern (C) GType function()TGTKgtk_hscrollbar_get_type; extern(D) TGTKgtk_hscrollbar_get_type gtk_hscrollbar_get_type;
alias extern (C) GType function()TGTKgtk_scrollbar_get_type; extern(D) TGTKgtk_scrollbar_get_type gtk_scrollbar_get_type;
//alias extern (C) double function(aGtkRange *, gint)TGTK_gtk_range_get_wheel_delta; extern(D) TGTK_gtk_range_get_wheel_delta _gtk_range_get_wheel_delta;
alias extern (C) double function(aGtkRange *)TGTKgtk_range_get_fill_level; extern(D) TGTKgtk_range_get_fill_level gtk_range_get_fill_level;
alias extern (C) void function(aGtkRange *, double)TGTKgtk_range_set_fill_level; extern(D) TGTKgtk_range_set_fill_level gtk_range_set_fill_level;
alias extern (C) gint function(aGtkRange *)TGTKgtk_range_get_restrict_to_fill_level; extern(D) TGTKgtk_range_get_restrict_to_fill_level gtk_range_get_restrict_to_fill_level;
alias extern (C) void function(aGtkRange *, gint)TGTKgtk_range_set_restrict_to_fill_level; extern(D) TGTKgtk_range_set_restrict_to_fill_level gtk_range_set_restrict_to_fill_level;
alias extern (C) gint function(aGtkRange *)TGTKgtk_range_get_show_fill_level; extern(D) TGTKgtk_range_get_show_fill_level gtk_range_get_show_fill_level;
alias extern (C) void function(aGtkRange *, gint)TGTKgtk_range_set_show_fill_level; extern(D) TGTKgtk_range_set_show_fill_level gtk_range_set_show_fill_level;
alias extern (C) double function(aGtkRange *)TGTKgtk_range_get_value; extern(D) TGTKgtk_range_get_value gtk_range_get_value;
alias extern (C) void function(aGtkRange *, double)TGTKgtk_range_set_value; extern(D) TGTKgtk_range_set_value gtk_range_set_value;
alias extern (C) void function(aGtkRange *, double, double)TGTKgtk_range_set_range; extern(D) TGTKgtk_range_set_range gtk_range_set_range;
alias extern (C) void function(aGtkRange *, double, double)TGTKgtk_range_set_increments; extern(D) TGTKgtk_range_set_increments gtk_range_set_increments;
alias extern (C) gint function(aGtkRange *)TGTKgtk_range_get_upper_stepper_sensitivity; extern(D) TGTKgtk_range_get_upper_stepper_sensitivity gtk_range_get_upper_stepper_sensitivity;
alias extern (C) void function(aGtkRange *, gint)TGTKgtk_range_set_upper_stepper_sensitivity; extern(D) TGTKgtk_range_set_upper_stepper_sensitivity gtk_range_set_upper_stepper_sensitivity;
alias extern (C) gint function(aGtkRange *)TGTKgtk_range_get_lower_stepper_sensitivity; extern(D) TGTKgtk_range_get_lower_stepper_sensitivity gtk_range_get_lower_stepper_sensitivity;
alias extern (C) void function(aGtkRange *, gint)TGTKgtk_range_set_lower_stepper_sensitivity; extern(D) TGTKgtk_range_set_lower_stepper_sensitivity gtk_range_set_lower_stepper_sensitivity;
alias extern (C) gint function(aGtkRange *)TGTKgtk_range_get_inverted; extern(D) TGTKgtk_range_get_inverted gtk_range_get_inverted;
alias extern (C) void function(aGtkRange *, gint)TGTKgtk_range_set_inverted; extern(D) TGTKgtk_range_set_inverted gtk_range_set_inverted;
alias extern (C) _GtkAdjustment * function(aGtkRange *)TGTKgtk_range_get_adjustment; extern(D) TGTKgtk_range_get_adjustment gtk_range_get_adjustment;
alias extern (C) void function(aGtkRange *, aGtkAdjustment *)TGTKgtk_range_set_adjustment; extern(D) TGTKgtk_range_set_adjustment gtk_range_set_adjustment;
alias extern (C) gint function(aGtkRange *)TGTKgtk_range_get_update_policy; extern(D) TGTKgtk_range_get_update_policy gtk_range_get_update_policy;
alias extern (C) void function(aGtkRange *, gint)TGTKgtk_range_set_update_policy; extern(D) TGTKgtk_range_set_update_policy gtk_range_set_update_policy;
alias extern (C) GType function()TGTKgtk_range_get_type; extern(D) TGTKgtk_range_get_type gtk_range_get_type;
//alias extern (C) void function()TGTK_gtk_clipboard_store_all; extern(D) TGTK_gtk_clipboard_store_all _gtk_clipboard_store_all;
//alias extern (C) void function(_GdkEventOwnerChange *)TGTK_gtk_clipboard_handle_event; extern(D) TGTK_gtk_clipboard_handle_event _gtk_clipboard_handle_event;
alias extern (C) void function(void *)TGTKgtk_clipboard_store; extern(D) TGTKgtk_clipboard_store gtk_clipboard_store;
alias extern (C) void function(void *, aGtkTargetEntry *, gint)TGTKgtk_clipboard_set_can_store; extern(D) TGTKgtk_clipboard_set_can_store gtk_clipboard_set_can_store;
alias extern (C) gint function(void *, void *)TGTKgtk_clipboard_wait_is_target_available; extern(D) TGTKgtk_clipboard_wait_is_target_available gtk_clipboard_wait_is_target_available;
alias extern (C) gint function(void *)TGTKgtk_clipboard_wait_is_image_available; extern(D) TGTKgtk_clipboard_wait_is_image_available gtk_clipboard_wait_is_image_available;
alias extern (C) gint function(void *, aGtkTextBuffer *)TGTKgtk_clipboard_wait_is_rich_text_available; extern(D) TGTKgtk_clipboard_wait_is_rich_text_available gtk_clipboard_wait_is_rich_text_available;
alias extern (C) gint function(void *)TGTKgtk_clipboard_wait_is_text_available; extern(D) TGTKgtk_clipboard_wait_is_text_available gtk_clipboard_wait_is_text_available;
alias extern (C) gint function(void *, void * * *, gint *)TGTKgtk_clipboard_wait_for_targets; extern(D) TGTKgtk_clipboard_wait_for_targets gtk_clipboard_wait_for_targets;
alias extern (C) void * function(void *)TGTKgtk_clipboard_wait_for_image; extern(D) TGTKgtk_clipboard_wait_for_image gtk_clipboard_wait_for_image;
alias extern (C) char * function(void *, aGtkTextBuffer *, void * *, gsize *)TGTKgtk_clipboard_wait_for_rich_text; extern(D) TGTKgtk_clipboard_wait_for_rich_text gtk_clipboard_wait_for_rich_text;
alias extern (C) char * function(void *)TGTKgtk_clipboard_wait_for_text; extern(D) TGTKgtk_clipboard_wait_for_text gtk_clipboard_wait_for_text;
alias extern (C) _GtkSelectionData * function(void *, void *)TGTKgtk_clipboard_wait_for_contents; extern(D) TGTKgtk_clipboard_wait_for_contents gtk_clipboard_wait_for_contents;
alias extern (C) void function(void *, _BCD_func__11269, void *)TGTKgtk_clipboard_request_targets; extern(D) TGTKgtk_clipboard_request_targets gtk_clipboard_request_targets;
alias extern (C) void function(void *, _BCD_func__11270, void *)TGTKgtk_clipboard_request_image; extern(D) TGTKgtk_clipboard_request_image gtk_clipboard_request_image;
alias extern (C) void function(void *, aGtkTextBuffer *, _BCD_func__11271, void *)TGTKgtk_clipboard_request_rich_text; extern(D) TGTKgtk_clipboard_request_rich_text gtk_clipboard_request_rich_text;
alias extern (C) void function(void *, _BCD_func__11272, void *)TGTKgtk_clipboard_request_text; extern(D) TGTKgtk_clipboard_request_text gtk_clipboard_request_text;
alias extern (C) void function(void *, void *, _BCD_func__11273, void *)TGTKgtk_clipboard_request_contents; extern(D) TGTKgtk_clipboard_request_contents gtk_clipboard_request_contents;
alias extern (C) void function(void *, void *)TGTKgtk_clipboard_set_image; extern(D) TGTKgtk_clipboard_set_image gtk_clipboard_set_image;
alias extern (C) void function(void *, char *, gint)TGTKgtk_clipboard_set_text; extern(D) TGTKgtk_clipboard_set_text gtk_clipboard_set_text;
alias extern (C) void function(void *)TGTKgtk_clipboard_clear; extern(D) TGTKgtk_clipboard_clear gtk_clipboard_clear;
alias extern (C) _GObject * function(void *)TGTKgtk_clipboard_get_owner; extern(D) TGTKgtk_clipboard_get_owner gtk_clipboard_get_owner;
alias extern (C) gint function(void *, aGtkTargetEntry *, guint, _BCD_func__11268, _BCD_func__11267, _GObject *)TGTKgtk_clipboard_set_with_owner; extern(D) TGTKgtk_clipboard_set_with_owner gtk_clipboard_set_with_owner;
alias extern (C) gint function(void *, aGtkTargetEntry *, guint, _BCD_func__11268, _BCD_func__11267, void *)TGTKgtk_clipboard_set_with_data; extern(D) TGTKgtk_clipboard_set_with_data gtk_clipboard_set_with_data;
alias extern (C) _GdkDisplay * function(void *)TGTKgtk_clipboard_get_display; extern(D) TGTKgtk_clipboard_get_display gtk_clipboard_get_display;
alias extern (C) void * function(void *)TGTKgtk_clipboard_get; extern(D) TGTKgtk_clipboard_get gtk_clipboard_get;
alias extern (C) void * function(_GdkDisplay *, void *)TGTKgtk_clipboard_get_for_display; extern(D) TGTKgtk_clipboard_get_for_display gtk_clipboard_get_for_display;
alias extern (C) GType function()TGTKgtk_clipboard_get_type; extern(D) TGTKgtk_clipboard_get_type gtk_clipboard_get_type;
alias extern (C) GType function()TGTKgtk_target_list_get_type; extern(D) TGTKgtk_target_list_get_type gtk_target_list_get_type;
alias extern (C) void function(aGtkSelectionData *)TGTKgtk_selection_data_free; extern(D) TGTKgtk_selection_data_free gtk_selection_data_free;
alias extern (C) _GtkSelectionData * function(aGtkSelectionData *)TGTKgtk_selection_data_copy; extern(D) TGTKgtk_selection_data_copy gtk_selection_data_copy;
alias extern (C) GType function()TGTKgtk_selection_data_get_type; extern(D) TGTKgtk_selection_data_get_type gtk_selection_data_get_type;
//alias extern (C) gint function(aGtkWidget *, _GdkEventProperty *)TGTK_gtk_selection_property_notify; extern(D) TGTK_gtk_selection_property_notify _gtk_selection_property_notify;
//alias extern (C) gint function(aGtkWidget *, _GdkEventSelection *)TGTK_gtk_selection_notify; extern(D) TGTK_gtk_selection_notify _gtk_selection_notify;
//alias extern (C) gint function(_GdkDrawable *, _GdkEventProperty *)TGTK_gtk_selection_incr_event; extern(D) TGTK_gtk_selection_incr_event _gtk_selection_incr_event;
//alias extern (C) gint function(aGtkWidget *, _GdkEventSelection *)TGTK_gtk_selection_request; extern(D) TGTK_gtk_selection_request _gtk_selection_request;
alias extern (C) gint function(aGtkWidget *, _GdkEventSelection *)TGTKgtk_selection_clear; extern(D) TGTKgtk_selection_clear gtk_selection_clear;
alias extern (C) void function(aGtkWidget *)TGTKgtk_selection_remove_all; extern(D) TGTKgtk_selection_remove_all gtk_selection_remove_all;
alias extern (C) gint function(void * *, gint)TGTKgtk_targets_include_uri; extern(D) TGTKgtk_targets_include_uri gtk_targets_include_uri;
alias extern (C) gint function(void * *, gint, gint)TGTKgtk_targets_include_image; extern(D) TGTKgtk_targets_include_image gtk_targets_include_image;
alias extern (C) gint function(void * *, gint, aGtkTextBuffer *)TGTKgtk_targets_include_rich_text; extern(D) TGTKgtk_targets_include_rich_text gtk_targets_include_rich_text;
alias extern (C) gint function(void * *, gint)TGTKgtk_targets_include_text; extern(D) TGTKgtk_targets_include_text gtk_targets_include_text;
alias extern (C) gint function(aGtkSelectionData *)TGTKgtk_selection_data_targets_include_uri; extern(D) TGTKgtk_selection_data_targets_include_uri gtk_selection_data_targets_include_uri;
alias extern (C) gint function(aGtkSelectionData *, gint)TGTKgtk_selection_data_targets_include_image; extern(D) TGTKgtk_selection_data_targets_include_image gtk_selection_data_targets_include_image;
alias extern (C) gint function(aGtkSelectionData *, aGtkTextBuffer *)TGTKgtk_selection_data_targets_include_rich_text; extern(D) TGTKgtk_selection_data_targets_include_rich_text gtk_selection_data_targets_include_rich_text;
alias extern (C) gint function(aGtkSelectionData *)TGTKgtk_selection_data_targets_include_text; extern(D) TGTKgtk_selection_data_targets_include_text gtk_selection_data_targets_include_text;
alias extern (C) gint function(aGtkSelectionData *, void * * *, gint *)TGTKgtk_selection_data_get_targets; extern(D) TGTKgtk_selection_data_get_targets gtk_selection_data_get_targets;
alias extern (C) char * * function(aGtkSelectionData *)TGTKgtk_selection_data_get_uris; extern(D) TGTKgtk_selection_data_get_uris gtk_selection_data_get_uris;
alias extern (C) gint function(aGtkSelectionData *, char * *)TGTKgtk_selection_data_set_uris; extern(D) TGTKgtk_selection_data_set_uris gtk_selection_data_set_uris;
alias extern (C) void * function(aGtkSelectionData *)TGTKgtk_selection_data_get_pixbuf; extern(D) TGTKgtk_selection_data_get_pixbuf gtk_selection_data_get_pixbuf;
alias extern (C) gint function(aGtkSelectionData *, void *)TGTKgtk_selection_data_set_pixbuf; extern(D) TGTKgtk_selection_data_set_pixbuf gtk_selection_data_set_pixbuf;
alias extern (C) char * function(aGtkSelectionData *)TGTKgtk_selection_data_get_text; extern(D) TGTKgtk_selection_data_get_text gtk_selection_data_get_text;
alias extern (C) gint function(aGtkSelectionData *, char *, gint)TGTKgtk_selection_data_set_text; extern(D) TGTKgtk_selection_data_set_text gtk_selection_data_set_text;
alias extern (C) void function(aGtkSelectionData *, void *, gint, char *, gint)TGTKgtk_selection_data_set; extern(D) TGTKgtk_selection_data_set gtk_selection_data_set;
alias extern (C) gint function(aGtkWidget *, void *, void *, guint32)TGTKgtk_selection_convert; extern(D) TGTKgtk_selection_convert gtk_selection_convert;
alias extern (C) void function(aGtkWidget *, void *)TGTKgtk_selection_clear_targets; extern(D) TGTKgtk_selection_clear_targets gtk_selection_clear_targets;
alias extern (C) void function(aGtkWidget *, void *, aGtkTargetEntry *, guint)TGTKgtk_selection_add_targets; extern(D) TGTKgtk_selection_add_targets gtk_selection_add_targets;
alias extern (C) void function(aGtkWidget *, void *, void *, guint)TGTKgtk_selection_add_target; extern(D) TGTKgtk_selection_add_target gtk_selection_add_target;
alias extern (C) gint function(_GdkDisplay *, aGtkWidget *, void *, guint32)TGTKgtk_selection_owner_set_for_display; extern(D) TGTKgtk_selection_owner_set_for_display gtk_selection_owner_set_for_display;
alias extern (C) gint function(aGtkWidget *, void *, guint32)TGTKgtk_selection_owner_set; extern(D) TGTKgtk_selection_owner_set gtk_selection_owner_set;
alias extern (C) void function(aGtkTargetEntry *, gint)TGTKgtk_target_table_free; extern(D) TGTKgtk_target_table_free gtk_target_table_free;
alias extern (C) _GtkTargetEntry * function(aGtkTargetList *, gint *)TGTKgtk_target_table_new_from_list; extern(D) TGTKgtk_target_table_new_from_list gtk_target_table_new_from_list;
alias extern (C) gint function(aGtkTargetList *, void *, guint *)TGTKgtk_target_list_find; extern(D) TGTKgtk_target_list_find gtk_target_list_find;
alias extern (C) void function(aGtkTargetList *, void *)TGTKgtk_target_list_remove; extern(D) TGTKgtk_target_list_remove gtk_target_list_remove;
alias extern (C) void function(aGtkTargetList *, aGtkTargetEntry *, guint)TGTKgtk_target_list_add_table; extern(D) TGTKgtk_target_list_add_table gtk_target_list_add_table;
alias extern (C) void function(aGtkTargetList *, guint)TGTKgtk_target_list_add_uri_targets; extern(D) TGTKgtk_target_list_add_uri_targets gtk_target_list_add_uri_targets;
alias extern (C) void function(aGtkTargetList *, guint, gint)TGTKgtk_target_list_add_image_targets; extern(D) TGTKgtk_target_list_add_image_targets gtk_target_list_add_image_targets;
alias extern (C) void function(aGtkTargetList *, guint, gint, aGtkTextBuffer *)TGTKgtk_target_list_add_rich_text_targets; extern(D) TGTKgtk_target_list_add_rich_text_targets gtk_target_list_add_rich_text_targets;
alias extern (C) void function(aGtkTargetList *, guint)TGTKgtk_target_list_add_text_targets; extern(D) TGTKgtk_target_list_add_text_targets gtk_target_list_add_text_targets;
alias extern (C) void function(aGtkTargetList *, void *, guint, guint)TGTKgtk_target_list_add; extern(D) TGTKgtk_target_list_add gtk_target_list_add;
alias extern (C) void function(aGtkTargetList *)TGTKgtk_target_list_unref; extern(D) TGTKgtk_target_list_unref gtk_target_list_unref;
alias extern (C) _GtkTargetList * function(aGtkTargetList *)TGTKgtk_target_list_ref; extern(D) TGTKgtk_target_list_ref gtk_target_list_ref;
alias extern (C) _GtkTargetList * function(aGtkTargetEntry *, guint)TGTKgtk_target_list_new; extern(D) TGTKgtk_target_list_new gtk_target_list_new;
alias extern (C) void function(aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_iter_order; extern(D) TGTKgtk_text_iter_order gtk_text_iter_order;
alias extern (C) gint function(aGtkTextIter *, aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_iter_in_range; extern(D) TGTKgtk_text_iter_in_range gtk_text_iter_in_range;
alias extern (C) gint function(aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_iter_compare; extern(D) TGTKgtk_text_iter_compare gtk_text_iter_compare;
alias extern (C) gint function(aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_iter_equal; extern(D) TGTKgtk_text_iter_equal gtk_text_iter_equal;
alias extern (C) gint function(aGtkTextIter *, char *, gint, aGtkTextIter *, aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_iter_backward_search; extern(D) TGTKgtk_text_iter_backward_search gtk_text_iter_backward_search;
alias extern (C) gint function(aGtkTextIter *, char *, gint, aGtkTextIter *, aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_iter_forward_search; extern(D) TGTKgtk_text_iter_forward_search gtk_text_iter_forward_search;
alias extern (C) gint function(aGtkTextIter *, _BCD_func__11292, void *, aGtkTextIter *)TGTKgtk_text_iter_backward_find_char; extern(D) TGTKgtk_text_iter_backward_find_char gtk_text_iter_backward_find_char;
alias extern (C) gint function(aGtkTextIter *, _BCD_func__11292, void *, aGtkTextIter *)TGTKgtk_text_iter_forward_find_char; extern(D) TGTKgtk_text_iter_forward_find_char gtk_text_iter_forward_find_char;
alias extern (C) gint function(aGtkTextIter *, aGtkTextTag *)TGTKgtk_text_iter_backward_to_tag_toggle; extern(D) TGTKgtk_text_iter_backward_to_tag_toggle gtk_text_iter_backward_to_tag_toggle;
alias extern (C) gint function(aGtkTextIter *, aGtkTextTag *)TGTKgtk_text_iter_forward_to_tag_toggle; extern(D) TGTKgtk_text_iter_forward_to_tag_toggle gtk_text_iter_forward_to_tag_toggle;
alias extern (C) void function(aGtkTextIter *, gint)TGTKgtk_text_iter_set_visible_line_index; extern(D) TGTKgtk_text_iter_set_visible_line_index gtk_text_iter_set_visible_line_index;
alias extern (C) void function(aGtkTextIter *, gint)TGTKgtk_text_iter_set_visible_line_offset; extern(D) TGTKgtk_text_iter_set_visible_line_offset gtk_text_iter_set_visible_line_offset;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_forward_to_line_end; extern(D) TGTKgtk_text_iter_forward_to_line_end gtk_text_iter_forward_to_line_end;
alias extern (C) void function(aGtkTextIter *)TGTKgtk_text_iter_forward_to_end; extern(D) TGTKgtk_text_iter_forward_to_end gtk_text_iter_forward_to_end;
alias extern (C) void function(aGtkTextIter *, gint)TGTKgtk_text_iter_set_line_index; extern(D) TGTKgtk_text_iter_set_line_index gtk_text_iter_set_line_index;
alias extern (C) void function(aGtkTextIter *, gint)TGTKgtk_text_iter_set_line_offset; extern(D) TGTKgtk_text_iter_set_line_offset gtk_text_iter_set_line_offset;
alias extern (C) void function(aGtkTextIter *, gint)TGTKgtk_text_iter_set_line; extern(D) TGTKgtk_text_iter_set_line gtk_text_iter_set_line;
alias extern (C) void function(aGtkTextIter *, gint)TGTKgtk_text_iter_set_offset; extern(D) TGTKgtk_text_iter_set_offset gtk_text_iter_set_offset;
alias extern (C) gint function(aGtkTextIter *, gint)TGTKgtk_text_iter_backward_visible_cursor_positions; extern(D) TGTKgtk_text_iter_backward_visible_cursor_positions gtk_text_iter_backward_visible_cursor_positions;
alias extern (C) gint function(aGtkTextIter *, gint)TGTKgtk_text_iter_forward_visible_cursor_positions; extern(D) TGTKgtk_text_iter_forward_visible_cursor_positions gtk_text_iter_forward_visible_cursor_positions;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_backward_visible_cursor_position; extern(D) TGTKgtk_text_iter_backward_visible_cursor_position gtk_text_iter_backward_visible_cursor_position;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_forward_visible_cursor_position; extern(D) TGTKgtk_text_iter_forward_visible_cursor_position gtk_text_iter_forward_visible_cursor_position;
alias extern (C) gint function(aGtkTextIter *, gint)TGTKgtk_text_iter_backward_cursor_positions; extern(D) TGTKgtk_text_iter_backward_cursor_positions gtk_text_iter_backward_cursor_positions;
alias extern (C) gint function(aGtkTextIter *, gint)TGTKgtk_text_iter_forward_cursor_positions; extern(D) TGTKgtk_text_iter_forward_cursor_positions gtk_text_iter_forward_cursor_positions;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_backward_cursor_position; extern(D) TGTKgtk_text_iter_backward_cursor_position gtk_text_iter_backward_cursor_position;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_forward_cursor_position; extern(D) TGTKgtk_text_iter_forward_cursor_position gtk_text_iter_forward_cursor_position;
alias extern (C) gint function(aGtkTextIter *, gint)TGTKgtk_text_iter_backward_sentence_starts; extern(D) TGTKgtk_text_iter_backward_sentence_starts gtk_text_iter_backward_sentence_starts;
alias extern (C) gint function(aGtkTextIter *, gint)TGTKgtk_text_iter_forward_sentence_ends; extern(D) TGTKgtk_text_iter_forward_sentence_ends gtk_text_iter_forward_sentence_ends;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_backward_sentence_start; extern(D) TGTKgtk_text_iter_backward_sentence_start gtk_text_iter_backward_sentence_start;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_forward_sentence_end; extern(D) TGTKgtk_text_iter_forward_sentence_end gtk_text_iter_forward_sentence_end;
alias extern (C) gint function(aGtkTextIter *, gint)TGTKgtk_text_iter_backward_visible_word_starts; extern(D) TGTKgtk_text_iter_backward_visible_word_starts gtk_text_iter_backward_visible_word_starts;
alias extern (C) gint function(aGtkTextIter *, gint)TGTKgtk_text_iter_forward_visible_word_ends; extern(D) TGTKgtk_text_iter_forward_visible_word_ends gtk_text_iter_forward_visible_word_ends;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_backward_visible_word_start; extern(D) TGTKgtk_text_iter_backward_visible_word_start gtk_text_iter_backward_visible_word_start;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_forward_visible_word_end; extern(D) TGTKgtk_text_iter_forward_visible_word_end gtk_text_iter_forward_visible_word_end;
alias extern (C) gint function(aGtkTextIter *, gint)TGTKgtk_text_iter_backward_visible_lines; extern(D) TGTKgtk_text_iter_backward_visible_lines gtk_text_iter_backward_visible_lines;
alias extern (C) gint function(aGtkTextIter *, gint)TGTKgtk_text_iter_forward_visible_lines; extern(D) TGTKgtk_text_iter_forward_visible_lines gtk_text_iter_forward_visible_lines;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_backward_visible_line; extern(D) TGTKgtk_text_iter_backward_visible_line gtk_text_iter_backward_visible_line;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_forward_visible_line; extern(D) TGTKgtk_text_iter_forward_visible_line gtk_text_iter_forward_visible_line;
alias extern (C) gint function(aGtkTextIter *, gint)TGTKgtk_text_iter_backward_word_starts; extern(D) TGTKgtk_text_iter_backward_word_starts gtk_text_iter_backward_word_starts;
alias extern (C) gint function(aGtkTextIter *, gint)TGTKgtk_text_iter_forward_word_ends; extern(D) TGTKgtk_text_iter_forward_word_ends gtk_text_iter_forward_word_ends;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_backward_word_start; extern(D) TGTKgtk_text_iter_backward_word_start gtk_text_iter_backward_word_start;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_forward_word_end; extern(D) TGTKgtk_text_iter_forward_word_end gtk_text_iter_forward_word_end;
alias extern (C) gint function(aGtkTextIter *, gint)TGTKgtk_text_iter_backward_lines; extern(D) TGTKgtk_text_iter_backward_lines gtk_text_iter_backward_lines;
alias extern (C) gint function(aGtkTextIter *, gint)TGTKgtk_text_iter_forward_lines; extern(D) TGTKgtk_text_iter_forward_lines gtk_text_iter_forward_lines;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_backward_line; extern(D) TGTKgtk_text_iter_backward_line gtk_text_iter_backward_line;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_forward_line; extern(D) TGTKgtk_text_iter_forward_line gtk_text_iter_forward_line;
alias extern (C) gint function(aGtkTextIter *, gint)TGTKgtk_text_iter_backward_chars; extern(D) TGTKgtk_text_iter_backward_chars gtk_text_iter_backward_chars;
alias extern (C) gint function(aGtkTextIter *, gint)TGTKgtk_text_iter_forward_chars; extern(D) TGTKgtk_text_iter_forward_chars gtk_text_iter_forward_chars;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_backward_char; extern(D) TGTKgtk_text_iter_backward_char gtk_text_iter_backward_char;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_forward_char; extern(D) TGTKgtk_text_iter_forward_char gtk_text_iter_forward_char;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_is_start; extern(D) TGTKgtk_text_iter_is_start gtk_text_iter_is_start;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_is_end; extern(D) TGTKgtk_text_iter_is_end gtk_text_iter_is_end;
alias extern (C) void * function(aGtkTextIter *)TGTKgtk_text_iter_get_language; extern(D) TGTKgtk_text_iter_get_language gtk_text_iter_get_language;
alias extern (C) gint function(aGtkTextIter *, aGtkTextAttributes *)TGTKgtk_text_iter_get_attributes; extern(D) TGTKgtk_text_iter_get_attributes gtk_text_iter_get_attributes;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_get_bytes_in_line; extern(D) TGTKgtk_text_iter_get_bytes_in_line gtk_text_iter_get_bytes_in_line;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_get_chars_in_line; extern(D) TGTKgtk_text_iter_get_chars_in_line gtk_text_iter_get_chars_in_line;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_is_cursor_position; extern(D) TGTKgtk_text_iter_is_cursor_position gtk_text_iter_is_cursor_position;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_ends_line; extern(D) TGTKgtk_text_iter_ends_line gtk_text_iter_ends_line;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_starts_line; extern(D) TGTKgtk_text_iter_starts_line gtk_text_iter_starts_line;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_inside_sentence; extern(D) TGTKgtk_text_iter_inside_sentence gtk_text_iter_inside_sentence;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_ends_sentence; extern(D) TGTKgtk_text_iter_ends_sentence gtk_text_iter_ends_sentence;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_starts_sentence; extern(D) TGTKgtk_text_iter_starts_sentence gtk_text_iter_starts_sentence;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_inside_word; extern(D) TGTKgtk_text_iter_inside_word gtk_text_iter_inside_word;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_ends_word; extern(D) TGTKgtk_text_iter_ends_word gtk_text_iter_ends_word;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_starts_word; extern(D) TGTKgtk_text_iter_starts_word gtk_text_iter_starts_word;
alias extern (C) gint function(aGtkTextIter *, gint)TGTKgtk_text_iter_can_insert; extern(D) TGTKgtk_text_iter_can_insert gtk_text_iter_can_insert;
alias extern (C) gint function(aGtkTextIter *, gint)TGTKgtk_text_iter_editable; extern(D) TGTKgtk_text_iter_editable gtk_text_iter_editable;
alias extern (C) _GSList * function(aGtkTextIter *)TGTKgtk_text_iter_get_tags; extern(D) TGTKgtk_text_iter_get_tags gtk_text_iter_get_tags;
alias extern (C) gint function(aGtkTextIter *, aGtkTextTag *)TGTKgtk_text_iter_has_tag; extern(D) TGTKgtk_text_iter_has_tag gtk_text_iter_has_tag;
alias extern (C) gint function(aGtkTextIter *, aGtkTextTag *)TGTKgtk_text_iter_toggles_tag; extern(D) TGTKgtk_text_iter_toggles_tag gtk_text_iter_toggles_tag;
alias extern (C) gint function(aGtkTextIter *, aGtkTextTag *)TGTKgtk_text_iter_ends_tag; extern(D) TGTKgtk_text_iter_ends_tag gtk_text_iter_ends_tag;
alias extern (C) gint function(aGtkTextIter *, aGtkTextTag *)TGTKgtk_text_iter_begins_tag; extern(D) TGTKgtk_text_iter_begins_tag gtk_text_iter_begins_tag;
alias extern (C) _GSList * function(aGtkTextIter *, gint)TGTKgtk_text_iter_get_toggled_tags; extern(D) TGTKgtk_text_iter_get_toggled_tags gtk_text_iter_get_toggled_tags;
alias extern (C) _GtkTextChildAnchor * function(aGtkTextIter *)TGTKgtk_text_iter_get_child_anchor; extern(D) TGTKgtk_text_iter_get_child_anchor gtk_text_iter_get_child_anchor;
alias extern (C) _GSList * function(aGtkTextIter *)TGTKgtk_text_iter_get_marks; extern(D) TGTKgtk_text_iter_get_marks gtk_text_iter_get_marks;
alias extern (C) void * function(aGtkTextIter *)TGTKgtk_text_iter_get_pixbuf; extern(D) TGTKgtk_text_iter_get_pixbuf gtk_text_iter_get_pixbuf;
alias extern (C) char * function(aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_iter_get_visible_text; extern(D) TGTKgtk_text_iter_get_visible_text gtk_text_iter_get_visible_text;
alias extern (C) char * function(aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_iter_get_visible_slice; extern(D) TGTKgtk_text_iter_get_visible_slice gtk_text_iter_get_visible_slice;
alias extern (C) char * function(aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_iter_get_text; extern(D) TGTKgtk_text_iter_get_text gtk_text_iter_get_text;
alias extern (C) char * function(aGtkTextIter *, aGtkTextIter *)TGTKgtk_text_iter_get_slice; extern(D) TGTKgtk_text_iter_get_slice gtk_text_iter_get_slice;
alias extern (C) gunichar function(aGtkTextIter *)TGTKgtk_text_iter_get_char; extern(D) TGTKgtk_text_iter_get_char gtk_text_iter_get_char;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_get_visible_line_index; extern(D) TGTKgtk_text_iter_get_visible_line_index gtk_text_iter_get_visible_line_index;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_get_visible_line_offset; extern(D) TGTKgtk_text_iter_get_visible_line_offset gtk_text_iter_get_visible_line_offset;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_get_line_index; extern(D) TGTKgtk_text_iter_get_line_index gtk_text_iter_get_line_index;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_get_line_offset; extern(D) TGTKgtk_text_iter_get_line_offset gtk_text_iter_get_line_offset;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_get_line; extern(D) TGTKgtk_text_iter_get_line gtk_text_iter_get_line;
alias extern (C) gint function(aGtkTextIter *)TGTKgtk_text_iter_get_offset; extern(D) TGTKgtk_text_iter_get_offset gtk_text_iter_get_offset;
alias extern (C) GType function()TGTKgtk_text_iter_get_type; extern(D) TGTKgtk_text_iter_get_type gtk_text_iter_get_type;
alias extern (C) void function(aGtkTextIter *)TGTKgtk_text_iter_free; extern(D) TGTKgtk_text_iter_free gtk_text_iter_free;
alias extern (C) _GtkTextIter * function(aGtkTextIter *)TGTKgtk_text_iter_copy; extern(D) TGTKgtk_text_iter_copy gtk_text_iter_copy;
alias extern (C) _GtkTextBuffer * function(aGtkTextIter *)TGTKgtk_text_iter_get_buffer; extern(D) TGTKgtk_text_iter_get_buffer gtk_text_iter_get_buffer;
alias extern (C) gint function(aGtkTextChildAnchor *)TGTKgtk_text_child_anchor_get_deleted; extern(D) TGTKgtk_text_child_anchor_get_deleted gtk_text_child_anchor_get_deleted;
alias extern (C) _GList * function(aGtkTextChildAnchor *)TGTKgtk_text_child_anchor_get_widgets; extern(D) TGTKgtk_text_child_anchor_get_widgets gtk_text_child_anchor_get_widgets;
alias extern (C) _GtkTextChildAnchor * function()TGTKgtk_text_child_anchor_new; extern(D) TGTKgtk_text_child_anchor_new gtk_text_child_anchor_new;
alias extern (C) GType function()TGTKgtk_text_child_anchor_get_type; extern(D) TGTKgtk_text_child_anchor_get_type gtk_text_child_anchor_get_type;
alias extern (C) GType function()TGTKgtk_text_attributes_get_type; extern(D) TGTKgtk_text_attributes_get_type gtk_text_attributes_get_type;
alias extern (C) _GtkTextAttributes * function(aGtkTextAttributes *)TGTKgtk_text_attributes_ref; extern(D) TGTKgtk_text_attributes_ref gtk_text_attributes_ref;
alias extern (C) void function(aGtkTextAttributes *)TGTKgtk_text_attributes_unref; extern(D) TGTKgtk_text_attributes_unref gtk_text_attributes_unref;
alias extern (C) void function(aGtkTextAttributes *, aGtkTextAttributes *)TGTKgtk_text_attributes_copy_values; extern(D) TGTKgtk_text_attributes_copy_values gtk_text_attributes_copy_values;
alias extern (C) _GtkTextAttributes * function(aGtkTextAttributes *)TGTKgtk_text_attributes_copy; extern(D) TGTKgtk_text_attributes_copy gtk_text_attributes_copy;
alias extern (C) _GtkTextAttributes * function()TGTKgtk_text_attributes_new; extern(D) TGTKgtk_text_attributes_new gtk_text_attributes_new;
alias extern (C) gint function(aGtkTextTag *, _GObject *, _GdkEvent *, aGtkTextIter *)TGTKgtk_text_tag_event; extern(D) TGTKgtk_text_tag_event gtk_text_tag_event;
alias extern (C) void function(aGtkTextTag *, gint)TGTKgtk_text_tag_set_priority; extern(D) TGTKgtk_text_tag_set_priority gtk_text_tag_set_priority;
alias extern (C) gint function(aGtkTextTag *)TGTKgtk_text_tag_get_priority; extern(D) TGTKgtk_text_tag_get_priority gtk_text_tag_get_priority;
alias extern (C) _GtkTextTag * function(char *)TGTKgtk_text_tag_new; extern(D) TGTKgtk_text_tag_new gtk_text_tag_new;
alias extern (C) GType function()TGTKgtk_text_tag_get_type; extern(D) TGTKgtk_text_tag_get_type gtk_text_tag_get_type;
alias extern (C) void function(aGtkCheckMenuItem *, gint)TGTKgtk_check_menu_item_set_show_toggle; extern(D) TGTKgtk_check_menu_item_set_show_toggle gtk_check_menu_item_set_show_toggle;
alias extern (C) gint function(aGtkCheckMenuItem *)TGTKgtk_check_menu_item_get_draw_as_radio; extern(D) TGTKgtk_check_menu_item_get_draw_as_radio gtk_check_menu_item_get_draw_as_radio;
alias extern (C) void function(aGtkCheckMenuItem *, gint)TGTKgtk_check_menu_item_set_draw_as_radio; extern(D) TGTKgtk_check_menu_item_set_draw_as_radio gtk_check_menu_item_set_draw_as_radio;
alias extern (C) gint function(aGtkCheckMenuItem *)TGTKgtk_check_menu_item_get_inconsistent; extern(D) TGTKgtk_check_menu_item_get_inconsistent gtk_check_menu_item_get_inconsistent;
alias extern (C) void function(aGtkCheckMenuItem *, gint)TGTKgtk_check_menu_item_set_inconsistent; extern(D) TGTKgtk_check_menu_item_set_inconsistent gtk_check_menu_item_set_inconsistent;
alias extern (C) void function(aGtkCheckMenuItem *)TGTKgtk_check_menu_item_toggled; extern(D) TGTKgtk_check_menu_item_toggled gtk_check_menu_item_toggled;
alias extern (C) gint function(aGtkCheckMenuItem *)TGTKgtk_check_menu_item_get_active; extern(D) TGTKgtk_check_menu_item_get_active gtk_check_menu_item_get_active;
alias extern (C) void function(aGtkCheckMenuItem *, gint)TGTKgtk_check_menu_item_set_active; extern(D) TGTKgtk_check_menu_item_set_active gtk_check_menu_item_set_active;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_check_menu_item_new_with_mnemonic; extern(D) TGTKgtk_check_menu_item_new_with_mnemonic gtk_check_menu_item_new_with_mnemonic;
alias extern (C) _GtkWidget * function(in char *)TGTKgtk_check_menu_item_new_with_label; extern(D) TGTKgtk_check_menu_item_new_with_label gtk_check_menu_item_new_with_label;
alias extern (C) _GtkWidget * function()TGTKgtk_check_menu_item_new; extern(D) TGTKgtk_check_menu_item_new gtk_check_menu_item_new;
alias extern (C) GType function()TGTKgtk_check_menu_item_get_type; extern(D) TGTKgtk_check_menu_item_get_type gtk_check_menu_item_get_type;
alias extern (C) void function(aGtkMenuItem *)TGTKgtk_menu_item_remove_submenu; extern(D) TGTKgtk_menu_item_remove_submenu gtk_menu_item_remove_submenu;
//alias extern (C) void function(aGtkWidget *)TGTK_gtk_menu_item_popdown_submenu; extern(D) TGTK_gtk_menu_item_popdown_submenu _gtk_menu_item_popdown_submenu;
//alias extern (C) void function(aGtkWidget *, gint)TGTK_gtk_menu_item_popup_submenu; extern(D) TGTK_gtk_menu_item_popup_submenu _gtk_menu_item_popup_submenu;
//alias extern (C) gint function(aGtkWidget *)TGTK_gtk_menu_item_is_selectable; extern(D) TGTK_gtk_menu_item_is_selectable _gtk_menu_item_is_selectable;
//alias extern (C) void function(aGtkMenuItem *, char *, aGtkAccelGroup *, gint)TGTK_gtk_menu_item_refresh_accel_path; extern(D) TGTK_gtk_menu_item_refresh_accel_path _gtk_menu_item_refresh_accel_path;
alias extern (C) void function(aGtkMenuItem *, char *)TGTKgtk_menu_item_set_accel_path; extern(D) TGTKgtk_menu_item_set_accel_path gtk_menu_item_set_accel_path;
alias extern (C) gint function(aGtkMenuItem *)TGTKgtk_menu_item_get_right_justified; extern(D) TGTKgtk_menu_item_get_right_justified gtk_menu_item_get_right_justified;
alias extern (C) void function(aGtkMenuItem *, gint)TGTKgtk_menu_item_set_right_justified; extern(D) TGTKgtk_menu_item_set_right_justified gtk_menu_item_set_right_justified;
alias extern (C) void function(aGtkMenuItem *, gint)TGTKgtk_menu_item_toggle_size_allocate; extern(D) TGTKgtk_menu_item_toggle_size_allocate gtk_menu_item_toggle_size_allocate;
alias extern (C) void function(aGtkMenuItem *, gint *)TGTKgtk_menu_item_toggle_size_request; extern(D) TGTKgtk_menu_item_toggle_size_request gtk_menu_item_toggle_size_request;
alias extern (C) void function(aGtkMenuItem *)TGTKgtk_menu_item_activate; extern(D) TGTKgtk_menu_item_activate gtk_menu_item_activate;
alias extern (C) void function(aGtkMenuItem *)TGTKgtk_menu_item_deselect; extern(D) TGTKgtk_menu_item_deselect gtk_menu_item_deselect;
alias extern (C) void function(aGtkMenuItem *)TGTKgtk_menu_item_select; extern(D) TGTKgtk_menu_item_select gtk_menu_item_select;
alias extern (C) _GtkWidget * function(aGtkMenuItem *)TGTKgtk_menu_item_get_submenu; extern(D) TGTKgtk_menu_item_get_submenu gtk_menu_item_get_submenu;
alias extern (C) void function(aGtkMenuItem *, aGtkWidget *)TGTKgtk_menu_item_set_submenu; extern(D) TGTKgtk_menu_item_set_submenu gtk_menu_item_set_submenu;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_menu_item_new_with_mnemonic; extern(D) TGTKgtk_menu_item_new_with_mnemonic gtk_menu_item_new_with_mnemonic;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_menu_item_new_with_label; extern(D) TGTKgtk_menu_item_new_with_label gtk_menu_item_new_with_label;
alias extern (C) _GtkWidget * function()TGTKgtk_menu_item_new; extern(D) TGTKgtk_menu_item_new gtk_menu_item_new;
alias extern (C) GType function()TGTKgtk_menu_item_get_type; extern(D) TGTKgtk_menu_item_get_type gtk_menu_item_get_type;
alias extern (C) void function(aGtkItem *)TGTKgtk_item_toggle; extern(D) TGTKgtk_item_toggle gtk_item_toggle;
alias extern (C) void function(aGtkItem *)TGTKgtk_item_deselect; extern(D) TGTKgtk_item_deselect gtk_item_deselect;
alias extern (C) void function(aGtkItem *)TGTKgtk_item_select; extern(D) TGTKgtk_item_select gtk_item_select;
alias extern (C) guint function()TGTKgtk_item_get_type; extern(D) TGTKgtk_item_get_type gtk_item_get_type;
//alias extern (C) void function(aGtkCheckButton *, gint *, gint *)TGTK_gtk_check_button_get_props; extern(D) TGTK_gtk_check_button_get_props _gtk_check_button_get_props;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_check_button_new_with_mnemonic; extern(D) TGTKgtk_check_button_new_with_mnemonic gtk_check_button_new_with_mnemonic;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_check_button_new_with_label; extern(D) TGTKgtk_check_button_new_with_label gtk_check_button_new_with_label;
alias extern (C) _GtkWidget * function()TGTKgtk_check_button_new; extern(D) TGTKgtk_check_button_new gtk_check_button_new;
alias extern (C) GType function()TGTKgtk_check_button_get_type; extern(D) TGTKgtk_check_button_get_type gtk_check_button_get_type;
alias extern (C) gint function(aGtkToggleButton *)TGTKgtk_toggle_button_get_inconsistent; extern(D) TGTKgtk_toggle_button_get_inconsistent gtk_toggle_button_get_inconsistent;
alias extern (C) void function(aGtkToggleButton *, gint)TGTKgtk_toggle_button_set_inconsistent; extern(D) TGTKgtk_toggle_button_set_inconsistent gtk_toggle_button_set_inconsistent;
alias extern (C) void function(aGtkToggleButton *)TGTKgtk_toggle_button_toggled; extern(D) TGTKgtk_toggle_button_toggled gtk_toggle_button_toggled;
alias extern (C) gint function(aGtkToggleButton *)TGTKgtk_toggle_button_get_active; extern(D) TGTKgtk_toggle_button_get_active gtk_toggle_button_get_active;
alias extern (C) void function(aGtkToggleButton *, gint)TGTKgtk_toggle_button_set_active; extern(D) TGTKgtk_toggle_button_set_active gtk_toggle_button_set_active;
alias extern (C) gint function(aGtkToggleButton *)TGTKgtk_toggle_button_get_mode; extern(D) TGTKgtk_toggle_button_get_mode gtk_toggle_button_get_mode;
alias extern (C) void function(aGtkToggleButton *, gint)TGTKgtk_toggle_button_set_mode; extern(D) TGTKgtk_toggle_button_set_mode gtk_toggle_button_set_mode;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_toggle_button_new_with_mnemonic; extern(D) TGTKgtk_toggle_button_new_with_mnemonic gtk_toggle_button_new_with_mnemonic;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_toggle_button_new_with_label; extern(D) TGTKgtk_toggle_button_new_with_label gtk_toggle_button_new_with_label;
alias extern (C) _GtkWidget * function()TGTKgtk_toggle_button_new; extern(D) TGTKgtk_toggle_button_new gtk_toggle_button_new;
alias extern (C) GType function()TGTKgtk_toggle_button_get_type; extern(D) TGTKgtk_toggle_button_get_type gtk_toggle_button_get_type;
alias extern (C) _GList * function(aGtkCellView *)TGTKgtk_cell_view_get_cell_renderers; extern(D) TGTKgtk_cell_view_get_cell_renderers gtk_cell_view_get_cell_renderers;
alias extern (C) void function(aGtkCellView *, _GdkColor *)TGTKgtk_cell_view_set_background_color; extern(D) TGTKgtk_cell_view_set_background_color gtk_cell_view_set_background_color;
alias extern (C) gint function(aGtkCellView *, void *, aGtkRequisition *)TGTKgtk_cell_view_get_size_of_row; extern(D) TGTKgtk_cell_view_get_size_of_row gtk_cell_view_get_size_of_row;
alias extern (C) void * function(aGtkCellView *)TGTKgtk_cell_view_get_displayed_row; extern(D) TGTKgtk_cell_view_get_displayed_row gtk_cell_view_get_displayed_row;
alias extern (C) void function(aGtkCellView *, void *)TGTKgtk_cell_view_set_displayed_row; extern(D) TGTKgtk_cell_view_set_displayed_row gtk_cell_view_set_displayed_row;
alias extern (C) void function(aGtkCellView *, void *)TGTKgtk_cell_view_set_model; extern(D) TGTKgtk_cell_view_set_model gtk_cell_view_set_model;
alias extern (C) _GtkWidget * function(void *)TGTKgtk_cell_view_new_with_pixbuf; extern(D) TGTKgtk_cell_view_new_with_pixbuf gtk_cell_view_new_with_pixbuf;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_cell_view_new_with_markup; extern(D) TGTKgtk_cell_view_new_with_markup gtk_cell_view_new_with_markup;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_cell_view_new_with_text; extern(D) TGTKgtk_cell_view_new_with_text gtk_cell_view_new_with_text;
alias extern (C) _GtkWidget * function()TGTKgtk_cell_view_new; extern(D) TGTKgtk_cell_view_new gtk_cell_view_new;
alias extern (C) GType function()TGTKgtk_cell_view_get_type; extern(D) TGTKgtk_cell_view_get_type gtk_cell_view_get_type;
alias extern (C) void function(aGtkCellRendererToggle *, gint)TGTKgtk_cell_renderer_toggle_set_active; extern(D) TGTKgtk_cell_renderer_toggle_set_active gtk_cell_renderer_toggle_set_active;
alias extern (C) gint function(aGtkCellRendererToggle *)TGTKgtk_cell_renderer_toggle_get_active; extern(D) TGTKgtk_cell_renderer_toggle_get_active gtk_cell_renderer_toggle_get_active;
alias extern (C) void function(aGtkCellRendererToggle *, gint)TGTKgtk_cell_renderer_toggle_set_radio; extern(D) TGTKgtk_cell_renderer_toggle_set_radio gtk_cell_renderer_toggle_set_radio;
alias extern (C) gint function(aGtkCellRendererToggle *)TGTKgtk_cell_renderer_toggle_get_radio; extern(D) TGTKgtk_cell_renderer_toggle_get_radio gtk_cell_renderer_toggle_get_radio;
alias extern (C) _GtkCellRenderer * function()TGTKgtk_cell_renderer_toggle_new; extern(D) TGTKgtk_cell_renderer_toggle_new gtk_cell_renderer_toggle_new;
alias extern (C) GType function()TGTKgtk_cell_renderer_toggle_get_type; extern(D) TGTKgtk_cell_renderer_toggle_get_type gtk_cell_renderer_toggle_get_type;
alias extern (C) _GtkCellRenderer * function()TGTKgtk_cell_renderer_spin_new; extern(D) TGTKgtk_cell_renderer_spin_new gtk_cell_renderer_spin_new;
alias extern (C) GType function()TGTKgtk_cell_renderer_spin_get_type; extern(D) TGTKgtk_cell_renderer_spin_get_type gtk_cell_renderer_spin_get_type;
alias extern (C) _GtkCellRenderer * function()TGTKgtk_cell_renderer_progress_new; extern(D) TGTKgtk_cell_renderer_progress_new gtk_cell_renderer_progress_new;
alias extern (C) GType function()TGTKgtk_cell_renderer_progress_get_type; extern(D) TGTKgtk_cell_renderer_progress_get_type gtk_cell_renderer_progress_get_type;
alias extern (C) _GtkCellRenderer * function()TGTKgtk_cell_renderer_pixbuf_new; extern(D) TGTKgtk_cell_renderer_pixbuf_new gtk_cell_renderer_pixbuf_new;
alias extern (C) GType function()TGTKgtk_cell_renderer_pixbuf_get_type; extern(D) TGTKgtk_cell_renderer_pixbuf_get_type gtk_cell_renderer_pixbuf_get_type;
alias extern (C) _GtkCellRenderer * function()TGTKgtk_cell_renderer_combo_new; extern(D) TGTKgtk_cell_renderer_combo_new gtk_cell_renderer_combo_new;
alias extern (C) GType function()TGTKgtk_cell_renderer_combo_get_type; extern(D) TGTKgtk_cell_renderer_combo_get_type gtk_cell_renderer_combo_get_type;
alias extern (C) _GtkCellRenderer * function()TGTKgtk_cell_renderer_accel_new; extern(D) TGTKgtk_cell_renderer_accel_new gtk_cell_renderer_accel_new;
alias extern (C) GType function()TGTKgtk_cell_renderer_accel_get_type; extern(D) TGTKgtk_cell_renderer_accel_get_type gtk_cell_renderer_accel_get_type;
alias extern (C) void function(aGtkCellRendererText *, gint)TGTKgtk_cell_renderer_text_set_fixed_height_from_font; extern(D) TGTKgtk_cell_renderer_text_set_fixed_height_from_font gtk_cell_renderer_text_set_fixed_height_from_font;
alias extern (C) _GtkCellRenderer * function()TGTKgtk_cell_renderer_text_new; extern(D) TGTKgtk_cell_renderer_text_new gtk_cell_renderer_text_new;
alias extern (C) GType function()TGTKgtk_cell_renderer_text_get_type; extern(D) TGTKgtk_cell_renderer_text_get_type gtk_cell_renderer_text_get_type;
//alias extern (C) void function(void *, aGtkBuilder *, _GObject *, char *)TGTK_gtk_cell_layout_buildable_add_child; extern(D) TGTK_gtk_cell_layout_buildable_add_child _gtk_cell_layout_buildable_add_child;
//alias extern (C) void function(void *, aGtkBuilder *, _GObject *, char *, void * *)TGTK_gtk_cell_layout_buildable_custom_tag_end; extern(D) TGTK_gtk_cell_layout_buildable_custom_tag_end _gtk_cell_layout_buildable_custom_tag_end;
//alias extern (C) gint function(void *, aGtkBuilder *, _GObject *, char *, _GMarkupParser *, void * *)TGTK_gtk_cell_layout_buildable_custom_tag_start; extern(D) TGTK_gtk_cell_layout_buildable_custom_tag_start _gtk_cell_layout_buildable_custom_tag_start;
alias extern (C) void function(void *, aGtkCellRenderer *, gint)TGTKgtk_cell_layout_reorder; extern(D) TGTKgtk_cell_layout_reorder gtk_cell_layout_reorder;
alias extern (C) void function(void *, aGtkCellRenderer *)TGTKgtk_cell_layout_clear_attributes; extern(D) TGTKgtk_cell_layout_clear_attributes gtk_cell_layout_clear_attributes;
alias extern (C) void function(void *, aGtkCellRenderer *, _BCD_func__11624, void *, _BCD_func__13158)TGTKgtk_cell_layout_set_cell_data_func; extern(D) TGTKgtk_cell_layout_set_cell_data_func gtk_cell_layout_set_cell_data_func;
alias extern (C) void function(void *, aGtkCellRenderer *, char *, gint)TGTKgtk_cell_layout_add_attribute; extern(D) TGTKgtk_cell_layout_add_attribute gtk_cell_layout_add_attribute;
alias extern (C) void function(void *, aGtkCellRenderer *, ...)TGTKgtk_cell_layout_set_attributes; extern(D) TGTKgtk_cell_layout_set_attributes gtk_cell_layout_set_attributes;
alias extern (C) void function(void *)TGTKgtk_cell_layout_clear; extern(D) TGTKgtk_cell_layout_clear gtk_cell_layout_clear;
alias extern (C) _GList * function(void *)TGTKgtk_cell_layout_get_cells; extern(D) TGTKgtk_cell_layout_get_cells gtk_cell_layout_get_cells;
alias extern (C) void function(void *, aGtkCellRenderer *, gint)TGTKgtk_cell_layout_pack_end; extern(D) TGTKgtk_cell_layout_pack_end gtk_cell_layout_pack_end;
alias extern (C) void function(void *, aGtkCellRenderer *, gint)TGTKgtk_cell_layout_pack_start; extern(D) TGTKgtk_cell_layout_pack_start gtk_cell_layout_pack_start;
alias extern (C) GType function()TGTKgtk_cell_layout_get_type; extern(D) TGTKgtk_cell_layout_get_type gtk_cell_layout_get_type;
alias extern (C) _GtkWidget * function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_get_tree_view; extern(D) TGTKgtk_tree_view_column_get_tree_view gtk_tree_view_column_get_tree_view;
alias extern (C) void function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_queue_resize; extern(D) TGTKgtk_tree_view_column_queue_resize gtk_tree_view_column_queue_resize;
alias extern (C) gint function(aGtkTreeViewColumn *, aGtkCellRenderer *, gint *, gint *)TGTKgtk_tree_view_column_cell_get_position; extern(D) TGTKgtk_tree_view_column_cell_get_position gtk_tree_view_column_cell_get_position;
alias extern (C) void function(aGtkTreeViewColumn *, aGtkCellRenderer *)TGTKgtk_tree_view_column_focus_cell; extern(D) TGTKgtk_tree_view_column_focus_cell gtk_tree_view_column_focus_cell;
alias extern (C) gint function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_cell_is_visible; extern(D) TGTKgtk_tree_view_column_cell_is_visible gtk_tree_view_column_cell_is_visible;
alias extern (C) void function(aGtkTreeViewColumn *, _GdkRectangle *, gint *, gint *, gint *, gint *)TGTKgtk_tree_view_column_cell_get_size; extern(D) TGTKgtk_tree_view_column_cell_get_size gtk_tree_view_column_cell_get_size;
alias extern (C) void function(aGtkTreeViewColumn *, void *, aGtkTreeIter *, gint, gint)TGTKgtk_tree_view_column_cell_set_cell_data; extern(D) TGTKgtk_tree_view_column_cell_set_cell_data gtk_tree_view_column_cell_set_cell_data;
alias extern (C) gint function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_get_sort_order; extern(D) TGTKgtk_tree_view_column_get_sort_order gtk_tree_view_column_get_sort_order;
alias extern (C) void function(aGtkTreeViewColumn *, gint)TGTKgtk_tree_view_column_set_sort_order; extern(D) TGTKgtk_tree_view_column_set_sort_order gtk_tree_view_column_set_sort_order;
alias extern (C) gint function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_get_sort_indicator; extern(D) TGTKgtk_tree_view_column_get_sort_indicator gtk_tree_view_column_get_sort_indicator;
alias extern (C) void function(aGtkTreeViewColumn *, gint)TGTKgtk_tree_view_column_set_sort_indicator; extern(D) TGTKgtk_tree_view_column_set_sort_indicator gtk_tree_view_column_set_sort_indicator;
alias extern (C) gint function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_get_sort_column_id; extern(D) TGTKgtk_tree_view_column_get_sort_column_id gtk_tree_view_column_get_sort_column_id;
alias extern (C) void function(aGtkTreeViewColumn *, gint)TGTKgtk_tree_view_column_set_sort_column_id; extern(D) TGTKgtk_tree_view_column_set_sort_column_id gtk_tree_view_column_set_sort_column_id;
alias extern (C) gint function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_get_reorderable; extern(D) TGTKgtk_tree_view_column_get_reorderable gtk_tree_view_column_get_reorderable;
alias extern (C) void function(aGtkTreeViewColumn *, gint)TGTKgtk_tree_view_column_set_reorderable; extern(D) TGTKgtk_tree_view_column_set_reorderable gtk_tree_view_column_set_reorderable;
alias extern (C) float function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_get_alignment; extern(D) TGTKgtk_tree_view_column_get_alignment gtk_tree_view_column_get_alignment;
alias extern (C) void function(aGtkTreeViewColumn *, float)TGTKgtk_tree_view_column_set_alignment; extern(D) TGTKgtk_tree_view_column_set_alignment gtk_tree_view_column_set_alignment;
alias extern (C) _GtkWidget * function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_get_widget; extern(D) TGTKgtk_tree_view_column_get_widget gtk_tree_view_column_get_widget;
alias extern (C) void function(aGtkTreeViewColumn *, aGtkWidget *)TGTKgtk_tree_view_column_set_widget; extern(D) TGTKgtk_tree_view_column_set_widget gtk_tree_view_column_set_widget;
alias extern (C) gint function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_get_clickable; extern(D) TGTKgtk_tree_view_column_get_clickable gtk_tree_view_column_get_clickable;
alias extern (C) void function(aGtkTreeViewColumn *, gint)TGTKgtk_tree_view_column_set_clickable; extern(D) TGTKgtk_tree_view_column_set_clickable gtk_tree_view_column_set_clickable;
alias extern (C) gint function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_get_expand; extern(D) TGTKgtk_tree_view_column_get_expand gtk_tree_view_column_get_expand;
alias extern (C) void function(aGtkTreeViewColumn *, gint)TGTKgtk_tree_view_column_set_expand; extern(D) TGTKgtk_tree_view_column_set_expand gtk_tree_view_column_set_expand;
alias extern (C) char * function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_get_title; extern(D) TGTKgtk_tree_view_column_get_title gtk_tree_view_column_get_title;
alias extern (C) void function(aGtkTreeViewColumn *, char *)TGTKgtk_tree_view_column_set_title; extern(D) TGTKgtk_tree_view_column_set_title gtk_tree_view_column_set_title;
alias extern (C) void function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_clicked; extern(D) TGTKgtk_tree_view_column_clicked gtk_tree_view_column_clicked;
alias extern (C) gint function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_get_max_width; extern(D) TGTKgtk_tree_view_column_get_max_width gtk_tree_view_column_get_max_width;
alias extern (C) void function(aGtkTreeViewColumn *, gint)TGTKgtk_tree_view_column_set_max_width; extern(D) TGTKgtk_tree_view_column_set_max_width gtk_tree_view_column_set_max_width;
alias extern (C) gint function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_get_min_width; extern(D) TGTKgtk_tree_view_column_get_min_width gtk_tree_view_column_get_min_width;
alias extern (C) void function(aGtkTreeViewColumn *, gint)TGTKgtk_tree_view_column_set_min_width; extern(D) TGTKgtk_tree_view_column_set_min_width gtk_tree_view_column_set_min_width;
alias extern (C) void function(aGtkTreeViewColumn *, gint)TGTKgtk_tree_view_column_set_fixed_width; extern(D) TGTKgtk_tree_view_column_set_fixed_width gtk_tree_view_column_set_fixed_width;
alias extern (C) gint function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_get_fixed_width; extern(D) TGTKgtk_tree_view_column_get_fixed_width gtk_tree_view_column_get_fixed_width;
alias extern (C) gint function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_get_width; extern(D) TGTKgtk_tree_view_column_get_width gtk_tree_view_column_get_width;
alias extern (C) gint function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_get_sizing; extern(D) TGTKgtk_tree_view_column_get_sizing gtk_tree_view_column_get_sizing;
alias extern (C) void function(aGtkTreeViewColumn *, gint)TGTKgtk_tree_view_column_set_sizing; extern(D) TGTKgtk_tree_view_column_set_sizing gtk_tree_view_column_set_sizing;
alias extern (C) gint function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_get_resizable; extern(D) TGTKgtk_tree_view_column_get_resizable gtk_tree_view_column_get_resizable;
alias extern (C) void function(aGtkTreeViewColumn *, gint)TGTKgtk_tree_view_column_set_resizable; extern(D) TGTKgtk_tree_view_column_set_resizable gtk_tree_view_column_set_resizable;
alias extern (C) gint function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_get_visible; extern(D) TGTKgtk_tree_view_column_get_visible gtk_tree_view_column_get_visible;
alias extern (C) void function(aGtkTreeViewColumn *, gint)TGTKgtk_tree_view_column_set_visible; extern(D) TGTKgtk_tree_view_column_set_visible gtk_tree_view_column_set_visible;
alias extern (C) gint function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_get_spacing; extern(D) TGTKgtk_tree_view_column_get_spacing gtk_tree_view_column_get_spacing;
alias extern (C) void function(aGtkTreeViewColumn *, gint)TGTKgtk_tree_view_column_set_spacing; extern(D) TGTKgtk_tree_view_column_set_spacing gtk_tree_view_column_set_spacing;
alias extern (C) void function(aGtkTreeViewColumn *, aGtkCellRenderer *)TGTKgtk_tree_view_column_clear_attributes; extern(D) TGTKgtk_tree_view_column_clear_attributes gtk_tree_view_column_clear_attributes;
alias extern (C) void function(aGtkTreeViewColumn *, aGtkCellRenderer *, _BCD_func__11636, void *, _BCD_func__13158)TGTKgtk_tree_view_column_set_cell_data_func; extern(D) TGTKgtk_tree_view_column_set_cell_data_func gtk_tree_view_column_set_cell_data_func;
alias extern (C) void function(aGtkTreeViewColumn *, aGtkCellRenderer *, ...)TGTKgtk_tree_view_column_set_attributes; extern(D) TGTKgtk_tree_view_column_set_attributes gtk_tree_view_column_set_attributes;
alias extern (C) void function(aGtkTreeViewColumn *, aGtkCellRenderer *, in char *, gint)TGTKgtk_tree_view_column_add_attribute; extern(D) TGTKgtk_tree_view_column_add_attribute gtk_tree_view_column_add_attribute;
alias extern (C) _GList * function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_get_cell_renderers; extern(D) TGTKgtk_tree_view_column_get_cell_renderers gtk_tree_view_column_get_cell_renderers;
alias extern (C) void function(aGtkTreeViewColumn *)TGTKgtk_tree_view_column_clear; extern(D) TGTKgtk_tree_view_column_clear gtk_tree_view_column_clear;
alias extern (C) void function(aGtkTreeViewColumn *, aGtkCellRenderer *, gint)TGTKgtk_tree_view_column_pack_end; extern(D) TGTKgtk_tree_view_column_pack_end gtk_tree_view_column_pack_end;
alias extern (C) void function(aGtkTreeViewColumn *, aGtkCellRenderer *, gint)TGTKgtk_tree_view_column_pack_start; extern(D) TGTKgtk_tree_view_column_pack_start gtk_tree_view_column_pack_start;
alias extern (C) _GtkTreeViewColumn * function(char *, aGtkCellRenderer *, ...)TGTKgtk_tree_view_column_new_with_attributes; extern(D) TGTKgtk_tree_view_column_new_with_attributes gtk_tree_view_column_new_with_attributes;
alias extern (C) _GtkTreeViewColumn * function()TGTKgtk_tree_view_column_new; extern(D) TGTKgtk_tree_view_column_new gtk_tree_view_column_new;
alias extern (C) GType function()TGTKgtk_tree_view_column_get_type; extern(D) TGTKgtk_tree_view_column_get_type gtk_tree_view_column_get_type;
alias extern (C) gint function(void *)TGTKgtk_tree_sortable_has_default_sort_func; extern(D) TGTKgtk_tree_sortable_has_default_sort_func gtk_tree_sortable_has_default_sort_func;
alias extern (C) void function(void *, _BCD_func__11685, void *, _BCD_func__13158)TGTKgtk_tree_sortable_set_default_sort_func; extern(D) TGTKgtk_tree_sortable_set_default_sort_func gtk_tree_sortable_set_default_sort_func;
alias extern (C) void function(void *, gint, _BCD_func__11685, void *, _BCD_func__13158)TGTKgtk_tree_sortable_set_sort_func; extern(D) TGTKgtk_tree_sortable_set_sort_func gtk_tree_sortable_set_sort_func;
alias extern (C) void function(void *, gint, gint)TGTKgtk_tree_sortable_set_sort_column_id; extern(D) TGTKgtk_tree_sortable_set_sort_column_id gtk_tree_sortable_set_sort_column_id;
alias extern (C) gint function(void *, gint *, gint *)TGTKgtk_tree_sortable_get_sort_column_id; extern(D) TGTKgtk_tree_sortable_get_sort_column_id gtk_tree_sortable_get_sort_column_id;
alias extern (C) void function(void *)TGTKgtk_tree_sortable_sort_column_changed; extern(D) TGTKgtk_tree_sortable_sort_column_changed gtk_tree_sortable_sort_column_changed;
alias extern (C) GType function()TGTKgtk_tree_sortable_get_type; extern(D) TGTKgtk_tree_sortable_get_type gtk_tree_sortable_get_type;
alias extern (C) void function(void *, void *, aGtkTreeIter *, gint *)TGTKgtk_tree_model_rows_reordered; extern(D) TGTKgtk_tree_model_rows_reordered gtk_tree_model_rows_reordered;
alias extern (C) void function(void *, void *)TGTKgtk_tree_model_row_deleted; extern(D) TGTKgtk_tree_model_row_deleted gtk_tree_model_row_deleted;
alias extern (C) void function(void *, void *, aGtkTreeIter *)TGTKgtk_tree_model_row_has_child_toggled; extern(D) TGTKgtk_tree_model_row_has_child_toggled gtk_tree_model_row_has_child_toggled;
alias extern (C) void function(void *, void *, aGtkTreeIter *)TGTKgtk_tree_model_row_inserted; extern(D) TGTKgtk_tree_model_row_inserted gtk_tree_model_row_inserted;
alias extern (C) void function(void *, void *, aGtkTreeIter *)TGTKgtk_tree_model_row_changed; extern(D) TGTKgtk_tree_model_row_changed gtk_tree_model_row_changed;
alias extern (C) void function(void *, _BCD_func__11697, void *)TGTKgtk_tree_model_foreach; extern(D) TGTKgtk_tree_model_foreach gtk_tree_model_foreach;
alias extern (C) void function(void *, aGtkTreeIter *, char *)TGTKgtk_tree_model_get_valist; extern(D) TGTKgtk_tree_model_get_valist gtk_tree_model_get_valist;
alias extern (C) void function(void *, aGtkTreeIter *, ...)TGTKgtk_tree_model_get; extern(D) TGTKgtk_tree_model_get gtk_tree_model_get;
alias extern (C) void function(void *, aGtkTreeIter *)TGTKgtk_tree_model_unref_node; extern(D) TGTKgtk_tree_model_unref_node gtk_tree_model_unref_node;
alias extern (C) void function(void *, aGtkTreeIter *)TGTKgtk_tree_model_ref_node; extern(D) TGTKgtk_tree_model_ref_node gtk_tree_model_ref_node;
alias extern (C) gint function(void *, aGtkTreeIter *, aGtkTreeIter *)TGTKgtk_tree_model_iter_parent; extern(D) TGTKgtk_tree_model_iter_parent gtk_tree_model_iter_parent;
alias extern (C) gint function(void *, aGtkTreeIter *, aGtkTreeIter *, gint)TGTKgtk_tree_model_iter_nth_child; extern(D) TGTKgtk_tree_model_iter_nth_child gtk_tree_model_iter_nth_child;
alias extern (C) gint function(void *, aGtkTreeIter *)TGTKgtk_tree_model_iter_n_children; extern(D) TGTKgtk_tree_model_iter_n_children gtk_tree_model_iter_n_children;
alias extern (C) gint function(void *, aGtkTreeIter *)TGTKgtk_tree_model_iter_has_child; extern(D) TGTKgtk_tree_model_iter_has_child gtk_tree_model_iter_has_child;
alias extern (C) gint function(void *, aGtkTreeIter *, aGtkTreeIter *)TGTKgtk_tree_model_iter_children; extern(D) TGTKgtk_tree_model_iter_children gtk_tree_model_iter_children;
alias extern (C) gint function(void *, aGtkTreeIter *)TGTKgtk_tree_model_iter_next; extern(D) TGTKgtk_tree_model_iter_next gtk_tree_model_iter_next;
alias extern (C) void function(void *, aGtkTreeIter *, gint, _GValue *)TGTKgtk_tree_model_get_value; extern(D) TGTKgtk_tree_model_get_value gtk_tree_model_get_value;
alias extern (C) void * function(void *, aGtkTreeIter *)TGTKgtk_tree_model_get_path; extern(D) TGTKgtk_tree_model_get_path gtk_tree_model_get_path;
alias extern (C) gint function(void *, aGtkTreeIter *)TGTKgtk_tree_model_get_iter_first; extern(D) TGTKgtk_tree_model_get_iter_first gtk_tree_model_get_iter_first;
alias extern (C) char * function(void *, aGtkTreeIter *)TGTKgtk_tree_model_get_string_from_iter; extern(D) TGTKgtk_tree_model_get_string_from_iter gtk_tree_model_get_string_from_iter;
alias extern (C) gint function(void *, aGtkTreeIter *, char *)TGTKgtk_tree_model_get_iter_from_string; extern(D) TGTKgtk_tree_model_get_iter_from_string gtk_tree_model_get_iter_from_string;
alias extern (C) gint function(void *, aGtkTreeIter *, void *)TGTKgtk_tree_model_get_iter; extern(D) TGTKgtk_tree_model_get_iter gtk_tree_model_get_iter;
alias extern (C) GType function(void *, gint)TGTKgtk_tree_model_get_column_type; extern(D) TGTKgtk_tree_model_get_column_type gtk_tree_model_get_column_type;
alias extern (C) gint function(void *)TGTKgtk_tree_model_get_n_columns; extern(D) TGTKgtk_tree_model_get_n_columns gtk_tree_model_get_n_columns;
alias extern (C) gint function(void *)TGTKgtk_tree_model_get_flags; extern(D) TGTKgtk_tree_model_get_flags gtk_tree_model_get_flags;
alias extern (C) GType function()TGTKgtk_tree_model_get_type; extern(D) TGTKgtk_tree_model_get_type gtk_tree_model_get_type;
alias extern (C) GType function()TGTKgtk_tree_iter_get_type; extern(D) TGTKgtk_tree_iter_get_type gtk_tree_iter_get_type;
alias extern (C) void function(aGtkTreeIter *)TGTKgtk_tree_iter_free; extern(D) TGTKgtk_tree_iter_free gtk_tree_iter_free;
alias extern (C) _GtkTreeIter * function(aGtkTreeIter *)TGTKgtk_tree_iter_copy; extern(D) TGTKgtk_tree_iter_copy gtk_tree_iter_copy;
alias extern (C) void function(_GObject *, void *, aGtkTreeIter *, gint *)TGTKgtk_tree_row_reference_reordered; extern(D) TGTKgtk_tree_row_reference_reordered gtk_tree_row_reference_reordered;
alias extern (C) void function(_GObject *, void *)TGTKgtk_tree_row_reference_deleted; extern(D) TGTKgtk_tree_row_reference_deleted gtk_tree_row_reference_deleted;
alias extern (C) void function(_GObject *, void *)TGTKgtk_tree_row_reference_inserted; extern(D) TGTKgtk_tree_row_reference_inserted gtk_tree_row_reference_inserted;
alias extern (C) void function(void *)TGTKgtk_tree_row_reference_free; extern(D) TGTKgtk_tree_row_reference_free gtk_tree_row_reference_free;
alias extern (C) void * function(void *)TGTKgtk_tree_row_reference_copy; extern(D) TGTKgtk_tree_row_reference_copy gtk_tree_row_reference_copy;
alias extern (C) gint function(void *)TGTKgtk_tree_row_reference_valid; extern(D) TGTKgtk_tree_row_reference_valid gtk_tree_row_reference_valid;
alias extern (C) void * function(void *)TGTKgtk_tree_row_reference_get_model; extern(D) TGTKgtk_tree_row_reference_get_model gtk_tree_row_reference_get_model;
alias extern (C) void * function(void *)TGTKgtk_tree_row_reference_get_path; extern(D) TGTKgtk_tree_row_reference_get_path gtk_tree_row_reference_get_path;
alias extern (C) void * function(_GObject *, void *, void *)TGTKgtk_tree_row_reference_new_proxy; extern(D) TGTKgtk_tree_row_reference_new_proxy gtk_tree_row_reference_new_proxy;
alias extern (C) void * function(void *, void *)TGTKgtk_tree_row_reference_new; extern(D) TGTKgtk_tree_row_reference_new gtk_tree_row_reference_new;
alias extern (C) GType function()TGTKgtk_tree_row_reference_get_type; extern(D) TGTKgtk_tree_row_reference_get_type gtk_tree_row_reference_get_type;
alias extern (C) gint function(void *, void *)TGTKgtk_tree_path_is_descendant; extern(D) TGTKgtk_tree_path_is_descendant gtk_tree_path_is_descendant;
alias extern (C) gint function(void *, void *)TGTKgtk_tree_path_is_ancestor; extern(D) TGTKgtk_tree_path_is_ancestor gtk_tree_path_is_ancestor;
alias extern (C) void function(void *)TGTKgtk_tree_path_down; extern(D) TGTKgtk_tree_path_down gtk_tree_path_down;
alias extern (C) gint function(void *)TGTKgtk_tree_path_up; extern(D) TGTKgtk_tree_path_up gtk_tree_path_up;
alias extern (C) gint function(void *)TGTKgtk_tree_path_prev; extern(D) TGTKgtk_tree_path_prev gtk_tree_path_prev;
alias extern (C) void function(void *)TGTKgtk_tree_path_next; extern(D) TGTKgtk_tree_path_next gtk_tree_path_next;
alias extern (C) gint function(void *, void *)TGTKgtk_tree_path_compare; extern(D) TGTKgtk_tree_path_compare gtk_tree_path_compare;
alias extern (C) GType function()TGTKgtk_tree_path_get_type; extern(D) TGTKgtk_tree_path_get_type gtk_tree_path_get_type;
alias extern (C) void * function(void *)TGTKgtk_tree_path_copy; extern(D) TGTKgtk_tree_path_copy gtk_tree_path_copy;
alias extern (C) void function(void *)TGTKgtk_tree_path_free; extern(D) TGTKgtk_tree_path_free gtk_tree_path_free;
alias extern (C) gint * function(void *)TGTKgtk_tree_path_get_indices; extern(D) TGTKgtk_tree_path_get_indices gtk_tree_path_get_indices;
alias extern (C) gint function(void *)TGTKgtk_tree_path_get_depth; extern(D) TGTKgtk_tree_path_get_depth gtk_tree_path_get_depth;
alias extern (C) void function(void *, gint)TGTKgtk_tree_path_prepend_index; extern(D) TGTKgtk_tree_path_prepend_index gtk_tree_path_prepend_index;
alias extern (C) void function(void *, gint)TGTKgtk_tree_path_append_index; extern(D) TGTKgtk_tree_path_append_index gtk_tree_path_append_index;
alias extern (C) void * function()TGTKgtk_tree_path_new_first; extern(D) TGTKgtk_tree_path_new_first gtk_tree_path_new_first;
alias extern (C) char * function(void *)TGTKgtk_tree_path_to_string; extern(D) TGTKgtk_tree_path_to_string gtk_tree_path_to_string;
alias extern (C) void * function(gint, ...)TGTKgtk_tree_path_new_from_indices; extern(D) TGTKgtk_tree_path_new_from_indices gtk_tree_path_new_from_indices;
alias extern (C) void * function(char *)TGTKgtk_tree_path_new_from_string; extern(D) TGTKgtk_tree_path_new_from_string gtk_tree_path_new_from_string;
alias extern (C) void * function()TGTKgtk_tree_path_new; extern(D) TGTKgtk_tree_path_new gtk_tree_path_new;
alias extern (C) void function(aGtkCellRenderer *, gint)TGTKgtk_cell_renderer_stop_editing; extern(D) TGTKgtk_cell_renderer_stop_editing gtk_cell_renderer_stop_editing;
alias extern (C) void function(aGtkCellRenderer *)TGTKgtk_cell_renderer_editing_canceled; extern(D) TGTKgtk_cell_renderer_editing_canceled gtk_cell_renderer_editing_canceled;
alias extern (C) void function(aGtkCellRenderer *, gint *, gint *)TGTKgtk_cell_renderer_get_fixed_size; extern(D) TGTKgtk_cell_renderer_get_fixed_size gtk_cell_renderer_get_fixed_size;
alias extern (C) void function(aGtkCellRenderer *, gint, gint)TGTKgtk_cell_renderer_set_fixed_size; extern(D) TGTKgtk_cell_renderer_set_fixed_size gtk_cell_renderer_set_fixed_size;
alias extern (C) void * function(aGtkCellRenderer *, _GdkEvent *, aGtkWidget *, char *, _GdkRectangle *, _GdkRectangle *, gint)TGTKgtk_cell_renderer_start_editing; extern(D) TGTKgtk_cell_renderer_start_editing gtk_cell_renderer_start_editing;
alias extern (C) gint function(aGtkCellRenderer *, _GdkEvent *, aGtkWidget *, char *, _GdkRectangle *, _GdkRectangle *, gint)TGTKgtk_cell_renderer_activate; extern(D) TGTKgtk_cell_renderer_activate gtk_cell_renderer_activate;
alias extern (C) void function(aGtkCellRenderer *, _GdkDrawable *, aGtkWidget *, _GdkRectangle *, _GdkRectangle *, _GdkRectangle *, gint)TGTKgtk_cell_renderer_render; extern(D) TGTKgtk_cell_renderer_render gtk_cell_renderer_render;
alias extern (C) void function(aGtkCellRenderer *, aGtkWidget *, _GdkRectangle *, gint *, gint *, gint *, gint *)TGTKgtk_cell_renderer_get_size; extern(D) TGTKgtk_cell_renderer_get_size gtk_cell_renderer_get_size;
alias extern (C) GType function()TGTKgtk_cell_renderer_get_type; extern(D) TGTKgtk_cell_renderer_get_type gtk_cell_renderer_get_type;
alias extern (C) void function(void *)TGTKgtk_cell_editable_remove_widget; extern(D) TGTKgtk_cell_editable_remove_widget gtk_cell_editable_remove_widget;
alias extern (C) void function(void *)TGTKgtk_cell_editable_editing_done; extern(D) TGTKgtk_cell_editable_editing_done gtk_cell_editable_editing_done;
alias extern (C) void function(void *, _GdkEvent *)TGTKgtk_cell_editable_start_editing; extern(D) TGTKgtk_cell_editable_start_editing gtk_cell_editable_start_editing;
alias extern (C) GType function()TGTKgtk_cell_editable_get_type; extern(D) TGTKgtk_cell_editable_get_type gtk_cell_editable_get_type;
alias extern (C) void function(aGtkCalendar *)TGTKgtk_calendar_thaw; extern(D) TGTKgtk_calendar_thaw gtk_calendar_thaw;
alias extern (C) void function(aGtkCalendar *)TGTKgtk_calendar_freeze; extern(D) TGTKgtk_calendar_freeze gtk_calendar_freeze;
alias extern (C) void function(aGtkCalendar *, guint *, guint *, guint *)TGTKgtk_calendar_get_date; extern(D) TGTKgtk_calendar_get_date gtk_calendar_get_date;
alias extern (C) void function(aGtkCalendar *, gint)TGTKgtk_calendar_display_options; extern(D) TGTKgtk_calendar_display_options gtk_calendar_display_options;
alias extern (C) gint function(aGtkCalendar *)TGTKgtk_calendar_get_display_options; extern(D) TGTKgtk_calendar_get_display_options gtk_calendar_get_display_options;
alias extern (C) void function(aGtkCalendar *, gint)TGTKgtk_calendar_set_display_options; extern(D) TGTKgtk_calendar_set_display_options gtk_calendar_set_display_options;
alias extern (C) void function(aGtkCalendar *)TGTKgtk_calendar_clear_marks; extern(D) TGTKgtk_calendar_clear_marks gtk_calendar_clear_marks;
alias extern (C) gint function(aGtkCalendar *, guint)TGTKgtk_calendar_unmark_day; extern(D) TGTKgtk_calendar_unmark_day gtk_calendar_unmark_day;
alias extern (C) gint function(aGtkCalendar *, guint)TGTKgtk_calendar_mark_day; extern(D) TGTKgtk_calendar_mark_day gtk_calendar_mark_day;
alias extern (C) void function(aGtkCalendar *, guint)TGTKgtk_calendar_select_day; extern(D) TGTKgtk_calendar_select_day gtk_calendar_select_day;
alias extern (C) gint function(aGtkCalendar *, guint, guint)TGTKgtk_calendar_select_month; extern(D) TGTKgtk_calendar_select_month gtk_calendar_select_month;
alias extern (C) _GtkWidget * function()TGTKgtk_calendar_new; extern(D) TGTKgtk_calendar_new gtk_calendar_new;
alias extern (C) GType function()TGTKgtk_calendar_get_type; extern(D) TGTKgtk_calendar_get_type gtk_calendar_get_type;
alias extern (C) void function(aGtkObject *, _BCD_func__12122, void *, gint, guint)TGTKgtk_signal_compat_matched; extern(D) TGTKgtk_signal_compat_matched gtk_signal_compat_matched;
alias extern (C) void function(aGtkObject *, char *, aGtkArg *)TGTKgtk_signal_emitv_by_name; extern(D) TGTKgtk_signal_emitv_by_name gtk_signal_emitv_by_name;
alias extern (C) void function(aGtkObject *, char *, ...)TGTKgtk_signal_emit_by_name; extern(D) TGTKgtk_signal_emit_by_name gtk_signal_emit_by_name;
alias extern (C) void function(aGtkObject *, guint, ...)TGTKgtk_signal_emit; extern(D) TGTKgtk_signal_emit gtk_signal_emit;
alias extern (C) void function(aGtkObject *, guint, aGtkArg *)TGTKgtk_signal_emitv; extern(D) TGTKgtk_signal_emitv gtk_signal_emitv;
alias extern (C) guint function(aGtkObject *, char *, _BCD_func__12122, _BCD_func__13157, void *, _BCD_func__13158, gint, gint)TGTKgtk_signal_connect_full; extern(D) TGTKgtk_signal_connect_full gtk_signal_connect_full;
alias extern (C) void function(aGtkObject *, char *, _BCD_func__12122, void *, aGtkObject *)TGTKgtk_signal_connect_while_alive; extern(D) TGTKgtk_signal_connect_while_alive gtk_signal_connect_while_alive;
alias extern (C) void function(aGtkObject *, char *, _BCD_func__12122, aGtkObject *)TGTKgtk_signal_connect_object_while_alive; extern(D) TGTKgtk_signal_connect_object_while_alive gtk_signal_connect_object_while_alive;
alias extern (C) void function(aGtkObject *, char *)TGTKgtk_signal_emit_stop_by_name; extern(D) TGTKgtk_signal_emit_stop_by_name gtk_signal_emit_stop_by_name;
alias extern (C) guint function(char *, gint, guint, guint, _BCD_func__13146, guint, guint, ...)TGTKgtk_signal_new; extern(D) TGTKgtk_signal_new gtk_signal_new;
alias extern (C) guint function(char *, gint, guint, guint, _BCD_func__13146, guint, guint, guint *)TGTKgtk_signal_newv; extern(D) TGTKgtk_signal_newv gtk_signal_newv;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_VOID__UINT_STRING; extern(D) TGTKgtk_marshal_VOID__UINT_STRING gtk_marshal_VOID__UINT_STRING;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_VOID__UINT_POINTER_UINT_UINT_ENUM; extern(D) TGTKgtk_marshal_VOID__UINT_POINTER_UINT_UINT_ENUM gtk_marshal_VOID__UINT_POINTER_UINT_UINT_ENUM;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_VOID__UINT_POINTER_UINT_ENUM_ENUM_POINTER; extern(D) TGTKgtk_marshal_VOID__UINT_POINTER_UINT_ENUM_ENUM_POINTER gtk_marshal_VOID__UINT_POINTER_UINT_ENUM_ENUM_POINTER;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_VOID__STRING_INT_POINTER; extern(D) TGTKgtk_marshal_VOID__STRING_INT_POINTER gtk_marshal_VOID__STRING_INT_POINTER;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_VOID__POINTER_UINT_UINT; extern(D) TGTKgtk_marshal_VOID__POINTER_UINT_UINT gtk_marshal_VOID__POINTER_UINT_UINT;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_VOID__POINTER_INT_INT_POINTER_UINT_UINT; extern(D) TGTKgtk_marshal_VOID__POINTER_INT_INT_POINTER_UINT_UINT gtk_marshal_VOID__POINTER_INT_INT_POINTER_UINT_UINT;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_VOID__POINTER_POINTER_UINT_UINT; extern(D) TGTKgtk_marshal_VOID__POINTER_POINTER_UINT_UINT gtk_marshal_VOID__POINTER_POINTER_UINT_UINT;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_VOID__POINTER_UINT_ENUM; extern(D) TGTKgtk_marshal_VOID__POINTER_UINT_ENUM gtk_marshal_VOID__POINTER_UINT_ENUM;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_VOID__POINTER_UINT; extern(D) TGTKgtk_marshal_VOID__POINTER_UINT gtk_marshal_VOID__POINTER_UINT;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_VOID__POINTER_STRING_STRING; extern(D) TGTKgtk_marshal_VOID__POINTER_STRING_STRING gtk_marshal_VOID__POINTER_STRING_STRING;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_VOID__POINTER_POINTER_POINTER; extern(D) TGTKgtk_marshal_VOID__POINTER_POINTER_POINTER gtk_marshal_VOID__POINTER_POINTER_POINTER;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_VOID__POINTER_POINTER; extern(D) TGTKgtk_marshal_VOID__POINTER_POINTER gtk_marshal_VOID__POINTER_POINTER;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_VOID__POINTER_INT; extern(D) TGTKgtk_marshal_VOID__POINTER_INT gtk_marshal_VOID__POINTER_INT;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_VOID__INT_INT_POINTER; extern(D) TGTKgtk_marshal_VOID__INT_INT_POINTER gtk_marshal_VOID__INT_INT_POINTER;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_VOID__INT_INT; extern(D) TGTKgtk_marshal_VOID__INT_INT gtk_marshal_VOID__INT_INT;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_VOID__ENUM_FLOAT_BOOLEAN; extern(D) TGTKgtk_marshal_VOID__ENUM_FLOAT_BOOLEAN gtk_marshal_VOID__ENUM_FLOAT_BOOLEAN;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_VOID__ENUM_FLOAT; extern(D) TGTKgtk_marshal_VOID__ENUM_FLOAT gtk_marshal_VOID__ENUM_FLOAT;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_INT__POINTER_CHAR_CHAR; extern(D) TGTKgtk_marshal_INT__POINTER_CHAR_CHAR gtk_marshal_INT__POINTER_CHAR_CHAR;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_INT__POINTER; extern(D) TGTKgtk_marshal_INT__POINTER gtk_marshal_INT__POINTER;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_ENUM__ENUM; extern(D) TGTKgtk_marshal_ENUM__ENUM gtk_marshal_ENUM__ENUM;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_BOOLEAN__POINTER_STRING_STRING_POINTER; extern(D) TGTKgtk_marshal_BOOLEAN__POINTER_STRING_STRING_POINTER gtk_marshal_BOOLEAN__POINTER_STRING_STRING_POINTER;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_BOOLEAN__POINTER_INT_INT_UINT; extern(D) TGTKgtk_marshal_BOOLEAN__POINTER_INT_INT_UINT gtk_marshal_BOOLEAN__POINTER_INT_INT_UINT;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_BOOLEAN__POINTER_INT_INT; extern(D) TGTKgtk_marshal_BOOLEAN__POINTER_INT_INT gtk_marshal_BOOLEAN__POINTER_INT_INT;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_BOOLEAN__POINTER_POINTER_INT_INT; extern(D) TGTKgtk_marshal_BOOLEAN__POINTER_POINTER_INT_INT gtk_marshal_BOOLEAN__POINTER_POINTER_INT_INT;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_BOOLEAN__POINTER; extern(D) TGTKgtk_marshal_BOOLEAN__POINTER gtk_marshal_BOOLEAN__POINTER;
alias extern (C) void function(_GClosure *, _GValue *, guint, _GValue *, void *, void *)TGTKgtk_marshal_BOOLEAN__VOID; extern(D) TGTKgtk_marshal_BOOLEAN__VOID gtk_marshal_BOOLEAN__VOID;
//alias extern (C) void function(aGtkButton *, _GdkRectangle *, gint, gint, char *, char *)TGTK_gtk_button_paint; extern(D) TGTK_gtk_button_paint _gtk_button_paint;
//alias extern (C) void function(aGtkButton *, gint)TGTK_gtk_button_set_depressed; extern(D) TGTK_gtk_button_set_depressed _gtk_button_set_depressed;
alias extern (C) gint function(aGtkButton *)TGTKgtk_button_get_image_position; extern(D) TGTKgtk_button_get_image_position gtk_button_get_image_position;
alias extern (C) void function(aGtkButton *, gint)TGTKgtk_button_set_image_position; extern(D) TGTKgtk_button_set_image_position gtk_button_set_image_position;
alias extern (C) _GtkWidget * function(aGtkButton *)TGTKgtk_button_get_image; extern(D) TGTKgtk_button_get_image gtk_button_get_image;
alias extern (C) void function(aGtkButton *, aGtkWidget *)TGTKgtk_button_set_image; extern(D) TGTKgtk_button_set_image gtk_button_set_image;
alias extern (C) void function(aGtkButton *, float *, float *)TGTKgtk_button_get_alignment; extern(D) TGTKgtk_button_get_alignment gtk_button_get_alignment;
alias extern (C) void function(aGtkButton *, float, float)TGTKgtk_button_set_alignment; extern(D) TGTKgtk_button_set_alignment gtk_button_set_alignment;
alias extern (C) gint function(aGtkButton *)TGTKgtk_button_get_focus_on_click; extern(D) TGTKgtk_button_get_focus_on_click gtk_button_get_focus_on_click;
alias extern (C) void function(aGtkButton *, gint)TGTKgtk_button_set_focus_on_click; extern(D) TGTKgtk_button_set_focus_on_click gtk_button_set_focus_on_click;
alias extern (C) gint function(aGtkButton *)TGTKgtk_button_get_use_stock; extern(D) TGTKgtk_button_get_use_stock gtk_button_get_use_stock;
alias extern (C) void function(aGtkButton *, gint)TGTKgtk_button_set_use_stock; extern(D) TGTKgtk_button_set_use_stock gtk_button_set_use_stock;
alias extern (C) gint function(aGtkButton *)TGTKgtk_button_get_use_underline; extern(D) TGTKgtk_button_get_use_underline gtk_button_get_use_underline;
alias extern (C) void function(aGtkButton *, gint)TGTKgtk_button_set_use_underline; extern(D) TGTKgtk_button_set_use_underline gtk_button_set_use_underline;
alias extern (C) char * function(aGtkButton *)TGTKgtk_button_get_label; extern(D) TGTKgtk_button_get_label gtk_button_get_label;
alias extern (C) void function(aGtkButton *, char *)TGTKgtk_button_set_label; extern(D) TGTKgtk_button_set_label gtk_button_set_label;
alias extern (C) gint function(aGtkButton *)TGTKgtk_button_get_relief; extern(D) TGTKgtk_button_get_relief gtk_button_get_relief;
alias extern (C) void function(aGtkButton *, gint)TGTKgtk_button_set_relief; extern(D) TGTKgtk_button_set_relief gtk_button_set_relief;
alias extern (C) void function(aGtkButton *)TGTKgtk_button_leave; extern(D) TGTKgtk_button_leave gtk_button_leave;
alias extern (C) void function(aGtkButton *)TGTKgtk_button_enter; extern(D) TGTKgtk_button_enter gtk_button_enter;
alias extern (C) void function(aGtkButton *)TGTKgtk_button_clicked; extern(D) TGTKgtk_button_clicked gtk_button_clicked;
alias extern (C) void function(aGtkButton *)TGTKgtk_button_released; extern(D) TGTKgtk_button_released gtk_button_released;
alias extern (C) void function(aGtkButton *)TGTKgtk_button_pressed; extern(D) TGTKgtk_button_pressed gtk_button_pressed;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_button_new_with_mnemonic; extern(D) TGTKgtk_button_new_with_mnemonic gtk_button_new_with_mnemonic;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_button_new_from_stock; extern(D) TGTKgtk_button_new_from_stock gtk_button_new_from_stock;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_button_new_with_label; extern(D) TGTKgtk_button_new_with_label gtk_button_new_with_label;
alias extern (C) _GtkWidget * function()TGTKgtk_button_new; extern(D) TGTKgtk_button_new gtk_button_new;
alias extern (C) GType function()TGTKgtk_button_get_type; extern(D) TGTKgtk_button_get_type gtk_button_get_type;
alias extern (C) void function(aGtkImage *, _GdkImage * *, _GdkDrawable * *)TGTKgtk_image_get; extern(D) TGTKgtk_image_get gtk_image_get;
alias extern (C) void function(aGtkImage *, _GdkImage *, _GdkDrawable *)TGTKgtk_image_set; extern(D) TGTKgtk_image_set gtk_image_set;
alias extern (C) gint function(aGtkImage *)TGTKgtk_image_get_pixel_size; extern(D) TGTKgtk_image_get_pixel_size gtk_image_get_pixel_size;
alias extern (C) void function(aGtkImage *, char * *, gint *)TGTKgtk_image_get_icon_name; extern(D) TGTKgtk_image_get_icon_name gtk_image_get_icon_name;
alias extern (C) void * function(aGtkImage *)TGTKgtk_image_get_animation; extern(D) TGTKgtk_image_get_animation gtk_image_get_animation;
alias extern (C) void function(aGtkImage *, void * *, gint *)TGTKgtk_image_get_icon_set; extern(D) TGTKgtk_image_get_icon_set gtk_image_get_icon_set;
alias extern (C) void function(aGtkImage *, char * *, gint *)TGTKgtk_image_get_stock; extern(D) TGTKgtk_image_get_stock gtk_image_get_stock;
alias extern (C) void * function(aGtkImage *)TGTKgtk_image_get_pixbuf; extern(D) TGTKgtk_image_get_pixbuf gtk_image_get_pixbuf;
alias extern (C) void function(aGtkImage *, _GdkImage * *, _GdkDrawable * *)TGTKgtk_image_get_image; extern(D) TGTKgtk_image_get_image gtk_image_get_image;
alias extern (C) void function(aGtkImage *, _GdkDrawable * *, _GdkDrawable * *)TGTKgtk_image_get_pixmap; extern(D) TGTKgtk_image_get_pixmap gtk_image_get_pixmap;
alias extern (C) gint function(aGtkImage *)TGTKgtk_image_get_storage_type; extern(D) TGTKgtk_image_get_storage_type gtk_image_get_storage_type;
alias extern (C) void function(aGtkImage *, gint)TGTKgtk_image_set_pixel_size; extern(D) TGTKgtk_image_set_pixel_size gtk_image_set_pixel_size;
alias extern (C) void function(aGtkImage *, char *, gint)TGTKgtk_image_set_from_icon_name; extern(D) TGTKgtk_image_set_from_icon_name gtk_image_set_from_icon_name;
alias extern (C) void function(aGtkImage *, void *)TGTKgtk_image_set_from_animation; extern(D) TGTKgtk_image_set_from_animation gtk_image_set_from_animation;
alias extern (C) void function(aGtkImage *, void *, gint)TGTKgtk_image_set_from_icon_set; extern(D) TGTKgtk_image_set_from_icon_set gtk_image_set_from_icon_set;
alias extern (C) void function(aGtkImage *, char *, gint)TGTKgtk_image_set_from_stock; extern(D) TGTKgtk_image_set_from_stock gtk_image_set_from_stock;
alias extern (C) void function(aGtkImage *, void *)TGTKgtk_image_set_from_pixbuf; extern(D) TGTKgtk_image_set_from_pixbuf gtk_image_set_from_pixbuf;
alias extern (C) void function(aGtkImage *, char *)TGTKgtk_image_set_from_file; extern(D) TGTKgtk_image_set_from_file gtk_image_set_from_file;
alias extern (C) void function(aGtkImage *, _GdkImage *, _GdkDrawable *)TGTKgtk_image_set_from_image; extern(D) TGTKgtk_image_set_from_image gtk_image_set_from_image;
alias extern (C) void function(aGtkImage *, _GdkDrawable *, _GdkDrawable *)TGTKgtk_image_set_from_pixmap; extern(D) TGTKgtk_image_set_from_pixmap gtk_image_set_from_pixmap;
alias extern (C) void function(aGtkImage *)TGTKgtk_image_clear; extern(D) TGTKgtk_image_clear gtk_image_clear;
alias extern (C) _GtkWidget * function(char *, gint)TGTKgtk_image_new_from_icon_name; extern(D) TGTKgtk_image_new_from_icon_name gtk_image_new_from_icon_name;
alias extern (C) _GtkWidget * function(void *)TGTKgtk_image_new_from_animation; extern(D) TGTKgtk_image_new_from_animation gtk_image_new_from_animation;
alias extern (C) _GtkWidget * function(void *, gint)TGTKgtk_image_new_from_icon_set; extern(D) TGTKgtk_image_new_from_icon_set gtk_image_new_from_icon_set;
alias extern (C) _GtkWidget * function(char *, gint)TGTKgtk_image_new_from_stock; extern(D) TGTKgtk_image_new_from_stock gtk_image_new_from_stock;
alias extern (C) _GtkWidget * function(void *)TGTKgtk_image_new_from_pixbuf; extern(D) TGTKgtk_image_new_from_pixbuf gtk_image_new_from_pixbuf;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_image_new_from_file; extern(D) TGTKgtk_image_new_from_file gtk_image_new_from_file;
alias extern (C) _GtkWidget * function(_GdkImage *, _GdkDrawable *)TGTKgtk_image_new_from_image; extern(D) TGTKgtk_image_new_from_image gtk_image_new_from_image;
alias extern (C) _GtkWidget * function(_GdkDrawable *, _GdkDrawable *)TGTKgtk_image_new_from_pixmap; extern(D) TGTKgtk_image_new_from_pixmap gtk_image_new_from_pixmap;
alias extern (C) _GtkWidget * function()TGTKgtk_image_new; extern(D) TGTKgtk_image_new gtk_image_new;
alias extern (C) GType function()TGTKgtk_image_get_type; extern(D) TGTKgtk_image_get_type gtk_image_get_type;
alias extern (C) _GObject * function(void *, aGtkBuilder *, char *)TGTKgtk_buildable_get_internal_child; extern(D) TGTKgtk_buildable_get_internal_child gtk_buildable_get_internal_child;
alias extern (C) void function(void *, aGtkBuilder *)TGTKgtk_buildable_parser_finished; extern(D) TGTKgtk_buildable_parser_finished gtk_buildable_parser_finished;
alias extern (C) void function(void *, aGtkBuilder *, _GObject *, char *, void *)TGTKgtk_buildable_custom_finished; extern(D) TGTKgtk_buildable_custom_finished gtk_buildable_custom_finished;
alias extern (C) void function(void *, aGtkBuilder *, _GObject *, char *, void * *)TGTKgtk_buildable_custom_tag_end; extern(D) TGTKgtk_buildable_custom_tag_end gtk_buildable_custom_tag_end;
alias extern (C) gint function(void *, aGtkBuilder *, _GObject *, char *, _GMarkupParser *, void * *)TGTKgtk_buildable_custom_tag_start; extern(D) TGTKgtk_buildable_custom_tag_start gtk_buildable_custom_tag_start;
alias extern (C) _GObject * function(void *, aGtkBuilder *, char *)TGTKgtk_buildable_construct_child; extern(D) TGTKgtk_buildable_construct_child gtk_buildable_construct_child;
alias extern (C) void function(void *, aGtkBuilder *, char *, _GValue *)TGTKgtk_buildable_set_buildable_property; extern(D) TGTKgtk_buildable_set_buildable_property gtk_buildable_set_buildable_property;
alias extern (C) void function(void *, aGtkBuilder *, _GObject *, char *)TGTKgtk_buildable_add_child; extern(D) TGTKgtk_buildable_add_child gtk_buildable_add_child;
alias extern (C) char * function(void *)TGTKgtk_buildable_get_name; extern(D) TGTKgtk_buildable_get_name gtk_buildable_get_name;
alias extern (C) void function(void *, char *)TGTKgtk_buildable_set_name; extern(D) TGTKgtk_buildable_set_name gtk_buildable_set_name;
alias extern (C) GType function()TGTKgtk_buildable_get_type; extern(D) TGTKgtk_buildable_get_type gtk_buildable_get_type;
alias extern (C) gint function(aGtkBuilder *, GType, char *, _GValue *, _GError * *)TGTKgtk_builder_value_from_string_type; extern(D) TGTKgtk_builder_value_from_string_type gtk_builder_value_from_string_type;
alias extern (C) gint function(aGtkBuilder *, _GParamSpec *, char *, _GValue *, _GError * *)TGTKgtk_builder_value_from_string; extern(D) TGTKgtk_builder_value_from_string gtk_builder_value_from_string;
alias extern (C) GType function(aGtkBuilder *, char *)TGTKgtk_builder_get_type_from_name; extern(D) TGTKgtk_builder_get_type_from_name gtk_builder_get_type_from_name;
alias extern (C) char * function(aGtkBuilder *)TGTKgtk_builder_get_translation_domain; extern(D) TGTKgtk_builder_get_translation_domain gtk_builder_get_translation_domain;
alias extern (C) void function(aGtkBuilder *, char *)TGTKgtk_builder_set_translation_domain; extern(D) TGTKgtk_builder_set_translation_domain gtk_builder_set_translation_domain;
alias extern (C) void function(aGtkBuilder *, _BCD_func__11889, void *)TGTKgtk_builder_connect_signals_full; extern(D) TGTKgtk_builder_connect_signals_full gtk_builder_connect_signals_full;
alias extern (C) void function(aGtkBuilder *, void *)TGTKgtk_builder_connect_signals; extern(D) TGTKgtk_builder_connect_signals gtk_builder_connect_signals;
alias extern (C) _GSList * function(aGtkBuilder *)TGTKgtk_builder_get_objects; extern(D) TGTKgtk_builder_get_objects gtk_builder_get_objects;
alias extern (C) _GObject * function(aGtkBuilder *, char *)TGTKgtk_builder_get_object; extern(D) TGTKgtk_builder_get_object gtk_builder_get_object;
alias extern (C) guint function(aGtkBuilder *, char *, gsize, _GError * *)TGTKgtk_builder_add_from_string; extern(D) TGTKgtk_builder_add_from_string gtk_builder_add_from_string;
alias extern (C) guint function(aGtkBuilder *, char *, _GError * *)TGTKgtk_builder_add_from_file; extern(D) TGTKgtk_builder_add_from_file gtk_builder_add_from_file;
alias extern (C) _GtkBuilder * function()TGTKgtk_builder_new; extern(D) TGTKgtk_builder_new gtk_builder_new;
alias extern (C) GType function()TGTKgtk_builder_get_type; extern(D) TGTKgtk_builder_get_type gtk_builder_get_type;
alias extern (C) GQuark function()TGTKgtk_builder_error_quark; extern(D) TGTKgtk_builder_error_quark gtk_builder_error_quark;
//alias extern (C) guint function(char *, guint, gint, _BCD_func__12122, _BCD_func__14366, void *, _BCD_func__13146, guint, guint, ...)TGTK_gtk_binding_signal_new; extern(D) TGTK_gtk_binding_signal_new _gtk_binding_signal_new;
//alias extern (C) void function(aGtkBindingSet *, guint, gint, char *, _GSList *)TGTK_gtk_binding_entry_add_signall; extern(D) TGTK_gtk_binding_entry_add_signall _gtk_binding_entry_add_signall;
//alias extern (C) void function()TGTK_gtk_binding_reset_parsed; extern(D) TGTK_gtk_binding_reset_parsed _gtk_binding_reset_parsed;
//alias extern (C) guint function(_GScanner *)TGTK/binding_parse_binding; extern(D) TGTK_gtk_binding_parse_binding _gtk_binding_parse_binding;
alias extern (C) void function(aGtkBindingSet *, gint, char *, gint)TGTKgtk_binding_set_add_path; extern(D) TGTKgtk_binding_set_add_path gtk_binding_set_add_path;
alias extern (C) void function(aGtkBindingSet *, guint, gint)TGTKgtk_binding_entry_remove; extern(D) TGTKgtk_binding_entry_remove gtk_binding_entry_remove;
alias extern (C) void function(aGtkBindingSet *, guint, gint, char *, guint, ...)TGTKgtk_binding_entry_add_signal; extern(D) TGTKgtk_binding_entry_add_signal gtk_binding_entry_add_signal;
alias extern (C) void function(aGtkBindingSet *, guint, gint)TGTKgtk_binding_entry_skip; extern(D) TGTKgtk_binding_entry_skip gtk_binding_entry_skip;
alias extern (C) guint function(_GScanner *)TGTKgtk_binding_parse_binding; extern(D) TGTKgtk_binding_parse_binding gtk_binding_parse_binding;
alias extern (C) void function(aGtkBindingSet *, guint, gint, char *, _GSList *)TGTKgtk_binding_entry_add_signall; extern(D) TGTKgtk_binding_entry_add_signall gtk_binding_entry_add_signall;
alias extern (C) void function(aGtkBindingSet *, guint, gint)TGTKgtk_binding_entry_clear; extern(D) TGTKgtk_binding_entry_clear gtk_binding_entry_clear;
alias extern (C) gint function(aGtkBindingSet *, guint, gint, aGtkObject *)TGTKgtk_binding_set_activate; extern(D) TGTKgtk_binding_set_activate gtk_binding_set_activate;
alias extern (C) gint function(aGtkObject *, _GdkEventKey *)TGTKgtk_bindings_activate_event; extern(D) TGTKgtk_bindings_activate_event gtk_bindings_activate_event;
alias extern (C) gint function(aGtkObject *, guint, gint)TGTKgtk_bindings_activate; extern(D) TGTKgtk_bindings_activate gtk_bindings_activate;
alias extern (C) _GtkBindingSet * function(char *)TGTKgtk_binding_set_find; extern(D) TGTKgtk_binding_set_find gtk_binding_set_find;
alias extern (C) _GtkBindingSet * function(void *)TGTKgtk_binding_set_by_class; extern(D) TGTKgtk_binding_set_by_class gtk_binding_set_by_class;
alias extern (C) _GtkBindingSet * function(char *)TGTKgtk_binding_set_new; extern(D) TGTKgtk_binding_set_new gtk_binding_set_new;
//alias extern (C) void function(aGtkWidget *, gint *, gint *, gint *, gint *)TGTK_gtk_button_box_child_requisition; extern(D) TGTK_gtk_button_box_child_requisition _gtk_button_box_child_requisition;
alias extern (C) void function(aGtkButtonBox *, gint *, gint *)TGTKgtk_button_box_get_child_ipadding; extern(D) TGTKgtk_button_box_get_child_ipadding gtk_button_box_get_child_ipadding;
alias extern (C) void function(aGtkButtonBox *, gint *, gint *)TGTKgtk_button_box_get_child_size; extern(D) TGTKgtk_button_box_get_child_size gtk_button_box_get_child_size;
alias extern (C) void function(aGtkButtonBox *, gint, gint)TGTKgtk_button_box_set_child_ipadding; extern(D) TGTKgtk_button_box_set_child_ipadding gtk_button_box_set_child_ipadding;
alias extern (C) void function(aGtkButtonBox *, gint, gint)TGTKgtk_button_box_set_child_size; extern(D) TGTKgtk_button_box_set_child_size gtk_button_box_set_child_size;
alias extern (C) void function(aGtkButtonBox *, aGtkWidget *, gint)TGTKgtk_button_box_set_child_secondary; extern(D) TGTKgtk_button_box_set_child_secondary gtk_button_box_set_child_secondary;
alias extern (C) gint function(aGtkButtonBox *, aGtkWidget *)TGTKgtk_button_box_get_child_secondary; extern(D) TGTKgtk_button_box_get_child_secondary gtk_button_box_get_child_secondary;
alias extern (C) void function(aGtkButtonBox *, gint)TGTKgtk_button_box_set_layout; extern(D) TGTKgtk_button_box_set_layout gtk_button_box_set_layout;
alias extern (C) gint function(aGtkButtonBox *)TGTKgtk_button_box_get_layout; extern(D) TGTKgtk_button_box_get_layout gtk_button_box_get_layout;
alias extern (C) GType function()TGTKgtk_button_box_get_type; extern(D) TGTKgtk_button_box_get_type gtk_button_box_get_type;
alias extern (C) void function(aGtkBox *, aGtkWidget *, gint, gint, guint, gint)TGTKgtk_box_set_child_packing; extern(D) TGTKgtk_box_set_child_packing gtk_box_set_child_packing;
alias extern (C) void function(aGtkBox *, aGtkWidget *, gint *, gint *, guint *, gint *)TGTKgtk_box_query_child_packing; extern(D) TGTKgtk_box_query_child_packing gtk_box_query_child_packing;
alias extern (C) void function(aGtkBox *, aGtkWidget *, gint)TGTKgtk_box_reorder_child; extern(D) TGTKgtk_box_reorder_child gtk_box_reorder_child;
alias extern (C) gint function(aGtkBox *)TGTKgtk_box_get_spacing; extern(D) TGTKgtk_box_get_spacing gtk_box_get_spacing;
alias extern (C) void function(aGtkBox *, gint)TGTKgtk_box_set_spacing; extern(D) TGTKgtk_box_set_spacing gtk_box_set_spacing;
alias extern (C) gint function(aGtkBox *)TGTKgtk_box_get_homogeneous; extern(D) TGTKgtk_box_get_homogeneous gtk_box_get_homogeneous;
alias extern (C) void function(aGtkBox *, gint)TGTKgtk_box_set_homogeneous; extern(D) TGTKgtk_box_set_homogeneous gtk_box_set_homogeneous;
alias extern (C) void function(aGtkBox *, aGtkWidget *)TGTKgtk_box_pack_end_defaults; extern(D) TGTKgtk_box_pack_end_defaults gtk_box_pack_end_defaults;
alias extern (C) void function(aGtkBox *, aGtkWidget *)TGTKgtk_box_pack_start_defaults; extern(D) TGTKgtk_box_pack_start_defaults gtk_box_pack_start_defaults;
alias extern (C) void function(aGtkBox *, aGtkWidget *, gint, gint, guint)TGTKgtk_box_pack_end; extern(D) TGTKgtk_box_pack_end gtk_box_pack_end;
alias extern (C) void function(aGtkBox *, aGtkWidget *, gint, gint, guint)TGTKgtk_box_pack_start; extern(D) TGTKgtk_box_pack_start gtk_box_pack_start;
alias extern (C) GType function()TGTKgtk_box_get_type; extern(D) TGTKgtk_box_get_type gtk_box_get_type;
alias extern (C) void function(aGtkAssistant *)TGTKgtk_assistant_update_buttons_state; extern(D) TGTKgtk_assistant_update_buttons_state gtk_assistant_update_buttons_state;
alias extern (C) void function(aGtkAssistant *, aGtkWidget *)TGTKgtk_assistant_remove_action_widget; extern(D) TGTKgtk_assistant_remove_action_widget gtk_assistant_remove_action_widget;
alias extern (C) void function(aGtkAssistant *, aGtkWidget *)TGTKgtk_assistant_add_action_widget; extern(D) TGTKgtk_assistant_add_action_widget gtk_assistant_add_action_widget;
alias extern (C) gint function(aGtkAssistant *, aGtkWidget *)TGTKgtk_assistant_get_page_complete; extern(D) TGTKgtk_assistant_get_page_complete gtk_assistant_get_page_complete;
alias extern (C) void function(aGtkAssistant *, aGtkWidget *, gint)TGTKgtk_assistant_set_page_complete; extern(D) TGTKgtk_assistant_set_page_complete gtk_assistant_set_page_complete;
alias extern (C) void * function(aGtkAssistant *, aGtkWidget *)TGTKgtk_assistant_get_page_side_image; extern(D) TGTKgtk_assistant_get_page_side_image gtk_assistant_get_page_side_image;
alias extern (C) void function(aGtkAssistant *, aGtkWidget *, void *)TGTKgtk_assistant_set_page_side_image; extern(D) TGTKgtk_assistant_set_page_side_image gtk_assistant_set_page_side_image;
alias extern (C) void * function(aGtkAssistant *, aGtkWidget *)TGTKgtk_assistant_get_page_header_image; extern(D) TGTKgtk_assistant_get_page_header_image gtk_assistant_get_page_header_image;
alias extern (C) void function(aGtkAssistant *, aGtkWidget *, void *)TGTKgtk_assistant_set_page_header_image; extern(D) TGTKgtk_assistant_set_page_header_image gtk_assistant_set_page_header_image;
alias extern (C) char * function(aGtkAssistant *, aGtkWidget *)TGTKgtk_assistant_get_page_title; extern(D) TGTKgtk_assistant_get_page_title gtk_assistant_get_page_title;
alias extern (C) void function(aGtkAssistant *, aGtkWidget *, char *)TGTKgtk_assistant_set_page_title; extern(D) TGTKgtk_assistant_set_page_title gtk_assistant_set_page_title;
alias extern (C) gint function(aGtkAssistant *, aGtkWidget *)TGTKgtk_assistant_get_page_type; extern(D) TGTKgtk_assistant_get_page_type gtk_assistant_get_page_type;
alias extern (C) void function(aGtkAssistant *, aGtkWidget *, gint)TGTKgtk_assistant_set_page_type; extern(D) TGTKgtk_assistant_set_page_type gtk_assistant_set_page_type;
alias extern (C) void function(aGtkAssistant *, _BCD_func__11971, void *, _BCD_func__13158)TGTKgtk_assistant_set_forward_page_func; extern(D) TGTKgtk_assistant_set_forward_page_func gtk_assistant_set_forward_page_func;
alias extern (C) gint function(aGtkAssistant *, aGtkWidget *, gint)TGTKgtk_assistant_insert_page; extern(D) TGTKgtk_assistant_insert_page gtk_assistant_insert_page;
alias extern (C) gint function(aGtkAssistant *, aGtkWidget *)TGTKgtk_assistant_append_page; extern(D) TGTKgtk_assistant_append_page gtk_assistant_append_page;
alias extern (C) gint function(aGtkAssistant *, aGtkWidget *)TGTKgtk_assistant_prepend_page; extern(D) TGTKgtk_assistant_prepend_page gtk_assistant_prepend_page;
alias extern (C) _GtkWidget * function(aGtkAssistant *, gint)TGTKgtk_assistant_get_nth_page; extern(D) TGTKgtk_assistant_get_nth_page gtk_assistant_get_nth_page;
alias extern (C) gint function(aGtkAssistant *)TGTKgtk_assistant_get_n_pages; extern(D) TGTKgtk_assistant_get_n_pages gtk_assistant_get_n_pages;
alias extern (C) void function(aGtkAssistant *, gint)TGTKgtk_assistant_set_current_page; extern(D) TGTKgtk_assistant_set_current_page gtk_assistant_set_current_page;
alias extern (C) gint function(aGtkAssistant *)TGTKgtk_assistant_get_current_page; extern(D) TGTKgtk_assistant_get_current_page gtk_assistant_get_current_page;
alias extern (C) _GtkWidget * function()TGTKgtk_assistant_new; extern(D) TGTKgtk_assistant_new gtk_assistant_new;
alias extern (C) GType function()TGTKgtk_assistant_get_type; extern(D) TGTKgtk_assistant_get_type gtk_assistant_get_type;
alias extern (C) void function(aGtkAspectFrame *, float, float, float, gint)TGTKgtk_aspect_frame_set; extern(D) TGTKgtk_aspect_frame_set gtk_aspect_frame_set;
alias extern (C) _GtkWidget * function(char *, float, float, float, gint)TGTKgtk_aspect_frame_new; extern(D) TGTKgtk_aspect_frame_new gtk_aspect_frame_new;
alias extern (C) GType function()TGTKgtk_aspect_frame_get_type; extern(D) TGTKgtk_aspect_frame_get_type gtk_aspect_frame_get_type;
alias extern (C) gint function(aGtkFrame *)TGTKgtk_frame_get_shadow_type; extern(D) TGTKgtk_frame_get_shadow_type gtk_frame_get_shadow_type;
alias extern (C) void function(aGtkFrame *, gint)TGTKgtk_frame_set_shadow_type; extern(D) TGTKgtk_frame_set_shadow_type gtk_frame_set_shadow_type;
alias extern (C) void function(aGtkFrame *, float *, float *)TGTKgtk_frame_get_label_align; extern(D) TGTKgtk_frame_get_label_align gtk_frame_get_label_align;
alias extern (C) void function(aGtkFrame *, float, float)TGTKgtk_frame_set_label_align; extern(D) TGTKgtk_frame_set_label_align gtk_frame_set_label_align;
alias extern (C) _GtkWidget * function(aGtkFrame *)TGTKgtk_frame_get_label_widget; extern(D) TGTKgtk_frame_get_label_widget gtk_frame_get_label_widget;
alias extern (C) void function(aGtkFrame *, aGtkWidget *)TGTKgtk_frame_set_label_widget; extern(D) TGTKgtk_frame_set_label_widget gtk_frame_set_label_widget;
alias extern (C) char * function(aGtkFrame *)TGTKgtk_frame_get_label; extern(D) TGTKgtk_frame_get_label gtk_frame_get_label;
alias extern (C) void function(aGtkFrame *, char *)TGTKgtk_frame_set_label; extern(D) TGTKgtk_frame_set_label gtk_frame_set_label;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_frame_new; extern(D) TGTKgtk_frame_new gtk_frame_new;
alias extern (C) GType function()TGTKgtk_frame_get_type; extern(D) TGTKgtk_frame_get_type gtk_frame_get_type;
alias extern (C) void function(aGtkArrow *, gint, gint)TGTKgtk_arrow_set; extern(D) TGTKgtk_arrow_set gtk_arrow_set;
alias extern (C) _GtkWidget * function(gint, gint)TGTKgtk_arrow_new; extern(D) TGTKgtk_arrow_new gtk_arrow_new;
alias extern (C) GType function()TGTKgtk_arrow_get_type; extern(D) TGTKgtk_arrow_get_type gtk_arrow_get_type;
alias extern (C) void function(aGtkAlignment *, guint *, guint *, guint *, guint *)TGTKgtk_alignment_get_padding; extern(D) TGTKgtk_alignment_get_padding gtk_alignment_get_padding;
alias extern (C) void function(aGtkAlignment *, guint, guint, guint, guint)TGTKgtk_alignment_set_padding; extern(D) TGTKgtk_alignment_set_padding gtk_alignment_set_padding;
alias extern (C) void function(aGtkAlignment *, float, float, float, float)TGTKgtk_alignment_set; extern(D) TGTKgtk_alignment_set gtk_alignment_set;
alias extern (C) _GtkWidget * function(float, float, float, float)TGTKgtk_alignment_new; extern(D) TGTKgtk_alignment_new gtk_alignment_new;
alias extern (C) GType function()TGTKgtk_alignment_get_type; extern(D) TGTKgtk_alignment_get_type gtk_alignment_get_type;
//alias extern (C) void function(aGtkActionGroup *, aGtkAction *)TGTK_gtk_action_group_emit_post_activate; extern(D) TGTK_gtk_action_group_emit_post_activate _gtk_action_group_emit_post_activate;
//alias extern (C) void function(aGtkActionGroup *, aGtkAction *)TGTK_gtk_action_group_emit_pre_activate; extern(D) TGTK_gtk_action_group_emit_pre_activate _gtk_action_group_emit_pre_activate;
//alias extern (C) void function(aGtkActionGroup *, aGtkAction *, aGtkWidget *)TGTK_gtk_action_group_emit_disconnect_proxy; extern(D) TGTK_gtk_action_group_emit_disconnect_proxy _gtk_action_group_emit_disconnect_proxy;
//alias extern (C) void function(aGtkActionGroup *, aGtkAction *, aGtkWidget *)TGTK_gtk_action_group_emit_connect_proxy; extern(D) TGTK_gtk_action_group_emit_connect_proxy _gtk_action_group_emit_connect_proxy;
alias extern (C) char * function(aGtkActionGroup *, char *)TGTKgtk_action_group_translate_string; extern(D) TGTKgtk_action_group_translate_string gtk_action_group_translate_string;
alias extern (C) void function(aGtkActionGroup *, char *)TGTKgtk_action_group_set_translation_domain; extern(D) TGTKgtk_action_group_set_translation_domain gtk_action_group_set_translation_domain;
alias extern (C) void function(aGtkActionGroup *, _BCD_func__12124, void *, _BCD_func__13158)TGTKgtk_action_group_set_translate_func; extern(D) TGTKgtk_action_group_set_translate_func gtk_action_group_set_translate_func;
alias extern (C) void function(aGtkActionGroup *, aGtkRadioActionEntry *, guint, gint, _BCD_func__12122, void *, _BCD_func__13158)TGTKgtk_action_group_add_radio_actions_full; extern(D) TGTKgtk_action_group_add_radio_actions_full gtk_action_group_add_radio_actions_full;
alias extern (C) void function(aGtkActionGroup *, aGtkToggleActionEntry *, guint, void *, _BCD_func__13158)TGTKgtk_action_group_add_toggle_actions_full; extern(D) TGTKgtk_action_group_add_toggle_actions_full gtk_action_group_add_toggle_actions_full;
alias extern (C) void function(aGtkActionGroup *, aGtkActionEntry *, guint, void *, _BCD_func__13158)TGTKgtk_action_group_add_actions_full; extern(D) TGTKgtk_action_group_add_actions_full gtk_action_group_add_actions_full;
alias extern (C) void function(aGtkActionGroup *, aGtkRadioActionEntry *, guint, gint, _BCD_func__12122, void *)TGTKgtk_action_group_add_radio_actions; extern(D) TGTKgtk_action_group_add_radio_actions gtk_action_group_add_radio_actions;
alias extern (C) void function(aGtkActionGroup *, aGtkToggleActionEntry *, guint, void *)TGTKgtk_action_group_add_toggle_actions; extern(D) TGTKgtk_action_group_add_toggle_actions gtk_action_group_add_toggle_actions;
alias extern (C) void function(aGtkActionGroup *, aGtkActionEntry *, guint, void *)TGTKgtk_action_group_add_actions; extern(D) TGTKgtk_action_group_add_actions gtk_action_group_add_actions;
alias extern (C) void function(aGtkActionGroup *, aGtkAction *)TGTKgtk_action_group_remove_action; extern(D) TGTKgtk_action_group_remove_action gtk_action_group_remove_action;
alias extern (C) void function(aGtkActionGroup *, aGtkAction *, char *)TGTKgtk_action_group_add_action_with_accel; extern(D) TGTKgtk_action_group_add_action_with_accel gtk_action_group_add_action_with_accel;
alias extern (C) void function(aGtkActionGroup *, aGtkAction *)TGTKgtk_action_group_add_action; extern(D) TGTKgtk_action_group_add_action gtk_action_group_add_action;
alias extern (C) _GList * function(aGtkActionGroup *)TGTKgtk_action_group_list_actions; extern(D) TGTKgtk_action_group_list_actions gtk_action_group_list_actions;
alias extern (C) _GtkAction * function(aGtkActionGroup *, char *)TGTKgtk_action_group_get_action; extern(D) TGTKgtk_action_group_get_action gtk_action_group_get_action;
alias extern (C) void function(aGtkActionGroup *, gint)TGTKgtk_action_group_set_visible; extern(D) TGTKgtk_action_group_set_visible gtk_action_group_set_visible;
alias extern (C) gint function(aGtkActionGroup *)TGTKgtk_action_group_get_visible; extern(D) TGTKgtk_action_group_get_visible gtk_action_group_get_visible;
alias extern (C) void function(aGtkActionGroup *, gint)TGTKgtk_action_group_set_sensitive; extern(D) TGTKgtk_action_group_set_sensitive gtk_action_group_set_sensitive;
alias extern (C) gint function(aGtkActionGroup *)TGTKgtk_action_group_get_sensitive; extern(D) TGTKgtk_action_group_get_sensitive gtk_action_group_get_sensitive;
alias extern (C) char * function(aGtkActionGroup *)TGTKgtk_action_group_get_name; extern(D) TGTKgtk_action_group_get_name gtk_action_group_get_name;
alias extern (C) _GtkActionGroup * function(char *)TGTKgtk_action_group_new; extern(D) TGTKgtk_action_group_new gtk_action_group_new;
alias extern (C) GType function()TGTKgtk_action_group_get_type; extern(D) TGTKgtk_action_group_get_type gtk_action_group_get_type;
alias extern (C) void function(char *, char *)TGTKgtk_item_factories_path_delete; extern(D) TGTKgtk_item_factories_path_delete gtk_item_factories_path_delete;
alias extern (C) void function(guint, GtkMenuEntry *)TGTKgtk_item_factory_create_menu_entries; extern(D) TGTKgtk_item_factory_create_menu_entries gtk_item_factory_create_menu_entries;
alias extern (C) _GtkItemFactory * function(char *)TGTKgtk_item_factory_from_path; extern(D) TGTKgtk_item_factory_from_path gtk_item_factory_from_path;
alias extern (C) void function(aGtkItemFactory *, guint, aGtkItemFactoryEntry *, void *, guint)TGTKgtk_item_factory_create_items_ac; extern(D) TGTKgtk_item_factory_create_items_ac gtk_item_factory_create_items_ac;
alias extern (C) void function(aGtkItemFactory *, _BCD_func__12124, void *, _BCD_func__13158)TGTKgtk_item_factory_set_translate_func; extern(D) TGTKgtk_item_factory_set_translate_func gtk_item_factory_set_translate_func;
alias extern (C) void * function(aGtkWidget *)TGTKgtk_item_factory_popup_data_from_widget; extern(D) TGTKgtk_item_factory_popup_data_from_widget gtk_item_factory_popup_data_from_widget;
alias extern (C) void * function(aGtkItemFactory *)TGTKgtk_item_factory_popup_data; extern(D) TGTKgtk_item_factory_popup_data gtk_item_factory_popup_data;
alias extern (C) void function(aGtkItemFactory *, void *, _BCD_func__13158, guint, guint, guint, guint)TGTKgtk_item_factory_popup_with_data; extern(D) TGTKgtk_item_factory_popup_with_data gtk_item_factory_popup_with_data;
alias extern (C) void function(aGtkItemFactory *, guint, guint, guint, guint)TGTKgtk_item_factory_popup; extern(D) TGTKgtk_item_factory_popup gtk_item_factory_popup;
alias extern (C) void function(aGtkItemFactory *, guint, aGtkItemFactoryEntry *)TGTKgtk_item_factory_delete_entries; extern(D) TGTKgtk_item_factory_delete_entries gtk_item_factory_delete_entries;
alias extern (C) void function(aGtkItemFactory *, aGtkItemFactoryEntry *)TGTKgtk_item_factory_delete_entry; extern(D) TGTKgtk_item_factory_delete_entry gtk_item_factory_delete_entry;
alias extern (C) void function(aGtkItemFactory *, char *)TGTKgtk_item_factory_delete_item; extern(D) TGTKgtk_item_factory_delete_item gtk_item_factory_delete_item;
alias extern (C) void function(aGtkItemFactory *, guint, aGtkItemFactoryEntry *, void *)TGTKgtk_item_factory_create_items; extern(D) TGTKgtk_item_factory_create_items gtk_item_factory_create_items;
alias extern (C) void function(aGtkItemFactory *, aGtkItemFactoryEntry *, void *, guint)TGTKgtk_item_factory_create_item; extern(D) TGTKgtk_item_factory_create_item gtk_item_factory_create_item;
alias extern (C) _GtkWidget * function(aGtkItemFactory *, guint)TGTKgtk_item_factory_get_item_by_action; extern(D) TGTKgtk_item_factory_get_item_by_action gtk_item_factory_get_item_by_action;
alias extern (C) _GtkWidget * function(aGtkItemFactory *, guint)TGTKgtk_item_factory_get_widget_by_action; extern(D) TGTKgtk_item_factory_get_widget_by_action gtk_item_factory_get_widget_by_action;
alias extern (C) _GtkWidget * function(aGtkItemFactory *, char *)TGTKgtk_item_factory_get_widget; extern(D) TGTKgtk_item_factory_get_widget gtk_item_factory_get_widget;
alias extern (C) _GtkWidget * function(aGtkItemFactory *, char *)TGTKgtk_item_factory_get_item; extern(D) TGTKgtk_item_factory_get_item gtk_item_factory_get_item;
alias extern (C) char * function(aGtkWidget *)TGTKgtk_item_factory_path_from_widget; extern(D) TGTKgtk_item_factory_path_from_widget gtk_item_factory_path_from_widget;
alias extern (C) _GtkItemFactory * function(aGtkWidget *)TGTKgtk_item_factory_from_widget; extern(D) TGTKgtk_item_factory_from_widget gtk_item_factory_from_widget;
alias extern (C) void function(aGtkWidget *, char *, aGtkAccelGroup *, guint, gint)TGTKgtk_item_factory_add_foreign; extern(D) TGTKgtk_item_factory_add_foreign gtk_item_factory_add_foreign;
alias extern (C) void function(aGtkItemFactory *, guint, char *, aGtkAccelGroup *)TGTKgtk_item_factory_construct; extern(D) TGTKgtk_item_factory_construct gtk_item_factory_construct;
alias extern (C) _GtkItemFactory * function(guint, char *, aGtkAccelGroup *)TGTKgtk_item_factory_new; extern(D) TGTKgtk_item_factory_new gtk_item_factory_new;
alias extern (C) guint function()TGTKgtk_item_factory_get_type; extern(D) TGTKgtk_item_factory_get_type gtk_item_factory_get_type;
//alias extern (C) void function(aGtkAction *, aGtkWidget *, gint)TGTK_gtk_action_sync_menu_visible; extern(D) TGTK_gtk_action_sync_menu_visible _gtk_action_sync_menu_visible;
//alias extern (C) void function(aGtkAction *)TGTK_gtk_action_sync_visible; extern(D) TGTK_gtk_action_sync_visible _gtk_action_sync_visible;
//alias extern (C) void function(aGtkAction *)TGTK_gtk_action_sync_sensitive; extern(D) TGTK_gtk_action_sync_sensitive _gtk_action_sync_sensitive;
alias extern (C) void function(aGtkAction *, aGtkAccelGroup *)TGTKgtk_action_set_accel_group; extern(D) TGTKgtk_action_set_accel_group gtk_action_set_accel_group;
alias extern (C) void function(aGtkAction *, char *)TGTKgtk_action_set_accel_path; extern(D) TGTKgtk_action_set_accel_path gtk_action_set_accel_path;
//alias extern (C) void function(aGtkAction *)TGTK_gtk_action_emit_activate; extern(D) TGTK_gtk_action_emit_activate _gtk_action_emit_activate;
alias extern (C) void function(aGtkAction *, aGtkWidget *)TGTKgtk_action_unblock_activate_from; extern(D) TGTKgtk_action_unblock_activate_from gtk_action_unblock_activate_from;
alias extern (C) void function(aGtkAction *, aGtkWidget *)TGTKgtk_action_block_activate_from; extern(D) TGTKgtk_action_block_activate_from gtk_action_block_activate_from;
alias extern (C) _GClosure * function(aGtkAction *)TGTKgtk_action_get_accel_closure; extern(D) TGTKgtk_action_get_accel_closure gtk_action_get_accel_closure;
alias extern (C) char * function(aGtkAction *)TGTKgtk_action_get_accel_path; extern(D) TGTKgtk_action_get_accel_path gtk_action_get_accel_path;
alias extern (C) void function(aGtkAction *)TGTKgtk_action_disconnect_accelerator; extern(D) TGTKgtk_action_disconnect_accelerator gtk_action_disconnect_accelerator;
alias extern (C) void function(aGtkAction *)TGTKgtk_action_connect_accelerator; extern(D) TGTKgtk_action_connect_accelerator gtk_action_connect_accelerator;
alias extern (C) _GtkAction * function(aGtkWidget *)TGTKgtk_widget_get_action; extern(D) TGTKgtk_widget_get_action gtk_widget_get_action;
alias extern (C) _GSList * function(aGtkAction *)TGTKgtk_action_get_proxies; extern(D) TGTKgtk_action_get_proxies gtk_action_get_proxies;
alias extern (C) void function(aGtkAction *, aGtkWidget *)TGTKgtk_action_disconnect_proxy; extern(D) TGTKgtk_action_disconnect_proxy gtk_action_disconnect_proxy;
alias extern (C) void function(aGtkAction *, aGtkWidget *)TGTKgtk_action_connect_proxy; extern(D) TGTKgtk_action_connect_proxy gtk_action_connect_proxy;
alias extern (C) _GtkWidget * function(aGtkAction *)TGTKgtk_action_create_menu; extern(D) TGTKgtk_action_create_menu gtk_action_create_menu;
alias extern (C) _GtkWidget * function(aGtkAction *)TGTKgtk_action_create_tool_item; extern(D) TGTKgtk_action_create_tool_item gtk_action_create_tool_item;
alias extern (C) _GtkWidget * function(aGtkAction *)TGTKgtk_action_create_menu_item; extern(D) TGTKgtk_action_create_menu_item gtk_action_create_menu_item;
alias extern (C) _GtkWidget * function(aGtkAction *, gint)TGTKgtk_action_create_icon; extern(D) TGTKgtk_action_create_icon gtk_action_create_icon;
alias extern (C) void function(aGtkAction *)TGTKgtk_action_activate; extern(D) TGTKgtk_action_activate gtk_action_activate;
alias extern (C) void function(aGtkAction *, gint)TGTKgtk_action_set_visible; extern(D) TGTKgtk_action_set_visible gtk_action_set_visible;
alias extern (C) gint function(aGtkAction *)TGTKgtk_action_get_visible; extern(D) TGTKgtk_action_get_visible gtk_action_get_visible;
alias extern (C) gint function(aGtkAction *)TGTKgtk_action_is_visible; extern(D) TGTKgtk_action_is_visible gtk_action_is_visible;
alias extern (C) void function(aGtkAction *, gint)TGTKgtk_action_set_sensitive; extern(D) TGTKgtk_action_set_sensitive gtk_action_set_sensitive;
alias extern (C) gint function(aGtkAction *)TGTKgtk_action_get_sensitive; extern(D) TGTKgtk_action_get_sensitive gtk_action_get_sensitive;
alias extern (C) gint function(aGtkAction *)TGTKgtk_action_is_sensitive; extern(D) TGTKgtk_action_is_sensitive gtk_action_is_sensitive;
alias extern (C) char * function(aGtkAction *)TGTKgtk_action_get_name; extern(D) TGTKgtk_action_get_name gtk_action_get_name;
alias extern (C) _GtkAction * function(char *, char *, char *, char *)TGTKgtk_action_new; extern(D) TGTKgtk_action_new gtk_action_new;
alias extern (C) GType function()TGTKgtk_action_get_type; extern(D) TGTKgtk_action_get_type gtk_action_get_type;
alias extern (C) void function(aGtkAccessible *)TGTKgtk_accessible_connect_widget_destroyed; extern(D) TGTKgtk_accessible_connect_widget_destroyed gtk_accessible_connect_widget_destroyed;
alias extern (C) GType function()TGTKgtk_accessible_get_type; extern(D) TGTKgtk_accessible_get_type gtk_accessible_get_type;
//alias extern (C) gint function(char *)TGTK_gtk_accel_path_is_valid; extern(D) TGTK_gtk_accel_path_is_valid _gtk_accel_path_is_valid;
//alias extern (C) void function(char *, aGtkAccelGroup *)TGTK_gtk_accel_map_remove_group; extern(D) TGTK_gtk_accel_map_remove_group _gtk_accel_map_remove_group;
//alias extern (C) void function(char *, aGtkAccelGroup *)TGTK_gtk_accel_map_add_group; extern(D) TGTK_gtk_accel_map_add_group _gtk_accel_map_add_group;
//alias extern (C) void function()TGTK_gtk_accel_map_init; extern(D) TGTK_gtk_accel_map_init _gtk_accel_map_init;
alias extern (C) void * function()TGTKgtk_accel_map_get; extern(D) TGTKgtk_accel_map_get gtk_accel_map_get;
alias extern (C) GType function()TGTKgtk_accel_map_get_type; extern(D) TGTKgtk_accel_map_get_type gtk_accel_map_get_type;
alias extern (C) void function(void *, _BCD_func__12490)TGTKgtk_accel_map_foreach_unfiltered; extern(D) TGTKgtk_accel_map_foreach_unfiltered gtk_accel_map_foreach_unfiltered;
alias extern (C) void function(char *)TGTKgtk_accel_map_add_filter; extern(D) TGTKgtk_accel_map_add_filter gtk_accel_map_add_filter;
alias extern (C) void function(char *)TGTKgtk_accel_map_unlock_path; extern(D) TGTKgtk_accel_map_unlock_path gtk_accel_map_unlock_path;
alias extern (C) void function(char *)TGTKgtk_accel_map_lock_path; extern(D) TGTKgtk_accel_map_lock_path gtk_accel_map_lock_path;
alias extern (C) void function(gint)TGTKgtk_accel_map_save_fd; extern(D) TGTKgtk_accel_map_save_fd gtk_accel_map_save_fd;
alias extern (C) void function(_GScanner *)TGTKgtk_accel_map_load_scanner; extern(D) TGTKgtk_accel_map_load_scanner gtk_accel_map_load_scanner;
alias extern (C) void function(gint)TGTKgtk_accel_map_load_fd; extern(D) TGTKgtk_accel_map_load_fd gtk_accel_map_load_fd;
alias extern (C) void function(void *, _BCD_func__12490)TGTKgtk_accel_map_foreach; extern(D) TGTKgtk_accel_map_foreach gtk_accel_map_foreach;
alias extern (C) void function(char *)TGTKgtk_accel_map_save; extern(D) TGTKgtk_accel_map_save gtk_accel_map_save;
alias extern (C) void function(char *)TGTKgtk_accel_map_load; extern(D) TGTKgtk_accel_map_load gtk_accel_map_load;
alias extern (C) gint function(char *, guint, gint, gint)TGTKgtk_accel_map_change_entry; extern(D) TGTKgtk_accel_map_change_entry gtk_accel_map_change_entry;
alias extern (C) gint function(char *, aGtkAccelKey *)TGTKgtk_accel_map_lookup_entry; extern(D) TGTKgtk_accel_map_lookup_entry gtk_accel_map_lookup_entry;
alias extern (C) void function(char *, guint, gint)TGTKgtk_accel_map_add_entry; extern(D) TGTKgtk_accel_map_add_entry gtk_accel_map_add_entry;
//alias extern (C) char * function(aGtkAccelLabelClass *, guint, gint)TGTK_gtk_accel_label_class_get_accelerator_label; extern(D) TGTK_gtk_accel_label_class_get_accelerator_label _gtk_accel_label_class_get_accelerator_label;
alias extern (C) gint function(aGtkAccelLabel *)TGTKgtk_accel_label_refetch; extern(D) TGTKgtk_accel_label_refetch gtk_accel_label_refetch;
alias extern (C) void function(aGtkAccelLabel *, _GClosure *)TGTKgtk_accel_label_set_accel_closure; extern(D) TGTKgtk_accel_label_set_accel_closure gtk_accel_label_set_accel_closure;
alias extern (C) void function(aGtkAccelLabel *, aGtkWidget *)TGTKgtk_accel_label_set_accel_widget; extern(D) TGTKgtk_accel_label_set_accel_widget gtk_accel_label_set_accel_widget;
alias extern (C) guint function(aGtkAccelLabel *)TGTKgtk_accel_label_get_accel_width; extern(D) TGTKgtk_accel_label_get_accel_width gtk_accel_label_get_accel_width;
alias extern (C) _GtkWidget * function(aGtkAccelLabel *)TGTKgtk_accel_label_get_accel_widget; extern(D) TGTKgtk_accel_label_get_accel_widget gtk_accel_label_get_accel_widget;
alias extern (C) _GtkWidget * function(char *)TGTKgtk_accel_label_new; extern(D) TGTKgtk_accel_label_new gtk_accel_label_new;
alias extern (C) GType function()TGTKgtk_accel_label_get_type; extern(D) TGTKgtk_accel_label_get_type gtk_accel_label_get_type;
alias extern (C) guint function(aGtkLabel *, char *)TGTKgtk_label_parse_uline; extern(D) TGTKgtk_label_parse_uline gtk_label_parse_uline;
alias extern (C) void function(aGtkLabel *, char * *)TGTKgtk_label_get; extern(D) TGTKgtk_label_get gtk_label_get;
alias extern (C) gint function(aGtkLabel *)TGTKgtk_label_get_single_line_mode; extern(D) TGTKgtk_label_get_single_line_mode gtk_label_get_single_line_mode;
alias extern (C) void function(aGtkLabel *, gint)TGTKgtk_label_set_single_line_mode; extern(D) TGTKgtk_label_set_single_line_mode gtk_label_set_single_line_mode;
alias extern (C) void function(aGtkLabel *, gint *, gint *)TGTKgtk_label_get_layout_offsets; extern(D) TGTKgtk_label_get_layout_offsets gtk_label_get_layout_offsets;
alias extern (C) void * function(aGtkLabel *)TGTKgtk_label_get_layout; extern(D) TGTKgtk_label_get_layout gtk_label_get_layout;
alias extern (C) gint function(aGtkLabel *, gint *, gint *)TGTKgtk_label_get_selection_bounds; extern(D) TGTKgtk_label_get_selection_bounds gtk_label_get_selection_bounds;
alias extern (C) void function(aGtkLabel *, gint, gint)TGTKgtk_label_select_region; extern(D) TGTKgtk_label_select_region gtk_label_select_region;
alias extern (C) double function(aGtkLabel *)TGTKgtk_label_get_angle; extern(D) TGTKgtk_label_get_angle gtk_label_get_angle;
alias extern (C) void function(aGtkLabel *, double)TGTKgtk_label_set_angle; extern(D) TGTKgtk_label_set_angle gtk_label_set_angle;
alias extern (C) gint function(aGtkLabel *)TGTKgtk_label_get_selectable; extern(D) TGTKgtk_label_get_selectable gtk_label_get_selectable;
alias extern (C) void function(aGtkLabel *, gint)TGTKgtk_label_set_selectable; extern(D) TGTKgtk_label_set_selectable gtk_label_set_selectable;
alias extern (C) gint function(aGtkLabel *)TGTKgtk_label_get_line_wrap_mode; extern(D) TGTKgtk_label_get_line_wrap_mode gtk_label_get_line_wrap_mode;
alias extern (C) void function(aGtkLabel *, gint)TGTKgtk_label_set_line_wrap_mode; extern(D) TGTKgtk_label_set_line_wrap_mode gtk_label_set_line_wrap_mode;
alias extern (C) gint function(aGtkLabel *)TGTKgtk_label_get_line_wrap; extern(D) TGTKgtk_label_get_line_wrap gtk_label_get_line_wrap;
alias extern (C) void function(aGtkLabel *, gint)TGTKgtk_label_set_line_wrap; extern(D) TGTKgtk_label_set_line_wrap gtk_label_set_line_wrap;
alias extern (C) void function(aGtkLabel *, in char *)TGTKgtk_label_set_pattern; extern(D) TGTKgtk_label_set_pattern gtk_label_set_pattern;
alias extern (C) gint function(aGtkLabel *)TGTKgtk_label_get_max_width_chars; extern(D) TGTKgtk_label_get_max_width_chars gtk_label_get_max_width_chars;
alias extern (C) void function(aGtkLabel *, gint)TGTKgtk_label_set_max_width_chars; extern(D) TGTKgtk_label_set_max_width_chars gtk_label_set_max_width_chars;
alias extern (C) gint function(aGtkLabel *)TGTKgtk_label_get_width_chars; extern(D) TGTKgtk_label_get_width_chars gtk_label_get_width_chars;
alias extern (C) void function(aGtkLabel *, gint)TGTKgtk_label_set_width_chars; extern(D) TGTKgtk_label_set_width_chars gtk_label_set_width_chars;
alias extern (C) gint function(aGtkLabel *)TGTKgtk_label_get_ellipsize; extern(D) TGTKgtk_label_get_ellipsize gtk_label_get_ellipsize;
alias extern (C) void function(aGtkLabel *, gint)TGTKgtk_label_set_ellipsize; extern(D) TGTKgtk_label_set_ellipsize gtk_label_set_ellipsize;
alias extern (C) gint function(aGtkLabel *)TGTKgtk_label_get_justify; extern(D) TGTKgtk_label_get_justify gtk_label_get_justify;
alias extern (C) void function(aGtkLabel *, gint)TGTKgtk_label_set_justify; extern(D) TGTKgtk_label_set_justify gtk_label_set_justify;
alias extern (C) void function(aGtkLabel *, in char *)TGTKgtk_label_set_text_with_mnemonic; extern(D) TGTKgtk_label_set_text_with_mnemonic gtk_label_set_text_with_mnemonic;
alias extern (C) _GtkWidget * function(aGtkLabel *)TGTKgtk_label_get_mnemonic_widget; extern(D) TGTKgtk_label_get_mnemonic_widget gtk_label_get_mnemonic_widget;
alias extern (C) void function(aGtkLabel *, aGtkWidget *)TGTKgtk_label_set_mnemonic_widget; extern(D) TGTKgtk_label_set_mnemonic_widget gtk_label_set_mnemonic_widget;
alias extern (C) guint function(aGtkLabel *)TGTKgtk_label_get_mnemonic_keyval; extern(D) TGTKgtk_label_get_mnemonic_keyval gtk_label_get_mnemonic_keyval;
alias extern (C) void function(aGtkLabel *, in char *)TGTKgtk_label_set_markup_with_mnemonic; extern(D) TGTKgtk_label_set_markup_with_mnemonic gtk_label_set_markup_with_mnemonic;
alias extern (C) gint function(aGtkLabel *)TGTKgtk_label_get_use_underline; extern(D) TGTKgtk_label_get_use_underline gtk_label_get_use_underline;
alias extern (C) void function(aGtkLabel *, gint)TGTKgtk_label_set_use_underline; extern(D) TGTKgtk_label_set_use_underline gtk_label_set_use_underline;
alias extern (C) gint function(aGtkLabel *)TGTKgtk_label_get_use_markup; extern(D) TGTKgtk_label_get_use_markup gtk_label_get_use_markup;
alias extern (C) void function(aGtkLabel *, gint)TGTKgtk_label_set_use_markup; extern(D) TGTKgtk_label_set_use_markup gtk_label_set_use_markup;
alias extern (C) void function(aGtkLabel *, in char *)TGTKgtk_label_set_markup; extern(D) TGTKgtk_label_set_markup gtk_label_set_markup;
alias extern (C) char * function(aGtkLabel *)TGTKgtk_label_get_label; extern(D) TGTKgtk_label_get_label gtk_label_get_label;
alias extern (C) void function(aGtkLabel *, in char *)TGTKgtk_label_set_label; extern(D) TGTKgtk_label_set_label gtk_label_set_label;
alias extern (C) void * function(aGtkLabel *)TGTKgtk_label_get_attributes; extern(D) TGTKgtk_label_get_attributes gtk_label_get_attributes;
alias extern (C) void function(aGtkLabel *, void *)TGTKgtk_label_set_attributes; extern(D) TGTKgtk_label_set_attributes gtk_label_set_attributes;
alias extern (C) char * function(aGtkLabel *)TGTKgtk_label_get_text; extern(D) TGTKgtk_label_get_text gtk_label_get_text;
alias extern (C) void function(aGtkLabel *, in char *)TGTKgtk_label_set_text; extern(D) TGTKgtk_label_set_text gtk_label_set_text;
alias extern (C) _GtkWidget * function(in char *)TGTKgtk_label_new_with_mnemonic; extern(D) TGTKgtk_label_new_with_mnemonic gtk_label_new_with_mnemonic;
alias extern (C) _GtkWidget * function(in char *)TGTKgtk_label_new; extern(D) TGTKgtk_label_new gtk_label_new;
alias extern (C) GType function()TGTKgtk_label_get_type; extern(D) TGTKgtk_label_get_type gtk_label_get_type;
alias extern (C) _GList * function(aGtkWidget *)TGTKgtk_menu_get_for_attach_widget; extern(D) TGTKgtk_menu_get_for_attach_widget gtk_menu_get_for_attach_widget;
alias extern (C) void function(aGtkMenu *, gint)TGTKgtk_menu_set_monitor; extern(D) TGTKgtk_menu_set_monitor gtk_menu_set_monitor;
alias extern (C) void function(aGtkMenu *, aGtkWidget *, guint, guint, guint, guint)TGTKgtk_menu_attach; extern(D) TGTKgtk_menu_attach gtk_menu_attach;
alias extern (C) void function(aGtkMenu *, _GdkScreen *)TGTKgtk_menu_set_screen; extern(D) TGTKgtk_menu_set_screen gtk_menu_set_screen;
alias extern (C) void function(aGtkMenu *, aGtkWidget *, gint)TGTKgtk_menu_reorder_child; extern(D) TGTKgtk_menu_reorder_child gtk_menu_reorder_child;
alias extern (C) char * function(aGtkMenu *)TGTKgtk_menu_get_title; extern(D) TGTKgtk_menu_get_title gtk_menu_get_title;
alias extern (C) void function(aGtkMenu *, in char *)TGTKgtk_menu_set_title; extern(D) TGTKgtk_menu_set_title gtk_menu_set_title;
alias extern (C) gint function(aGtkMenu *)TGTKgtk_menu_get_tearoff_state; extern(D) TGTKgtk_menu_get_tearoff_state gtk_menu_get_tearoff_state;
alias extern (C) void function(aGtkMenu *, gint)TGTKgtk_menu_set_tearoff_state; extern(D) TGTKgtk_menu_set_tearoff_state gtk_menu_set_tearoff_state;
alias extern (C) _GtkWidget * function(aGtkMenu *)TGTKgtk_menu_get_attach_widget; extern(D) TGTKgtk_menu_get_attach_widget gtk_menu_get_attach_widget;
alias extern (C) void function(aGtkMenu *)TGTKgtk_menu_detach; extern(D) TGTKgtk_menu_detach gtk_menu_detach;
alias extern (C) void function(aGtkMenu *, aGtkWidget *, _BCD_func__12552)TGTKgtk_menu_attach_to_widget; extern(D) TGTKgtk_menu_attach_to_widget gtk_menu_attach_to_widget;
alias extern (C) void function(aGtkMenu *, in char *)TGTKgtk_menu_set_accel_path; extern(D) TGTKgtk_menu_set_accel_path gtk_menu_set_accel_path;
alias extern (C) _GtkAccelGroup * function(aGtkMenu *)TGTKgtk_menu_get_accel_group; extern(D) TGTKgtk_menu_get_accel_group gtk_menu_get_accel_group;
alias extern (C) void function(aGtkMenu *, aGtkAccelGroup *)TGTKgtk_menu_set_accel_group; extern(D) TGTKgtk_menu_set_accel_group gtk_menu_set_accel_group;
alias extern (C) void function(aGtkMenu *, guint)TGTKgtk_menu_set_active; extern(D) TGTKgtk_menu_set_active gtk_menu_set_active;
alias extern (C) _GtkWidget * function(aGtkMenu *)TGTKgtk_menu_get_active; extern(D) TGTKgtk_menu_get_active gtk_menu_get_active;
alias extern (C) void function(aGtkMenu *)TGTKgtk_menu_popdown; extern(D) TGTKgtk_menu_popdown gtk_menu_popdown;
alias extern (C) void function(aGtkMenu *)TGTKgtk_menu_reposition; extern(D) TGTKgtk_menu_reposition gtk_menu_reposition;
alias extern (C) void function(aGtkMenu *, aGtkWidget *, aGtkWidget *, _BCD_func__12553, void *, guint, guint32)TGTKgtk_menu_popup; extern(D) TGTKgtk_menu_popup gtk_menu_popup;
alias extern (C) _GtkWidget * function()TGTKgtk_menu_new; extern(D) TGTKgtk_menu_new gtk_menu_new;
alias extern (C) GType function()TGTKgtk_menu_get_type; extern(D) TGTKgtk_menu_get_type gtk_menu_get_type;
alias extern (C) void function(aGtkMenuShell *, gint)TGTKgtk_menu_shell_set_take_focus; extern(D) TGTKgtk_menu_shell_set_take_focus gtk_menu_shell_set_take_focus;
alias extern (C) gint function(aGtkMenuShell *)TGTKgtk_menu_shell_get_take_focus; extern(D) TGTKgtk_menu_shell_get_take_focus gtk_menu_shell_get_take_focus;
//alias extern (C) void function(aGtkMenuShell *, guint, aGtkWidget *)TGTK_gtk_menu_shell_remove_mnemonic; extern(D) TGTK_gtk_menu_shell_remove_mnemonic _gtk_menu_shell_remove_mnemonic;
//alias extern (C) void function(aGtkMenuShell *, guint, aGtkWidget *)TGTK_gtk_menu_shell_add_mnemonic; extern(D) TGTK_gtk_menu_shell_add_mnemonic _gtk_menu_shell_add_mnemonic;
alias extern (C) void function(aGtkMenuShell *)TGTKgtk_menu_shell_cancel; extern(D) TGTKgtk_menu_shell_cancel gtk_menu_shell_cancel;
//alias extern (C) gint function(aGtkMenuShell *)TGTK_gtk_menu_shell_get_popup_delay; extern(D) TGTK_gtk_menu_shell_get_popup_delay _gtk_menu_shell_get_popup_delay;
//alias extern (C) void function(aGtkMenuShell *)TGTK_gtk_menu_shell_activate; extern(D) TGTK_gtk_menu_shell_activate _gtk_menu_shell_activate;
//alias extern (C) void function(aGtkMenuShell *, gint)TGTK_gtk_menu_shell_select_last; extern(D) TGTK_gtk_menu_shell_select_last _gtk_menu_shell_select_last;
alias extern (C) void function(aGtkMenuShell *, gint)TGTKgtk_menu_shell_select_first; extern(D) TGTKgtk_menu_shell_select_first gtk_menu_shell_select_first;
alias extern (C) void function(aGtkMenuShell *, aGtkWidget *, gint)TGTKgtk_menu_shell_activate_item; extern(D) TGTKgtk_menu_shell_activate_item gtk_menu_shell_activate_item;
alias extern (C) void function(aGtkMenuShell *)TGTKgtk_menu_shell_deselect; extern(D) TGTKgtk_menu_shell_deselect gtk_menu_shell_deselect;
alias extern (C) void function(aGtkMenuShell *, aGtkWidget *)TGTKgtk_menu_shell_select_item; extern(D) TGTKgtk_menu_shell_select_item gtk_menu_shell_select_item;
alias extern (C) void function(aGtkMenuShell *)TGTKgtk_menu_shell_deactivate; extern(D) TGTKgtk_menu_shell_deactivate gtk_menu_shell_deactivate;
alias extern (C) void function(aGtkMenuShell *, aGtkWidget *, gint)TGTKgtk_menu_shell_insert; extern(D) TGTKgtk_menu_shell_insert gtk_menu_shell_insert;
alias extern (C) void function(aGtkMenuShell *, aGtkWidget *)TGTKgtk_menu_shell_prepend; extern(D) TGTKgtk_menu_shell_prepend gtk_menu_shell_prepend;
alias extern (C) void function(aGtkMenuShell *, aGtkWidget *)TGTKgtk_menu_shell_append; extern(D) TGTKgtk_menu_shell_append gtk_menu_shell_append;
alias extern (C) GType function()TGTKgtk_menu_shell_get_type; extern(D) TGTKgtk_menu_shell_get_type gtk_menu_shell_get_type;
alias extern (C) void function(aGtkMisc *, gint *, gint *)TGTKgtk_misc_get_padding; extern(D) TGTKgtk_misc_get_padding gtk_misc_get_padding;
alias extern (C) void function(aGtkMisc *, gint, gint)TGTKgtk_misc_set_padding; extern(D) TGTKgtk_misc_set_padding gtk_misc_set_padding;
alias extern (C) void function(aGtkMisc *, float *, float *)TGTKgtk_misc_get_alignment; extern(D) TGTKgtk_misc_get_alignment gtk_misc_get_alignment;
alias extern (C) void function(aGtkMisc *, float, float)TGTKgtk_misc_set_alignment; extern(D) TGTKgtk_misc_set_alignment gtk_misc_set_alignment;
alias extern (C) GType function()TGTKgtk_misc_get_type; extern(D) TGTKgtk_misc_get_type gtk_misc_get_type;
alias extern (C) _BCD_func__12632 function(_BCD_func__12632, void *, _BCD_func__13158)TGTKgtk_about_dialog_set_url_hook; extern(D) TGTKgtk_about_dialog_set_url_hook gtk_about_dialog_set_url_hook;
alias extern (C) _BCD_func__12632 function(_BCD_func__12632, void *, _BCD_func__13158)TGTKgtk_about_dialog_set_email_hook; extern(D) TGTKgtk_about_dialog_set_email_hook gtk_about_dialog_set_email_hook;
alias extern (C) void function(aGtkAboutDialog *, in char *)TGTKgtk_about_dialog_set_logo_icon_name; extern(D) TGTKgtk_about_dialog_set_logo_icon_name gtk_about_dialog_set_logo_icon_name;
alias extern (C) char * function(aGtkAboutDialog *)TGTKgtk_about_dialog_get_logo_icon_name; extern(D) TGTKgtk_about_dialog_get_logo_icon_name gtk_about_dialog_get_logo_icon_name;
alias extern (C) void function(aGtkAboutDialog *, void *)TGTKgtk_about_dialog_set_logo; extern(D) TGTKgtk_about_dialog_set_logo gtk_about_dialog_set_logo;
alias extern (C) void * function(aGtkAboutDialog *)TGTKgtk_about_dialog_get_logo; extern(D) TGTKgtk_about_dialog_get_logo gtk_about_dialog_get_logo;
alias extern (C) void function(aGtkAboutDialog *, in char *)TGTKgtk_about_dialog_set_translator_credits; extern(D) TGTKgtk_about_dialog_set_translator_credits gtk_about_dialog_set_translator_credits;
alias extern (C) char * function(aGtkAboutDialog *)TGTKgtk_about_dialog_get_translator_credits; extern(D) TGTKgtk_about_dialog_get_translator_credits gtk_about_dialog_get_translator_credits;
alias extern (C) void function(aGtkAboutDialog *, in char * *)TGTKgtk_about_dialog_set_artists; extern(D) TGTKgtk_about_dialog_set_artists gtk_about_dialog_set_artists;
alias extern (C) char * * function(aGtkAboutDialog *)TGTKgtk_about_dialog_get_artists; extern(D) TGTKgtk_about_dialog_get_artists gtk_about_dialog_get_artists;
alias extern (C) void function(aGtkAboutDialog *, in char * *)TGTKgtk_about_dialog_set_documenters; extern(D) TGTKgtk_about_dialog_set_documenters gtk_about_dialog_set_documenters;
alias extern (C) char * * function(aGtkAboutDialog *)TGTKgtk_about_dialog_get_documenters; extern(D) TGTKgtk_about_dialog_get_documenters gtk_about_dialog_get_documenters;
alias extern (C) void function(aGtkAboutDialog *, in char * *)TGTKgtk_about_dialog_set_authors; extern(D) TGTKgtk_about_dialog_set_authors gtk_about_dialog_set_authors;
alias extern (C) char * * function(aGtkAboutDialog *)TGTKgtk_about_dialog_get_authors; extern(D) TGTKgtk_about_dialog_get_authors gtk_about_dialog_get_authors;
alias extern (C) void function(aGtkAboutDialog *, in char *)TGTKgtk_about_dialog_set_website_label; extern(D) TGTKgtk_about_dialog_set_website_label gtk_about_dialog_set_website_label;
alias extern (C) char * function(aGtkAboutDialog *)TGTKgtk_about_dialog_get_website_label; extern(D) TGTKgtk_about_dialog_get_website_label gtk_about_dialog_get_website_label;
alias extern (C) void function(aGtkAboutDialog *, in char *)TGTKgtk_about_dialog_set_website; extern(D) TGTKgtk_about_dialog_set_website gtk_about_dialog_set_website;
alias extern (C) char * function(aGtkAboutDialog *)TGTKgtk_about_dialog_get_website; extern(D) TGTKgtk_about_dialog_get_website gtk_about_dialog_get_website;
alias extern (C) void function(aGtkAboutDialog *, gint)TGTKgtk_about_dialog_set_wrap_license; extern(D) TGTKgtk_about_dialog_set_wrap_license gtk_about_dialog_set_wrap_license;
alias extern (C) gint function(aGtkAboutDialog *)TGTKgtk_about_dialog_get_wrap_license; extern(D) TGTKgtk_about_dialog_get_wrap_license gtk_about_dialog_get_wrap_license;
alias extern (C) void function(aGtkAboutDialog *, in char *)TGTKgtk_about_dialog_set_license; extern(D) TGTKgtk_about_dialog_set_license gtk_about_dialog_set_license;
alias extern (C) char * function(aGtkAboutDialog *)TGTKgtk_about_dialog_get_license; extern(D) TGTKgtk_about_dialog_get_license gtk_about_dialog_get_license;
alias extern (C) void function(aGtkAboutDialog *, in char *)TGTKgtk_about_dialog_set_comments; extern(D) TGTKgtk_about_dialog_set_comments gtk_about_dialog_set_comments;
alias extern (C) char * function(aGtkAboutDialog *)TGTKgtk_about_dialog_get_comments; extern(D) TGTKgtk_about_dialog_get_comments gtk_about_dialog_get_comments;
alias extern (C) void function(aGtkAboutDialog *, in char *)TGTKgtk_about_dialog_set_copyright; extern(D) TGTKgtk_about_dialog_set_copyright gtk_about_dialog_set_copyright;
alias extern (C) char * function(aGtkAboutDialog *)TGTKgtk_about_dialog_get_copyright; extern(D) TGTKgtk_about_dialog_get_copyright gtk_about_dialog_get_copyright;
alias extern (C) void function(aGtkAboutDialog *, in char *)TGTKgtk_about_dialog_set_version; extern(D) TGTKgtk_about_dialog_set_version gtk_about_dialog_set_version;
alias extern (C) char * function(aGtkAboutDialog *)TGTKgtk_about_dialog_get_version; extern(D) TGTKgtk_about_dialog_get_version gtk_about_dialog_get_version;
alias extern (C) void function(aGtkAboutDialog *, in char *)TGTKgtk_about_dialog_set_program_name; extern(D) TGTKgtk_about_dialog_set_program_name gtk_about_dialog_set_program_name;
alias extern (C) char * function(aGtkAboutDialog *)TGTKgtk_about_dialog_get_program_name; extern(D) TGTKgtk_about_dialog_get_program_name gtk_about_dialog_get_program_name;
alias extern (C) void function(aGtkAboutDialog *, in char *)TGTKgtk_about_dialog_set_name; extern(D) TGTKgtk_about_dialog_set_name gtk_about_dialog_set_name;
alias extern (C) char * function(aGtkAboutDialog *)TGTKgtk_about_dialog_get_name; extern(D) TGTKgtk_about_dialog_get_name gtk_about_dialog_get_name;
alias extern (C) void function(aGtkWindow *, in char *, ...)TGTKgtk_show_about_dialog; extern(D) TGTKgtk_show_about_dialog gtk_show_about_dialog;
alias extern (C) _GtkWidget * function()TGTKgtk_about_dialog_new; extern(D) TGTKgtk_about_dialog_new gtk_about_dialog_new;
alias extern (C) GType function()TGTKgtk_about_dialog_get_type; extern(D) TGTKgtk_about_dialog_get_type gtk_about_dialog_get_type;
//alias extern (C) void function(aGtkDialog *, gint)TGTK_gtk_dialog_set_ignore_separator; extern(D) TGTK_gtk_dialog_set_ignore_separator _gtk_dialog_set_ignore_separator;
alias extern (C) gint function(aGtkDialog *)TGTKgtk_dialog_run; extern(D) TGTKgtk_dialog_run gtk_dialog_run;
alias extern (C) void function(aGtkDialog *, gint)TGTKgtk_dialog_response; extern(D) TGTKgtk_dialog_response gtk_dialog_response;
alias extern (C) void function(aGtkDialog *, gint, gint *)TGTKgtk_dialog_set_alternative_button_order_from_array; extern(D) TGTKgtk_dialog_set_alternative_button_order_from_array gtk_dialog_set_alternative_button_order_from_array;
alias extern (C) void function(aGtkDialog *, gint, ...)TGTKgtk_dialog_set_alternative_button_order; extern(D) TGTKgtk_dialog_set_alternative_button_order gtk_dialog_set_alternative_button_order;
alias extern (C) gint function(_GdkScreen *)TGTKgtk_alternative_dialog_button_order; extern(D) TGTKgtk_alternative_dialog_button_order gtk_alternative_dialog_button_order;
alias extern (C) gint function(aGtkDialog *)TGTKgtk_dialog_get_has_separator; extern(D) TGTKgtk_dialog_get_has_separator gtk_dialog_get_has_separator;
alias extern (C) void function(aGtkDialog *, gint)TGTKgtk_dialog_set_has_separator; extern(D) TGTKgtk_dialog_set_has_separator gtk_dialog_set_has_separator;
alias extern (C) gint function(aGtkDialog *, aGtkWidget *)TGTKgtk_dialog_get_response_for_widget; extern(D) TGTKgtk_dialog_get_response_for_widget gtk_dialog_get_response_for_widget;
alias extern (C) void function(aGtkDialog *, gint)TGTKgtk_dialog_set_default_response; extern(D) TGTKgtk_dialog_set_default_response gtk_dialog_set_default_response;
alias extern (C) void function(aGtkDialog *, gint, gint)TGTKgtk_dialog_set_response_sensitive; extern(D) TGTKgtk_dialog_set_response_sensitive gtk_dialog_set_response_sensitive;
alias extern (C) void function(aGtkDialog *, in char *, ...)TGTKgtk_dialog_add_buttons; extern(D) TGTKgtk_dialog_add_buttons gtk_dialog_add_buttons;
alias extern (C) _GtkWidget * function(aGtkDialog *, in char *, gint)TGTKgtk_dialog_add_button; extern(D) TGTKgtk_dialog_add_button gtk_dialog_add_button;
alias extern (C) void function(aGtkDialog *, aGtkWidget *, gint)TGTKgtk_dialog_add_action_widget; extern(D) TGTKgtk_dialog_add_action_widget gtk_dialog_add_action_widget;
alias extern (C) _GtkWidget * function(in char *, aGtkWindow *, gint, in char *, ...)TGTKgtk_dialog_new_with_buttons; extern(D) TGTKgtk_dialog_new_with_buttons gtk_dialog_new_with_buttons;
alias extern (C) _GtkWidget * function()TGTKgtk_dialog_new; extern(D) TGTKgtk_dialog_new gtk_dialog_new;
alias extern (C) GType function()TGTKgtk_dialog_get_type; extern(D) TGTKgtk_dialog_get_type gtk_dialog_get_type;
//alias extern (C) gint function(aGtkWindow *, guint, gint)TGTK_gtk_window_query_nonaccels; extern(D) TGTK_gtk_window_query_nonaccels _gtk_window_query_nonaccels;
//alias extern (C) void function(aGtkWindow *, _BCD_func__12662, void *)TGTK_gtk_window_keys_foreach; extern(D) TGTK_gtk_window_keys_foreach _gtk_window_keys_foreach;
//alias extern (C) void function(aGtkWindow *, gint)TGTK_gtk_window_set_is_active; extern(D) TGTK_gtk_window_set_is_active _gtk_window_set_is_active;
//alias extern (C) void function(aGtkWindow *, aGtkWidget *)TGTK_gtk_window_unset_focus_and_default; extern(D) TGTK_gtk_window_unset_focus_and_default _gtk_window_unset_focus_and_default;
//alias extern (C) void function(aGtkWindow *, gint)TGTK_gtk_window_set_has_toplevel_focus; extern(D) TGTK_gtk_window_set_has_toplevel_focus _gtk_window_set_has_toplevel_focus;
//alias extern (C) _GtkWidget * function(aGtkWindowGroup *)TGTK_gtk_window_group_get_current_grab; extern(D) TGTK_gtk_window_group_get_current_grab _gtk_window_group_get_current_grab;
//alias extern (C) void function(aGtkWindow *, gint, gint, gint *, gint *)TGTK_gtk_window_constrain_size; extern(D) TGTK_gtk_window_constrain_size _gtk_window_constrain_size;
//alias extern (C) void function(aGtkWindow *, gint, gint)TGTK_gtk_window_reposition; extern(D) TGTK_gtk_window_reposition _gtk_window_reposition;
alias extern (C) void function(aGtkWindow *, guint)TGTKgtk_window_add_embedded_xid; extern(D) TGTKgtk_window_add_embedded_xid gtk_window_add_embedded_xid;
alias extern (C) void function(aGtkWindow *, guint)TGTKgtk_window_remove_embedded_xid; extern(D) TGTKgtk_window_remove_embedded_xid gtk_window_remove_embedded_xid;
//alias extern (C) void function(aGtkWindow *, aGtkWidget *)TGTK_gtk_window_internal_set_focus; extern(D) TGTK_gtk_window_internal_set_focus _gtk_window_internal_set_focus;
alias extern (C) void function(aGtkWindowGroup *, aGtkWindow *)TGTKgtk_window_group_remove_window; extern(D) TGTKgtk_window_group_remove_window gtk_window_group_remove_window;
alias extern (C) void function(aGtkWindowGroup *, aGtkWindow *)TGTKgtk_window_group_add_window; extern(D) TGTKgtk_window_group_add_window gtk_window_group_add_window;
alias extern (C) _GtkWindowGroup * function()TGTKgtk_window_group_new; extern(D) TGTKgtk_window_group_new gtk_window_group_new;
alias extern (C) GType function()TGTKgtk_window_group_get_type; extern(D) TGTKgtk_window_group_get_type gtk_window_group_get_type;
alias extern (C) void function(aGtkWindow *)TGTKgtk_window_reshow_with_initial_size; extern(D) TGTKgtk_window_reshow_with_initial_size gtk_window_reshow_with_initial_size;
alias extern (C) _GtkWindowGroup * function(aGtkWindow *)TGTKgtk_window_get_group; extern(D) TGTKgtk_window_get_group gtk_window_get_group;
alias extern (C) gint function(aGtkWindow *, char *)TGTKgtk_window_parse_geometry; extern(D) TGTKgtk_window_parse_geometry gtk_window_parse_geometry;
alias extern (C) void function(aGtkWindow *, gint *, gint *)TGTKgtk_window_get_position; extern(D) TGTKgtk_window_get_position gtk_window_get_position;
alias extern (C) void function(aGtkWindow *, gint, gint)TGTKgtk_window_move; extern(D) TGTKgtk_window_move gtk_window_move;
alias extern (C) void function(aGtkWindow *, gint *, gint *)TGTKgtk_window_get_size; extern(D) TGTKgtk_window_get_size gtk_window_get_size;
alias extern (C) void function(aGtkWindow *, gint, gint)TGTKgtk_window_resize; extern(D) TGTKgtk_window_resize gtk_window_resize;
alias extern (C) void function(aGtkWindow *, gint *, gint *)TGTKgtk_window_get_default_size; extern(D) TGTKgtk_window_get_default_size gtk_window_get_default_size;
alias extern (C) void function(aGtkWindow *, gint, gint)TGTKgtk_window_set_default_size; extern(D) TGTKgtk_window_set_default_size gtk_window_set_default_size;
alias extern (C) void function(aGtkWindow *, gint, gint, gint)TGTKgtk_window_set_policy; extern(D) TGTKgtk_window_set_policy gtk_window_set_policy;
alias extern (C) void function(aGtkWindow *, gint, gint, gint, guint32)TGTKgtk_window_begin_move_drag; extern(D) TGTKgtk_window_begin_move_drag gtk_window_begin_move_drag;
alias extern (C) void function(aGtkWindow *, gint, gint, gint, gint, guint32)TGTKgtk_window_begin_resize_drag; extern(D) TGTKgtk_window_begin_resize_drag gtk_window_begin_resize_drag;
alias extern (C) void function(aGtkWindow *, gint)TGTKgtk_window_set_keep_below; extern(D) TGTKgtk_window_set_keep_below gtk_window_set_keep_below;
alias extern (C) void function(aGtkWindow *, gint)TGTKgtk_window_set_keep_above; extern(D) TGTKgtk_window_set_keep_above gtk_window_set_keep_above;
alias extern (C) void function(aGtkWindow *)TGTKgtk_window_unfullscreen; extern(D) TGTKgtk_window_unfullscreen gtk_window_unfullscreen;
alias extern (C) void function(aGtkWindow *)TGTKgtk_window_fullscreen; extern(D) TGTKgtk_window_fullscreen gtk_window_fullscreen;
alias extern (C) void function(aGtkWindow *)TGTKgtk_window_unmaximize; extern(D) TGTKgtk_window_unmaximize gtk_window_unmaximize;
alias extern (C) void function(aGtkWindow *)TGTKgtk_window_maximize; extern(D) TGTKgtk_window_maximize gtk_window_maximize;
alias extern (C) void function(aGtkWindow *)TGTKgtk_window_unstick; extern(D) TGTKgtk_window_unstick gtk_window_unstick;
alias extern (C) void function(aGtkWindow *)TGTKgtk_window_stick; extern(D) TGTKgtk_window_stick gtk_window_stick;
alias extern (C) void function(aGtkWindow *)TGTKgtk_window_deiconify; extern(D) TGTKgtk_window_deiconify gtk_window_deiconify;
alias extern (C) void function(aGtkWindow *)TGTKgtk_window_iconify; extern(D) TGTKgtk_window_iconify gtk_window_iconify;
alias extern (C) void function(aGtkWindow *, guint32)TGTKgtk_window_present_with_time; extern(D) TGTKgtk_window_present_with_time gtk_window_present_with_time;
alias extern (C) void function(aGtkWindow *)TGTKgtk_window_present; extern(D) TGTKgtk_window_present gtk_window_present;
alias extern (C) gint function(aGtkWindow *, _GdkEventKey *)TGTKgtk_window_propagate_key_event; extern(D) TGTKgtk_window_propagate_key_event gtk_window_propagate_key_event;
alias extern (C) gint function(aGtkWindow *, _GdkEventKey *)TGTKgtk_window_activate_key; extern(D) TGTKgtk_window_activate_key gtk_window_activate_key;
alias extern (C) gint function(aGtkWindow *)TGTKgtk_window_get_mnemonic_modifier; extern(D) TGTKgtk_window_get_mnemonic_modifier gtk_window_get_mnemonic_modifier;
alias extern (C) void function(aGtkWindow *, gint)TGTKgtk_window_set_mnemonic_modifier; extern(D) TGTKgtk_window_set_mnemonic_modifier gtk_window_set_mnemonic_modifier;
alias extern (C) gint function(aGtkWindow *, guint, gint)TGTKgtk_window_mnemonic_activate; extern(D) TGTKgtk_window_mnemonic_activate gtk_window_mnemonic_activate;
alias extern (C) void function(aGtkWindow *, guint, aGtkWidget *)TGTKgtk_window_remove_mnemonic; extern(D) TGTKgtk_window_remove_mnemonic gtk_window_remove_mnemonic;
alias extern (C) void function(aGtkWindow *, guint, aGtkWidget *)TGTKgtk_window_add_mnemonic; extern(D) TGTKgtk_window_add_mnemonic gtk_window_add_mnemonic;
alias extern (C) _GList * function()TGTKgtk_window_list_toplevels; extern(D) TGTKgtk_window_list_toplevels gtk_window_list_toplevels;
alias extern (C) gint function(aGtkWindow *)TGTKgtk_window_get_modal; extern(D) TGTKgtk_window_get_modal gtk_window_get_modal;
alias extern (C) void function(aGtkWindow *, gint)TGTKgtk_window_set_modal; extern(D) TGTKgtk_window_set_modal gtk_window_set_modal;
alias extern (C) void function(gint)TGTKgtk_window_set_auto_startup_notification; extern(D) TGTKgtk_window_set_auto_startup_notification gtk_window_set_auto_startup_notification;
alias extern (C) gint function(in char *, _GError * *)TGTKgtk_window_set_default_icon_from_file; extern(D) TGTKgtk_window_set_default_icon_from_file gtk_window_set_default_icon_from_file;
alias extern (C) void function(in char *)TGTKgtk_window_set_default_icon_name; extern(D) TGTKgtk_window_set_default_icon_name gtk_window_set_default_icon_name;
alias extern (C) void function(void *)TGTKgtk_window_set_default_icon; extern(D) TGTKgtk_window_set_default_icon gtk_window_set_default_icon;
alias extern (C) _GList * function()TGTKgtk_window_get_default_icon_list; extern(D) TGTKgtk_window_get_default_icon_list gtk_window_get_default_icon_list;
alias extern (C) void function(_GList *)TGTKgtk_window_set_default_icon_list; extern(D) TGTKgtk_window_set_default_icon_list gtk_window_set_default_icon_list;
alias extern (C) char * function(aGtkWindow *)TGTKgtk_window_get_icon_name; extern(D) TGTKgtk_window_get_icon_name gtk_window_get_icon_name;
alias extern (C) void * function(aGtkWindow *)TGTKgtk_window_get_icon; extern(D) TGTKgtk_window_get_icon gtk_window_get_icon;
alias extern (C) gint function(aGtkWindow *, in char *, _GError * *)TGTKgtk_window_set_icon_from_file; extern(D) TGTKgtk_window_set_icon_from_file gtk_window_set_icon_from_file;
alias extern (C) void function(aGtkWindow *, in char *)TGTKgtk_window_set_icon_name; extern(D) TGTKgtk_window_set_icon_name gtk_window_set_icon_name;
alias extern (C) void function(aGtkWindow *, void *)TGTKgtk_window_set_icon; extern(D) TGTKgtk_window_set_icon gtk_window_set_icon;
alias extern (C) _GList * function(aGtkWindow *)TGTKgtk_window_get_icon_list; extern(D) TGTKgtk_window_get_icon_list gtk_window_get_icon_list;
alias extern (C) void function(aGtkWindow *, _GList *)TGTKgtk_window_set_icon_list; extern(D) TGTKgtk_window_set_icon_list gtk_window_set_icon_list;
alias extern (C) gint function(aGtkWindow *)TGTKgtk_window_get_deletable; extern(D) TGTKgtk_window_get_deletable gtk_window_get_deletable;
alias extern (C) void function(aGtkWindow *, gint)TGTKgtk_window_set_deletable; extern(D) TGTKgtk_window_set_deletable gtk_window_set_deletable;
alias extern (C) gint function(aGtkWindow *)TGTKgtk_window_get_decorated; extern(D) TGTKgtk_window_get_decorated gtk_window_get_decorated;
alias extern (C) void function(aGtkWindow *, gint)TGTKgtk_window_set_decorated; extern(D) TGTKgtk_window_set_decorated gtk_window_set_decorated;
alias extern (C) void function(aGtkWindow *, gint *, gint *, gint *, gint *)TGTKgtk_window_get_frame_dimensions; extern(D) TGTKgtk_window_get_frame_dimensions gtk_window_get_frame_dimensions;
alias extern (C) void function(aGtkWindow *, gint, gint, gint, gint)TGTKgtk_window_set_frame_dimensions; extern(D) TGTKgtk_window_set_frame_dimensions gtk_window_set_frame_dimensions;
alias extern (C) gint function(aGtkWindow *)TGTKgtk_window_get_has_frame; extern(D) TGTKgtk_window_get_has_frame gtk_window_get_has_frame;
alias extern (C) void function(aGtkWindow *, gint)TGTKgtk_window_set_has_frame; extern(D) TGTKgtk_window_set_has_frame gtk_window_set_has_frame;
alias extern (C) gint function(aGtkWindow *)TGTKgtk_window_has_toplevel_focus; extern(D) TGTKgtk_window_has_toplevel_focus gtk_window_has_toplevel_focus;
alias extern (C) gint function(aGtkWindow *)TGTKgtk_window_is_active; extern(D) TGTKgtk_window_is_active gtk_window_is_active;
alias extern (C) _GdkScreen * function(aGtkWindow *)TGTKgtk_window_get_screen; extern(D) TGTKgtk_window_get_screen gtk_window_get_screen;
alias extern (C) void function(aGtkWindow *, _GdkScreen *)TGTKgtk_window_set_screen; extern(D) TGTKgtk_window_set_screen gtk_window_set_screen;
alias extern (C) void function(aGtkWindow *, aGtkWidget *, _GdkGeometry *, gint)TGTKgtk_window_set_geometry_hints; extern(D) TGTKgtk_window_set_geometry_hints gtk_window_set_geometry_hints;
alias extern (C) gint function(aGtkWindow *)TGTKgtk_window_get_gravity; extern(D) TGTKgtk_window_get_gravity gtk_window_get_gravity;
alias extern (C) void function(aGtkWindow *, gint)TGTKgtk_window_set_gravity; extern(D) TGTKgtk_window_set_gravity gtk_window_set_gravity;
alias extern (C) gint function(aGtkWindow *)TGTKgtk_window_get_resizable; extern(D) TGTKgtk_window_get_resizable gtk_window_get_resizable;
alias extern (C) void function(aGtkWindow *, gint)TGTKgtk_window_set_resizable; extern(D) TGTKgtk_window_set_resizable gtk_window_set_resizable;
alias extern (C) gint function(aGtkWindow *)TGTKgtk_window_get_destroy_with_parent; extern(D) TGTKgtk_window_get_destroy_with_parent gtk_window_get_destroy_with_parent;
alias extern (C) void function(aGtkWindow *, gint)TGTKgtk_window_set_destroy_with_parent; extern(D) TGTKgtk_window_set_destroy_with_parent gtk_window_set_destroy_with_parent;
alias extern (C) gint function(aGtkWindow *)TGTKgtk_window_get_focus_on_map; extern(D) TGTKgtk_window_get_focus_on_map gtk_window_get_focus_on_map;
alias extern (C) void function(aGtkWindow *, gint)TGTKgtk_window_set_focus_on_map; extern(D) TGTKgtk_window_set_focus_on_map gtk_window_set_focus_on_map;
alias extern (C) gint function(aGtkWindow *)TGTKgtk_window_get_accept_focus; extern(D) TGTKgtk_window_get_accept_focus gtk_window_get_accept_focus;
alias extern (C) void function(aGtkWindow *, gint)TGTKgtk_window_set_accept_focus; extern(D) TGTKgtk_window_set_accept_focus gtk_window_set_accept_focus;
alias extern (C) gint function(aGtkWindow *)TGTKgtk_window_get_urgency_hint; extern(D) TGTKgtk_window_get_urgency_hint gtk_window_get_urgency_hint;
alias extern (C) void function(aGtkWindow *, gint)TGTKgtk_window_set_urgency_hint; extern(D) TGTKgtk_window_set_urgency_hint gtk_window_set_urgency_hint;
alias extern (C) gint function(aGtkWindow *)TGTKgtk_window_get_skip_pager_hint; extern(D) TGTKgtk_window_get_skip_pager_hint gtk_window_get_skip_pager_hint;
alias extern (C) void function(aGtkWindow *, gint)TGTKgtk_window_set_skip_pager_hint; extern(D) TGTKgtk_window_set_skip_pager_hint gtk_window_set_skip_pager_hint;
alias extern (C) gint function(aGtkWindow *)TGTKgtk_window_get_skip_taskbar_hint; extern(D) TGTKgtk_window_get_skip_taskbar_hint gtk_window_get_skip_taskbar_hint;
alias extern (C) void function(aGtkWindow *, gint)TGTKgtk_window_set_skip_taskbar_hint; extern(D) TGTKgtk_window_set_skip_taskbar_hint gtk_window_set_skip_taskbar_hint;
alias extern (C) gint function(aGtkWindow *)TGTKgtk_window_get_type_hint; extern(D) TGTKgtk_window_get_type_hint gtk_window_get_type_hint;
alias extern (C) void function(aGtkWindow *, gint)TGTKgtk_window_set_type_hint; extern(D) TGTKgtk_window_set_type_hint gtk_window_set_type_hint;
alias extern (C) double function(aGtkWindow *)TGTKgtk_window_get_opacity; extern(D) TGTKgtk_window_get_opacity gtk_window_get_opacity;
alias extern (C) void function(aGtkWindow *, double)TGTKgtk_window_set_opacity; extern(D) TGTKgtk_window_set_opacity gtk_window_set_opacity;
alias extern (C) _GtkWindow * function(aGtkWindow *)TGTKgtk_window_get_transient_for; extern(D) TGTKgtk_window_get_transient_for gtk_window_get_transient_for;
alias extern (C) void function(aGtkWindow *, aGtkWindow *)TGTKgtk_window_set_transient_for; extern(D) TGTKgtk_window_set_transient_for gtk_window_set_transient_for;
alias extern (C) gint function(aGtkWindow *)TGTKgtk_window_activate_default; extern(D) TGTKgtk_window_activate_default gtk_window_activate_default;
alias extern (C) void function(aGtkWindow *, aGtkWidget *)TGTKgtk_window_set_default; extern(D) TGTKgtk_window_set_default gtk_window_set_default;
alias extern (C) _GtkWidget * function(aGtkWindow *)TGTKgtk_window_get_focus; extern(D) TGTKgtk_window_get_focus gtk_window_get_focus;
alias extern (C) void function(aGtkWindow *, aGtkWidget *)TGTKgtk_window_set_focus; extern(D) TGTKgtk_window_set_focus gtk_window_set_focus;
alias extern (C) gint function(aGtkWindow *)TGTKgtk_window_activate_focus; extern(D) TGTKgtk_window_activate_focus gtk_window_activate_focus;
alias extern (C) void function(aGtkWindow *, gint)TGTKgtk_window_set_position; extern(D) TGTKgtk_window_set_position gtk_window_set_position;
alias extern (C) void function(aGtkWindow *, aGtkAccelGroup *)TGTKgtk_window_remove_accel_group; extern(D) TGTKgtk_window_remove_accel_group gtk_window_remove_accel_group;
alias extern (C) void function(aGtkWindow *, aGtkAccelGroup *)TGTKgtk_window_add_accel_group; extern(D) TGTKgtk_window_add_accel_group gtk_window_add_accel_group;
alias extern (C) char * function(aGtkWindow *)TGTKgtk_window_get_role; extern(D) TGTKgtk_window_get_role gtk_window_get_role;
alias extern (C) void function(aGtkWindow *, in char *)TGTKgtk_window_set_startup_id; extern(D) TGTKgtk_window_set_startup_id gtk_window_set_startup_id;
alias extern (C) void function(aGtkWindow *, in char *)TGTKgtk_window_set_role; extern(D) TGTKgtk_window_set_role gtk_window_set_role;
alias extern (C) void function(aGtkWindow *, in char *, in char *)TGTKgtk_window_set_wmclass; extern(D) TGTKgtk_window_set_wmclass gtk_window_set_wmclass;
alias extern (C) char * function(aGtkWindow *)TGTKgtk_window_get_title; extern(D) TGTKgtk_window_get_title gtk_window_get_title;
alias extern (C) void function(aGtkWindow *, in char *)TGTKgtk_window_set_title; extern(D) TGTKgtk_window_set_title gtk_window_set_title;
alias extern (C) _GtkWidget * function(gint)TGTKgtk_window_new; extern(D) TGTKgtk_window_new gtk_window_new;
alias extern (C) GType function()TGTKgtk_window_get_type; extern(D) TGTKgtk_window_get_type gtk_window_get_type;
alias extern (C) _GtkWidget * function(aGtkBin *)TGTKgtk_bin_get_child; extern(D) TGTKgtk_bin_get_child gtk_bin_get_child;
alias extern (C) GType function()TGTKgtk_bin_get_type; extern(D) TGTKgtk_bin_get_type gtk_bin_get_type;
//alias extern (C) _GList * function(aGtkContainer *, _GList *, gint, aGtkWidget *)TGTK_gtk_container_focus_sort; extern(D) TGTK_gtk_container_focus_sort _gtk_container_focus_sort;
//alias extern (C) void function(aGtkContainer *)TGTK_gtk_container_dequeue_resize_handler; extern(D) TGTK_gtk_container_dequeue_resize_handler _gtk_container_dequeue_resize_handler;
//alias extern (C) char * function(aGtkContainer *, aGtkWidget *)TGTK_gtk_container_child_composite_name; extern(D) TGTK_gtk_container_child_composite_name _gtk_container_child_composite_name;
//alias extern (C) void function(aGtkContainer *)TGTK_gtk_container_clear_resize_widgets; extern(D) TGTK_gtk_container_clear_resize_widgets _gtk_container_clear_resize_widgets;
//alias extern (C) void function(aGtkContainer *)TGTK_gtk_container_queue_resize; extern(D) TGTK_gtk_container_queue_resize _gtk_container_queue_resize;
alias extern (C) void function(aGtkContainer *, _BCD_func__12090, void *)TGTKgtk_container_forall; extern(D) TGTKgtk_container_forall gtk_container_forall;
alias extern (C) void function(aGtkContainer *, aGtkWidget *, in char *, _GValue *)TGTKgtk_container_child_get_property; extern(D) TGTKgtk_container_child_get_property gtk_container_child_get_property;
alias extern (C) void function(aGtkContainer *, aGtkWidget *, in char *, _GValue *)TGTKgtk_container_child_set_property; extern(D) TGTKgtk_container_child_set_property gtk_container_child_set_property;
alias extern (C) void function(aGtkContainer *, aGtkWidget *, in char *, char *)TGTKgtk_container_child_get_valist; extern(D) TGTKgtk_container_child_get_valist gtk_container_child_get_valist;
alias extern (C) void function(aGtkContainer *, aGtkWidget *, in char *, char *)TGTKgtk_container_child_set_valist; extern(D) TGTKgtk_container_child_set_valist gtk_container_child_set_valist;
alias extern (C) void function(aGtkContainer *, aGtkWidget *, in char *, ...)TGTKgtk_container_child_get; extern(D) TGTKgtk_container_child_get gtk_container_child_get;
alias extern (C) void function(aGtkContainer *, aGtkWidget *, in char *, ...)TGTKgtk_container_child_set; extern(D) TGTKgtk_container_child_set gtk_container_child_set;
alias extern (C) void function(aGtkContainer *, aGtkWidget *, in char *, ...)TGTKgtk_container_add_with_properties; extern(D) TGTKgtk_container_add_with_properties gtk_container_add_with_properties;
alias extern (C) _GParamSpec * * function(_GObjectClass *, guint *)TGTKgtk_container_class_list_child_properties; extern(D) TGTKgtk_container_class_list_child_properties gtk_container_class_list_child_properties;
alias extern (C) _GParamSpec * function(_GObjectClass *, in char *)TGTKgtk_container_class_find_child_property; extern(D) TGTKgtk_container_class_find_child_property gtk_container_class_find_child_property;
alias extern (C) void function(aGtkContainerClass *, guint, _GParamSpec *)TGTKgtk_container_class_install_child_property; extern(D) TGTKgtk_container_class_install_child_property gtk_container_class_install_child_property;
alias extern (C) GType function(aGtkContainer *)TGTKgtk_container_child_type; extern(D) TGTKgtk_container_child_type gtk_container_child_type;
alias extern (C) void function(aGtkContainer *)TGTKgtk_container_resize_children; extern(D) TGTKgtk_container_resize_children gtk_container_resize_children;
alias extern (C) _GtkAdjustment * function(aGtkContainer *)TGTKgtk_container_get_focus_hadjustment; extern(D) TGTKgtk_container_get_focus_hadjustment gtk_container_get_focus_hadjustment;
alias extern (C) void function(aGtkContainer *, aGtkAdjustment *)TGTKgtk_container_set_focus_hadjustment; extern(D) TGTKgtk_container_set_focus_hadjustment gtk_container_set_focus_hadjustment;
alias extern (C) _GtkAdjustment * function(aGtkContainer *)TGTKgtk_container_get_focus_vadjustment; extern(D) TGTKgtk_container_get_focus_vadjustment gtk_container_get_focus_vadjustment;
alias extern (C) void function(aGtkContainer *, aGtkAdjustment *)TGTKgtk_container_set_focus_vadjustment; extern(D) TGTKgtk_container_set_focus_vadjustment gtk_container_set_focus_vadjustment;
alias extern (C) void function(aGtkContainer *, aGtkWidget *)TGTKgtk_container_set_focus_child; extern(D) TGTKgtk_container_set_focus_child gtk_container_set_focus_child;
alias extern (C) void function(aGtkContainer *, gint)TGTKgtk_container_set_reallocate_redraws; extern(D) TGTKgtk_container_set_reallocate_redraws gtk_container_set_reallocate_redraws;
alias extern (C) void function(aGtkContainer *)TGTKgtk_container_unset_focus_chain; extern(D) TGTKgtk_container_unset_focus_chain gtk_container_unset_focus_chain;
alias extern (C) gint function(aGtkContainer *, _GList * *)TGTKgtk_container_get_focus_chain; extern(D) TGTKgtk_container_get_focus_chain gtk_container_get_focus_chain;
alias extern (C) void function(aGtkContainer *, _GList *)TGTKgtk_container_set_focus_chain; extern(D) TGTKgtk_container_set_focus_chain gtk_container_set_focus_chain;
alias extern (C) void function(aGtkContainer *, aGtkWidget *, _GdkEventExpose *)TGTKgtk_container_propagate_expose; extern(D) TGTKgtk_container_propagate_expose gtk_container_propagate_expose;
alias extern (C) _GList * function(aGtkContainer *)TGTKgtk_container_get_children; extern(D) TGTKgtk_container_get_children gtk_container_get_children;
alias extern (C) void function(aGtkContainer *, _BCD_func__12090, _BCD_func__13157, void *, _BCD_func__13158)TGTKgtk_container_foreach_full; extern(D) TGTKgtk_container_foreach_full gtk_container_foreach_full;
alias extern (C) void function(aGtkContainer *, _BCD_func__12090, void *)TGTKgtk_container_foreach; extern(D) TGTKgtk_container_foreach gtk_container_foreach;
alias extern (C) void function(aGtkContainer *)TGTKgtk_container_check_resize; extern(D) TGTKgtk_container_check_resize gtk_container_check_resize;
alias extern (C) gint function(aGtkContainer *)TGTKgtk_container_get_resize_mode; extern(D) TGTKgtk_container_get_resize_mode gtk_container_get_resize_mode;
alias extern (C) void function(aGtkContainer *, gint)TGTKgtk_container_set_resize_mode; extern(D) TGTKgtk_container_set_resize_mode gtk_container_set_resize_mode;
alias extern (C) void function(aGtkContainer *, aGtkWidget *)TGTKgtk_container_remove; extern(D) TGTKgtk_container_remove gtk_container_remove;
alias extern (C) void function(aGtkContainer *, aGtkWidget *)TGTKgtk_container_add; extern(D) TGTKgtk_container_add gtk_container_add;
alias extern (C) guint function(aGtkContainer *)TGTKgtk_container_get_border_width; extern(D) TGTKgtk_container_get_border_width gtk_container_get_border_width;
alias extern (C) void function(aGtkContainer *, guint)TGTKgtk_container_set_border_width; extern(D) TGTKgtk_container_set_border_width gtk_container_set_border_width;
alias extern (C) GType function()TGTKgtk_container_get_type; extern(D) TGTKgtk_container_get_type gtk_container_get_type;
//alias extern (C) _GdkColormap * function()TGTK_gtk_widget_peek_colormap; extern(D) TGTK_gtk_widget_peek_colormap _gtk_widget_peek_colormap;
//alias extern (C) void function(aGtkWidget *)TGTK_gtk_widget_propagate_composited_changed; extern(D) TGTK_gtk_widget_propagate_composited_changed _gtk_widget_propagate_composited_changed;
//alias extern (C) void function(aGtkWidget *, _GdkScreen *)TGTK_gtk_widget_propagate_screen_changed; extern(D) TGTK_gtk_widget_propagate_screen_changed _gtk_widget_propagate_screen_changed;
//alias extern (C) void function(aGtkWidget *, aGtkWidget *)TGTK_gtk_widget_propagate_hierarchy_changed; extern(D) TGTK_gtk_widget_propagate_hierarchy_changed _gtk_widget_propagate_hierarchy_changed;
//alias extern (C) _GtkWidgetAuxInfo * function(aGtkWidget *, gint)TGTK_gtk_widget_get_aux_info; extern(D) TGTK_gtk_widget_get_aux_info _gtk_widget_get_aux_info;
//alias extern (C) void function(aGtkWidget *, gint)TGTK_gtk_widget_grab_notify; extern(D) TGTK_gtk_widget_grab_notify _gtk_widget_grab_notify;
alias extern (C) void function(aGtkRequisition *)TGTKgtk_requisition_free; extern(D) TGTKgtk_requisition_free gtk_requisition_free;
alias extern (C) _GtkRequisition * function(aGtkRequisition *)TGTKgtk_requisition_copy; extern(D) TGTKgtk_requisition_copy gtk_requisition_copy;
alias extern (C) GType function()TGTKgtk_requisition_get_type; extern(D) TGTKgtk_requisition_get_type gtk_requisition_get_type;
alias extern (C) gint function(aGtkWidget *)TGTKgtk_widget_get_has_tooltip; extern(D) TGTKgtk_widget_get_has_tooltip gtk_widget_get_has_tooltip;
alias extern (C) void function(aGtkWidget *, gint)TGTKgtk_widget_set_has_tooltip; extern(D) TGTKgtk_widget_set_has_tooltip gtk_widget_set_has_tooltip;
alias extern (C) char * function(aGtkWidget *)TGTKgtk_widget_get_tooltip_markup; extern(D) TGTKgtk_widget_get_tooltip_markup gtk_widget_get_tooltip_markup;
alias extern (C) void function(aGtkWidget *, in char *)TGTKgtk_widget_set_tooltip_markup; extern(D) TGTKgtk_widget_set_tooltip_markup gtk_widget_set_tooltip_markup;
alias extern (C) char * function(aGtkWidget *)TGTKgtk_widget_get_tooltip_text; extern(D) TGTKgtk_widget_get_tooltip_text gtk_widget_get_tooltip_text;
alias extern (C) void function(aGtkWidget *, in char *)TGTKgtk_widget_set_tooltip_text; extern(D) TGTKgtk_widget_set_tooltip_text gtk_widget_set_tooltip_text;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_trigger_tooltip_query; extern(D) TGTKgtk_widget_trigger_tooltip_query gtk_widget_trigger_tooltip_query;
alias extern (C) _GtkWindow * function(aGtkWidget *)TGTKgtk_widget_get_tooltip_window; extern(D) TGTKgtk_widget_get_tooltip_window gtk_widget_get_tooltip_window;
alias extern (C) void function(aGtkWidget *, aGtkWindow *)TGTKgtk_widget_set_tooltip_window; extern(D) TGTKgtk_widget_set_tooltip_window gtk_widget_set_tooltip_window;
alias extern (C) void function(aGtkWidget *, aGtkWidget *)TGTKgtk_widget_remove_mnemonic_label; extern(D) TGTKgtk_widget_remove_mnemonic_label gtk_widget_remove_mnemonic_label;
alias extern (C) void function(aGtkWidget *, aGtkWidget *)TGTKgtk_widget_add_mnemonic_label; extern(D) TGTKgtk_widget_add_mnemonic_label gtk_widget_add_mnemonic_label;
alias extern (C) _GList * function(aGtkWidget *)TGTKgtk_widget_list_mnemonic_labels; extern(D) TGTKgtk_widget_list_mnemonic_labels gtk_widget_list_mnemonic_labels;
alias extern (C) void function(aGtkWidget *, guint *, char * *, char * *)TGTKgtk_widget_class_path; extern(D) TGTKgtk_widget_class_path gtk_widget_class_path;
alias extern (C) void function(aGtkWidget *, guint *, char * *, char * *)TGTKgtk_widget_path; extern(D) TGTKgtk_widget_path gtk_widget_path;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_reset_shapes; extern(D) TGTKgtk_widget_reset_shapes gtk_widget_reset_shapes;
alias extern (C) void function(aGtkWidget *, _GdkDrawable *, gint, gint)TGTKgtk_widget_input_shape_combine_mask; extern(D) TGTKgtk_widget_input_shape_combine_mask gtk_widget_input_shape_combine_mask;
alias extern (C) void function(aGtkWidget *, _GdkDrawable *, gint, gint)TGTKgtk_widget_shape_combine_mask; extern(D) TGTKgtk_widget_shape_combine_mask gtk_widget_shape_combine_mask;
alias extern (C) gint function(aGtkWidget *)TGTKgtk_widget_is_composited; extern(D) TGTKgtk_widget_is_composited gtk_widget_is_composited;
alias extern (C) gint function()TGTKgtk_widget_get_default_direction; extern(D) TGTKgtk_widget_get_default_direction gtk_widget_get_default_direction;
alias extern (C) void function(gint)TGTKgtk_widget_set_default_direction; extern(D) TGTKgtk_widget_set_default_direction gtk_widget_set_default_direction;
alias extern (C) gint function(aGtkWidget *)TGTKgtk_widget_get_direction; extern(D) TGTKgtk_widget_get_direction gtk_widget_get_direction;
alias extern (C) void function(aGtkWidget *, gint)TGTKgtk_widget_set_direction; extern(D) TGTKgtk_widget_set_direction gtk_widget_set_direction;
alias extern (C) _GdkVisual * function()TGTKgtk_widget_get_default_visual; extern(D) TGTKgtk_widget_get_default_visual gtk_widget_get_default_visual;
alias extern (C) _GdkColormap * function()TGTKgtk_widget_get_default_colormap; extern(D) TGTKgtk_widget_get_default_colormap gtk_widget_get_default_colormap;
alias extern (C) _GtkStyle * function()TGTKgtk_widget_get_default_style; extern(D) TGTKgtk_widget_get_default_style gtk_widget_get_default_style;
alias extern (C) void function(_GdkColormap *)TGTKgtk_widget_set_default_colormap; extern(D) TGTKgtk_widget_set_default_colormap gtk_widget_set_default_colormap;
alias extern (C) void function(aGtkWidget *, in char *, ...)TGTKgtk_widget_style_get; extern(D) TGTKgtk_widget_style_get gtk_widget_style_get;
alias extern (C) void function(aGtkWidget *, in char *, char *)TGTKgtk_widget_style_get_valist; extern(D) TGTKgtk_widget_style_get_valist gtk_widget_style_get_valist;
alias extern (C) void function(aGtkWidget *, in char *, _GValue *)TGTKgtk_widget_style_get_property; extern(D) TGTKgtk_widget_style_get_property gtk_widget_style_get_property;
alias extern (C) _GParamSpec * * function(aGtkWidgetClass *, guint *)TGTKgtk_widget_class_list_style_properties; extern(D) TGTKgtk_widget_class_list_style_properties gtk_widget_class_list_style_properties;
alias extern (C) _GParamSpec * function(aGtkWidgetClass *, in char *)TGTKgtk_widget_class_find_style_property; extern(D) TGTKgtk_widget_class_find_style_property gtk_widget_class_find_style_property;
alias extern (C) void function(aGtkWidgetClass *, _GParamSpec *, _BCD_func__12993)TGTKgtk_widget_class_install_style_property_parser; extern(D) TGTKgtk_widget_class_install_style_property_parser gtk_widget_class_install_style_property_parser;
alias extern (C) void function(aGtkWidgetClass *, _GParamSpec *)TGTKgtk_widget_class_install_style_property; extern(D) TGTKgtk_widget_class_install_style_property gtk_widget_class_install_style_property;
alias extern (C) void function()TGTKgtk_widget_pop_colormap; extern(D) TGTKgtk_widget_pop_colormap gtk_widget_pop_colormap;
alias extern (C) void function()TGTKgtk_widget_pop_composite_child; extern(D) TGTKgtk_widget_pop_composite_child gtk_widget_pop_composite_child;
alias extern (C) void function()TGTKgtk_widget_push_composite_child; extern(D) TGTKgtk_widget_push_composite_child gtk_widget_push_composite_child;
alias extern (C) void function(_GdkColormap *)TGTKgtk_widget_push_colormap; extern(D) TGTKgtk_widget_push_colormap gtk_widget_push_colormap;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_reset_rc_styles; extern(D) TGTKgtk_widget_reset_rc_styles gtk_widget_reset_rc_styles;
alias extern (C) char * function(aGtkWidget *)TGTKgtk_widget_get_composite_name; extern(D) TGTKgtk_widget_get_composite_name gtk_widget_get_composite_name;
alias extern (C) void function(aGtkWidget *, in char *)TGTKgtk_widget_set_composite_name; extern(D) TGTKgtk_widget_set_composite_name gtk_widget_set_composite_name;
alias extern (C) void * function(aGtkWidget *, in char *, gint, in char *)TGTKgtk_widget_render_icon; extern(D) TGTKgtk_widget_render_icon gtk_widget_render_icon;
alias extern (C) void * function(aGtkWidget *, in char *)TGTKgtk_widget_create_pango_layout; extern(D) TGTKgtk_widget_create_pango_layout gtk_widget_create_pango_layout;
alias extern (C) void * function(aGtkWidget *)TGTKgtk_widget_get_pango_context; extern(D) TGTKgtk_widget_get_pango_context gtk_widget_get_pango_context;
alias extern (C) void * function(aGtkWidget *)TGTKgtk_widget_create_pango_context; extern(D) TGTKgtk_widget_create_pango_context gtk_widget_create_pango_context;
alias extern (C) void function(aGtkWidget *, void *)TGTKgtk_widget_modify_font; extern(D) TGTKgtk_widget_modify_font gtk_widget_modify_font;
alias extern (C) void function(aGtkWidget *, _GdkColor *, _GdkColor *)TGTKgtk_widget_modify_cursor; extern(D) TGTKgtk_widget_modify_cursor gtk_widget_modify_cursor;
alias extern (C) void function(aGtkWidget *, gint, _GdkColor *)TGTKgtk_widget_modify_base; extern(D) TGTKgtk_widget_modify_base gtk_widget_modify_base;
alias extern (C) void function(aGtkWidget *, gint, _GdkColor *)TGTKgtk_widget_modify_text; extern(D) TGTKgtk_widget_modify_text gtk_widget_modify_text;
alias extern (C) void function(aGtkWidget *, gint, _GdkColor *)TGTKgtk_widget_modify_bg; extern(D) TGTKgtk_widget_modify_bg gtk_widget_modify_bg;
alias extern (C) void function(aGtkWidget *, gint, _GdkColor *)TGTKgtk_widget_modify_fg; extern(D) TGTKgtk_widget_modify_fg gtk_widget_modify_fg;
alias extern (C) _GtkRcStyle * function(aGtkWidget *)TGTKgtk_widget_get_modifier_style; extern(D) TGTKgtk_widget_get_modifier_style gtk_widget_get_modifier_style;
alias extern (C) void function(aGtkWidget *, aGtkRcStyle *)TGTKgtk_widget_modify_style; extern(D) TGTKgtk_widget_modify_style gtk_widget_modify_style;
alias extern (C) _GtkStyle * function(aGtkWidget *)TGTKgtk_widget_get_style; extern(D) TGTKgtk_widget_get_style gtk_widget_get_style;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_ensure_style; extern(D) TGTKgtk_widget_ensure_style gtk_widget_ensure_style;
alias extern (C) void function(aGtkWidget *, aGtkStyle *)TGTKgtk_widget_set_style; extern(D) TGTKgtk_widget_set_style gtk_widget_set_style;
alias extern (C) gint function(aGtkWidget *)TGTKgtk_widget_hide_on_delete; extern(D) TGTKgtk_widget_hide_on_delete gtk_widget_hide_on_delete;
alias extern (C) gint function(aGtkWidget *, aGtkWidget *, gint, gint, gint *, gint *)TGTKgtk_widget_translate_coordinates; extern(D) TGTKgtk_widget_translate_coordinates gtk_widget_translate_coordinates;
alias extern (C) gint function(aGtkWidget *, aGtkWidget *)TGTKgtk_widget_is_ancestor; extern(D) TGTKgtk_widget_is_ancestor gtk_widget_is_ancestor;
alias extern (C) void function(aGtkWidget *, gint *, gint *)TGTKgtk_widget_get_pointer; extern(D) TGTKgtk_widget_get_pointer gtk_widget_get_pointer;
alias extern (C) gint function(aGtkWidget *)TGTKgtk_widget_get_events; extern(D) TGTKgtk_widget_get_events gtk_widget_get_events;
alias extern (C) void function(aGtkWidget *, _GdkColormap *)TGTKgtk_widget_set_colormap; extern(D) TGTKgtk_widget_set_colormap gtk_widget_set_colormap;
alias extern (C) _AtkObject * function(aGtkWidget *)TGTKgtk_widget_get_accessible; extern(D) TGTKgtk_widget_get_accessible gtk_widget_get_accessible;
alias extern (C) void * function(aGtkWidget *, void *)TGTKgtk_widget_get_clipboard; extern(D) TGTKgtk_widget_get_clipboard gtk_widget_get_clipboard;
alias extern (C) _GtkSettings * function(aGtkWidget *)TGTKgtk_widget_get_settings; extern(D) TGTKgtk_widget_get_settings gtk_widget_get_settings;
alias extern (C) _GdkDrawable * function(aGtkWidget *)TGTKgtk_widget_get_root_window; extern(D) TGTKgtk_widget_get_root_window gtk_widget_get_root_window;
alias extern (C) _GdkDisplay * function(aGtkWidget *)TGTKgtk_widget_get_display; extern(D) TGTKgtk_widget_get_display gtk_widget_get_display;
alias extern (C) gint function(aGtkWidget *)TGTKgtk_widget_has_screen; extern(D) TGTKgtk_widget_has_screen gtk_widget_has_screen;
alias extern (C) _GdkScreen * function(aGtkWidget *)TGTKgtk_widget_get_screen; extern(D) TGTKgtk_widget_get_screen gtk_widget_get_screen;
alias extern (C) _GdkVisual * function(aGtkWidget *)TGTKgtk_widget_get_visual; extern(D) TGTKgtk_widget_get_visual gtk_widget_get_visual;
alias extern (C) _GdkColormap * function(aGtkWidget *)TGTKgtk_widget_get_colormap; extern(D) TGTKgtk_widget_get_colormap gtk_widget_get_colormap;
alias extern (C) _GtkWidget * function(aGtkWidget *, GType)TGTKgtk_widget_get_ancestor; extern(D) TGTKgtk_widget_get_ancestor gtk_widget_get_ancestor;
alias extern (C) _GtkWidget * function(aGtkWidget *)TGTKgtk_widget_get_toplevel; extern(D) TGTKgtk_widget_get_toplevel gtk_widget_get_toplevel;
alias extern (C) gint function(aGtkWidget *)TGTKgtk_widget_get_extension_events; extern(D) TGTKgtk_widget_get_extension_events gtk_widget_get_extension_events;
alias extern (C) void function(aGtkWidget *, gint)TGTKgtk_widget_set_extension_events; extern(D) TGTKgtk_widget_set_extension_events gtk_widget_set_extension_events;
alias extern (C) void function(aGtkWidget *, gint)TGTKgtk_widget_add_events; extern(D) TGTKgtk_widget_add_events gtk_widget_add_events;
alias extern (C) void function(aGtkWidget *, gint)TGTKgtk_widget_set_events; extern(D) TGTKgtk_widget_set_events gtk_widget_set_events;
alias extern (C) void function(aGtkWidget *, gint, gint)TGTKgtk_widget_set_usize; extern(D) TGTKgtk_widget_set_usize gtk_widget_set_usize;
alias extern (C) void function(aGtkWidget *, gint, gint)TGTKgtk_widget_set_uposition; extern(D) TGTKgtk_widget_set_uposition gtk_widget_set_uposition;
alias extern (C) void function(aGtkWidget *, gint *, gint *)TGTKgtk_widget_get_size_request; extern(D) TGTKgtk_widget_get_size_request gtk_widget_get_size_request;
alias extern (C) void function(aGtkWidget *, gint, gint)TGTKgtk_widget_set_size_request; extern(D) TGTKgtk_widget_set_size_request gtk_widget_set_size_request;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_error_bell; extern(D) TGTKgtk_widget_error_bell gtk_widget_error_bell;
alias extern (C) gint function(aGtkWidget *, gint)TGTKgtk_widget_keynav_failed; extern(D) TGTKgtk_widget_keynav_failed gtk_widget_keynav_failed;
alias extern (C) gint function(aGtkWidget *, gint)TGTKgtk_widget_child_focus; extern(D) TGTKgtk_widget_child_focus gtk_widget_child_focus;
alias extern (C) _GdkDrawable * function(aGtkWidget *)TGTKgtk_widget_get_parent_window; extern(D) TGTKgtk_widget_get_parent_window gtk_widget_get_parent_window;
alias extern (C) _GtkWidget * function(aGtkWidget *)TGTKgtk_widget_get_parent; extern(D) TGTKgtk_widget_get_parent gtk_widget_get_parent;
alias extern (C) gint function(aGtkWidget *)TGTKgtk_widget_get_child_visible; extern(D) TGTKgtk_widget_get_child_visible gtk_widget_get_child_visible;
alias extern (C) void function(aGtkWidget *, gint)TGTKgtk_widget_set_child_visible; extern(D) TGTKgtk_widget_set_child_visible gtk_widget_set_child_visible;
alias extern (C) void function(aGtkWidget *, _GdkDrawable *)TGTKgtk_widget_set_parent_window; extern(D) TGTKgtk_widget_set_parent_window gtk_widget_set_parent_window;
alias extern (C) void function(aGtkWidget *, aGtkWidget *)TGTKgtk_widget_set_parent; extern(D) TGTKgtk_widget_set_parent gtk_widget_set_parent;
alias extern (C) void function(aGtkWidget *, gint)TGTKgtk_widget_set_redraw_on_allocate; extern(D) TGTKgtk_widget_set_redraw_on_allocate gtk_widget_set_redraw_on_allocate;
alias extern (C) void function(aGtkWidget *, gint)TGTKgtk_widget_set_double_buffered; extern(D) TGTKgtk_widget_set_double_buffered gtk_widget_set_double_buffered;
alias extern (C) void function(aGtkWidget *, gint)TGTKgtk_widget_set_app_paintable; extern(D) TGTKgtk_widget_set_app_paintable gtk_widget_set_app_paintable;
alias extern (C) void function(aGtkWidget *, gint)TGTKgtk_widget_set_sensitive; extern(D) TGTKgtk_widget_set_sensitive gtk_widget_set_sensitive;
alias extern (C) void function(aGtkWidget *, gint)TGTKgtk_widget_set_state; extern(D) TGTKgtk_widget_set_state gtk_widget_set_state;
alias extern (C) char * function(aGtkWidget *)TGTKgtk_widget_get_name; extern(D) TGTKgtk_widget_get_name gtk_widget_get_name;
alias extern (C) void function(aGtkWidget *, in char *)TGTKgtk_widget_set_name; extern(D) TGTKgtk_widget_set_name gtk_widget_set_name;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_grab_default; extern(D) TGTKgtk_widget_grab_default gtk_widget_grab_default;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_grab_focus; extern(D) TGTKgtk_widget_grab_focus gtk_widget_grab_focus;
alias extern (C) gint function(aGtkWidget *)TGTKgtk_widget_is_focus; extern(D) TGTKgtk_widget_is_focus gtk_widget_is_focus;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_thaw_child_notify; extern(D) TGTKgtk_widget_thaw_child_notify gtk_widget_thaw_child_notify;
alias extern (C) void function(aGtkWidget *, in char *)TGTKgtk_widget_child_notify; extern(D) TGTKgtk_widget_child_notify gtk_widget_child_notify;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_freeze_child_notify; extern(D) TGTKgtk_widget_freeze_child_notify gtk_widget_freeze_child_notify;
alias extern (C) void * function(aGtkWidget *, void *)TGTKgtk_widget_region_intersect; extern(D) TGTKgtk_widget_region_intersect gtk_widget_region_intersect;
alias extern (C) gint function(aGtkWidget *, _GdkRectangle *, _GdkRectangle *)TGTKgtk_widget_intersect; extern(D) TGTKgtk_widget_intersect gtk_widget_intersect;
alias extern (C) void function(aGtkWidget *, aGtkWidget *)TGTKgtk_widget_reparent; extern(D) TGTKgtk_widget_reparent gtk_widget_reparent;
alias extern (C) gint function(aGtkWidget *, aGtkAdjustment *, aGtkAdjustment *)TGTKgtk_widget_set_scroll_adjustments; extern(D) TGTKgtk_widget_set_scroll_adjustments gtk_widget_set_scroll_adjustments;
alias extern (C) gint function(aGtkWidget *)TGTKgtk_widget_activate; extern(D) TGTKgtk_widget_activate gtk_widget_activate;
alias extern (C) gint function(aGtkWidget *, _GdkEvent *)TGTKgtk_widget_send_expose; extern(D) TGTKgtk_widget_send_expose gtk_widget_send_expose;
alias extern (C) gint function(aGtkWidget *, _GdkEvent *)TGTKgtk_widget_event; extern(D) TGTKgtk_widget_event gtk_widget_event;
alias extern (C) gint function(aGtkWidget *, gint)TGTKgtk_widget_mnemonic_activate; extern(D) TGTKgtk_widget_mnemonic_activate gtk_widget_mnemonic_activate;
alias extern (C) gint function(aGtkWidget *, guint)TGTKgtk_widget_can_activate_accel; extern(D) TGTKgtk_widget_can_activate_accel gtk_widget_can_activate_accel;
alias extern (C) _GList * function(aGtkWidget *)TGTKgtk_widget_list_accel_closures; extern(D) TGTKgtk_widget_list_accel_closures gtk_widget_list_accel_closures;
//alias extern (C) char * function(aGtkWidget *, gint *)TGTK_gtk_widget_get_accel_path; extern(D) TGTK_gtk_widget_get_accel_path _gtk_widget_get_accel_path;
alias extern (C) void function(aGtkWidget *, in char *, aGtkAccelGroup *)TGTKgtk_widget_set_accel_path; extern(D) TGTKgtk_widget_set_accel_path gtk_widget_set_accel_path;
alias extern (C) gint function(aGtkWidget *, aGtkAccelGroup *, guint, gint)TGTKgtk_widget_remove_accelerator; extern(D) TGTKgtk_widget_remove_accelerator gtk_widget_remove_accelerator;
alias extern (C) void function(aGtkWidget *, in char *, aGtkAccelGroup *, guint, gint, gint)TGTKgtk_widget_add_accelerator; extern(D) TGTKgtk_widget_add_accelerator gtk_widget_add_accelerator;
alias extern (C) void function(aGtkWidget *, aGtkRequisition *)TGTKgtk_widget_get_child_requisition; extern(D) TGTKgtk_widget_get_child_requisition gtk_widget_get_child_requisition;
alias extern (C) void function(aGtkWidget *, _GdkRectangle *)TGTKgtk_widget_size_allocate; extern(D) TGTKgtk_widget_size_allocate gtk_widget_size_allocate;
alias extern (C) void function(aGtkWidget *, aGtkRequisition *)TGTKgtk_widget_size_request; extern(D) TGTKgtk_widget_size_request gtk_widget_size_request;
alias extern (C) void function(aGtkWidget *, _GdkRectangle *)TGTKgtk_widget_draw; extern(D) TGTKgtk_widget_draw gtk_widget_draw;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_queue_resize_no_redraw; extern(D) TGTKgtk_widget_queue_resize_no_redraw gtk_widget_queue_resize_no_redraw;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_queue_resize; extern(D) TGTKgtk_widget_queue_resize gtk_widget_queue_resize;
alias extern (C) void function(aGtkWidget *, gint, gint, gint, gint)TGTKgtk_widget_queue_clear_area; extern(D) TGTKgtk_widget_queue_clear_area gtk_widget_queue_clear_area;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_queue_clear; extern(D) TGTKgtk_widget_queue_clear gtk_widget_queue_clear;
alias extern (C) void function(aGtkWidget *, gint, gint, gint, gint)TGTKgtk_widget_queue_draw_area; extern(D) TGTKgtk_widget_queue_draw_area gtk_widget_queue_draw_area;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_queue_draw; extern(D) TGTKgtk_widget_queue_draw gtk_widget_queue_draw;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_unrealize; extern(D) TGTKgtk_widget_unrealize gtk_widget_unrealize;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_realize; extern(D) TGTKgtk_widget_realize gtk_widget_realize;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_unmap; extern(D) TGTKgtk_widget_unmap gtk_widget_unmap;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_map; extern(D) TGTKgtk_widget_map gtk_widget_map;
alias extern (C) gint function(aGtkWidget *)TGTKgtk_widget_get_no_show_all; extern(D) TGTKgtk_widget_get_no_show_all gtk_widget_get_no_show_all;
alias extern (C) void function(aGtkWidget *, gint)TGTKgtk_widget_set_no_show_all; extern(D) TGTKgtk_widget_set_no_show_all gtk_widget_set_no_show_all;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_hide_all; extern(D) TGTKgtk_widget_hide_all gtk_widget_hide_all;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_show_all; extern(D) TGTKgtk_widget_show_all gtk_widget_show_all;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_hide; extern(D) TGTKgtk_widget_hide gtk_widget_hide;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_show_now; extern(D) TGTKgtk_widget_show_now gtk_widget_show_now;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_show; extern(D) TGTKgtk_widget_show gtk_widget_show;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_unparent; extern(D) TGTKgtk_widget_unparent gtk_widget_unparent;
alias extern (C) void function(aGtkWidget *, in char *, ...)TGTKgtk_widget_set; extern(D) TGTKgtk_widget_set gtk_widget_set;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_unref; extern(D) TGTKgtk_widget_unref gtk_widget_unref;
alias extern (C) _GtkWidget * function(aGtkWidget *)TGTKgtk_widget_ref; extern(D) TGTKgtk_widget_ref gtk_widget_ref;
alias extern (C) void function(aGtkWidget *, _GtkWidget * *)TGTKgtk_widget_destroyed; extern(D) TGTKgtk_widget_destroyed gtk_widget_destroyed;
alias extern (C) void function(aGtkWidget *)TGTKgtk_widget_destroy; extern(D) TGTKgtk_widget_destroy gtk_widget_destroy;
alias extern (C) _GtkWidget * function(GType, in char *, ...)TGTKgtk_widget_new; extern(D) TGTKgtk_widget_new gtk_widget_new;
alias extern (C) GType function()TGTKgtk_widget_get_type; extern(D) TGTKgtk_widget_get_type gtk_widget_get_type;
//alias extern (C) gint function(_BCD_func__12993, _GValue *, _GParamSpec *, _GValue *)TGTK_gtk_settings_parse_convert; extern(D) TGTK_gtk_settings_parse_convert _gtk_settings_parse_convert;
//alias extern (C) _BCD_func__12993 function(GType)TGTK_gtk_rc_property_parser_from_type; extern(D) TGTK_gtk_rc_property_parser_from_type _gtk_rc_property_parser_from_type;
//alias extern (C) void function(_GdkEventSetting *)TGTK_gtk_settings_handle_event; extern(D) TGTK_gtk_settings_handle_event _gtk_settings_handle_event;
//alias extern (C) void function(aGtkSettings *)TGTK_gtk_settings_reset_rc_values; extern(D) TGTK_gtk_settings_reset_rc_values _gtk_settings_reset_rc_values;
//alias extern (C) void function(aGtkSettings *, char *, aGtkSettingsValue *)TGTK_gtk_settings_set_property_value_from_rc; extern(D) TGTK_gtk_settings_set_property_value_from_rc _gtk_settings_set_property_value_from_rc;
alias extern (C) void function(aGtkSettings *, in char *, double, char *)TGTKgtk_settings_set_double_property; extern(D) TGTKgtk_settings_set_double_property gtk_settings_set_double_property;
alias extern (C) void function(aGtkSettings *, in char *, glong, char *)TGTKgtk_settings_set_long_property; extern(D) TGTKgtk_settings_set_long_property gtk_settings_set_long_property;
alias extern (C) void function(aGtkSettings *, in char *, in char *, char *)TGTKgtk_settings_set_string_property; extern(D) TGTKgtk_settings_set_string_property gtk_settings_set_string_property;
alias extern (C) void function(aGtkSettings *, in char *, aGtkSettingsValue *)TGTKgtk_settings_set_property_value; extern(D) TGTKgtk_settings_set_property_value gtk_settings_set_property_value;
alias extern (C) gint function(_GParamSpec *, _GString *, _GValue *)TGTKgtk_rc_property_parse_border; extern(D) TGTKgtk_rc_property_parse_border gtk_rc_property_parse_border;
alias extern (C) gint function(_GParamSpec *, _GString *, _GValue *)TGTKgtk_rc_property_parse_requisition; extern(D) TGTKgtk_rc_property_parse_requisition gtk_rc_property_parse_requisition;
alias extern (C) gint function(_GParamSpec *, _GString *, _GValue *)TGTKgtk_rc_property_parse_flags; extern(D) TGTKgtk_rc_property_parse_flags gtk_rc_property_parse_flags;
alias extern (C) gint function(_GParamSpec *, _GString *, _GValue *)TGTKgtk_rc_property_parse_enum; extern(D) TGTKgtk_rc_property_parse_enum gtk_rc_property_parse_enum;
alias extern (C) gint function(_GParamSpec *, _GString *, _GValue *)TGTKgtk_rc_property_parse_color; extern(D) TGTKgtk_rc_property_parse_color gtk_rc_property_parse_color;
alias extern (C) void function(_GParamSpec *, _BCD_func__12993)TGTKgtk_settings_install_property_parser; extern(D) TGTKgtk_settings_install_property_parser gtk_settings_install_property_parser;
alias extern (C) void function(_GParamSpec *)TGTKgtk_settings_install_property; extern(D) TGTKgtk_settings_install_property gtk_settings_install_property;
alias extern (C) _GtkSettings * function(_GdkScreen *)TGTKgtk_settings_get_for_screen; extern(D) TGTKgtk_settings_get_for_screen gtk_settings_get_for_screen;
alias extern (C) _GtkSettings * function()TGTKgtk_settings_get_default; extern(D) TGTKgtk_settings_get_default gtk_settings_get_default;
alias extern (C) GType function()TGTKgtk_settings_get_type; extern(D) TGTKgtk_settings_get_type gtk_settings_get_type;
//alias extern (C) void function(aGtkSettings *)TGTK_gtk_rc_context_destroy; extern(D) TGTK_gtk_rc_context_destroy _gtk_rc_context_destroy;
//alias extern (C) char * function(aGtkSettings *)TGTK_gtk_rc_context_get_default_font_name; extern(D) TGTK_gtk_rc_context_get_default_font_name _gtk_rc_context_get_default_font_name;
//alias extern (C) _GSList * function(aGtkRcStyle *)TGTK_gtk_rc_style_get_color_hashes; extern(D) TGTK_gtk_rc_style_get_color_hashes _gtk_rc_style_get_color_hashes;
//alias extern (C) void function(aGtkRcStyle *, guint, guint)TGTK_gtk_rc_style_unset_rc_property; extern(D) TGTK_gtk_rc_style_unset_rc_property _gtk_rc_style_unset_rc_property;
//alias extern (C) void function(aGtkRcStyle *, aGtkRcProperty *)TGTK_gtk_rc_style_set_rc_property; extern(D) TGTK_gtk_rc_style_set_rc_property _gtk_rc_style_set_rc_property;
//alias extern (C) _GtkRcProperty * function(aGtkRcStyle *, guint, guint)TGTK_gtk_rc_style_lookup_rc_property; extern(D) TGTK_gtk_rc_style_lookup_rc_property _gtk_rc_style_lookup_rc_property;
alias extern (C) guint function(_GScanner *, gint *)TGTKgtk_rc_parse_priority; extern(D) TGTKgtk_rc_parse_priority gtk_rc_parse_priority;
alias extern (C) guint function(_GScanner *, gint *)TGTKgtk_rc_parse_state; extern(D) TGTKgtk_rc_parse_state gtk_rc_parse_state;
alias extern (C) guint function(_GScanner *, aGtkRcStyle *, _GdkColor *)TGTKgtk_rc_parse_color_full; extern(D) TGTKgtk_rc_parse_color_full gtk_rc_parse_color_full;
alias extern (C) guint function(_GScanner *, _GdkColor *)TGTKgtk_rc_parse_color; extern(D) TGTKgtk_rc_parse_color gtk_rc_parse_color;
alias extern (C) _GScanner * function()TGTKgtk_rc_scanner_new; extern(D) TGTKgtk_rc_scanner_new gtk_rc_scanner_new;
alias extern (C) char * function()TGTKgtk_rc_get_im_module_file; extern(D) TGTKgtk_rc_get_im_module_file gtk_rc_get_im_module_file;
alias extern (C) char * function()TGTKgtk_rc_get_im_module_path; extern(D) TGTKgtk_rc_get_im_module_path gtk_rc_get_im_module_path;
alias extern (C) char * function()TGTKgtk_rc_get_module_dir; extern(D) TGTKgtk_rc_get_module_dir gtk_rc_get_module_dir;
alias extern (C) char * function()TGTKgtk_rc_get_theme_dir; extern(D) TGTKgtk_rc_get_theme_dir gtk_rc_get_theme_dir;
alias extern (C) char * function(in char *)TGTKgtk_rc_find_module_in_path; extern(D) TGTKgtk_rc_find_module_in_path gtk_rc_find_module_in_path;
alias extern (C) void function(aGtkRcStyle *)TGTKgtk_rc_style_unref; extern(D) TGTKgtk_rc_style_unref gtk_rc_style_unref;
alias extern (C) void function(aGtkRcStyle *)TGTKgtk_rc_style_ref; extern(D) TGTKgtk_rc_style_ref gtk_rc_style_ref;
alias extern (C) _GtkRcStyle * function(aGtkRcStyle *)TGTKgtk_rc_style_copy; extern(D) TGTKgtk_rc_style_copy gtk_rc_style_copy;
alias extern (C) _GtkRcStyle * function()TGTKgtk_rc_style_new; extern(D) TGTKgtk_rc_style_new gtk_rc_style_new;
alias extern (C) GType function()TGTKgtk_rc_style_get_type; extern(D) TGTKgtk_rc_style_get_type gtk_rc_style_get_type;
alias extern (C) void function(aGtkRcStyle *, in char *)TGTKgtk_rc_add_class_style; extern(D) TGTKgtk_rc_add_class_style gtk_rc_add_class_style;
alias extern (C) void function(aGtkRcStyle *, in char *)TGTKgtk_rc_add_widget_class_style; extern(D) TGTKgtk_rc_add_widget_class_style gtk_rc_add_widget_class_style;
alias extern (C) void function(aGtkRcStyle *, in char *)TGTKgtk_rc_add_widget_name_style; extern(D) TGTKgtk_rc_add_widget_name_style gtk_rc_add_widget_name_style;
alias extern (C) gint function()TGTKgtk_rc_reparse_all; extern(D) TGTKgtk_rc_reparse_all gtk_rc_reparse_all;
alias extern (C) void function(in char *)TGTKgtk_rc_parse_string; extern(D) TGTKgtk_rc_parse_string gtk_rc_parse_string;
alias extern (C) void function(in char *)TGTKgtk_rc_parse; extern(D) TGTKgtk_rc_parse gtk_rc_parse;
alias extern (C) char * function(aGtkSettings *, _GScanner *, in char *)TGTKgtk_rc_find_pixmap_in_path; extern(D) TGTKgtk_rc_find_pixmap_in_path gtk_rc_find_pixmap_in_path;
alias extern (C) void function(aGtkSettings *)TGTKgtk_rc_reset_styles; extern(D) TGTKgtk_rc_reset_styles gtk_rc_reset_styles;
alias extern (C) gint function(aGtkSettings *, gint)TGTKgtk_rc_reparse_all_for_settings; extern(D) TGTKgtk_rc_reparse_all_for_settings gtk_rc_reparse_all_for_settings;
alias extern (C) _GtkStyle * function(aGtkSettings *, in char *, in char *, GType)TGTKgtk_rc_get_style_by_paths; extern(D) TGTKgtk_rc_get_style_by_paths gtk_rc_get_style_by_paths;
alias extern (C) _GtkStyle * function(aGtkWidget *)TGTKgtk_rc_get_style; extern(D) TGTKgtk_rc_get_style gtk_rc_get_style;
alias extern (C) char * * function()TGTKgtk_rc_get_default_files; extern(D) TGTKgtk_rc_get_default_files gtk_rc_get_default_files;
alias extern (C) void function(char * *)TGTKgtk_rc_set_default_files; extern(D) TGTKgtk_rc_set_default_files gtk_rc_set_default_files;
alias extern (C) void function(in char *)TGTKgtk_rc_add_default_file; extern(D) TGTKgtk_rc_add_default_file gtk_rc_add_default_file;
//alias extern (C) gint function(_GSList *, gint, char *, char *)TGTK_gtk_rc_match_widget_class; extern(D) TGTK_gtk_rc_match_widget_class _gtk_rc_match_widget_class;
//alias extern (C) void function(_GSList *)TGTK_gtk_rc_free_widget_class_path; extern(D) TGTK_gtk_rc_free_widget_class_path _gtk_rc_free_widget_class_path;
//alias extern (C) _GSList * function(char *)TGTK_gtk_rc_parse_widget_class_path; extern(D) TGTK_gtk_rc_parse_widget_class_path _gtk_rc_parse_widget_class_path;
//alias extern (C) void function()TGTK_gtk_rc_init; extern(D) TGTK_gtk_rc_init _gtk_rc_init;
//alias extern (C) void function(aGtkWidget *, _GdkColor *)TGTK_gtk_widget_get_cursor_color; extern(D) TGTK_gtk_widget_get_cursor_color _gtk_widget_get_cursor_color;
//alias extern (C) _GdkGC * function(aGtkWidget *)TGTK_gtk_widget_get_cursor_gc; extern(D) TGTK_gtk_widget_get_cursor_gc _gtk_widget_get_cursor_gc;
alias extern (C) void function(aGtkWidget *, _GdkDrawable *, _GdkRectangle *, _GdkRectangle *, gint, gint, gint)TGTKgtk_draw_insertion_cursor; extern(D) TGTKgtk_draw_insertion_cursor gtk_draw_insertion_cursor;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, in char *)TGTKgtk_paint_string; extern(D) TGTKgtk_paint_string gtk_paint_string;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, in char *)TGTKgtk_draw_string; extern(D) TGTKgtk_draw_string gtk_draw_string;
//alias extern (C) void function(_GdkColor *, _GdkColor *, double)TGTK_gtk_style_shade; extern(D) TGTK_gtk_style_shade _gtk_style_shade;
//alias extern (C) void function(aGtkStyle *, aGtkSettings *)TGTK_gtk_style_init_for_settings; extern(D) TGTK_gtk_style_init_for_settings _gtk_style_init_for_settings;
//alias extern (C) _GValue * function(aGtkStyle *, guint, _GParamSpec *, _BCD_func__12993)TGTK_gtk_style_peek_property_value; extern(D) TGTK_gtk_style_peek_property_value _gtk_style_peek_property_value;
alias extern (C) void function(aGtkBorder *)TGTKgtk_border_free; extern(D) TGTKgtk_border_free gtk_border_free;
alias extern (C) _GtkBorder * function(aGtkBorder *)TGTKgtk_border_copy; extern(D) TGTKgtk_border_copy gtk_border_copy;
alias extern (C) GType function()TGTKgtk_border_get_type; extern(D) TGTKgtk_border_get_type gtk_border_get_type;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, gint, gint, gint)TGTKgtk_paint_resize_grip; extern(D) TGTKgtk_paint_resize_grip gtk_paint_resize_grip;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, void *)TGTKgtk_paint_layout; extern(D) TGTKgtk_paint_layout gtk_paint_layout;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, gint)TGTKgtk_paint_expander; extern(D) TGTKgtk_paint_expander gtk_paint_expander;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, gint, gint, gint)TGTKgtk_paint_handle; extern(D) TGTKgtk_paint_handle gtk_paint_handle;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, gint, gint, gint)TGTKgtk_paint_slider; extern(D) TGTKgtk_paint_slider gtk_paint_slider;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, gint, gint)TGTKgtk_paint_focus; extern(D) TGTKgtk_paint_focus gtk_paint_focus;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, gint, gint, gint)TGTKgtk_paint_extension; extern(D) TGTKgtk_paint_extension gtk_paint_extension;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, gint, gint, gint, gint, gint)TGTKgtk_paint_box_gap; extern(D) TGTKgtk_paint_box_gap gtk_paint_box_gap;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, gint, gint, gint, gint, gint)TGTKgtk_paint_shadow_gap; extern(D) TGTKgtk_paint_shadow_gap gtk_paint_shadow_gap;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, gint, gint)TGTKgtk_paint_tab; extern(D) TGTKgtk_paint_tab gtk_paint_tab;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, gint, gint)TGTKgtk_paint_option; extern(D) TGTKgtk_paint_option gtk_paint_option;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, gint, gint)TGTKgtk_paint_check; extern(D) TGTKgtk_paint_check gtk_paint_check;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, gint, gint)TGTKgtk_paint_flat_box; extern(D) TGTKgtk_paint_flat_box gtk_paint_flat_box;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, gint, gint)TGTKgtk_paint_box; extern(D) TGTKgtk_paint_box gtk_paint_box;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, gint, gint)TGTKgtk_paint_diamond; extern(D) TGTKgtk_paint_diamond gtk_paint_diamond;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, gint, gint, gint, gint)TGTKgtk_paint_arrow; extern(D) TGTKgtk_paint_arrow gtk_paint_arrow;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, in char *, _GdkPoint *, gint, gint)TGTKgtk_paint_polygon; extern(D) TGTKgtk_paint_polygon gtk_paint_polygon;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, gint, gint)TGTKgtk_paint_shadow; extern(D) TGTKgtk_paint_shadow gtk_paint_shadow;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, gint)TGTKgtk_paint_vline; extern(D) TGTKgtk_paint_vline gtk_paint_vline;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, _GdkRectangle *, aGtkWidget *, in char *, gint, gint, gint)TGTKgtk_paint_hline; extern(D) TGTKgtk_paint_hline gtk_paint_hline;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint)TGTKgtk_draw_resize_grip; extern(D) TGTKgtk_draw_resize_grip gtk_draw_resize_grip;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, void *)TGTKgtk_draw_layout; extern(D) TGTKgtk_draw_layout gtk_draw_layout;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint)TGTKgtk_draw_expander; extern(D) TGTKgtk_draw_expander gtk_draw_expander;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint, gint)TGTKgtk_draw_handle; extern(D) TGTKgtk_draw_handle gtk_draw_handle;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint, gint)TGTKgtk_draw_slider; extern(D) TGTKgtk_draw_slider gtk_draw_slider;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint)TGTKgtk_draw_focus; extern(D) TGTKgtk_draw_focus gtk_draw_focus;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint, gint)TGTKgtk_draw_extension; extern(D) TGTKgtk_draw_extension gtk_draw_extension;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint, gint, gint, gint)TGTKgtk_draw_box_gap; extern(D) TGTKgtk_draw_box_gap gtk_draw_box_gap;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint, gint, gint, gint)TGTKgtk_draw_shadow_gap; extern(D) TGTKgtk_draw_shadow_gap gtk_draw_shadow_gap;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint)TGTKgtk_draw_tab; extern(D) TGTKgtk_draw_tab gtk_draw_tab;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint)TGTKgtk_draw_option; extern(D) TGTKgtk_draw_option gtk_draw_option;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint)TGTKgtk_draw_check; extern(D) TGTKgtk_draw_check gtk_draw_check;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint)TGTKgtk_draw_flat_box; extern(D) TGTKgtk_draw_flat_box gtk_draw_flat_box;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint)TGTKgtk_draw_box; extern(D) TGTKgtk_draw_box gtk_draw_box;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint)TGTKgtk_draw_diamond; extern(D) TGTKgtk_draw_diamond gtk_draw_diamond;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint, gint, gint)TGTKgtk_draw_arrow; extern(D) TGTKgtk_draw_arrow gtk_draw_arrow;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkPoint *, gint, gint)TGTKgtk_draw_polygon; extern(D) TGTKgtk_draw_polygon gtk_draw_polygon;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint)TGTKgtk_draw_shadow; extern(D) TGTKgtk_draw_shadow gtk_draw_shadow;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint)TGTKgtk_draw_vline; extern(D) TGTKgtk_draw_vline gtk_draw_vline;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint)TGTKgtk_draw_hline; extern(D) TGTKgtk_draw_hline gtk_draw_hline;
alias extern (C) void * function(aGtkStyle *, void *, gint, gint, gint, aGtkWidget *, in char *)TGTKgtk_style_render_icon; extern(D) TGTKgtk_style_render_icon gtk_style_render_icon;
alias extern (C) gint function(aGtkStyle *, in char *, _GdkColor *)TGTKgtk_style_lookup_color; extern(D) TGTKgtk_style_lookup_color gtk_style_lookup_color;
alias extern (C) void * function(aGtkStyle *, in char *)TGTKgtk_style_lookup_icon_set; extern(D) TGTKgtk_style_lookup_icon_set gtk_style_lookup_icon_set;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, gint, gint, gint, gint)TGTKgtk_style_apply_default_background; extern(D) TGTKgtk_style_apply_default_background gtk_style_apply_default_background;
alias extern (C) void function(aGtkStyle *, _GdkDrawable *, gint)TGTKgtk_style_set_background; extern(D) TGTKgtk_style_set_background gtk_style_set_background;
alias extern (C) void function(aGtkStyle *, _GdkFont *)TGTKgtk_style_set_font; extern(D) TGTKgtk_style_set_font gtk_style_set_font;
alias extern (C) _GdkFont * function(aGtkStyle *)TGTKgtk_style_get_font; extern(D) TGTKgtk_style_get_font gtk_style_get_font;
alias extern (C) void function(aGtkStyle *)TGTKgtk_style_unref; extern(D) TGTKgtk_style_unref gtk_style_unref;
alias extern (C) _GtkStyle * function(aGtkStyle *)TGTKgtk_style_ref; extern(D) TGTKgtk_style_ref gtk_style_ref;
alias extern (C) void function(aGtkStyle *)TGTKgtk_style_detach; extern(D) TGTKgtk_style_detach gtk_style_detach;
alias extern (C) _GtkStyle * function(aGtkStyle *, _GdkDrawable *)TGTKgtk_style_attach; extern(D) TGTKgtk_style_attach gtk_style_attach;
alias extern (C) _GtkStyle * function(aGtkStyle *)TGTKgtk_style_copy; extern(D) TGTKgtk_style_copy gtk_style_copy;
alias extern (C) _GtkStyle * function()TGTKgtk_style_new; extern(D) TGTKgtk_style_new gtk_style_new;
alias extern (C) GType function()TGTKgtk_style_get_type; extern(D) TGTKgtk_style_get_type gtk_style_get_type;
alias extern (C) void function(aGtkAdjustment *, double)TGTKgtk_adjustment_set_value; extern(D) TGTKgtk_adjustment_set_value gtk_adjustment_set_value;
alias extern (C) double function(aGtkAdjustment *)TGTKgtk_adjustment_get_value; extern(D) TGTKgtk_adjustment_get_value gtk_adjustment_get_value;
alias extern (C) void function(aGtkAdjustment *, double, double)TGTKgtk_adjustment_clamp_page; extern(D) TGTKgtk_adjustment_clamp_page gtk_adjustment_clamp_page;
alias extern (C) void function(aGtkAdjustment *)TGTKgtk_adjustment_value_changed; extern(D) TGTKgtk_adjustment_value_changed gtk_adjustment_value_changed;
alias extern (C) void function(aGtkAdjustment *)TGTKgtk_adjustment_changed; extern(D) TGTKgtk_adjustment_changed gtk_adjustment_changed;
alias extern (C) _GtkObject * function(double, double, double, double, double, double)TGTKgtk_adjustment_new; extern(D) TGTKgtk_adjustment_new gtk_adjustment_new;
alias extern (C) GType function()TGTKgtk_adjustment_get_type; extern(D) TGTKgtk_adjustment_get_type gtk_adjustment_get_type;
alias extern (C) void function(in char *, guint, guint, guint)TGTKgtk_object_add_arg_type; extern(D) TGTKgtk_object_add_arg_type gtk_object_add_arg_type;
alias extern (C) void function(aGtkObject *, in char *, ...)TGTKgtk_object_set; extern(D) TGTKgtk_object_set gtk_object_set;
alias extern (C) void function(aGtkObject *, in char *, ...)TGTKgtk_object_get; extern(D) TGTKgtk_object_get gtk_object_get;
alias extern (C) void function(aGtkObject *, guint)TGTKgtk_object_remove_no_notify_by_id; extern(D) TGTKgtk_object_remove_no_notify_by_id gtk_object_remove_no_notify_by_id;
alias extern (C) void function(aGtkObject *, guint)TGTKgtk_object_remove_data_by_id; extern(D) TGTKgtk_object_remove_data_by_id gtk_object_remove_data_by_id;
alias extern (C) void * function(aGtkObject *, guint)TGTKgtk_object_get_data_by_id; extern(D) TGTKgtk_object_get_data_by_id gtk_object_get_data_by_id;
alias extern (C) void function(aGtkObject *, guint, void *, _BCD_func__13158)TGTKgtk_object_set_data_by_id_full; extern(D) TGTKgtk_object_set_data_by_id_full gtk_object_set_data_by_id_full;
alias extern (C) void function(aGtkObject *, guint, void *)TGTKgtk_object_set_data_by_id; extern(D) TGTKgtk_object_set_data_by_id gtk_object_set_data_by_id;
alias extern (C) void * function(aGtkObject *)TGTKgtk_object_get_user_data; extern(D) TGTKgtk_object_get_user_data gtk_object_get_user_data;
alias extern (C) void function(aGtkObject *, void *)TGTKgtk_object_set_user_data; extern(D) TGTKgtk_object_set_user_data gtk_object_set_user_data;
alias extern (C) void function(aGtkObject *, in char *)TGTKgtk_object_remove_no_notify; extern(D) TGTKgtk_object_remove_no_notify gtk_object_remove_no_notify;
alias extern (C) void * function(aGtkObject *, in char *)TGTKgtk_object_get_data; extern(D) TGTKgtk_object_get_data gtk_object_get_data;
alias extern (C) void function(aGtkObject *, in char *)TGTKgtk_object_remove_data; extern(D) TGTKgtk_object_remove_data gtk_object_remove_data;
alias extern (C) void function(aGtkObject *, in char *, void *, _BCD_func__13158)TGTKgtk_object_set_data_full; extern(D) TGTKgtk_object_set_data_full gtk_object_set_data_full;
alias extern (C) void function(aGtkObject *, in char *, void *)TGTKgtk_object_set_data; extern(D) TGTKgtk_object_set_data gtk_object_set_data;
alias extern (C) void function(aGtkObject *, _BCD_func__13158, void *)TGTKgtk_object_weakunref; extern(D) TGTKgtk_object_weakunref gtk_object_weakunref;
alias extern (C) void function(aGtkObject *, _BCD_func__13158, void *)TGTKgtk_object_weakref; extern(D) TGTKgtk_object_weakref gtk_object_weakref;
alias extern (C) void function(aGtkObject *)TGTKgtk_object_unref; extern(D) TGTKgtk_object_unref gtk_object_unref;
alias extern (C) _GtkObject * function(aGtkObject *)TGTKgtk_object_ref; extern(D) TGTKgtk_object_ref gtk_object_ref;
alias extern (C) _GtkObject * function(guint, in char *, ...)TGTKgtk_object_new; extern(D) TGTKgtk_object_new gtk_object_new;
alias extern (C) void function(aGtkObject *)TGTKgtk_object_destroy; extern(D) TGTKgtk_object_destroy gtk_object_destroy;
alias extern (C) void function(aGtkObject *)TGTKgtk_object_sink; extern(D) TGTKgtk_object_sink gtk_object_sink;
alias extern (C) guint function()TGTKgtk_object_get_type; extern(D) TGTKgtk_object_get_type gtk_object_get_type;
alias extern (C) extern guint* TGTKgtk_debug_flags; extern(D) TGTKgtk_debug_flags gtk_debug_flags;
alias extern (C) void function(gint)TGTKgtk_type_init; extern(D) TGTKgtk_type_init gtk_type_init;
alias extern (C) _GFlagsValue * function(guint, in char *)TGTKgtk_type_flags_find_value; extern(D) TGTKgtk_type_flags_find_value gtk_type_flags_find_value;
alias extern (C) _GEnumValue * function(guint, in char *)TGTKgtk_type_enum_find_value; extern(D) TGTKgtk_type_enum_find_value gtk_type_enum_find_value;
alias extern (C) _GFlagsValue * function(guint)TGTKgtk_type_flags_get_values; extern(D) TGTKgtk_type_flags_get_values gtk_type_flags_get_values;
alias extern (C) _GEnumValue * function(guint)TGTKgtk_type_enum_get_values; extern(D) TGTKgtk_type_enum_get_values gtk_type_enum_get_values;
alias extern (C) void * function(guint)TGTKgtk_type_new; extern(D) TGTKgtk_type_new gtk_type_new;
alias extern (C) guint function(guint, aGtkTypeInfo *)TGTKgtk_type_unique; extern(D) TGTKgtk_type_unique gtk_type_unique;
alias extern (C) void * function(guint)TGTKgtk_type_class; extern(D) TGTKgtk_type_class gtk_type_class;
alias extern (C) guint function()TGTKgtk_identifier_get_type; extern(D) TGTKgtk_identifier_get_type gtk_identifier_get_type;
alias extern (C) guint function()TGTKgtk_widget_help_type_get_type; extern(D) TGTKgtk_widget_help_type_get_type gtk_widget_help_type_get_type;
alias extern (C) guint function()TGTKgtk_widget_flags_get_type; extern(D) TGTKgtk_widget_flags_get_type gtk_widget_flags_get_type;
alias extern (C) guint function()TGTKgtk_ui_manager_item_type_get_type; extern(D) TGTKgtk_ui_manager_item_type_get_type gtk_ui_manager_item_type_get_type;
alias extern (C) guint function()TGTKgtk_tree_view_column_sizing_get_type; extern(D) TGTKgtk_tree_view_column_sizing_get_type gtk_tree_view_column_sizing_get_type;
alias extern (C) guint function()TGTKgtk_tree_view_drop_position_get_type; extern(D) TGTKgtk_tree_view_drop_position_get_type gtk_tree_view_drop_position_get_type;
alias extern (C) guint function()TGTKgtk_tree_model_flags_get_type; extern(D) TGTKgtk_tree_model_flags_get_type gtk_tree_model_flags_get_type;
alias extern (C) guint function()TGTKgtk_tree_view_mode_get_type; extern(D) TGTKgtk_tree_view_mode_get_type gtk_tree_view_mode_get_type;
alias extern (C) guint function()TGTKgtk_toolbar_space_style_get_type; extern(D) TGTKgtk_toolbar_space_style_get_type gtk_toolbar_space_style_get_type;
alias extern (C) guint function()TGTKgtk_toolbar_child_type_get_type; extern(D) TGTKgtk_toolbar_child_type_get_type gtk_toolbar_child_type_get_type;
alias extern (C) guint function()TGTKgtk_text_window_type_get_type; extern(D) TGTKgtk_text_window_type_get_type gtk_text_window_type_get_type;
alias extern (C) guint function()TGTKgtk_text_search_flags_get_type; extern(D) TGTKgtk_text_search_flags_get_type gtk_text_search_flags_get_type;
alias extern (C) guint function()TGTKgtk_text_buffer_target_info_get_type; extern(D) TGTKgtk_text_buffer_target_info_get_type gtk_text_buffer_target_info_get_type;
alias extern (C) guint function()TGTKgtk_spin_type_get_type; extern(D) TGTKgtk_spin_type_get_type gtk_spin_type_get_type;
alias extern (C) guint function()TGTKgtk_spin_button_update_policy_get_type; extern(D) TGTKgtk_spin_button_update_policy_get_type gtk_spin_button_update_policy_get_type;
alias extern (C) guint function()TGTKgtk_size_group_mode_get_type; extern(D) TGTKgtk_size_group_mode_get_type gtk_size_group_mode_get_type;
alias extern (C) guint function()TGTKgtk_recent_manager_error_get_type; extern(D) TGTKgtk_recent_manager_error_get_type gtk_recent_manager_error_get_type;
alias extern (C) guint function()TGTKgtk_recent_filter_flags_get_type; extern(D) TGTKgtk_recent_filter_flags_get_type gtk_recent_filter_flags_get_type;
alias extern (C) guint function()TGTKgtk_recent_chooser_error_get_type; extern(D) TGTKgtk_recent_chooser_error_get_type gtk_recent_chooser_error_get_type;
alias extern (C) guint function()TGTKgtk_recent_sort_type_get_type; extern(D) TGTKgtk_recent_sort_type_get_type gtk_recent_sort_type_get_type;
alias extern (C) guint function()TGTKgtk_rc_token_type_get_type; extern(D) TGTKgtk_rc_token_type_get_type gtk_rc_token_type_get_type;
alias extern (C) guint function()TGTKgtk_rc_flags_get_type; extern(D) TGTKgtk_rc_flags_get_type gtk_rc_flags_get_type;
alias extern (C) guint function()TGTKgtk_progress_bar_orientation_get_type; extern(D) TGTKgtk_progress_bar_orientation_get_type gtk_progress_bar_orientation_get_type;
alias extern (C) guint function()TGTKgtk_progress_bar_style_get_type; extern(D) TGTKgtk_progress_bar_style_get_type gtk_progress_bar_style_get_type;
alias extern (C) guint function()TGTKgtk_private_flags_get_type; extern(D) TGTKgtk_private_flags_get_type gtk_private_flags_get_type;
alias extern (C) guint function()TGTKgtk_print_error_get_type; extern(D) TGTKgtk_print_error_get_type gtk_print_error_get_type;
alias extern (C) guint function()TGTKgtk_print_operation_action_get_type; extern(D) TGTKgtk_print_operation_action_get_type gtk_print_operation_action_get_type;
alias extern (C) guint function()TGTKgtk_print_operation_result_get_type; extern(D) TGTKgtk_print_operation_result_get_type gtk_print_operation_result_get_type;
alias extern (C) guint function()TGTKgtk_print_status_get_type; extern(D) TGTKgtk_print_status_get_type gtk_print_status_get_type;
alias extern (C) guint function()TGTKgtk_arg_flags_get_type; extern(D) TGTKgtk_arg_flags_get_type gtk_arg_flags_get_type;
alias extern (C) guint function()TGTKgtk_object_flags_get_type; extern(D) TGTKgtk_object_flags_get_type gtk_object_flags_get_type;
alias extern (C) guint function()TGTKgtk_notebook_tab_get_type; extern(D) TGTKgtk_notebook_tab_get_type gtk_notebook_tab_get_type;
alias extern (C) guint function()TGTKgtk_buttons_type_get_type; extern(D) TGTKgtk_buttons_type_get_type gtk_buttons_type_get_type;
alias extern (C) guint function()TGTKgtk_message_type_get_type; extern(D) TGTKgtk_message_type_get_type gtk_message_type_get_type;
alias extern (C) guint function()TGTKgtk_image_type_get_type; extern(D) TGTKgtk_image_type_get_type gtk_image_type_get_type;
alias extern (C) guint function()TGTKgtk_icon_view_drop_position_get_type; extern(D) TGTKgtk_icon_view_drop_position_get_type gtk_icon_view_drop_position_get_type;
alias extern (C) guint function()TGTKgtk_icon_theme_error_get_type; extern(D) TGTKgtk_icon_theme_error_get_type gtk_icon_theme_error_get_type;
alias extern (C) guint function()TGTKgtk_icon_lookup_flags_get_type; extern(D) TGTKgtk_icon_lookup_flags_get_type gtk_icon_lookup_flags_get_type;
alias extern (C) guint function()TGTKgtk_file_filter_flags_get_type; extern(D) TGTKgtk_file_filter_flags_get_type gtk_file_filter_flags_get_type;
alias extern (C) guint function()TGTKgtk_file_chooser_error_get_type; extern(D) TGTKgtk_file_chooser_error_get_type gtk_file_chooser_error_get_type;
alias extern (C) guint function()TGTKgtk_file_chooser_confirmation_get_type; extern(D) TGTKgtk_file_chooser_confirmation_get_type gtk_file_chooser_confirmation_get_type;
alias extern (C) guint function()TGTKgtk_file_chooser_action_get_type; extern(D) TGTKgtk_file_chooser_action_get_type gtk_file_chooser_action_get_type;
alias extern (C) guint function()TGTKgtk_drag_result_get_type; extern(D) TGTKgtk_drag_result_get_type gtk_drag_result_get_type;
alias extern (C) guint function()TGTKgtk_tree_view_grid_lines_get_type; extern(D) TGTKgtk_tree_view_grid_lines_get_type gtk_tree_view_grid_lines_get_type;
alias extern (C) guint function()TGTKgtk_unit_get_type; extern(D) TGTKgtk_unit_get_type gtk_unit_get_type;
alias extern (C) guint function()TGTKgtk_print_duplex_get_type; extern(D) TGTKgtk_print_duplex_get_type gtk_print_duplex_get_type;
alias extern (C) guint function()TGTKgtk_print_quality_get_type; extern(D) TGTKgtk_print_quality_get_type gtk_print_quality_get_type;
alias extern (C) guint function()TGTKgtk_page_orientation_get_type; extern(D) TGTKgtk_page_orientation_get_type gtk_page_orientation_get_type;
alias extern (C) guint function()TGTKgtk_page_set_get_type; extern(D) TGTKgtk_page_set_get_type gtk_page_set_get_type;
alias extern (C) guint function()TGTKgtk_print_pages_get_type; extern(D) TGTKgtk_print_pages_get_type gtk_print_pages_get_type;
alias extern (C) guint function()TGTKgtk_pack_direction_get_type; extern(D) TGTKgtk_pack_direction_get_type gtk_pack_direction_get_type;
alias extern (C) guint function()TGTKgtk_im_status_style_get_type; extern(D) TGTKgtk_im_status_style_get_type gtk_im_status_style_get_type;
alias extern (C) guint function()TGTKgtk_im_preedit_style_get_type; extern(D) TGTKgtk_im_preedit_style_get_type gtk_im_preedit_style_get_type;
alias extern (C) guint function()TGTKgtk_sort_type_get_type; extern(D) TGTKgtk_sort_type_get_type gtk_sort_type_get_type;
alias extern (C) guint function()TGTKgtk_wrap_mode_get_type; extern(D) TGTKgtk_wrap_mode_get_type gtk_wrap_mode_get_type;
alias extern (C) guint function()TGTKgtk_window_type_get_type; extern(D) TGTKgtk_window_type_get_type gtk_window_type_get_type;
alias extern (C) guint function()TGTKgtk_window_position_get_type; extern(D) TGTKgtk_window_position_get_type gtk_window_position_get_type;
alias extern (C) guint function()TGTKgtk_visibility_get_type; extern(D) TGTKgtk_visibility_get_type gtk_visibility_get_type;
alias extern (C) guint function()TGTKgtk_update_type_get_type; extern(D) TGTKgtk_update_type_get_type gtk_update_type_get_type;
alias extern (C) guint function()TGTKgtk_toolbar_style_get_type; extern(D) TGTKgtk_toolbar_style_get_type gtk_toolbar_style_get_type;
alias extern (C) guint function()TGTKgtk_submenu_placement_get_type; extern(D) TGTKgtk_submenu_placement_get_type gtk_submenu_placement_get_type;
alias extern (C) guint function()TGTKgtk_submenu_direction_get_type; extern(D) TGTKgtk_submenu_direction_get_type gtk_submenu_direction_get_type;
alias extern (C) guint function()TGTKgtk_state_type_get_type; extern(D) TGTKgtk_state_type_get_type gtk_state_type_get_type;
alias extern (C) guint function()TGTKgtk_shadow_type_get_type; extern(D) TGTKgtk_shadow_type_get_type gtk_shadow_type_get_type;
alias extern (C) guint function()TGTKgtk_selection_mode_get_type; extern(D) TGTKgtk_selection_mode_get_type gtk_selection_mode_get_type;
alias extern (C) guint function()TGTKgtk_scroll_type_get_type; extern(D) TGTKgtk_scroll_type_get_type gtk_scroll_type_get_type;
alias extern (C) guint function()TGTKgtk_signal_run_type_get_type; extern(D) TGTKgtk_signal_run_type_get_type gtk_signal_run_type_get_type;
alias extern (C) guint function()TGTKgtk_resize_mode_get_type; extern(D) TGTKgtk_resize_mode_get_type gtk_resize_mode_get_type;
alias extern (C) guint function()TGTKgtk_relief_style_get_type; extern(D) TGTKgtk_relief_style_get_type gtk_relief_style_get_type;
alias extern (C) guint function()TGTKgtk_preview_type_get_type; extern(D) TGTKgtk_preview_type_get_type gtk_preview_type_get_type;
alias extern (C) guint function()TGTKgtk_position_type_get_type; extern(D) TGTKgtk_position_type_get_type gtk_position_type_get_type;
alias extern (C) guint function()TGTKgtk_policy_type_get_type; extern(D) TGTKgtk_policy_type_get_type gtk_policy_type_get_type;
alias extern (C) guint function()TGTKgtk_path_type_get_type; extern(D) TGTKgtk_path_type_get_type gtk_path_type_get_type;
alias extern (C) guint function()TGTKgtk_path_priority_type_get_type; extern(D) TGTKgtk_path_priority_type_get_type gtk_path_priority_type_get_type;
alias extern (C) guint function()TGTKgtk_pack_type_get_type; extern(D) TGTKgtk_pack_type_get_type gtk_pack_type_get_type;
alias extern (C) guint function()TGTKgtk_corner_type_get_type; extern(D) TGTKgtk_corner_type_get_type gtk_corner_type_get_type;
alias extern (C) guint function()TGTKgtk_orientation_get_type; extern(D) TGTKgtk_orientation_get_type gtk_orientation_get_type;
alias extern (C) guint function()TGTKgtk_scroll_step_get_type; extern(D) TGTKgtk_scroll_step_get_type gtk_scroll_step_get_type;
alias extern (C) guint function()TGTKgtk_movement_step_get_type; extern(D) TGTKgtk_movement_step_get_type gtk_movement_step_get_type;
alias extern (C) guint function()TGTKgtk_metric_type_get_type; extern(D) TGTKgtk_metric_type_get_type gtk_metric_type_get_type;
alias extern (C) guint function()TGTKgtk_menu_direction_type_get_type; extern(D) TGTKgtk_menu_direction_type_get_type gtk_menu_direction_type_get_type;
alias extern (C) guint function()TGTKgtk_match_type_get_type; extern(D) TGTKgtk_match_type_get_type gtk_match_type_get_type;
alias extern (C) guint function()TGTKgtk_justification_get_type; extern(D) TGTKgtk_justification_get_type gtk_justification_get_type;
alias extern (C) guint function()TGTKgtk_text_direction_get_type; extern(D) TGTKgtk_text_direction_get_type gtk_text_direction_get_type;
alias extern (C) guint function()TGTKgtk_side_type_get_type; extern(D) TGTKgtk_side_type_get_type gtk_side_type_get_type;
alias extern (C) guint function()TGTKgtk_sensitivity_type_get_type; extern(D) TGTKgtk_sensitivity_type_get_type gtk_sensitivity_type_get_type;
alias extern (C) guint function()TGTKgtk_icon_size_get_type; extern(D) TGTKgtk_icon_size_get_type gtk_icon_size_get_type;
alias extern (C) guint function()TGTKgtk_expander_style_get_type; extern(D) TGTKgtk_expander_style_get_type gtk_expander_style_get_type;
alias extern (C) guint function()TGTKgtk_direction_type_get_type; extern(D) TGTKgtk_direction_type_get_type gtk_direction_type_get_type;
alias extern (C) guint function()TGTKgtk_delete_type_get_type; extern(D) TGTKgtk_delete_type_get_type gtk_delete_type_get_type;
alias extern (C) guint function()TGTKgtk_curve_type_get_type; extern(D) TGTKgtk_curve_type_get_type gtk_curve_type_get_type;
alias extern (C) guint function()TGTKgtk_button_box_style_get_type; extern(D) TGTKgtk_button_box_style_get_type gtk_button_box_style_get_type;
alias extern (C) guint function()TGTKgtk_attach_options_get_type; extern(D) TGTKgtk_attach_options_get_type gtk_attach_options_get_type;
alias extern (C) guint function()TGTKgtk_arrow_type_get_type; extern(D) TGTKgtk_arrow_type_get_type gtk_arrow_type_get_type;
alias extern (C) guint function()TGTKgtk_anchor_type_get_type; extern(D) TGTKgtk_anchor_type_get_type gtk_anchor_type_get_type;
alias extern (C) guint function()TGTKgtk_target_flags_get_type; extern(D) TGTKgtk_target_flags_get_type gtk_target_flags_get_type;
alias extern (C) guint function()TGTKgtk_dest_defaults_get_type; extern(D) TGTKgtk_dest_defaults_get_type gtk_dest_defaults_get_type;
alias extern (C) guint function()TGTKgtk_response_type_get_type; extern(D) TGTKgtk_response_type_get_type gtk_response_type_get_type;
alias extern (C) guint function()TGTKgtk_dialog_flags_get_type; extern(D) TGTKgtk_dialog_flags_get_type gtk_dialog_flags_get_type;
alias extern (C) guint function()TGTKgtk_debug_flag_get_type; extern(D) TGTKgtk_debug_flag_get_type gtk_debug_flag_get_type;
alias extern (C) guint function()TGTKgtk_ctree_expansion_type_get_type; extern(D) TGTKgtk_ctree_expansion_type_get_type gtk_ctree_expansion_type_get_type;
alias extern (C) guint function()TGTKgtk_ctree_expander_style_get_type; extern(D) TGTKgtk_ctree_expander_style_get_type gtk_ctree_expander_style_get_type;
alias extern (C) guint function()TGTKgtk_ctree_line_style_get_type; extern(D) TGTKgtk_ctree_line_style_get_type gtk_ctree_line_style_get_type;
alias extern (C) guint function()TGTKgtk_ctree_pos_get_type; extern(D) TGTKgtk_ctree_pos_get_type gtk_ctree_pos_get_type;
alias extern (C) guint function()TGTKgtk_button_action_get_type; extern(D) TGTKgtk_button_action_get_type gtk_button_action_get_type;
alias extern (C) guint function()TGTKgtk_clist_drag_pos_get_type; extern(D) TGTKgtk_clist_drag_pos_get_type gtk_clist_drag_pos_get_type;
alias extern (C) guint function()TGTKgtk_cell_type_get_type; extern(D) TGTKgtk_cell_type_get_type gtk_cell_type_get_type;
alias extern (C) guint function()TGTKgtk_cell_renderer_accel_mode_get_type; extern(D) TGTKgtk_cell_renderer_accel_mode_get_type gtk_cell_renderer_accel_mode_get_type;
alias extern (C) guint function()TGTKgtk_cell_renderer_mode_get_type; extern(D) TGTKgtk_cell_renderer_mode_get_type gtk_cell_renderer_mode_get_type;
alias extern (C) guint function()TGTKgtk_cell_renderer_state_get_type; extern(D) TGTKgtk_cell_renderer_state_get_type gtk_cell_renderer_state_get_type;
alias extern (C) guint function()TGTKgtk_calendar_display_options_get_type; extern(D) TGTKgtk_calendar_display_options_get_type gtk_calendar_display_options_get_type;
alias extern (C) guint function()TGTKgtk_builder_error_get_type; extern(D) TGTKgtk_builder_error_get_type gtk_builder_error_get_type;
alias extern (C) guint function()TGTKgtk_assistant_page_type_get_type; extern(D) TGTKgtk_assistant_page_type_get_type gtk_assistant_page_type_get_type;
alias extern (C) guint function()TGTKgtk_accel_flags_get_type; extern(D) TGTKgtk_accel_flags_get_type gtk_accel_flags_get_type;
//alias extern (C) void function(aGtkAccelGroup *, GQuark)TGTK_gtk_accel_group_reconnect; extern(D) TGTK_gtk_accel_group_reconnect _gtk_accel_group_reconnect;
alias extern (C) _GtkAccelGroupEntry * function(aGtkAccelGroup *, guint, gint, guint *)TGTKgtk_accel_group_query; extern(D) TGTKgtk_accel_group_query gtk_accel_group_query;
alias extern (C) guint function()TGTKgtk_accelerator_get_default_mod_mask; extern(D) TGTKgtk_accelerator_get_default_mod_mask gtk_accelerator_get_default_mod_mask;
alias extern (C) void function(gint)TGTKgtk_accelerator_set_default_mod_mask; extern(D) TGTKgtk_accelerator_set_default_mod_mask gtk_accelerator_set_default_mod_mask;
alias extern (C) char * function(guint, gint)TGTKgtk_accelerator_get_label; extern(D) TGTKgtk_accelerator_get_label gtk_accelerator_get_label;
alias extern (C) char * function(guint, gint)TGTKgtk_accelerator_name; extern(D) TGTKgtk_accelerator_name gtk_accelerator_name;
alias extern (C) void function(in char *, guint *, gint *)TGTKgtk_accelerator_parse; extern(D) TGTKgtk_accelerator_parse gtk_accelerator_parse;
alias extern (C) gint function(guint, gint)TGTKgtk_accelerator_valid; extern(D) TGTKgtk_accelerator_valid gtk_accelerator_valid;
alias extern (C) _GtkAccelGroup * function(_GClosure *)TGTKgtk_accel_group_from_accel_closure; extern(D) TGTKgtk_accel_group_from_accel_closure gtk_accel_group_from_accel_closure;
alias extern (C) _GtkAccelKey * function(aGtkAccelGroup *, _BCD_func__13177, void *)TGTKgtk_accel_group_find; extern(D) TGTKgtk_accel_group_find gtk_accel_group_find;
alias extern (C) _GSList * function(_GObject *)TGTKgtk_accel_groups_from_object; extern(D) TGTKgtk_accel_groups_from_object gtk_accel_groups_from_object;
alias extern (C) gint function(_GObject *, guint, gint)TGTKgtk_accel_groups_activate; extern(D) TGTKgtk_accel_groups_activate gtk_accel_groups_activate;
//alias extern (C) void function(aGtkAccelGroup *, _GObject *)TGTK_gtk_accel_group_detach; extern(D) TGTK_gtk_accel_group_detach _gtk_accel_group_detach;
//alias extern (C) void function(aGtkAccelGroup *, _GObject *)TGTK_gtk_accel_group_attach; extern(D) TGTK_gtk_accel_group_attach _gtk_accel_group_attach;
alias extern (C) gint function(aGtkAccelGroup *, GQuark, _GObject *, guint, gint)TGTKgtk_accel_group_activate; extern(D) TGTKgtk_accel_group_activate gtk_accel_group_activate;
alias extern (C) gint function(aGtkAccelGroup *, guint, gint)TGTKgtk_accel_group_disconnect_key; extern(D) TGTKgtk_accel_group_disconnect_key gtk_accel_group_disconnect_key;
alias extern (C) gint function(aGtkAccelGroup *, _GClosure *)TGTKgtk_accel_group_disconnect; extern(D) TGTKgtk_accel_group_disconnect gtk_accel_group_disconnect;
alias extern (C) void function(aGtkAccelGroup *, in char *, _GClosure *)TGTKgtk_accel_group_connect_by_path; extern(D) TGTKgtk_accel_group_connect_by_path gtk_accel_group_connect_by_path;
alias extern (C) void function(aGtkAccelGroup *, guint, gint, gint, _GClosure *)TGTKgtk_accel_group_connect; extern(D) TGTKgtk_accel_group_connect gtk_accel_group_connect;
alias extern (C) void function(aGtkAccelGroup *)TGTKgtk_accel_group_unlock; extern(D) TGTKgtk_accel_group_unlock gtk_accel_group_unlock;
alias extern (C) void function(aGtkAccelGroup *)TGTKgtk_accel_group_lock; extern(D) TGTKgtk_accel_group_lock gtk_accel_group_lock;
alias extern (C) _GtkAccelGroup * function()TGTKgtk_accel_group_new; extern(D) TGTKgtk_accel_group_new gtk_accel_group_new;
alias extern (C) GType function()TGTKgtk_accel_group_get_type; extern(D) TGTKgtk_accel_group_get_type gtk_accel_group_get_type;
alias extern (C) GdkWindow* function(GtkWidget*)TGTKgtk_widget_get_window; extern(D) TGTKgtk_widget_get_window gtk_widget_get_window;
alias extern (C) void function(GtkWidget *, GtkAllocation *)TGTKgtk_widget_get_allocation; extern(D) TGTKgtk_widget_get_allocation gtk_widget_get_allocation;
alias extern (C) void function(GtkWidget *, const GtkAllocation *)TGTKgtk_widget_set_allocation; extern(D) TGTKgtk_widget_set_allocation gtk_widget_set_allocation;"
));

extern(D) Symbol[] symbols;
static this () {
    symbols = [
        Symbol( "gtk_vseparator_new",  cast(void**)& gtk_vseparator_new),
        Symbol( "gtk_vseparator_get_type",  cast(void**)& gtk_vseparator_get_type),
        Symbol( "gtk_vscale_new_with_range",  cast(void**)& gtk_vscale_new_with_range),
        Symbol( "gtk_vscale_new",  cast(void**)& gtk_vscale_new),
        Symbol( "gtk_vscale_get_type",  cast(void**)& gtk_vscale_get_type),
        Symbol( "gtk_vruler_new",  cast(void**)& gtk_vruler_new),
        Symbol( "gtk_vruler_get_type",  cast(void**)& gtk_vruler_get_type),
        Symbol( "gtk_vpaned_new",  cast(void**)& gtk_vpaned_new),
        Symbol( "gtk_vpaned_get_type",  cast(void**)& gtk_vpaned_get_type),
        Symbol( "gtk_volume_button_new",  cast(void**)& gtk_volume_button_new),
        Symbol( "gtk_volume_button_get_type",  cast(void**)& gtk_volume_button_get_type),
        Symbol( "gtk_vbutton_box_set_layout_default",  cast(void**)& gtk_vbutton_box_set_layout_default),
        Symbol( "gtk_vbutton_box_get_layout_default",  cast(void**)& gtk_vbutton_box_get_layout_default),
        Symbol( "gtk_vbutton_box_set_spacing_default",  cast(void**)& gtk_vbutton_box_set_spacing_default),
        Symbol( "gtk_vbutton_box_get_spacing_default",  cast(void**)& gtk_vbutton_box_get_spacing_default),
        Symbol( "gtk_vbutton_box_new",  cast(void**)& gtk_vbutton_box_new),
        Symbol( "gtk_vbutton_box_get_type",  cast(void**)& gtk_vbutton_box_get_type),
        Symbol( "gtk_ui_manager_new_merge_id",  cast(void**)& gtk_ui_manager_new_merge_id),
        Symbol( "gtk_ui_manager_ensure_update",  cast(void**)& gtk_ui_manager_ensure_update),
        Symbol( "gtk_ui_manager_get_ui",  cast(void**)& gtk_ui_manager_get_ui),
        Symbol( "gtk_ui_manager_remove_ui",  cast(void**)& gtk_ui_manager_remove_ui),
        Symbol( "gtk_ui_manager_add_ui",  cast(void**)& gtk_ui_manager_add_ui),
        Symbol( "gtk_ui_manager_add_ui_from_file",  cast(void**)& gtk_ui_manager_add_ui_from_file),
        Symbol( "gtk_ui_manager_add_ui_from_string",  cast(void**)& gtk_ui_manager_add_ui_from_string),
        Symbol( "gtk_ui_manager_get_action",  cast(void**)& gtk_ui_manager_get_action),
        Symbol( "gtk_ui_manager_get_toplevels",  cast(void**)& gtk_ui_manager_get_toplevels),
        Symbol( "gtk_ui_manager_get_widget",  cast(void**)& gtk_ui_manager_get_widget),
        Symbol( "gtk_ui_manager_get_accel_group",  cast(void**)& gtk_ui_manager_get_accel_group),
        Symbol( "gtk_ui_manager_get_action_groups",  cast(void**)& gtk_ui_manager_get_action_groups),
        Symbol( "gtk_ui_manager_remove_action_group",  cast(void**)& gtk_ui_manager_remove_action_group),
        Symbol( "gtk_ui_manager_insert_action_group",  cast(void**)& gtk_ui_manager_insert_action_group),
        Symbol( "gtk_ui_manager_get_add_tearoffs",  cast(void**)& gtk_ui_manager_get_add_tearoffs),
        Symbol( "gtk_ui_manager_set_add_tearoffs",  cast(void**)& gtk_ui_manager_set_add_tearoffs),
        Symbol( "gtk_ui_manager_new",  cast(void**)& gtk_ui_manager_new),
        Symbol( "gtk_ui_manager_get_type",  cast(void**)& gtk_ui_manager_get_type),
        Symbol( "gtk_tree_store_move_after",  cast(void**)& gtk_tree_store_move_after),
        Symbol( "gtk_tree_store_move_before",  cast(void**)& gtk_tree_store_move_before),
        Symbol( "gtk_tree_store_swap",  cast(void**)& gtk_tree_store_swap),
        Symbol( "gtk_tree_store_reorder",  cast(void**)& gtk_tree_store_reorder),
        Symbol( "gtk_tree_store_iter_is_valid",  cast(void**)& gtk_tree_store_iter_is_valid),
        Symbol( "gtk_tree_store_clear",  cast(void**)& gtk_tree_store_clear),
        Symbol( "gtk_tree_store_iter_depth",  cast(void**)& gtk_tree_store_iter_depth),
        Symbol( "gtk_tree_store_is_ancestor",  cast(void**)& gtk_tree_store_is_ancestor),
        Symbol( "gtk_tree_store_append",  cast(void**)& gtk_tree_store_append),
        Symbol( "gtk_tree_store_prepend",  cast(void**)& gtk_tree_store_prepend),
        Symbol( "gtk_tree_store_insert_with_valuesv",  cast(void**)& gtk_tree_store_insert_with_valuesv),
        Symbol( "gtk_tree_store_insert_with_values",  cast(void**)& gtk_tree_store_insert_with_values),
        Symbol( "gtk_tree_store_insert_after",  cast(void**)& gtk_tree_store_insert_after),
        Symbol( "gtk_tree_store_insert_before",  cast(void**)& gtk_tree_store_insert_before),
        Symbol( "gtk_tree_store_insert",  cast(void**)& gtk_tree_store_insert),
        Symbol( "gtk_tree_store_remove",  cast(void**)& gtk_tree_store_remove),
        Symbol( "gtk_tree_store_set_valist",  cast(void**)& gtk_tree_store_set_valist),
        Symbol( "gtk_tree_store_set_valuesv",  cast(void**)& gtk_tree_store_set_valuesv),
        Symbol( "gtk_tree_store_set",  cast(void**)& gtk_tree_store_set),
        Symbol( "gtk_tree_store_set_value",  cast(void**)& gtk_tree_store_set_value),
        Symbol( "gtk_tree_store_set_column_types",  cast(void**)& gtk_tree_store_set_column_types),
        Symbol( "gtk_tree_store_newv",  cast(void**)& gtk_tree_store_newv),
        Symbol( "gtk_tree_store_new",  cast(void**)& gtk_tree_store_new),
        Symbol( "gtk_tree_store_get_type",  cast(void**)& gtk_tree_store_get_type),
        Symbol( "gtk_tree_selection_unselect_range",  cast(void**)& gtk_tree_selection_unselect_range),
        Symbol( "gtk_tree_selection_select_range",  cast(void**)& gtk_tree_selection_select_range),
        Symbol( "gtk_tree_selection_unselect_all",  cast(void**)& gtk_tree_selection_unselect_all),
        Symbol( "gtk_tree_selection_select_all",  cast(void**)& gtk_tree_selection_select_all),
        Symbol( "gtk_tree_selection_iter_is_selected",  cast(void**)& gtk_tree_selection_iter_is_selected),
        Symbol( "gtk_tree_selection_path_is_selected",  cast(void**)& gtk_tree_selection_path_is_selected),
        Symbol( "gtk_tree_selection_unselect_iter",  cast(void**)& gtk_tree_selection_unselect_iter),
        Symbol( "gtk_tree_selection_select_iter",  cast(void**)& gtk_tree_selection_select_iter),
        Symbol( "gtk_tree_selection_unselect_path",  cast(void**)& gtk_tree_selection_unselect_path),
        Symbol( "gtk_tree_selection_select_path",  cast(void**)& gtk_tree_selection_select_path),
        Symbol( "gtk_tree_selection_selected_foreach",  cast(void**)& gtk_tree_selection_selected_foreach),
        Symbol( "gtk_tree_selection_count_selected_rows",  cast(void**)& gtk_tree_selection_count_selected_rows),
        Symbol( "gtk_tree_selection_get_selected_rows",  cast(void**)& gtk_tree_selection_get_selected_rows),
        Symbol( "gtk_tree_selection_get_selected",  cast(void**)& gtk_tree_selection_get_selected),
        Symbol( "gtk_tree_selection_get_tree_view",  cast(void**)& gtk_tree_selection_get_tree_view),
        Symbol( "gtk_tree_selection_get_user_data",  cast(void**)& gtk_tree_selection_get_user_data),
        Symbol( "gtk_tree_selection_set_select_function",  cast(void**)& gtk_tree_selection_set_select_function),
        Symbol( "gtk_tree_selection_get_mode",  cast(void**)& gtk_tree_selection_get_mode),
        Symbol( "gtk_tree_selection_set_mode",  cast(void**)& gtk_tree_selection_set_mode),
        Symbol( "gtk_tree_selection_get_type",  cast(void**)& gtk_tree_selection_get_type),
        Symbol( "gtk_tree_model_sort_iter_is_valid",  cast(void**)& gtk_tree_model_sort_iter_is_valid),
        Symbol( "gtk_tree_model_sort_clear_cache",  cast(void**)& gtk_tree_model_sort_clear_cache),
        Symbol( "gtk_tree_model_sort_reset_default_sort_func",  cast(void**)& gtk_tree_model_sort_reset_default_sort_func),
        Symbol( "gtk_tree_model_sort_convert_iter_to_child_iter",  cast(void**)& gtk_tree_model_sort_convert_iter_to_child_iter),
        Symbol( "gtk_tree_model_sort_convert_path_to_child_path",  cast(void**)& gtk_tree_model_sort_convert_path_to_child_path),
        Symbol( "gtk_tree_model_sort_convert_child_iter_to_iter",  cast(void**)& gtk_tree_model_sort_convert_child_iter_to_iter),
        Symbol( "gtk_tree_model_sort_convert_child_path_to_path",  cast(void**)& gtk_tree_model_sort_convert_child_path_to_path),
        Symbol( "gtk_tree_model_sort_get_model",  cast(void**)& gtk_tree_model_sort_get_model),
        Symbol( "gtk_tree_model_sort_new_with_model",  cast(void**)& gtk_tree_model_sort_new_with_model),
        Symbol( "gtk_tree_model_sort_get_type",  cast(void**)& gtk_tree_model_sort_get_type),
        Symbol( "gtk_tree_get_row_drag_data",  cast(void**)& gtk_tree_get_row_drag_data),
        Symbol( "gtk_tree_set_row_drag_data",  cast(void**)& gtk_tree_set_row_drag_data),
        Symbol( "gtk_tree_drag_dest_row_drop_possible",  cast(void**)& gtk_tree_drag_dest_row_drop_possible),
        Symbol( "gtk_tree_drag_dest_drag_data_received",  cast(void**)& gtk_tree_drag_dest_drag_data_received),
        Symbol( "gtk_tree_drag_dest_get_type",  cast(void**)& gtk_tree_drag_dest_get_type),
        Symbol( "gtk_tree_drag_source_drag_data_get",  cast(void**)& gtk_tree_drag_source_drag_data_get),
        Symbol( "gtk_tree_drag_source_drag_data_delete",  cast(void**)& gtk_tree_drag_source_drag_data_delete),
        Symbol( "gtk_tree_drag_source_row_draggable",  cast(void**)& gtk_tree_drag_source_row_draggable),
        Symbol( "gtk_tree_drag_source_get_type",  cast(void**)& gtk_tree_drag_source_get_type),
        Symbol( "gtk_toolbar_insert_widget",  cast(void**)& gtk_toolbar_insert_widget),
        Symbol( "gtk_toolbar_prepend_widget",  cast(void**)& gtk_toolbar_prepend_widget),
        Symbol( "gtk_toolbar_append_widget",  cast(void**)& gtk_toolbar_append_widget),
        Symbol( "gtk_toolbar_insert_element",  cast(void**)& gtk_toolbar_insert_element),
        Symbol( "gtk_toolbar_prepend_element",  cast(void**)& gtk_toolbar_prepend_element),
        Symbol( "gtk_toolbar_append_element",  cast(void**)& gtk_toolbar_append_element),
        Symbol( "gtk_toolbar_remove_space",  cast(void**)& gtk_toolbar_remove_space),
        Symbol( "gtk_toolbar_insert_space",  cast(void**)& gtk_toolbar_insert_space),
        Symbol( "gtk_toolbar_prepend_space",  cast(void**)& gtk_toolbar_prepend_space),
        Symbol( "gtk_toolbar_append_space",  cast(void**)& gtk_toolbar_append_space),
        Symbol( "gtk_toolbar_insert_stock",  cast(void**)& gtk_toolbar_insert_stock),
        Symbol( "gtk_toolbar_insert_item",  cast(void**)& gtk_toolbar_insert_item),
        Symbol( "gtk_toolbar_prepend_item",  cast(void**)& gtk_toolbar_prepend_item),
        Symbol( "gtk_toolbar_append_item",  cast(void**)& gtk_toolbar_append_item),
        Symbol( "gtk_toolbar_unset_icon_size",  cast(void**)& gtk_toolbar_unset_icon_size),
        Symbol( "gtk_toolbar_set_icon_size",  cast(void**)& gtk_toolbar_set_icon_size),
    //     Symbol( "_gtk_toolbar_rebuild_menu",  cast(void**)& _gtk_toolbar_rebuild_menu),
    //     Symbol( "_gtk_toolbar_get_default_space_size",  cast(void**)& _gtk_toolbar_get_default_space_size),
    //     Symbol( "_gtk_toolbar_paint_space_line",  cast(void**)& _gtk_toolbar_paint_space_line),
    //     Symbol( "_gtk_toolbar_elide_underscores",  cast(void**)& _gtk_toolbar_elide_underscores),
        Symbol( "gtk_toolbar_set_drop_highlight_item",  cast(void**)& gtk_toolbar_set_drop_highlight_item),
        Symbol( "gtk_toolbar_get_drop_index",  cast(void**)& gtk_toolbar_get_drop_index),
        Symbol( "gtk_toolbar_get_relief_style",  cast(void**)& gtk_toolbar_get_relief_style),
        Symbol( "gtk_toolbar_get_icon_size",  cast(void**)& gtk_toolbar_get_icon_size),
        Symbol( "gtk_toolbar_unset_style",  cast(void**)& gtk_toolbar_unset_style),
        Symbol( "gtk_toolbar_set_style",  cast(void**)& gtk_toolbar_set_style),
        Symbol( "gtk_toolbar_get_style",  cast(void**)& gtk_toolbar_get_style),
        Symbol( "gtk_toolbar_set_tooltips",  cast(void**)& gtk_toolbar_set_tooltips),
        Symbol( "gtk_toolbar_get_tooltips",  cast(void**)& gtk_toolbar_get_tooltips),
        Symbol( "gtk_toolbar_set_orientation",  cast(void**)& gtk_toolbar_set_orientation),
        Symbol( "gtk_toolbar_get_orientation",  cast(void**)& gtk_toolbar_get_orientation),
        Symbol( "gtk_toolbar_set_show_arrow",  cast(void**)& gtk_toolbar_set_show_arrow),
        Symbol( "gtk_toolbar_get_show_arrow",  cast(void**)& gtk_toolbar_get_show_arrow),
        Symbol( "gtk_toolbar_get_nth_item",  cast(void**)& gtk_toolbar_get_nth_item),
        Symbol( "gtk_toolbar_get_n_items",  cast(void**)& gtk_toolbar_get_n_items),
        Symbol( "gtk_toolbar_get_item_index",  cast(void**)& gtk_toolbar_get_item_index),
        Symbol( "gtk_toolbar_insert",  cast(void**)& gtk_toolbar_insert),
        Symbol( "gtk_toolbar_new",  cast(void**)& gtk_toolbar_new),
        Symbol( "gtk_toolbar_get_type",  cast(void**)& gtk_toolbar_get_type),
        Symbol( "gtk_tips_query_set_labels",  cast(void**)& gtk_tips_query_set_labels),
        Symbol( "gtk_tips_query_set_caller",  cast(void**)& gtk_tips_query_set_caller),
        Symbol( "gtk_tips_query_stop_query",  cast(void**)& gtk_tips_query_stop_query),
        Symbol( "gtk_tips_query_start_query",  cast(void**)& gtk_tips_query_start_query),
        Symbol( "gtk_tips_query_new",  cast(void**)& gtk_tips_query_new),
        Symbol( "gtk_tips_query_get_type",  cast(void**)& gtk_tips_query_get_type),
        Symbol( "gtk_text_view_get_default_attributes",  cast(void**)& gtk_text_view_get_default_attributes),
        Symbol( "gtk_text_view_get_tabs",  cast(void**)& gtk_text_view_get_tabs),
        Symbol( "gtk_text_view_set_tabs",  cast(void**)& gtk_text_view_set_tabs),
        Symbol( "gtk_text_view_get_indent",  cast(void**)& gtk_text_view_get_indent),
        Symbol( "gtk_text_view_set_indent",  cast(void**)& gtk_text_view_set_indent),
        Symbol( "gtk_text_view_get_right_margin",  cast(void**)& gtk_text_view_get_right_margin),
        Symbol( "gtk_text_view_set_right_margin",  cast(void**)& gtk_text_view_set_right_margin),
        Symbol( "gtk_text_view_get_left_margin",  cast(void**)& gtk_text_view_get_left_margin),
        Symbol( "gtk_text_view_set_left_margin",  cast(void**)& gtk_text_view_set_left_margin),
        Symbol( "gtk_text_view_get_justification",  cast(void**)& gtk_text_view_get_justification),
        Symbol( "gtk_text_view_set_justification",  cast(void**)& gtk_text_view_set_justification),
        Symbol( "gtk_text_view_get_pixels_inside_wrap",  cast(void**)& gtk_text_view_get_pixels_inside_wrap),
        Symbol( "gtk_text_view_set_pixels_inside_wrap",  cast(void**)& gtk_text_view_set_pixels_inside_wrap),
        Symbol( "gtk_text_view_get_pixels_below_lines",  cast(void**)& gtk_text_view_get_pixels_below_lines),
        Symbol( "gtk_text_view_set_pixels_below_lines",  cast(void**)& gtk_text_view_set_pixels_below_lines),
        Symbol( "gtk_text_view_get_pixels_above_lines",  cast(void**)& gtk_text_view_get_pixels_above_lines),
        Symbol( "gtk_text_view_set_pixels_above_lines",  cast(void**)& gtk_text_view_set_pixels_above_lines),
        Symbol( "gtk_text_view_get_accepts_tab",  cast(void**)& gtk_text_view_get_accepts_tab),
        Symbol( "gtk_text_view_set_accepts_tab",  cast(void**)& gtk_text_view_set_accepts_tab),
        Symbol( "gtk_text_view_get_overwrite",  cast(void**)& gtk_text_view_get_overwrite),
        Symbol( "gtk_text_view_set_overwrite",  cast(void**)& gtk_text_view_set_overwrite),
        Symbol( "gtk_text_view_get_editable",  cast(void**)& gtk_text_view_get_editable),
        Symbol( "gtk_text_view_set_editable",  cast(void**)& gtk_text_view_set_editable),
        Symbol( "gtk_text_view_get_wrap_mode",  cast(void**)& gtk_text_view_get_wrap_mode),
        Symbol( "gtk_text_view_set_wrap_mode",  cast(void**)& gtk_text_view_set_wrap_mode),
        Symbol( "gtk_text_view_move_child",  cast(void**)& gtk_text_view_move_child),
        Symbol( "gtk_text_view_add_child_in_window",  cast(void**)& gtk_text_view_add_child_in_window),
        Symbol( "gtk_text_view_add_child_at_anchor",  cast(void**)& gtk_text_view_add_child_at_anchor),
        Symbol( "gtk_text_view_move_visually",  cast(void**)& gtk_text_view_move_visually),
        Symbol( "gtk_text_view_starts_display_line",  cast(void**)& gtk_text_view_starts_display_line),
        Symbol( "gtk_text_view_backward_display_line_start",  cast(void**)& gtk_text_view_backward_display_line_start),
        Symbol( "gtk_text_view_forward_display_line_end",  cast(void**)& gtk_text_view_forward_display_line_end),
        Symbol( "gtk_text_view_backward_display_line",  cast(void**)& gtk_text_view_backward_display_line),
        Symbol( "gtk_text_view_forward_display_line",  cast(void**)& gtk_text_view_forward_display_line),
        Symbol( "gtk_text_view_get_border_window_size",  cast(void**)& gtk_text_view_get_border_window_size),
        Symbol( "gtk_text_view_set_border_window_size",  cast(void**)& gtk_text_view_set_border_window_size),
        Symbol( "gtk_text_view_get_window_type",  cast(void**)& gtk_text_view_get_window_type),
        Symbol( "gtk_text_view_get_window",  cast(void**)& gtk_text_view_get_window),
        Symbol( "gtk_text_view_window_to_buffer_coords",  cast(void**)& gtk_text_view_window_to_buffer_coords),
        Symbol( "gtk_text_view_buffer_to_window_coords",  cast(void**)& gtk_text_view_buffer_to_window_coords),
        Symbol( "gtk_text_view_get_line_at_y",  cast(void**)& gtk_text_view_get_line_at_y),
        Symbol( "gtk_text_view_get_line_yrange",  cast(void**)& gtk_text_view_get_line_yrange),
        Symbol( "gtk_text_view_get_iter_at_position",  cast(void**)& gtk_text_view_get_iter_at_position),
        Symbol( "gtk_text_view_get_iter_at_location",  cast(void**)& gtk_text_view_get_iter_at_location),
        Symbol( "gtk_text_view_get_iter_location",  cast(void**)& gtk_text_view_get_iter_location),
        Symbol( "gtk_text_view_get_cursor_visible",  cast(void**)& gtk_text_view_get_cursor_visible),
        Symbol( "gtk_text_view_set_cursor_visible",  cast(void**)& gtk_text_view_set_cursor_visible),
        Symbol( "gtk_text_view_get_visible_rect",  cast(void**)& gtk_text_view_get_visible_rect),
        Symbol( "gtk_text_view_place_cursor_onscreen",  cast(void**)& gtk_text_view_place_cursor_onscreen),
        Symbol( "gtk_text_view_move_mark_onscreen",  cast(void**)& gtk_text_view_move_mark_onscreen),
        Symbol( "gtk_text_view_scroll_mark_onscreen",  cast(void**)& gtk_text_view_scroll_mark_onscreen),
        Symbol( "gtk_text_view_scroll_to_mark",  cast(void**)& gtk_text_view_scroll_to_mark),
        Symbol( "gtk_text_view_scroll_to_iter",  cast(void**)& gtk_text_view_scroll_to_iter),
        Symbol( "gtk_text_view_get_buffer",  cast(void**)& gtk_text_view_get_buffer),
        Symbol( "gtk_text_view_set_buffer",  cast(void**)& gtk_text_view_set_buffer),
        Symbol( "gtk_text_view_new_with_buffer",  cast(void**)& gtk_text_view_new_with_buffer),
        Symbol( "gtk_text_view_new",  cast(void**)& gtk_text_view_new),
        Symbol( "gtk_text_view_get_type",  cast(void**)& gtk_text_view_get_type),
        Symbol( "gtk_text_buffer_deserialize",  cast(void**)& gtk_text_buffer_deserialize),
        Symbol( "gtk_text_buffer_serialize",  cast(void**)& gtk_text_buffer_serialize),
        Symbol( "gtk_text_buffer_get_deserialize_formats",  cast(void**)& gtk_text_buffer_get_deserialize_formats),
        Symbol( "gtk_text_buffer_get_serialize_formats",  cast(void**)& gtk_text_buffer_get_serialize_formats),
        Symbol( "gtk_text_buffer_deserialize_get_can_create_tags",  cast(void**)& gtk_text_buffer_deserialize_get_can_create_tags),
        Symbol( "gtk_text_buffer_deserialize_set_can_create_tags",  cast(void**)& gtk_text_buffer_deserialize_set_can_create_tags),
        Symbol( "gtk_text_buffer_unregister_deserialize_format",  cast(void**)& gtk_text_buffer_unregister_deserialize_format),
        Symbol( "gtk_text_buffer_unregister_serialize_format",  cast(void**)& gtk_text_buffer_unregister_serialize_format),
        Symbol( "gtk_text_buffer_register_deserialize_tagset",  cast(void**)& gtk_text_buffer_register_deserialize_tagset),
        Symbol( "gtk_text_buffer_register_deserialize_format",  cast(void**)& gtk_text_buffer_register_deserialize_format),
        Symbol( "gtk_text_buffer_register_serialize_tagset",  cast(void**)& gtk_text_buffer_register_serialize_tagset),
        Symbol( "gtk_text_buffer_register_serialize_format",  cast(void**)& gtk_text_buffer_register_serialize_format),
    //     Symbol( "_gtk_text_buffer_notify_will_remove_tag",  cast(void**)& _gtk_text_buffer_notify_will_remove_tag),
    //     Symbol( "_gtk_text_buffer_get_line_log_attrs",  cast(void**)& _gtk_text_buffer_get_line_log_attrs),
    //     Symbol( "_gtk_text_buffer_get_btree",  cast(void**)& _gtk_text_buffer_get_btree),
    //     Symbol( "_gtk_text_buffer_spew",  cast(void**)& _gtk_text_buffer_spew),
        Symbol( "gtk_text_buffer_get_paste_target_list",  cast(void**)& gtk_text_buffer_get_paste_target_list),
        Symbol( "gtk_text_buffer_get_copy_target_list",  cast(void**)& gtk_text_buffer_get_copy_target_list),
        Symbol( "gtk_text_buffer_end_user_action",  cast(void**)& gtk_text_buffer_end_user_action),
        Symbol( "gtk_text_buffer_begin_user_action",  cast(void**)& gtk_text_buffer_begin_user_action),
        Symbol( "gtk_text_buffer_delete_selection",  cast(void**)& gtk_text_buffer_delete_selection),
        Symbol( "gtk_text_buffer_get_selection_bounds",  cast(void**)& gtk_text_buffer_get_selection_bounds),
        Symbol( "gtk_text_buffer_paste_clipboard",  cast(void**)& gtk_text_buffer_paste_clipboard),
        Symbol( "gtk_text_buffer_copy_clipboard",  cast(void**)& gtk_text_buffer_copy_clipboard),
        Symbol( "gtk_text_buffer_cut_clipboard",  cast(void**)& gtk_text_buffer_cut_clipboard),
        Symbol( "gtk_text_buffer_remove_selection_clipboard",  cast(void**)& gtk_text_buffer_remove_selection_clipboard),
        Symbol( "gtk_text_buffer_add_selection_clipboard",  cast(void**)& gtk_text_buffer_add_selection_clipboard),
        Symbol( "gtk_text_buffer_get_has_selection",  cast(void**)& gtk_text_buffer_get_has_selection),
        Symbol( "gtk_text_buffer_set_modified",  cast(void**)& gtk_text_buffer_set_modified),
        Symbol( "gtk_text_buffer_get_modified",  cast(void**)& gtk_text_buffer_get_modified),
        Symbol( "gtk_text_buffer_get_iter_at_child_anchor",  cast(void**)& gtk_text_buffer_get_iter_at_child_anchor),
        Symbol( "gtk_text_buffer_get_iter_at_mark",  cast(void**)& gtk_text_buffer_get_iter_at_mark),
        Symbol( "gtk_text_buffer_get_bounds",  cast(void**)& gtk_text_buffer_get_bounds),
        Symbol( "gtk_text_buffer_get_end_iter",  cast(void**)& gtk_text_buffer_get_end_iter),
        Symbol( "gtk_text_buffer_get_start_iter",  cast(void**)& gtk_text_buffer_get_start_iter),
        Symbol( "gtk_text_buffer_get_iter_at_line",  cast(void**)& gtk_text_buffer_get_iter_at_line),
        Symbol( "gtk_text_buffer_get_iter_at_offset",  cast(void**)& gtk_text_buffer_get_iter_at_offset),
        Symbol( "gtk_text_buffer_get_iter_at_line_index",  cast(void**)& gtk_text_buffer_get_iter_at_line_index),
        Symbol( "gtk_text_buffer_get_iter_at_line_offset",  cast(void**)& gtk_text_buffer_get_iter_at_line_offset),
        Symbol( "gtk_text_buffer_create_tag",  cast(void**)& gtk_text_buffer_create_tag),
        Symbol( "gtk_text_buffer_remove_all_tags",  cast(void**)& gtk_text_buffer_remove_all_tags),
        Symbol( "gtk_text_buffer_remove_tag_by_name",  cast(void**)& gtk_text_buffer_remove_tag_by_name),
        Symbol( "gtk_text_buffer_apply_tag_by_name",  cast(void**)& gtk_text_buffer_apply_tag_by_name),
        Symbol( "gtk_text_buffer_remove_tag",  cast(void**)& gtk_text_buffer_remove_tag),
        Symbol( "gtk_text_buffer_apply_tag",  cast(void**)& gtk_text_buffer_apply_tag),
        Symbol( "gtk_text_buffer_select_range",  cast(void**)& gtk_text_buffer_select_range),
        Symbol( "gtk_text_buffer_place_cursor",  cast(void**)& gtk_text_buffer_place_cursor),
        Symbol( "gtk_text_buffer_get_selection_bound",  cast(void**)& gtk_text_buffer_get_selection_bound),
        Symbol( "gtk_text_buffer_get_insert",  cast(void**)& gtk_text_buffer_get_insert),
        Symbol( "gtk_text_buffer_delete_mark_by_name",  cast(void**)& gtk_text_buffer_delete_mark_by_name),
        Symbol( "gtk_text_buffer_move_mark_by_name",  cast(void**)& gtk_text_buffer_move_mark_by_name),
        Symbol( "gtk_text_buffer_get_mark",  cast(void**)& gtk_text_buffer_get_mark),
        Symbol( "gtk_text_buffer_delete_mark",  cast(void**)& gtk_text_buffer_delete_mark),
        Symbol( "gtk_text_buffer_move_mark",  cast(void**)& gtk_text_buffer_move_mark),
        Symbol( "gtk_text_buffer_create_mark",  cast(void**)& gtk_text_buffer_create_mark),
        Symbol( "gtk_text_buffer_add_mark",  cast(void**)& gtk_text_buffer_add_mark),
        Symbol( "gtk_text_buffer_create_child_anchor",  cast(void**)& gtk_text_buffer_create_child_anchor),
        Symbol( "gtk_text_buffer_insert_child_anchor",  cast(void**)& gtk_text_buffer_insert_child_anchor),
        Symbol( "gtk_text_buffer_insert_pixbuf",  cast(void**)& gtk_text_buffer_insert_pixbuf),
        Symbol( "gtk_text_buffer_get_slice",  cast(void**)& gtk_text_buffer_get_slice),
        Symbol( "gtk_text_buffer_get_text",  cast(void**)& gtk_text_buffer_get_text),
        Symbol( "gtk_text_buffer_backspace",  cast(void**)& gtk_text_buffer_backspace),
        Symbol( "gtk_text_buffer_delete_interactive",  cast(void**)& gtk_text_buffer_delete_interactive),
        Symbol( "gtk_text_buffer_delete",  cast(void**)& gtk_text_buffer_delete),
        Symbol( "gtk_text_buffer_insert_with_tags_by_name",  cast(void**)& gtk_text_buffer_insert_with_tags_by_name),
        Symbol( "gtk_text_buffer_insert_with_tags",  cast(void**)& gtk_text_buffer_insert_with_tags),
        Symbol( "gtk_text_buffer_insert_range_interactive",  cast(void**)& gtk_text_buffer_insert_range_interactive),
        Symbol( "gtk_text_buffer_insert_range",  cast(void**)& gtk_text_buffer_insert_range),
        Symbol( "gtk_text_buffer_insert_interactive_at_cursor",  cast(void**)& gtk_text_buffer_insert_interactive_at_cursor),
        Symbol( "gtk_text_buffer_insert_interactive",  cast(void**)& gtk_text_buffer_insert_interactive),
        Symbol( "gtk_text_buffer_insert_at_cursor",  cast(void**)& gtk_text_buffer_insert_at_cursor),
        Symbol( "gtk_text_buffer_insert",  cast(void**)& gtk_text_buffer_insert),
        Symbol( "gtk_text_buffer_set_text",  cast(void**)& gtk_text_buffer_set_text),
        Symbol( "gtk_text_buffer_get_tag_table",  cast(void**)& gtk_text_buffer_get_tag_table),
        Symbol( "gtk_text_buffer_get_char_count",  cast(void**)& gtk_text_buffer_get_char_count),
        Symbol( "gtk_text_buffer_get_line_count",  cast(void**)& gtk_text_buffer_get_line_count),
        Symbol( "gtk_text_buffer_new",  cast(void**)& gtk_text_buffer_new),
        Symbol( "gtk_text_buffer_get_type",  cast(void**)& gtk_text_buffer_get_type),
        Symbol( "gtk_text_mark_get_left_gravity",  cast(void**)& gtk_text_mark_get_left_gravity),
        Symbol( "gtk_text_mark_get_buffer",  cast(void**)& gtk_text_mark_get_buffer),
        Symbol( "gtk_text_mark_get_deleted",  cast(void**)& gtk_text_mark_get_deleted),
        Symbol( "gtk_text_mark_get_name",  cast(void**)& gtk_text_mark_get_name),
        Symbol( "gtk_text_mark_new",  cast(void**)& gtk_text_mark_new),
        Symbol( "gtk_text_mark_get_visible",  cast(void**)& gtk_text_mark_get_visible),
        Symbol( "gtk_text_mark_set_visible",  cast(void**)& gtk_text_mark_set_visible),
        Symbol( "gtk_text_mark_get_type",  cast(void**)& gtk_text_mark_get_type),
    //     Symbol( "_gtk_text_tag_table_remove_buffer",  cast(void**)& _gtk_text_tag_table_remove_buffer),
    //     Symbol( "_gtk_text_tag_table_add_buffer",  cast(void**)& _gtk_text_tag_table_add_buffer),
        Symbol( "gtk_text_tag_table_get_size",  cast(void**)& gtk_text_tag_table_get_size),
        Symbol( "gtk_text_tag_table_foreach",  cast(void**)& gtk_text_tag_table_foreach),
        Symbol( "gtk_text_tag_table_lookup",  cast(void**)& gtk_text_tag_table_lookup),
        Symbol( "gtk_text_tag_table_remove",  cast(void**)& gtk_text_tag_table_remove),
        Symbol( "gtk_text_tag_table_add",  cast(void**)& gtk_text_tag_table_add),
        Symbol( "gtk_text_tag_table_new",  cast(void**)& gtk_text_tag_table_new),
        Symbol( "gtk_text_tag_table_get_type",  cast(void**)& gtk_text_tag_table_get_type),
        Symbol( "gtk_tearoff_menu_item_new",  cast(void**)& gtk_tearoff_menu_item_new),
        Symbol( "gtk_tearoff_menu_item_get_type",  cast(void**)& gtk_tearoff_menu_item_get_type),
        Symbol( "gtk_table_get_homogeneous",  cast(void**)& gtk_table_get_homogeneous),
        Symbol( "gtk_table_set_homogeneous",  cast(void**)& gtk_table_set_homogeneous),
        Symbol( "gtk_table_get_default_col_spacing",  cast(void**)& gtk_table_get_default_col_spacing),
        Symbol( "gtk_table_set_col_spacings",  cast(void**)& gtk_table_set_col_spacings),
        Symbol( "gtk_table_get_default_row_spacing",  cast(void**)& gtk_table_get_default_row_spacing),
        Symbol( "gtk_table_set_row_spacings",  cast(void**)& gtk_table_set_row_spacings),
        Symbol( "gtk_table_get_col_spacing",  cast(void**)& gtk_table_get_col_spacing),
        Symbol( "gtk_table_set_col_spacing",  cast(void**)& gtk_table_set_col_spacing),
        Symbol( "gtk_table_get_row_spacing",  cast(void**)& gtk_table_get_row_spacing),
        Symbol( "gtk_table_set_row_spacing",  cast(void**)& gtk_table_set_row_spacing),
        Symbol( "gtk_table_attach_defaults",  cast(void**)& gtk_table_attach_defaults),
        Symbol( "gtk_table_attach",  cast(void**)& gtk_table_attach),
        Symbol( "gtk_table_resize",  cast(void**)& gtk_table_resize),
        Symbol( "gtk_table_new",  cast(void**)& gtk_table_new),
        Symbol( "gtk_table_get_type",  cast(void**)& gtk_table_get_type),
        Symbol( "gtk_stock_set_translate_func",  cast(void**)& gtk_stock_set_translate_func),
        Symbol( "gtk_stock_item_free",  cast(void**)& gtk_stock_item_free),
        Symbol( "gtk_stock_item_copy",  cast(void**)& gtk_stock_item_copy),
        Symbol( "gtk_stock_list_ids",  cast(void**)& gtk_stock_list_ids),
        Symbol( "gtk_stock_lookup",  cast(void**)& gtk_stock_lookup),
        Symbol( "gtk_stock_add_static",  cast(void**)& gtk_stock_add_static),
        Symbol( "gtk_stock_add",  cast(void**)& gtk_stock_add),
        Symbol( "gtk_status_icon_get_geometry",  cast(void**)& gtk_status_icon_get_geometry),
        Symbol( "gtk_status_icon_position_menu",  cast(void**)& gtk_status_icon_position_menu),
        Symbol( "gtk_status_icon_is_embedded",  cast(void**)& gtk_status_icon_is_embedded),
        Symbol( "gtk_status_icon_get_blinking",  cast(void**)& gtk_status_icon_get_blinking),
        Symbol( "gtk_status_icon_set_blinking",  cast(void**)& gtk_status_icon_set_blinking),
        Symbol( "gtk_status_icon_get_visible",  cast(void**)& gtk_status_icon_get_visible),
        Symbol( "gtk_status_icon_set_visible",  cast(void**)& gtk_status_icon_set_visible),
        Symbol( "gtk_status_icon_set_tooltip",  cast(void**)& gtk_status_icon_set_tooltip),
        Symbol( "gtk_status_icon_get_screen",  cast(void**)& gtk_status_icon_get_screen),
        Symbol( "gtk_status_icon_set_screen",  cast(void**)& gtk_status_icon_set_screen),
        Symbol( "gtk_status_icon_get_size",  cast(void**)& gtk_status_icon_get_size),
        Symbol( "gtk_status_icon_get_icon_name",  cast(void**)& gtk_status_icon_get_icon_name),
        Symbol( "gtk_status_icon_get_stock",  cast(void**)& gtk_status_icon_get_stock),
        Symbol( "gtk_status_icon_get_pixbuf",  cast(void**)& gtk_status_icon_get_pixbuf),
        Symbol( "gtk_status_icon_get_storage_type",  cast(void**)& gtk_status_icon_get_storage_type),
        Symbol( "gtk_status_icon_set_from_icon_name",  cast(void**)& gtk_status_icon_set_from_icon_name),
        Symbol( "gtk_status_icon_set_from_stock",  cast(void**)& gtk_status_icon_set_from_stock),
        Symbol( "gtk_status_icon_set_from_file",  cast(void**)& gtk_status_icon_set_from_file),
        Symbol( "gtk_status_icon_set_from_pixbuf",  cast(void**)& gtk_status_icon_set_from_pixbuf),
        Symbol( "gtk_status_icon_new_from_icon_name",  cast(void**)& gtk_status_icon_new_from_icon_name),
        Symbol( "gtk_status_icon_new_from_stock",  cast(void**)& gtk_status_icon_new_from_stock),
        Symbol( "gtk_status_icon_new_from_file",  cast(void**)& gtk_status_icon_new_from_file),
        Symbol( "gtk_status_icon_new_from_pixbuf",  cast(void**)& gtk_status_icon_new_from_pixbuf),
        Symbol( "gtk_status_icon_new",  cast(void**)& gtk_status_icon_new),
        Symbol( "gtk_status_icon_get_type",  cast(void**)& gtk_status_icon_get_type),
        Symbol( "gtk_statusbar_get_has_resize_grip",  cast(void**)& gtk_statusbar_get_has_resize_grip),
        Symbol( "gtk_statusbar_set_has_resize_grip",  cast(void**)& gtk_statusbar_set_has_resize_grip),
        Symbol( "gtk_statusbar_remove",  cast(void**)& gtk_statusbar_remove),
        Symbol( "gtk_statusbar_pop",  cast(void**)& gtk_statusbar_pop),
        Symbol( "gtk_statusbar_push",  cast(void**)& gtk_statusbar_push),
        Symbol( "gtk_statusbar_get_context_id",  cast(void**)& gtk_statusbar_get_context_id),
        Symbol( "gtk_statusbar_new",  cast(void**)& gtk_statusbar_new),
        Symbol( "gtk_statusbar_get_type",  cast(void**)& gtk_statusbar_get_type),
        Symbol( "gtk_spin_button_update",  cast(void**)& gtk_spin_button_update),
        Symbol( "gtk_spin_button_get_snap_to_ticks",  cast(void**)& gtk_spin_button_get_snap_to_ticks),
        Symbol( "gtk_spin_button_set_snap_to_ticks",  cast(void**)& gtk_spin_button_set_snap_to_ticks),
        Symbol( "gtk_spin_button_get_wrap",  cast(void**)& gtk_spin_button_get_wrap),
        Symbol( "gtk_spin_button_set_wrap",  cast(void**)& gtk_spin_button_set_wrap),
        Symbol( "gtk_spin_button_spin",  cast(void**)& gtk_spin_button_spin),
        Symbol( "gtk_spin_button_get_numeric",  cast(void**)& gtk_spin_button_get_numeric),
        Symbol( "gtk_spin_button_set_numeric",  cast(void**)& gtk_spin_button_set_numeric),
        Symbol( "gtk_spin_button_get_update_policy",  cast(void**)& gtk_spin_button_get_update_policy),
        Symbol( "gtk_spin_button_set_update_policy",  cast(void**)& gtk_spin_button_set_update_policy),
        Symbol( "gtk_spin_button_set_value",  cast(void**)& gtk_spin_button_set_value),
        Symbol( "gtk_spin_button_get_value_as_int",  cast(void**)& gtk_spin_button_get_value_as_int),
        Symbol( "gtk_spin_button_get_value",  cast(void**)& gtk_spin_button_get_value),
        Symbol( "gtk_spin_button_get_range",  cast(void**)& gtk_spin_button_get_range),
        Symbol( "gtk_spin_button_set_range",  cast(void**)& gtk_spin_button_set_range),
        Symbol( "gtk_spin_button_get_increments",  cast(void**)& gtk_spin_button_get_increments),
        Symbol( "gtk_spin_button_set_increments",  cast(void**)& gtk_spin_button_set_increments),
        Symbol( "gtk_spin_button_get_digits",  cast(void**)& gtk_spin_button_get_digits),
        Symbol( "gtk_spin_button_set_digits",  cast(void**)& gtk_spin_button_set_digits),
        Symbol( "gtk_spin_button_get_adjustment",  cast(void**)& gtk_spin_button_get_adjustment),
        Symbol( "gtk_spin_button_set_adjustment",  cast(void**)& gtk_spin_button_set_adjustment),
        Symbol( "gtk_spin_button_new_with_range",  cast(void**)& gtk_spin_button_new_with_range),
        Symbol( "gtk_spin_button_new",  cast(void**)& gtk_spin_button_new),
        Symbol( "gtk_spin_button_configure",  cast(void**)& gtk_spin_button_configure),
        Symbol( "gtk_spin_button_get_type",  cast(void**)& gtk_spin_button_get_type),
    //     Symbol( "_gtk_size_group_queue_resize",  cast(void**)& _gtk_size_group_queue_resize),
    //     Symbol( "_gtk_size_group_compute_requisition",  cast(void**)& _gtk_size_group_compute_requisition),
    //     Symbol( "_gtk_size_group_get_child_requisition",  cast(void**)& _gtk_size_group_get_child_requisition),
        Symbol( "gtk_size_group_get_widgets",  cast(void**)& gtk_size_group_get_widgets),
        Symbol( "gtk_size_group_remove_widget",  cast(void**)& gtk_size_group_remove_widget),
        Symbol( "gtk_size_group_add_widget",  cast(void**)& gtk_size_group_add_widget),
        Symbol( "gtk_size_group_get_ignore_hidden",  cast(void**)& gtk_size_group_get_ignore_hidden),
        Symbol( "gtk_size_group_set_ignore_hidden",  cast(void**)& gtk_size_group_set_ignore_hidden),
        Symbol( "gtk_size_group_get_mode",  cast(void**)& gtk_size_group_get_mode),
        Symbol( "gtk_size_group_set_mode",  cast(void**)& gtk_size_group_set_mode),
        Symbol( "gtk_size_group_new",  cast(void**)& gtk_size_group_new),
        Symbol( "gtk_size_group_get_type",  cast(void**)& gtk_size_group_get_type),
        Symbol( "gtk_separator_tool_item_set_draw",  cast(void**)& gtk_separator_tool_item_set_draw),
        Symbol( "gtk_separator_tool_item_get_draw",  cast(void**)& gtk_separator_tool_item_get_draw),
        Symbol( "gtk_separator_tool_item_new",  cast(void**)& gtk_separator_tool_item_new),
        Symbol( "gtk_separator_tool_item_get_type",  cast(void**)& gtk_separator_tool_item_get_type),
        Symbol( "gtk_separator_menu_item_new",  cast(void**)& gtk_separator_menu_item_new),
        Symbol( "gtk_separator_menu_item_get_type",  cast(void**)& gtk_separator_menu_item_get_type),
    //     Symbol( "_gtk_scrolled_window_get_scrollbar_spacing",  cast(void**)& _gtk_scrolled_window_get_scrollbar_spacing),
        Symbol( "gtk_scrolled_window_add_with_viewport",  cast(void**)& gtk_scrolled_window_add_with_viewport),
        Symbol( "gtk_scrolled_window_get_shadow_type",  cast(void**)& gtk_scrolled_window_get_shadow_type),
        Symbol( "gtk_scrolled_window_set_shadow_type",  cast(void**)& gtk_scrolled_window_set_shadow_type),
        Symbol( "gtk_scrolled_window_get_placement",  cast(void**)& gtk_scrolled_window_get_placement),
        Symbol( "gtk_scrolled_window_unset_placement",  cast(void**)& gtk_scrolled_window_unset_placement),
        Symbol( "gtk_scrolled_window_set_placement",  cast(void**)& gtk_scrolled_window_set_placement),
        Symbol( "gtk_scrolled_window_get_policy",  cast(void**)& gtk_scrolled_window_get_policy),
        Symbol( "gtk_scrolled_window_set_policy",  cast(void**)& gtk_scrolled_window_set_policy),
        Symbol( "gtk_scrolled_window_get_vscrollbar",  cast(void**)& gtk_scrolled_window_get_vscrollbar),
        Symbol( "gtk_widget_set_tooltip_window",  cast(void**)& gtk_widget_set_tooltip_window),
        Symbol( "gtk_scrolled_window_get_hscrollbar",  cast(void**)& gtk_scrolled_window_get_hscrollbar),
        Symbol( "gtk_scrolled_window_get_vadjustment",  cast(void**)& gtk_scrolled_window_get_vadjustment),
        Symbol( "gtk_scrolled_window_get_hadjustment",  cast(void**)& gtk_scrolled_window_get_hadjustment),
        Symbol( "gtk_scrolled_window_set_vadjustment",  cast(void**)& gtk_scrolled_window_set_vadjustment),
        Symbol( "gtk_scrolled_window_set_hadjustment",  cast(void**)& gtk_scrolled_window_set_hadjustment),
        Symbol( "gtk_scrolled_window_new",  cast(void**)& gtk_scrolled_window_new),
        Symbol( "gtk_scrolled_window_get_type",  cast(void**)& gtk_scrolled_window_get_type),
        Symbol( "gtk_viewport_get_shadow_type",  cast(void**)& gtk_viewport_get_shadow_type),
        Symbol( "gtk_viewport_set_shadow_type",  cast(void**)& gtk_viewport_set_shadow_type),
        Symbol( "gtk_viewport_set_vadjustment",  cast(void**)& gtk_viewport_set_vadjustment),
        Symbol( "gtk_viewport_set_hadjustment",  cast(void**)& gtk_viewport_set_hadjustment),
        Symbol( "gtk_viewport_get_vadjustment",  cast(void**)& gtk_viewport_get_vadjustment),
        Symbol( "gtk_viewport_get_hadjustment",  cast(void**)& gtk_viewport_get_hadjustment),
        Symbol( "gtk_viewport_new",  cast(void**)& gtk_viewport_new),
        Symbol( "gtk_viewport_get_type",  cast(void**)& gtk_viewport_get_type),
        Symbol( "gtk_scale_button_set_adjustment",  cast(void**)& gtk_scale_button_set_adjustment),
        Symbol( "gtk_scale_button_get_adjustment",  cast(void**)& gtk_scale_button_get_adjustment),
        Symbol( "gtk_scale_button_set_value",  cast(void**)& gtk_scale_button_set_value),
        Symbol( "gtk_scale_button_get_value",  cast(void**)& gtk_scale_button_get_value),
        Symbol( "gtk_scale_button_set_icons",  cast(void**)& gtk_scale_button_set_icons),
        Symbol( "gtk_scale_button_new",  cast(void**)& gtk_scale_button_new),
        Symbol( "gtk_scale_button_get_type",  cast(void**)& gtk_scale_button_get_type),
        Symbol( "gtk_recent_chooser_widget_new_for_manager",  cast(void**)& gtk_recent_chooser_widget_new_for_manager),
        Symbol( "gtk_recent_chooser_widget_new",  cast(void**)& gtk_recent_chooser_widget_new),
        Symbol( "gtk_recent_chooser_widget_get_type",  cast(void**)& gtk_recent_chooser_widget_get_type),
        Symbol( "gtk_recent_chooser_menu_set_show_numbers",  cast(void**)& gtk_recent_chooser_menu_set_show_numbers),
        Symbol( "gtk_recent_chooser_menu_get_show_numbers",  cast(void**)& gtk_recent_chooser_menu_get_show_numbers),
        Symbol( "gtk_recent_chooser_menu_new_for_manager",  cast(void**)& gtk_recent_chooser_menu_new_for_manager),
        Symbol( "gtk_recent_chooser_menu_new",  cast(void**)& gtk_recent_chooser_menu_new),
        Symbol( "gtk_recent_chooser_menu_get_type",  cast(void**)& gtk_recent_chooser_menu_get_type),
        Symbol( "gtk_recent_chooser_dialog_new_for_manager",  cast(void**)& gtk_recent_chooser_dialog_new_for_manager),
        Symbol( "gtk_recent_chooser_dialog_new",  cast(void**)& gtk_recent_chooser_dialog_new),
        Symbol( "gtk_recent_chooser_dialog_get_type",  cast(void**)& gtk_recent_chooser_dialog_get_type),
        Symbol( "gtk_recent_chooser_get_filter",  cast(void**)& gtk_recent_chooser_get_filter),
        Symbol( "gtk_recent_chooser_set_filter",  cast(void**)& gtk_recent_chooser_set_filter),
        Symbol( "gtk_recent_chooser_list_filters",  cast(void**)& gtk_recent_chooser_list_filters),
        Symbol( "gtk_recent_chooser_remove_filter",  cast(void**)& gtk_recent_chooser_remove_filter),
        Symbol( "gtk_recent_chooser_add_filter",  cast(void**)& gtk_recent_chooser_add_filter),
        Symbol( "gtk_recent_chooser_get_uris",  cast(void**)& gtk_recent_chooser_get_uris),
        Symbol( "gtk_recent_chooser_get_items",  cast(void**)& gtk_recent_chooser_get_items),
        Symbol( "gtk_recent_chooser_unselect_all",  cast(void**)& gtk_recent_chooser_unselect_all),
        Symbol( "gtk_recent_chooser_select_all",  cast(void**)& gtk_recent_chooser_select_all),
        Symbol( "gtk_recent_chooser_unselect_uri",  cast(void**)& gtk_recent_chooser_unselect_uri),
        Symbol( "gtk_recent_chooser_select_uri",  cast(void**)& gtk_recent_chooser_select_uri),
        Symbol( "gtk_recent_chooser_get_current_item",  cast(void**)& gtk_recent_chooser_get_current_item),
        Symbol( "gtk_recent_chooser_get_current_uri",  cast(void**)& gtk_recent_chooser_get_current_uri),
        Symbol( "gtk_recent_chooser_set_current_uri",  cast(void**)& gtk_recent_chooser_set_current_uri),
        Symbol( "gtk_recent_chooser_set_sort_func",  cast(void**)& gtk_recent_chooser_set_sort_func),
        Symbol( "gtk_recent_chooser_get_sort_type",  cast(void**)& gtk_recent_chooser_get_sort_type),
        Symbol( "gtk_recent_chooser_set_sort_type",  cast(void**)& gtk_recent_chooser_set_sort_type),
        Symbol( "gtk_recent_chooser_get_show_icons",  cast(void**)& gtk_recent_chooser_get_show_icons),
        Symbol( "gtk_recent_chooser_set_show_icons",  cast(void**)& gtk_recent_chooser_set_show_icons),
        Symbol( "gtk_recent_chooser_get_show_numbers",  cast(void**)& gtk_recent_chooser_get_show_numbers),
        Symbol( "gtk_recent_chooser_set_show_numbers",  cast(void**)& gtk_recent_chooser_set_show_numbers),
        Symbol( "gtk_recent_chooser_get_show_tips",  cast(void**)& gtk_recent_chooser_get_show_tips),
        Symbol( "gtk_recent_chooser_set_show_tips",  cast(void**)& gtk_recent_chooser_set_show_tips),
        Symbol( "gtk_recent_chooser_get_local_only",  cast(void**)& gtk_recent_chooser_get_local_only),
        Symbol( "gtk_recent_chooser_set_local_only",  cast(void**)& gtk_recent_chooser_set_local_only),
        Symbol( "gtk_recent_chooser_get_limit",  cast(void**)& gtk_recent_chooser_get_limit),
        Symbol( "gtk_recent_chooser_set_limit",  cast(void**)& gtk_recent_chooser_set_limit),
        Symbol( "gtk_recent_chooser_get_select_multiple",  cast(void**)& gtk_recent_chooser_get_select_multiple),
        Symbol( "gtk_recent_chooser_set_select_multiple",  cast(void**)& gtk_recent_chooser_set_select_multiple),
        Symbol( "gtk_recent_chooser_get_show_not_found",  cast(void**)& gtk_recent_chooser_get_show_not_found),
        Symbol( "gtk_recent_chooser_set_show_not_found",  cast(void**)& gtk_recent_chooser_set_show_not_found),
        Symbol( "gtk_recent_chooser_get_show_private",  cast(void**)& gtk_recent_chooser_get_show_private),
        Symbol( "gtk_recent_chooser_set_show_private",  cast(void**)& gtk_recent_chooser_set_show_private),
        Symbol( "gtk_recent_chooser_get_type",  cast(void**)& gtk_recent_chooser_get_type),
        Symbol( "gtk_recent_chooser_error_quark",  cast(void**)& gtk_recent_chooser_error_quark),
        Symbol( "gtk_recent_filter_filter",  cast(void**)& gtk_recent_filter_filter),
        Symbol( "gtk_recent_filter_get_needed",  cast(void**)& gtk_recent_filter_get_needed),
        Symbol( "gtk_recent_filter_add_custom",  cast(void**)& gtk_recent_filter_add_custom),
        Symbol( "gtk_recent_filter_add_age",  cast(void**)& gtk_recent_filter_add_age),
        Symbol( "gtk_recent_filter_add_group",  cast(void**)& gtk_recent_filter_add_group),
        Symbol( "gtk_recent_filter_add_application",  cast(void**)& gtk_recent_filter_add_application),
        Symbol( "gtk_recent_filter_add_pixbuf_formats",  cast(void**)& gtk_recent_filter_add_pixbuf_formats),
        Symbol( "gtk_recent_filter_add_pattern",  cast(void**)& gtk_recent_filter_add_pattern),
        Symbol( "gtk_recent_filter_add_mime_type",  cast(void**)& gtk_recent_filter_add_mime_type),
        Symbol( "gtk_recent_filter_get_name",  cast(void**)& gtk_recent_filter_get_name),
        Symbol( "gtk_recent_filter_set_name",  cast(void**)& gtk_recent_filter_set_name),
        Symbol( "gtk_recent_filter_new",  cast(void**)& gtk_recent_filter_new),
        Symbol( "gtk_recent_filter_get_type",  cast(void**)& gtk_recent_filter_get_type),
        Symbol( "gtk_recent_action_set_show_numbers",  cast(void**)& gtk_recent_action_set_show_numbers),
        Symbol( "gtk_recent_action_get_show_numbers",  cast(void**)& gtk_recent_action_get_show_numbers),
        Symbol( "gtk_recent_action_new_for_manager",  cast(void**)& gtk_recent_action_new_for_manager),
        Symbol( "gtk_recent_action_new",  cast(void**)& gtk_recent_action_new),
        Symbol( "gtk_recent_action_get_type",  cast(void**)& gtk_recent_action_get_type),
    //     Symbol( "_gtk_recent_manager_sync",  cast(void**)& _gtk_recent_manager_sync),
        Symbol( "gtk_recent_info_match",  cast(void**)& gtk_recent_info_match),
        Symbol( "gtk_recent_info_exists",  cast(void**)& gtk_recent_info_exists),
        Symbol( "gtk_recent_info_is_local",  cast(void**)& gtk_recent_info_is_local),
        Symbol( "gtk_recent_info_get_age",  cast(void**)& gtk_recent_info_get_age),
        Symbol( "gtk_recent_info_get_uri_display",  cast(void**)& gtk_recent_info_get_uri_display),
        Symbol( "gtk_recent_info_get_short_name",  cast(void**)& gtk_recent_info_get_short_name),
        Symbol( "gtk_recent_info_get_icon",  cast(void**)& gtk_recent_info_get_icon),
        Symbol( "gtk_recent_info_has_group",  cast(void**)& gtk_recent_info_has_group),
        Symbol( "gtk_recent_info_get_groups",  cast(void**)& gtk_recent_info_get_groups),
        Symbol( "gtk_recent_info_has_application",  cast(void**)& gtk_recent_info_has_application),
        Symbol( "gtk_recent_info_last_application",  cast(void**)& gtk_recent_info_last_application),
        Symbol( "gtk_recent_info_get_applications",  cast(void**)& gtk_recent_info_get_applications),
        Symbol( "gtk_recent_info_get_application_info",  cast(void**)& gtk_recent_info_get_application_info),
        Symbol( "gtk_recent_info_get_private_hint",  cast(void**)& gtk_recent_info_get_private_hint),
        Symbol( "gtk_recent_info_get_visited",  cast(void**)& gtk_recent_info_get_visited),
        Symbol( "gtk_recent_info_get_modified",  cast(void**)& gtk_recent_info_get_modified),
        Symbol( "gtk_recent_info_get_added",  cast(void**)& gtk_recent_info_get_added),
        Symbol( "gtk_recent_info_get_mime_type",  cast(void**)& gtk_recent_info_get_mime_type),
        Symbol( "gtk_recent_info_get_description",  cast(void**)& gtk_recent_info_get_description),
        Symbol( "gtk_recent_info_get_display_name",  cast(void**)& gtk_recent_info_get_display_name),
        Symbol( "gtk_recent_info_get_uri",  cast(void**)& gtk_recent_info_get_uri),
        Symbol( "gtk_recent_info_unref",  cast(void**)& gtk_recent_info_unref),
        Symbol( "gtk_recent_info_ref",  cast(void**)& gtk_recent_info_ref),
        Symbol( "gtk_recent_info_get_type",  cast(void**)& gtk_recent_info_get_type),
        Symbol( "gtk_recent_manager_purge_items",  cast(void**)& gtk_recent_manager_purge_items),
        Symbol( "gtk_recent_manager_get_items",  cast(void**)& gtk_recent_manager_get_items),
        Symbol( "gtk_recent_manager_get_limit",  cast(void**)& gtk_recent_manager_get_limit),
        Symbol( "gtk_recent_manager_set_limit",  cast(void**)& gtk_recent_manager_set_limit),
        Symbol( "gtk_recent_manager_move_item",  cast(void**)& gtk_recent_manager_move_item),
        Symbol( "gtk_recent_manager_has_item",  cast(void**)& gtk_recent_manager_has_item),
        Symbol( "gtk_recent_manager_lookup_item",  cast(void**)& gtk_recent_manager_lookup_item),
        Symbol( "gtk_recent_manager_remove_item",  cast(void**)& gtk_recent_manager_remove_item),
        Symbol( "gtk_recent_manager_add_full",  cast(void**)& gtk_recent_manager_add_full),
        Symbol( "gtk_recent_manager_add_item",  cast(void**)& gtk_recent_manager_add_item),
        Symbol( "gtk_recent_manager_set_screen",  cast(void**)& gtk_recent_manager_set_screen),
        Symbol( "gtk_recent_manager_get_for_screen",  cast(void**)& gtk_recent_manager_get_for_screen),
        Symbol( "gtk_recent_manager_get_default",  cast(void**)& gtk_recent_manager_get_default),
        Symbol( "gtk_recent_manager_new",  cast(void**)& gtk_recent_manager_new),
        Symbol( "gtk_recent_manager_get_type",  cast(void**)& gtk_recent_manager_get_type),
        Symbol( "gtk_recent_manager_error_quark",  cast(void**)& gtk_recent_manager_error_quark),
        Symbol( "gtk_radio_tool_button_set_group",  cast(void**)& gtk_radio_tool_button_set_group),
        Symbol( "gtk_radio_tool_button_get_group",  cast(void**)& gtk_radio_tool_button_get_group),
        Symbol( "gtk_radio_tool_button_new_with_stock_from_widget",  cast(void**)& gtk_radio_tool_button_new_with_stock_from_widget),
        Symbol( "gtk_radio_tool_button_new_from_widget",  cast(void**)& gtk_radio_tool_button_new_from_widget),
        Symbol( "gtk_radio_tool_button_new_from_stock",  cast(void**)& gtk_radio_tool_button_new_from_stock),
        Symbol( "gtk_radio_tool_button_new",  cast(void**)& gtk_radio_tool_button_new),
        Symbol( "gtk_radio_tool_button_get_type",  cast(void**)& gtk_radio_tool_button_get_type),
        Symbol( "gtk_toggle_tool_button_get_active",  cast(void**)& gtk_toggle_tool_button_get_active),
        Symbol( "gtk_toggle_tool_button_set_active",  cast(void**)& gtk_toggle_tool_button_set_active),
        Symbol( "gtk_toggle_tool_button_new_from_stock",  cast(void**)& gtk_toggle_tool_button_new_from_stock),
        Symbol( "gtk_toggle_tool_button_new",  cast(void**)& gtk_toggle_tool_button_new),
        Symbol( "gtk_toggle_tool_button_get_type",  cast(void**)& gtk_toggle_tool_button_get_type),
        Symbol( "gtk_radio_menu_item_set_group",  cast(void**)& gtk_radio_menu_item_set_group),
        Symbol( "gtk_radio_menu_item_get_group",  cast(void**)& gtk_radio_menu_item_get_group),
        Symbol( "gtk_radio_menu_item_new_with_label_from_widget",  cast(void**)& gtk_radio_menu_item_new_with_label_from_widget),
        Symbol( "gtk_radio_menu_item_new_with_mnemonic_from_widget",  cast(void**)& gtk_radio_menu_item_new_with_mnemonic_from_widget),
        Symbol( "gtk_radio_menu_item_new_from_widget",  cast(void**)& gtk_radio_menu_item_new_from_widget),
        Symbol( "gtk_radio_menu_item_new_with_mnemonic",  cast(void**)& gtk_radio_menu_item_new_with_mnemonic),
        Symbol( "gtk_radio_menu_item_new_with_label",  cast(void**)& gtk_radio_menu_item_new_with_label),
        Symbol( "gtk_radio_menu_item_new",  cast(void**)& gtk_radio_menu_item_new),
        Symbol( "gtk_radio_menu_item_get_type",  cast(void**)& gtk_radio_menu_item_get_type),
        Symbol( "gtk_radio_button_set_group",  cast(void**)& gtk_radio_button_set_group),
        Symbol( "gtk_radio_button_get_group",  cast(void**)& gtk_radio_button_get_group),
        Symbol( "gtk_radio_button_new_with_mnemonic_from_widget",  cast(void**)& gtk_radio_button_new_with_mnemonic_from_widget),
        Symbol( "gtk_radio_button_new_with_mnemonic",  cast(void**)& gtk_radio_button_new_with_mnemonic),
        Symbol( "gtk_radio_button_new_with_label_from_widget",  cast(void**)& gtk_radio_button_new_with_label_from_widget),
        Symbol( "gtk_radio_button_new_with_label",  cast(void**)& gtk_radio_button_new_with_label),
        Symbol( "gtk_radio_button_new_from_widget",  cast(void**)& gtk_radio_button_new_from_widget),
        Symbol( "gtk_radio_button_new",  cast(void**)& gtk_radio_button_new),
        Symbol( "gtk_radio_button_get_type",  cast(void**)& gtk_radio_button_get_type),
        Symbol( "gtk_radio_action_set_current_value",  cast(void**)& gtk_radio_action_set_current_value),
        Symbol( "gtk_radio_action_get_current_value",  cast(void**)& gtk_radio_action_get_current_value),
        Symbol( "gtk_radio_action_set_group",  cast(void**)& gtk_radio_action_set_group),
        Symbol( "gtk_radio_action_get_group",  cast(void**)& gtk_radio_action_get_group),
        Symbol( "gtk_radio_action_new",  cast(void**)& gtk_radio_action_new),
        Symbol( "gtk_radio_action_get_type",  cast(void**)& gtk_radio_action_get_type),
        Symbol( "gtk_toggle_action_get_draw_as_radio",  cast(void**)& gtk_toggle_action_get_draw_as_radio),
        Symbol( "gtk_toggle_action_set_draw_as_radio",  cast(void**)& gtk_toggle_action_set_draw_as_radio),
        Symbol( "gtk_toggle_action_get_active",  cast(void**)& gtk_toggle_action_get_active),
        Symbol( "gtk_toggle_action_set_active",  cast(void**)& gtk_toggle_action_set_active),
        Symbol( "gtk_toggle_action_toggled",  cast(void**)& gtk_toggle_action_toggled),
        Symbol( "gtk_toggle_action_new",  cast(void**)& gtk_toggle_action_new),
        Symbol( "gtk_toggle_action_get_type",  cast(void**)& gtk_toggle_action_get_type),
        Symbol( "gtk_progress_bar_update",  cast(void**)& gtk_progress_bar_update),
        Symbol( "gtk_progress_bar_set_activity_blocks",  cast(void**)& gtk_progress_bar_set_activity_blocks),
        Symbol( "gtk_progress_bar_set_activity_step",  cast(void**)& gtk_progress_bar_set_activity_step),
        Symbol( "gtk_progress_bar_set_discrete_blocks",  cast(void**)& gtk_progress_bar_set_discrete_blocks),
        Symbol( "gtk_progress_bar_set_bar_style",  cast(void**)& gtk_progress_bar_set_bar_style),
        Symbol( "gtk_progress_bar_new_with_adjustment",  cast(void**)& gtk_progress_bar_new_with_adjustment),
        Symbol( "gtk_progress_bar_get_ellipsize",  cast(void**)& gtk_progress_bar_get_ellipsize),
        Symbol( "gtk_progress_bar_set_ellipsize",  cast(void**)& gtk_progress_bar_set_ellipsize),
        Symbol( "gtk_progress_bar_get_orientation",  cast(void**)& gtk_progress_bar_get_orientation),
        Symbol( "gtk_progress_bar_get_pulse_step",  cast(void**)& gtk_progress_bar_get_pulse_step),
        Symbol( "gtk_progress_bar_get_fraction",  cast(void**)& gtk_progress_bar_get_fraction),
        Symbol( "gtk_progress_bar_get_text",  cast(void**)& gtk_progress_bar_get_text),
        Symbol( "gtk_progress_bar_set_orientation",  cast(void**)& gtk_progress_bar_set_orientation),
        Symbol( "gtk_progress_bar_set_pulse_step",  cast(void**)& gtk_progress_bar_set_pulse_step),
        Symbol( "gtk_progress_bar_set_fraction",  cast(void**)& gtk_progress_bar_set_fraction),
        Symbol( "gtk_progress_bar_set_text",  cast(void**)& gtk_progress_bar_set_text),
        Symbol( "gtk_progress_bar_pulse",  cast(void**)& gtk_progress_bar_pulse),
        Symbol( "gtk_progress_bar_new",  cast(void**)& gtk_progress_bar_new),
        Symbol( "gtk_progress_bar_get_type",  cast(void**)& gtk_progress_bar_get_type),
        Symbol( "gtk_progress_get_percentage_from_value",  cast(void**)& gtk_progress_get_percentage_from_value),
        Symbol( "gtk_progress_get_current_percentage",  cast(void**)& gtk_progress_get_current_percentage),
        Symbol( "gtk_progress_get_text_from_value",  cast(void**)& gtk_progress_get_text_from_value),
        Symbol( "gtk_progress_get_current_text",  cast(void**)& gtk_progress_get_current_text),
        Symbol( "gtk_progress_set_activity_mode",  cast(void**)& gtk_progress_set_activity_mode),
        Symbol( "gtk_progress_get_value",  cast(void**)& gtk_progress_get_value),
        Symbol( "gtk_progress_set_value",  cast(void**)& gtk_progress_set_value),
        Symbol( "gtk_progress_set_percentage",  cast(void**)& gtk_progress_set_percentage),
        Symbol( "gtk_progress_configure",  cast(void**)& gtk_progress_configure),
        Symbol( "gtk_progress_set_adjustment",  cast(void**)& gtk_progress_set_adjustment),
        Symbol( "gtk_progress_set_format_string",  cast(void**)& gtk_progress_set_format_string),
        Symbol( "gtk_progress_set_text_alignment",  cast(void**)& gtk_progress_set_text_alignment),
        Symbol( "gtk_progress_set_show_text",  cast(void**)& gtk_progress_set_show_text),
        Symbol( "gtk_progress_get_type",  cast(void**)& gtk_progress_get_type),
        Symbol( "gtk_print_run_page_setup_dialog_async",  cast(void**)& gtk_print_run_page_setup_dialog_async),
        Symbol( "gtk_print_run_page_setup_dialog",  cast(void**)& gtk_print_run_page_setup_dialog),
        Symbol( "gtk_print_operation_cancel",  cast(void**)& gtk_print_operation_cancel),
        Symbol( "gtk_print_operation_is_finished",  cast(void**)& gtk_print_operation_is_finished),
        Symbol( "gtk_print_operation_get_status_string",  cast(void**)& gtk_print_operation_get_status_string),
        Symbol( "gtk_print_operation_get_status",  cast(void**)& gtk_print_operation_get_status),
        Symbol( "gtk_print_operation_get_error",  cast(void**)& gtk_print_operation_get_error),
        Symbol( "gtk_print_operation_run",  cast(void**)& gtk_print_operation_run),
        Symbol( "gtk_print_operation_set_custom_tab_label",  cast(void**)& gtk_print_operation_set_custom_tab_label),
        Symbol( "gtk_print_operation_set_allow_async",  cast(void**)& gtk_print_operation_set_allow_async),
        Symbol( "gtk_print_operation_set_show_progress",  cast(void**)& gtk_print_operation_set_show_progress),
        Symbol( "gtk_print_operation_set_track_print_status",  cast(void**)& gtk_print_operation_set_track_print_status),
        Symbol( "gtk_print_operation_set_export_filename",  cast(void**)& gtk_print_operation_set_export_filename),
        Symbol( "gtk_print_operation_set_unit",  cast(void**)& gtk_print_operation_set_unit),
        Symbol( "gtk_print_operation_set_use_full_page",  cast(void**)& gtk_print_operation_set_use_full_page),
        Symbol( "gtk_print_operation_set_current_page",  cast(void**)& gtk_print_operation_set_current_page),
        Symbol( "gtk_print_operation_set_n_pages",  cast(void**)& gtk_print_operation_set_n_pages),
        Symbol( "gtk_print_operation_set_job_name",  cast(void**)& gtk_print_operation_set_job_name),
        Symbol( "gtk_print_operation_get_print_settings",  cast(void**)& gtk_print_operation_get_print_settings),
        Symbol( "gtk_print_operation_set_print_settings",  cast(void**)& gtk_print_operation_set_print_settings),
        Symbol( "gtk_print_operation_get_default_page_setup",  cast(void**)& gtk_print_operation_get_default_page_setup),
        Symbol( "gtk_print_operation_set_default_page_setup",  cast(void**)& gtk_print_operation_set_default_page_setup),
        Symbol( "gtk_print_operation_new",  cast(void**)& gtk_print_operation_new),
        Symbol( "gtk_print_operation_get_type",  cast(void**)& gtk_print_operation_get_type),
        Symbol( "gtk_print_error_quark",  cast(void**)& gtk_print_error_quark),
        Symbol( "gtk_print_operation_preview_is_selected",  cast(void**)& gtk_print_operation_preview_is_selected),
        Symbol( "gtk_print_operation_preview_end_preview",  cast(void**)& gtk_print_operation_preview_end_preview),
        Symbol( "gtk_print_operation_preview_render_page",  cast(void**)& gtk_print_operation_preview_render_page),
        Symbol( "gtk_print_operation_preview_get_type",  cast(void**)& gtk_print_operation_preview_get_type),
        Symbol( "gtk_print_context_set_cairo_context",  cast(void**)& gtk_print_context_set_cairo_context),
        Symbol( "gtk_print_context_create_pango_layout",  cast(void**)& gtk_print_context_create_pango_layout),
        Symbol( "gtk_print_context_create_pango_context",  cast(void**)& gtk_print_context_create_pango_context),
        Symbol( "gtk_print_context_get_pango_fontmap",  cast(void**)& gtk_print_context_get_pango_fontmap),
        Symbol( "gtk_print_context_get_dpi_y",  cast(void**)& gtk_print_context_get_dpi_y),
        Symbol( "gtk_print_context_get_dpi_x",  cast(void**)& gtk_print_context_get_dpi_x),
        Symbol( "gtk_print_context_get_height",  cast(void**)& gtk_print_context_get_height),
        Symbol( "gtk_print_context_get_width",  cast(void**)& gtk_print_context_get_width),
        Symbol( "gtk_print_context_get_page_setup",  cast(void**)& gtk_print_context_get_page_setup),
        Symbol( "gtk_print_context_get_cairo_context",  cast(void**)& gtk_print_context_get_cairo_context),
        Symbol( "gtk_print_context_get_type",  cast(void**)& gtk_print_context_get_type),
        Symbol( "gtk_print_settings_set_output_bin",  cast(void**)& gtk_print_settings_set_output_bin),
        Symbol( "gtk_print_settings_get_output_bin",  cast(void**)& gtk_print_settings_get_output_bin),
        Symbol( "gtk_print_settings_set_finishings",  cast(void**)& gtk_print_settings_set_finishings),
        Symbol( "gtk_print_settings_get_finishings",  cast(void**)& gtk_print_settings_get_finishings),
        Symbol( "gtk_print_settings_set_dither",  cast(void**)& gtk_print_settings_set_dither),
        Symbol( "gtk_print_settings_get_dither",  cast(void**)& gtk_print_settings_get_dither),
        Symbol( "gtk_print_settings_set_media_type",  cast(void**)& gtk_print_settings_set_media_type),
        Symbol( "gtk_print_settings_get_media_type",  cast(void**)& gtk_print_settings_get_media_type),
        Symbol( "gtk_print_settings_set_default_source",  cast(void**)& gtk_print_settings_set_default_source),
        Symbol( "gtk_print_settings_get_default_source",  cast(void**)& gtk_print_settings_get_default_source),
        Symbol( "gtk_print_settings_set_page_set",  cast(void**)& gtk_print_settings_set_page_set),
        Symbol( "gtk_print_settings_get_page_set",  cast(void**)& gtk_print_settings_get_page_set),
        Symbol( "gtk_print_settings_set_page_ranges",  cast(void**)& gtk_print_settings_set_page_ranges),
        Symbol( "gtk_print_settings_get_page_ranges",  cast(void**)& gtk_print_settings_get_page_ranges),
        Symbol( "gtk_print_settings_set_print_pages",  cast(void**)& gtk_print_settings_set_print_pages),
        Symbol( "gtk_print_settings_get_print_pages",  cast(void**)& gtk_print_settings_get_print_pages),
        Symbol( "gtk_print_settings_set_scale",  cast(void**)& gtk_print_settings_set_scale),
        Symbol( "gtk_print_settings_get_scale",  cast(void**)& gtk_print_settings_get_scale),
        Symbol( "gtk_print_settings_set_resolution",  cast(void**)& gtk_print_settings_set_resolution),
        Symbol( "gtk_print_settings_get_resolution",  cast(void**)& gtk_print_settings_get_resolution),
        Symbol( "gtk_print_settings_set_number_up",  cast(void**)& gtk_print_settings_set_number_up),
        Symbol( "gtk_print_settings_get_number_up",  cast(void**)& gtk_print_settings_get_number_up),
        Symbol( "gtk_print_settings_set_n_copies",  cast(void**)& gtk_print_settings_set_n_copies),
        Symbol( "gtk_print_settings_get_n_copies",  cast(void**)& gtk_print_settings_get_n_copies),
        Symbol( "gtk_print_settings_set_quality",  cast(void**)& gtk_print_settings_set_quality),
        Symbol( "gtk_print_settings_get_quality",  cast(void**)& gtk_print_settings_get_quality),
        Symbol( "gtk_print_settings_set_duplex",  cast(void**)& gtk_print_settings_set_duplex),
        Symbol( "gtk_print_settings_get_duplex",  cast(void**)& gtk_print_settings_get_duplex),
        Symbol( "gtk_print_settings_set_reverse",  cast(void**)& gtk_print_settings_set_reverse),
        Symbol( "gtk_print_settings_get_reverse",  cast(void**)& gtk_print_settings_get_reverse),
        Symbol( "gtk_print_settings_set_collate",  cast(void**)& gtk_print_settings_set_collate),
        Symbol( "gtk_print_settings_get_collate",  cast(void**)& gtk_print_settings_get_collate),
        Symbol( "gtk_print_settings_set_use_color",  cast(void**)& gtk_print_settings_set_use_color),
        Symbol( "gtk_print_settings_get_use_color",  cast(void**)& gtk_print_settings_get_use_color),
        Symbol( "gtk_print_settings_set_paper_height",  cast(void**)& gtk_print_settings_set_paper_height),
        Symbol( "gtk_print_settings_get_paper_height",  cast(void**)& gtk_print_settings_get_paper_height),
        Symbol( "gtk_print_settings_set_paper_width",  cast(void**)& gtk_print_settings_set_paper_width),
        Symbol( "gtk_print_settings_get_paper_width",  cast(void**)& gtk_print_settings_get_paper_width),
        Symbol( "gtk_print_settings_set_paper_size",  cast(void**)& gtk_print_settings_set_paper_size),
        Symbol( "gtk_print_settings_get_paper_size",  cast(void**)& gtk_print_settings_get_paper_size),
        Symbol( "gtk_print_settings_set_orientation",  cast(void**)& gtk_print_settings_set_orientation),
        Symbol( "gtk_print_settings_get_orientation",  cast(void**)& gtk_print_settings_get_orientation),
        Symbol( "gtk_print_settings_set_printer",  cast(void**)& gtk_print_settings_set_printer),
        Symbol( "gtk_print_settings_get_printer",  cast(void**)& gtk_print_settings_get_printer),
        Symbol( "gtk_print_settings_set_int",  cast(void**)& gtk_print_settings_set_int),
        Symbol( "gtk_print_settings_get_int_with_default",  cast(void**)& gtk_print_settings_get_int_with_default),
        Symbol( "gtk_print_settings_get_int",  cast(void**)& gtk_print_settings_get_int),
        Symbol( "gtk_print_settings_set_length",  cast(void**)& gtk_print_settings_set_length),
        Symbol( "gtk_print_settings_get_length",  cast(void**)& gtk_print_settings_get_length),
        Symbol( "gtk_print_settings_set_double",  cast(void**)& gtk_print_settings_set_double),
        Symbol( "gtk_print_settings_get_double_with_default",  cast(void**)& gtk_print_settings_get_double_with_default),
        Symbol( "gtk_print_settings_get_double",  cast(void**)& gtk_print_settings_get_double),
        Symbol( "gtk_print_settings_set_bool",  cast(void**)& gtk_print_settings_set_bool),
        Symbol( "gtk_print_settings_get_bool",  cast(void**)& gtk_print_settings_get_bool),
        Symbol( "gtk_print_settings_foreach",  cast(void**)& gtk_print_settings_foreach),
        Symbol( "gtk_print_settings_unset",  cast(void**)& gtk_print_settings_unset),
        Symbol( "gtk_print_settings_set",  cast(void**)& gtk_print_settings_set),
        Symbol( "gtk_print_settings_get",  cast(void**)& gtk_print_settings_get),
        Symbol( "gtk_print_settings_has_key",  cast(void**)& gtk_print_settings_has_key),
        Symbol( "gtk_print_settings_to_key_file",  cast(void**)& gtk_print_settings_to_key_file),
        Symbol( "gtk_print_settings_new_from_key_file",  cast(void**)& gtk_print_settings_new_from_key_file),
        Symbol( "gtk_print_settings_to_file",  cast(void**)& gtk_print_settings_to_file),
        Symbol( "gtk_print_settings_new_from_file",  cast(void**)& gtk_print_settings_new_from_file),
        Symbol( "gtk_print_settings_copy",  cast(void**)& gtk_print_settings_copy),
        Symbol( "gtk_print_settings_new",  cast(void**)& gtk_print_settings_new),
        Symbol( "gtk_print_settings_get_type",  cast(void**)& gtk_print_settings_get_type),
        Symbol( "gtk_page_setup_to_key_file",  cast(void**)& gtk_page_setup_to_key_file),
        Symbol( "gtk_page_setup_new_from_key_file",  cast(void**)& gtk_page_setup_new_from_key_file),
        Symbol( "gtk_page_setup_to_file",  cast(void**)& gtk_page_setup_to_file),
        Symbol( "gtk_page_setup_new_from_file",  cast(void**)& gtk_page_setup_new_from_file),
        Symbol( "gtk_page_setup_get_page_height",  cast(void**)& gtk_page_setup_get_page_height),
        Symbol( "gtk_page_setup_get_page_width",  cast(void**)& gtk_page_setup_get_page_width),
        Symbol( "gtk_page_setup_get_paper_height",  cast(void**)& gtk_page_setup_get_paper_height),
        Symbol( "gtk_page_setup_get_paper_width",  cast(void**)& gtk_page_setup_get_paper_width),
        Symbol( "gtk_page_setup_set_paper_size_and_default_margins",  cast(void**)& gtk_page_setup_set_paper_size_and_default_margins),
        Symbol( "gtk_page_setup_set_right_margin",  cast(void**)& gtk_page_setup_set_right_margin),
        Symbol( "gtk_page_setup_get_right_margin",  cast(void**)& gtk_page_setup_get_right_margin),
        Symbol( "gtk_page_setup_set_left_margin",  cast(void**)& gtk_page_setup_set_left_margin),
        Symbol( "gtk_page_setup_get_left_margin",  cast(void**)& gtk_page_setup_get_left_margin),
        Symbol( "gtk_page_setup_set_bottom_margin",  cast(void**)& gtk_page_setup_set_bottom_margin),
        Symbol( "gtk_page_setup_get_bottom_margin",  cast(void**)& gtk_page_setup_get_bottom_margin),
        Symbol( "gtk_page_setup_set_top_margin",  cast(void**)& gtk_page_setup_set_top_margin),
        Symbol( "gtk_page_setup_get_top_margin",  cast(void**)& gtk_page_setup_get_top_margin),
        Symbol( "gtk_page_setup_set_paper_size",  cast(void**)& gtk_page_setup_set_paper_size),
        Symbol( "gtk_page_setup_get_paper_size",  cast(void**)& gtk_page_setup_get_paper_size),
        Symbol( "gtk_page_setup_set_orientation",  cast(void**)& gtk_page_setup_set_orientation),
        Symbol( "gtk_page_setup_get_orientation",  cast(void**)& gtk_page_setup_get_orientation),
        Symbol( "gtk_page_setup_copy",  cast(void**)& gtk_page_setup_copy),
        Symbol( "gtk_page_setup_new",  cast(void**)& gtk_page_setup_new),
        Symbol( "gtk_page_setup_get_type",  cast(void**)& gtk_page_setup_get_type),
        Symbol( "gtk_paper_size_to_key_file",  cast(void**)& gtk_paper_size_to_key_file),
        Symbol( "gtk_paper_size_new_from_key_file",  cast(void**)& gtk_paper_size_new_from_key_file),
        Symbol( "gtk_paper_size_get_default",  cast(void**)& gtk_paper_size_get_default),
        Symbol( "gtk_paper_size_get_default_right_margin",  cast(void**)& gtk_paper_size_get_default_right_margin),
        Symbol( "gtk_paper_size_get_default_left_margin",  cast(void**)& gtk_paper_size_get_default_left_margin),
        Symbol( "gtk_paper_size_get_default_bottom_margin",  cast(void**)& gtk_paper_size_get_default_bottom_margin),
        Symbol( "gtk_paper_size_get_default_top_margin",  cast(void**)& gtk_paper_size_get_default_top_margin),
        Symbol( "gtk_paper_size_set_size",  cast(void**)& gtk_paper_size_set_size),
        Symbol( "gtk_paper_size_is_custom",  cast(void**)& gtk_paper_size_is_custom),
        Symbol( "gtk_paper_size_get_height",  cast(void**)& gtk_paper_size_get_height),
        Symbol( "gtk_paper_size_get_width",  cast(void**)& gtk_paper_size_get_width),
        Symbol( "gtk_paper_size_get_ppd_name",  cast(void**)& gtk_paper_size_get_ppd_name),
        Symbol( "gtk_paper_size_get_display_name",  cast(void**)& gtk_paper_size_get_display_name),
        Symbol( "gtk_paper_size_get_name",  cast(void**)& gtk_paper_size_get_name),
        Symbol( "gtk_paper_size_get_paper_sizes",  cast(void**)& gtk_paper_size_get_paper_sizes),
        Symbol( "gtk_paper_size_is_equal",  cast(void**)& gtk_paper_size_is_equal),
        Symbol( "gtk_paper_size_free",  cast(void**)& gtk_paper_size_free),
        Symbol( "gtk_paper_size_copy",  cast(void**)& gtk_paper_size_copy),
        Symbol( "gtk_paper_size_new_custom",  cast(void**)& gtk_paper_size_new_custom),
        Symbol( "gtk_paper_size_new_from_ppd",  cast(void**)& gtk_paper_size_new_from_ppd),
        Symbol( "gtk_paper_size_new",  cast(void**)& gtk_paper_size_new),
        Symbol( "gtk_paper_size_get_type",  cast(void**)& gtk_paper_size_get_type),
        Symbol( "gtk_preview_reset",  cast(void**)& gtk_preview_reset),
        Symbol( "gtk_preview_get_info",  cast(void**)& gtk_preview_get_info),
        Symbol( "gtk_preview_get_cmap",  cast(void**)& gtk_preview_get_cmap),
        Symbol( "gtk_preview_get_visual",  cast(void**)& gtk_preview_get_visual),
        Symbol( "gtk_preview_set_dither",  cast(void**)& gtk_preview_set_dither),
        Symbol( "gtk_preview_set_reserved",  cast(void**)& gtk_preview_set_reserved),
        Symbol( "gtk_preview_set_install_cmap",  cast(void**)& gtk_preview_set_install_cmap),
        Symbol( "gtk_preview_set_color_cube",  cast(void**)& gtk_preview_set_color_cube),
        Symbol( "gtk_preview_set_gamma",  cast(void**)& gtk_preview_set_gamma),
        Symbol( "gtk_preview_set_expand",  cast(void**)& gtk_preview_set_expand),
        Symbol( "gtk_preview_draw_row",  cast(void**)& gtk_preview_draw_row),
        Symbol( "gtk_preview_put",  cast(void**)& gtk_preview_put),
        Symbol( "gtk_preview_size",  cast(void**)& gtk_preview_size),
        Symbol( "gtk_preview_new",  cast(void**)& gtk_preview_new),
        Symbol( "gtk_preview_uninit",  cast(void**)& gtk_preview_uninit),
        Symbol( "gtk_preview_get_type",  cast(void**)& gtk_preview_get_type),
    //     Symbol( "_gtk_plug_remove_from_socket",  cast(void**)& _gtk_plug_remove_from_socket),
    //     Symbol( "_gtk_plug_add_to_socket",  cast(void**)& _gtk_plug_add_to_socket),
        Symbol( "gtk_plug_get_id",  cast(void**)& gtk_plug_get_id),
        Symbol( "gtk_plug_new_for_display",  cast(void**)& gtk_plug_new_for_display),
        Symbol( "gtk_plug_construct_for_display",  cast(void**)& gtk_plug_construct_for_display),
        Symbol( "gtk_plug_new",  cast(void**)& gtk_plug_new),
        Symbol( "gtk_plug_construct",  cast(void**)& gtk_plug_construct),
        Symbol( "gtk_plug_get_type",  cast(void**)& gtk_plug_get_type),
        Symbol( "gtk_socket_steal",  cast(void**)& gtk_socket_steal),
        Symbol( "gtk_socket_get_id",  cast(void**)& gtk_socket_get_id),
        Symbol( "gtk_socket_add_id",  cast(void**)& gtk_socket_add_id),
        Symbol( "gtk_socket_new",  cast(void**)& gtk_socket_new),
        Symbol( "gtk_socket_get_type",  cast(void**)& gtk_socket_get_type),
        Symbol( "gtk_pixmap_set_build_insensitive",  cast(void**)& gtk_pixmap_set_build_insensitive),
        Symbol( "gtk_pixmap_get",  cast(void**)& gtk_pixmap_get),
        Symbol( "gtk_pixmap_set",  cast(void**)& gtk_pixmap_set),
        Symbol( "gtk_pixmap_new",  cast(void**)& gtk_pixmap_new),
        Symbol( "gtk_pixmap_get_type",  cast(void**)& gtk_pixmap_get_type),
        Symbol( "gtk_option_menu_set_history",  cast(void**)& gtk_option_menu_set_history),
        Symbol( "gtk_option_menu_get_history",  cast(void**)& gtk_option_menu_get_history),
        Symbol( "gtk_option_menu_remove_menu",  cast(void**)& gtk_option_menu_remove_menu),
        Symbol( "gtk_option_menu_set_menu",  cast(void**)& gtk_option_menu_set_menu),
        Symbol( "gtk_option_menu_get_menu",  cast(void**)& gtk_option_menu_get_menu),
        Symbol( "gtk_option_menu_new",  cast(void**)& gtk_option_menu_new),
        Symbol( "gtk_option_menu_get_type",  cast(void**)& gtk_option_menu_get_type),
        Symbol( "gtk_old_editable_changed",  cast(void**)& gtk_old_editable_changed),
        Symbol( "gtk_old_editable_claim_selection",  cast(void**)& gtk_old_editable_claim_selection),
        Symbol( "gtk_old_editable_get_type",  cast(void**)& gtk_old_editable_get_type),
        Symbol( "gtk_notebook_set_tab_detachable",  cast(void**)& gtk_notebook_set_tab_detachable),
        Symbol( "gtk_notebook_get_tab_detachable",  cast(void**)& gtk_notebook_get_tab_detachable),
        Symbol( "gtk_notebook_set_tab_reorderable",  cast(void**)& gtk_notebook_set_tab_reorderable),
        Symbol( "gtk_notebook_get_tab_reorderable",  cast(void**)& gtk_notebook_get_tab_reorderable),
        Symbol( "gtk_notebook_reorder_child",  cast(void**)& gtk_notebook_reorder_child),
        Symbol( "gtk_notebook_set_tab_label_packing",  cast(void**)& gtk_notebook_set_tab_label_packing),
        Symbol( "gtk_notebook_query_tab_label_packing",  cast(void**)& gtk_notebook_query_tab_label_packing),
        Symbol( "gtk_notebook_get_menu_label_text",  cast(void**)& gtk_notebook_get_menu_label_text),
        Symbol( "gtk_notebook_set_menu_label_text",  cast(void**)& gtk_notebook_set_menu_label_text),
        Symbol( "gtk_notebook_set_menu_label",  cast(void**)& gtk_notebook_set_menu_label),
        Symbol( "gtk_notebook_get_menu_label",  cast(void**)& gtk_notebook_get_menu_label),
        Symbol( "gtk_notebook_get_tab_label_text",  cast(void**)& gtk_notebook_get_tab_label_text),
        Symbol( "gtk_notebook_set_tab_label_text",  cast(void**)& gtk_notebook_set_tab_label_text),
        Symbol( "gtk_notebook_set_tab_label",  cast(void**)& gtk_notebook_set_tab_label),
        Symbol( "gtk_notebook_get_tab_label",  cast(void**)& gtk_notebook_get_tab_label),
        Symbol( "gtk_notebook_popup_disable",  cast(void**)& gtk_notebook_popup_disable),
        Symbol( "gtk_notebook_popup_enable",  cast(void**)& gtk_notebook_popup_enable),
        Symbol( "gtk_notebook_get_scrollable",  cast(void**)& gtk_notebook_get_scrollable),
        Symbol( "gtk_notebook_set_scrollable",  cast(void**)& gtk_notebook_set_scrollable),
        Symbol( "gtk_notebook_set_tab_vborder",  cast(void**)& gtk_notebook_set_tab_vborder),
        Symbol( "gtk_notebook_set_tab_hborder",  cast(void**)& gtk_notebook_set_tab_hborder),
        Symbol( "gtk_notebook_set_tab_border",  cast(void**)& gtk_notebook_set_tab_border),
        Symbol( "gtk_notebook_set_homogeneous_tabs",  cast(void**)& gtk_notebook_set_homogeneous_tabs),
        Symbol( "gtk_notebook_get_tab_pos",  cast(void**)& gtk_notebook_get_tab_pos),
        Symbol( "gtk_notebook_set_tab_pos",  cast(void**)& gtk_notebook_set_tab_pos),
        Symbol( "gtk_notebook_get_show_tabs",  cast(void**)& gtk_notebook_get_show_tabs),
        Symbol( "gtk_notebook_set_show_tabs",  cast(void**)& gtk_notebook_set_show_tabs),
        Symbol( "gtk_notebook_get_show_border",  cast(void**)& gtk_notebook_get_show_border),
        Symbol( "gtk_notebook_set_show_border",  cast(void**)& gtk_notebook_set_show_border),
        Symbol( "gtk_notebook_prev_page",  cast(void**)& gtk_notebook_prev_page),
        Symbol( "gtk_notebook_next_page",  cast(void**)& gtk_notebook_next_page),
        Symbol( "gtk_notebook_set_current_page",  cast(void**)& gtk_notebook_set_current_page),
        Symbol( "gtk_notebook_page_num",  cast(void**)& gtk_notebook_page_num),
        Symbol( "gtk_notebook_get_n_pages",  cast(void**)& gtk_notebook_get_n_pages),
        Symbol( "gtk_notebook_get_nth_page",  cast(void**)& gtk_notebook_get_nth_page),
        Symbol( "gtk_notebook_get_current_page",  cast(void**)& gtk_notebook_get_current_page),
        Symbol( "gtk_notebook_get_group",  cast(void**)& gtk_notebook_get_group),
        Symbol( "gtk_notebook_set_group",  cast(void**)& gtk_notebook_set_group),
        Symbol( "gtk_notebook_get_group_id",  cast(void**)& gtk_notebook_get_group_id),
        Symbol( "gtk_notebook_set_group_id",  cast(void**)& gtk_notebook_set_group_id),
        Symbol( "gtk_notebook_set_window_creation_hook",  cast(void**)& gtk_notebook_set_window_creation_hook),
        Symbol( "gtk_notebook_remove_page",  cast(void**)& gtk_notebook_remove_page),
        Symbol( "gtk_notebook_insert_page_menu",  cast(void**)& gtk_notebook_insert_page_menu),
        Symbol( "gtk_notebook_insert_page",  cast(void**)& gtk_notebook_insert_page),
        Symbol( "gtk_notebook_prepend_page_menu",  cast(void**)& gtk_notebook_prepend_page_menu),
        Symbol( "gtk_notebook_prepend_page",  cast(void**)& gtk_notebook_prepend_page),
        Symbol( "gtk_notebook_append_page_menu",  cast(void**)& gtk_notebook_append_page_menu),
        Symbol( "gtk_notebook_append_page",  cast(void**)& gtk_notebook_append_page),
        Symbol( "gtk_notebook_new",  cast(void**)& gtk_notebook_new),
        Symbol( "gtk_notebook_get_type",  cast(void**)& gtk_notebook_get_type),
    //     Symbol( "_gtk_modules_settings_changed",  cast(void**)& _gtk_modules_settings_changed),
    //     Symbol( "_gtk_modules_init",  cast(void**)& _gtk_modules_init),
    //     Symbol( "_gtk_get_module_path",  cast(void**)& _gtk_get_module_path),
    //     Symbol( "_gtk_find_module",  cast(void**)& _gtk_find_module),
        Symbol( "gtk_message_dialog_format_secondary_markup",  cast(void**)& gtk_message_dialog_format_secondary_markup),
        Symbol( "gtk_message_dialog_format_secondary_text",  cast(void**)& gtk_message_dialog_format_secondary_text),
        Symbol( "gtk_message_dialog_set_markup",  cast(void**)& gtk_message_dialog_set_markup),
        Symbol( "gtk_message_dialog_set_image",  cast(void**)& gtk_message_dialog_set_image),
        Symbol( "gtk_message_dialog_new_with_markup",  cast(void**)& gtk_message_dialog_new_with_markup),
        Symbol( "gtk_message_dialog_new",  cast(void**)& gtk_message_dialog_new),
        Symbol( "gtk_message_dialog_get_type",  cast(void**)& gtk_message_dialog_get_type),
        Symbol( "gtk_menu_tool_button_set_arrow_tooltip_markup",  cast(void**)& gtk_menu_tool_button_set_arrow_tooltip_markup),
        Symbol( "gtk_menu_tool_button_set_arrow_tooltip_text",  cast(void**)& gtk_menu_tool_button_set_arrow_tooltip_text),
        Symbol( "gtk_menu_tool_button_set_arrow_tooltip",  cast(void**)& gtk_menu_tool_button_set_arrow_tooltip),
        Symbol( "gtk_menu_tool_button_get_menu",  cast(void**)& gtk_menu_tool_button_get_menu),
        Symbol( "gtk_menu_tool_button_set_menu",  cast(void**)& gtk_menu_tool_button_set_menu),
        Symbol( "gtk_menu_tool_button_new_from_stock",  cast(void**)& gtk_menu_tool_button_new_from_stock),
        Symbol( "gtk_menu_tool_button_new",  cast(void**)& gtk_menu_tool_button_new),
        Symbol( "gtk_menu_tool_button_get_type",  cast(void**)& gtk_menu_tool_button_get_type),
    //     Symbol( "_gtk_tool_button_get_button",  cast(void**)& _gtk_tool_button_get_button),
        Symbol( "gtk_tool_button_get_label_widget",  cast(void**)& gtk_tool_button_get_label_widget),
        Symbol( "gtk_tool_button_set_label_widget",  cast(void**)& gtk_tool_button_set_label_widget),
        Symbol( "gtk_tool_button_get_icon_widget",  cast(void**)& gtk_tool_button_get_icon_widget),
        Symbol( "gtk_tool_button_set_icon_widget",  cast(void**)& gtk_tool_button_set_icon_widget),
        Symbol( "gtk_tool_button_get_icon_name",  cast(void**)& gtk_tool_button_get_icon_name),
        Symbol( "gtk_tool_button_set_icon_name",  cast(void**)& gtk_tool_button_set_icon_name),
        Symbol( "gtk_tool_button_get_stock_id",  cast(void**)& gtk_tool_button_get_stock_id),
        Symbol( "gtk_tool_button_set_stock_id",  cast(void**)& gtk_tool_button_set_stock_id),
        Symbol( "gtk_tool_button_get_use_underline",  cast(void**)& gtk_tool_button_get_use_underline),
        Symbol( "gtk_tool_button_set_use_underline",  cast(void**)& gtk_tool_button_set_use_underline),
        Symbol( "gtk_tool_button_get_label",  cast(void**)& gtk_tool_button_get_label),
        Symbol( "gtk_tool_button_set_label",  cast(void**)& gtk_tool_button_set_label),
        Symbol( "gtk_tool_button_new_from_stock",  cast(void**)& gtk_tool_button_new_from_stock),
        Symbol( "gtk_tool_button_new",  cast(void**)& gtk_tool_button_new),
        Symbol( "gtk_tool_button_get_type",  cast(void**)& gtk_tool_button_get_type),
    //     Symbol( "_gtk_tool_item_toolbar_reconfigured",  cast(void**)& _gtk_tool_item_toolbar_reconfigured),
        Symbol( "gtk_tool_item_rebuild_menu",  cast(void**)& gtk_tool_item_rebuild_menu),
        Symbol( "gtk_tool_item_set_proxy_menu_item",  cast(void**)& gtk_tool_item_set_proxy_menu_item),
        Symbol( "gtk_tool_item_get_proxy_menu_item",  cast(void**)& gtk_tool_item_get_proxy_menu_item),
        Symbol( "gtk_tool_item_retrieve_proxy_menu_item",  cast(void**)& gtk_tool_item_retrieve_proxy_menu_item),
        Symbol( "gtk_tool_item_get_relief_style",  cast(void**)& gtk_tool_item_get_relief_style),
        Symbol( "gtk_tool_item_get_toolbar_style",  cast(void**)& gtk_tool_item_get_toolbar_style),
        Symbol( "gtk_tool_item_get_orientation",  cast(void**)& gtk_tool_item_get_orientation),
        Symbol( "gtk_tool_item_get_icon_size",  cast(void**)& gtk_tool_item_get_icon_size),
        Symbol( "gtk_tool_item_set_is_important",  cast(void**)& gtk_tool_item_set_is_important),
        Symbol( "gtk_tool_item_get_is_important",  cast(void**)& gtk_tool_item_get_is_important),
        Symbol( "gtk_tool_item_get_visible_vertical",  cast(void**)& gtk_tool_item_get_visible_vertical),
        Symbol( "gtk_tool_item_set_visible_vertical",  cast(void**)& gtk_tool_item_set_visible_vertical),
        Symbol( "gtk_tool_item_get_visible_horizontal",  cast(void**)& gtk_tool_item_get_visible_horizontal),
        Symbol( "gtk_tool_item_set_visible_horizontal",  cast(void**)& gtk_tool_item_set_visible_horizontal),
        Symbol( "gtk_tool_item_get_use_drag_window",  cast(void**)& gtk_tool_item_get_use_drag_window),
        Symbol( "gtk_tool_item_set_use_drag_window",  cast(void**)& gtk_tool_item_set_use_drag_window),
        Symbol( "gtk_tool_item_set_tooltip_markup",  cast(void**)& gtk_tool_item_set_tooltip_markup),
        Symbol( "gtk_tool_item_set_tooltip_text",  cast(void**)& gtk_tool_item_set_tooltip_text),
        Symbol( "gtk_tool_item_set_tooltip",  cast(void**)& gtk_tool_item_set_tooltip),
        Symbol( "gtk_tool_item_get_expand",  cast(void**)& gtk_tool_item_get_expand),
        Symbol( "gtk_tool_item_set_expand",  cast(void**)& gtk_tool_item_set_expand),
        Symbol( "gtk_tool_item_get_homogeneous",  cast(void**)& gtk_tool_item_get_homogeneous),
        Symbol( "gtk_tool_item_set_homogeneous",  cast(void**)& gtk_tool_item_set_homogeneous),
        Symbol( "gtk_tool_item_new",  cast(void**)& gtk_tool_item_new),
        Symbol( "gtk_tool_item_get_type",  cast(void**)& gtk_tool_item_get_type),
        Symbol( "gtk_tooltips_get_info_from_tip_window",  cast(void**)& gtk_tooltips_get_info_from_tip_window),
        Symbol( "gtk_tooltips_force_window",  cast(void**)& gtk_tooltips_force_window),
        Symbol( "gtk_tooltips_data_get",  cast(void**)& gtk_tooltips_data_get),
        Symbol( "gtk_tooltips_set_tip",  cast(void**)& gtk_tooltips_set_tip),
        Symbol( "gtk_tooltips_set_delay",  cast(void**)& gtk_tooltips_set_delay),
        Symbol( "gtk_tooltips_disable",  cast(void**)& gtk_tooltips_disable),
        Symbol( "gtk_tooltips_enable",  cast(void**)& gtk_tooltips_enable),
        Symbol( "gtk_tooltips_new",  cast(void**)& gtk_tooltips_new),
        Symbol( "gtk_tooltips_get_type",  cast(void**)& gtk_tooltips_get_type),
    //     Symbol( "_gtk_menu_bar_cycle_focus",  cast(void**)& _gtk_menu_bar_cycle_focus),
        Symbol( "gtk_menu_bar_set_child_pack_direction",  cast(void**)& gtk_menu_bar_set_child_pack_direction),
        Symbol( "gtk_menu_bar_get_child_pack_direction",  cast(void**)& gtk_menu_bar_get_child_pack_direction),
        Symbol( "gtk_menu_bar_set_pack_direction",  cast(void**)& gtk_menu_bar_set_pack_direction),
        Symbol( "gtk_menu_bar_get_pack_direction",  cast(void**)& gtk_menu_bar_get_pack_direction),
        Symbol( "gtk_menu_bar_new",  cast(void**)& gtk_menu_bar_new),
        Symbol( "gtk_menu_bar_get_type",  cast(void**)& gtk_menu_bar_get_type),
    //     Symbol( "_gtk_get_lc_ctype",  cast(void**)& _gtk_get_lc_ctype),
    //     Symbol( "_gtk_boolean_handled_accumulator",  cast(void**)& _gtk_boolean_handled_accumulator),
        Symbol( "gtk_propagate_event",  cast(void**)& gtk_propagate_event),
        Symbol( "gtk_get_event_widget",  cast(void**)& gtk_get_event_widget),
        Symbol( "gtk_get_current_event_state",  cast(void**)& gtk_get_current_event_state),
        Symbol( "gtk_get_current_event_time",  cast(void**)& gtk_get_current_event_time),
        Symbol( "gtk_get_current_event",  cast(void**)& gtk_get_current_event),
        Symbol( "gtk_key_snooper_remove",  cast(void**)& gtk_key_snooper_remove),
        Symbol( "gtk_key_snooper_install",  cast(void**)& gtk_key_snooper_install),
        Symbol( "gtk_input_remove",  cast(void**)& gtk_input_remove),
        Symbol( "gtk_input_add_full",  cast(void**)& gtk_input_add_full),
        Symbol( "gtk_idle_remove_by_data",  cast(void**)& gtk_idle_remove_by_data),
        Symbol( "gtk_idle_remove",  cast(void**)& gtk_idle_remove),
        Symbol( "gtk_idle_add_full",  cast(void**)& gtk_idle_add_full),
        Symbol( "gtk_idle_add_priority",  cast(void**)& gtk_idle_add_priority),
        Symbol( "gtk_idle_add",  cast(void**)& gtk_idle_add),
        Symbol( "gtk_timeout_remove",  cast(void**)& gtk_timeout_remove),
        Symbol( "gtk_timeout_add_full",  cast(void**)& gtk_timeout_add_full),
        Symbol( "gtk_timeout_add",  cast(void**)& gtk_timeout_add),
        Symbol( "gtk_quit_remove_by_data",  cast(void**)& gtk_quit_remove_by_data),
        Symbol( "gtk_quit_remove",  cast(void**)& gtk_quit_remove),
        Symbol( "gtk_quit_add_full",  cast(void**)& gtk_quit_add_full),
        Symbol( "gtk_quit_add",  cast(void**)& gtk_quit_add),
        Symbol( "gtk_quit_add_destroy",  cast(void**)& gtk_quit_add_destroy),
        Symbol( "gtk_init_add",  cast(void**)& gtk_init_add),
        Symbol( "gtk_grab_remove",  cast(void**)& gtk_grab_remove),
        Symbol( "gtk_grab_get_current",  cast(void**)& gtk_grab_get_current),
        Symbol( "gtk_grab_add",  cast(void**)& gtk_grab_add),
        Symbol( "gtk_false",  cast(void**)& gtk_false),
        Symbol( "gtk_true",  cast(void**)& gtk_true),
        Symbol( "gtk_main_iteration_do",  cast(void**)& gtk_main_iteration_do),
        Symbol( "gtk_main_iteration",  cast(void**)& gtk_main_iteration),
        Symbol( "gtk_main_quit",  cast(void**)& gtk_main_quit),
        Symbol( "gtk_main_level",  cast(void**)& gtk_main_level),
        Symbol( "gtk_main",  cast(void**)& gtk_main),
        Symbol( "gtk_main_do_event",  cast(void**)& gtk_main_do_event),
        Symbol( "gtk_events_pending",  cast(void**)& gtk_events_pending),
        Symbol( "gtk_get_default_language",  cast(void**)& gtk_get_default_language),
        //Symbol( "gtk_set_locale",  cast(void**)& gtk_set_locale),
        Symbol( "gtk_disable_setlocale",  cast(void**)& gtk_disable_setlocale),
        Symbol( "gtk_exit",  cast(void**)& gtk_exit),
        Symbol( "gtk_get_option_group",  cast(void**)& gtk_get_option_group),
        Symbol( "gtk_init_with_args",  cast(void**)& gtk_init_with_args),
        //Symbol( "gtk_init_check",  cast(void**)& gtk_init_check),
        Symbol( "gtk_init",  cast(void**)& gtk_init),
        Symbol( "gtk_parse_args",  cast(void**)& gtk_parse_args),
        Symbol( "gtk_check_version",  cast(void**)& gtk_check_version),
    //     Symbol( "gtk_interface_age",  cast(void**)& gtk_interface_age),
    //     Symbol( "gtk_binary_age",  cast(void**)& gtk_binary_age),
    //     Symbol( "gtk_micro_version",  cast(void**)& gtk_micro_version),
    //     Symbol( "gtk_minor_version",  cast(void**)& gtk_minor_version),
    //     Symbol( "gtk_major_version",  cast(void**)& gtk_major_version),
        Symbol( "gtk_list_end_drag_selection",  cast(void**)& gtk_list_end_drag_selection),
        Symbol( "gtk_list_undo_selection",  cast(void**)& gtk_list_undo_selection),
        Symbol( "gtk_list_toggle_row",  cast(void**)& gtk_list_toggle_row),
        Symbol( "gtk_list_toggle_focus_row",  cast(void**)& gtk_list_toggle_focus_row),
        Symbol( "gtk_list_toggle_add_mode",  cast(void**)& gtk_list_toggle_add_mode),
        Symbol( "gtk_list_scroll_vertical",  cast(void**)& gtk_list_scroll_vertical),
        Symbol( "gtk_list_scroll_horizontal",  cast(void**)& gtk_list_scroll_horizontal),
        Symbol( "gtk_list_unselect_all",  cast(void**)& gtk_list_unselect_all),
        Symbol( "gtk_list_select_all",  cast(void**)& gtk_list_select_all),
        Symbol( "gtk_list_end_selection",  cast(void**)& gtk_list_end_selection),
        Symbol( "gtk_list_start_selection",  cast(void**)& gtk_list_start_selection),
        Symbol( "gtk_list_extend_selection",  cast(void**)& gtk_list_extend_selection),
        Symbol( "gtk_list_set_selection_mode",  cast(void**)& gtk_list_set_selection_mode),
        Symbol( "gtk_list_child_position",  cast(void**)& gtk_list_child_position),
        Symbol( "gtk_list_unselect_child",  cast(void**)& gtk_list_unselect_child),
        Symbol( "gtk_list_select_child",  cast(void**)& gtk_list_select_child),
        Symbol( "gtk_list_unselect_item",  cast(void**)& gtk_list_unselect_item),
        Symbol( "gtk_list_select_item",  cast(void**)& gtk_list_select_item),
        Symbol( "gtk_list_clear_items",  cast(void**)& gtk_list_clear_items),
        Symbol( "gtk_list_remove_items_no_unref",  cast(void**)& gtk_list_remove_items_no_unref),
        Symbol( "gtk_list_remove_items",  cast(void**)& gtk_list_remove_items),
        Symbol( "gtk_list_prepend_items",  cast(void**)& gtk_list_prepend_items),
        Symbol( "gtk_list_append_items",  cast(void**)& gtk_list_append_items),
        Symbol( "gtk_list_insert_items",  cast(void**)& gtk_list_insert_items),
        Symbol( "gtk_list_new",  cast(void**)& gtk_list_new),
        Symbol( "gtk_list_get_type",  cast(void**)& gtk_list_get_type),
        Symbol( "gtk_list_item_deselect",  cast(void**)& gtk_list_item_deselect),
        Symbol( "gtk_list_item_select",  cast(void**)& gtk_list_item_select),
        Symbol( "gtk_list_item_new_with_label",  cast(void**)& gtk_list_item_new_with_label),
        Symbol( "gtk_list_item_new",  cast(void**)& gtk_list_item_new),
        Symbol( "gtk_list_item_get_type",  cast(void**)& gtk_list_item_get_type),
        Symbol( "gtk_link_button_set_uri_hook",  cast(void**)& gtk_link_button_set_uri_hook),
        Symbol( "gtk_link_button_set_uri",  cast(void**)& gtk_link_button_set_uri),
        Symbol( "gtk_link_button_get_uri",  cast(void**)& gtk_link_button_get_uri),
        Symbol( "gtk_link_button_new_with_label",  cast(void**)& gtk_link_button_new_with_label),
        Symbol( "gtk_link_button_new",  cast(void**)& gtk_link_button_new),
        Symbol( "gtk_link_button_get_type",  cast(void**)& gtk_link_button_get_type),
        Symbol( "gtk_layout_thaw",  cast(void**)& gtk_layout_thaw),
        Symbol( "gtk_layout_freeze",  cast(void**)& gtk_layout_freeze),
        Symbol( "gtk_layout_set_vadjustment",  cast(void**)& gtk_layout_set_vadjustment),
        Symbol( "gtk_layout_set_hadjustment",  cast(void**)& gtk_layout_set_hadjustment),
        Symbol( "gtk_layout_get_vadjustment",  cast(void**)& gtk_layout_get_vadjustment),
        Symbol( "gtk_layout_get_hadjustment",  cast(void**)& gtk_layout_get_hadjustment),
        Symbol( "gtk_layout_get_size",  cast(void**)& gtk_layout_get_size),
        Symbol( "gtk_layout_set_size",  cast(void**)& gtk_layout_set_size),
        Symbol( "gtk_layout_move",  cast(void**)& gtk_layout_move),
        Symbol( "gtk_layout_put",  cast(void**)& gtk_layout_put),
        Symbol( "gtk_layout_new",  cast(void**)& gtk_layout_new),
        Symbol( "gtk_layout_get_type",  cast(void**)& gtk_layout_get_type),
        Symbol( "gtk_invisible_get_screen",  cast(void**)& gtk_invisible_get_screen),
        Symbol( "gtk_invisible_set_screen",  cast(void**)& gtk_invisible_set_screen),
        Symbol( "gtk_invisible_new_for_screen",  cast(void**)& gtk_invisible_new_for_screen),
        Symbol( "gtk_invisible_new",  cast(void**)& gtk_invisible_new),
        Symbol( "gtk_invisible_get_type",  cast(void**)& gtk_invisible_get_type),
        Symbol( "gtk_input_dialog_new",  cast(void**)& gtk_input_dialog_new),
        Symbol( "gtk_input_dialog_get_type",  cast(void**)& gtk_input_dialog_get_type),
        Symbol( "gtk_im_multicontext_append_menuitems",  cast(void**)& gtk_im_multicontext_append_menuitems),
        Symbol( "gtk_im_multicontext_new",  cast(void**)& gtk_im_multicontext_new),
        Symbol( "gtk_im_multicontext_get_type",  cast(void**)& gtk_im_multicontext_get_type),
        Symbol( "gtk_im_context_simple_add_table",  cast(void**)& gtk_im_context_simple_add_table),
        Symbol( "gtk_im_context_simple_new",  cast(void**)& gtk_im_context_simple_new),
        Symbol( "gtk_im_context_simple_get_type",  cast(void**)& gtk_im_context_simple_get_type),
        Symbol( "gtk_image_menu_item_get_image",  cast(void**)& gtk_image_menu_item_get_image),
        Symbol( "gtk_image_menu_item_set_image",  cast(void**)& gtk_image_menu_item_set_image),
        Symbol( "gtk_image_menu_item_new_from_stock",  cast(void**)& gtk_image_menu_item_new_from_stock),
        Symbol( "gtk_image_menu_item_new_with_mnemonic",  cast(void**)& gtk_image_menu_item_new_with_mnemonic),
        Symbol( "gtk_image_menu_item_new_with_label",  cast(void**)& gtk_image_menu_item_new_with_label),
        Symbol( "gtk_image_menu_item_new",  cast(void**)& gtk_image_menu_item_new),
        Symbol( "gtk_image_menu_item_get_type",  cast(void**)& gtk_image_menu_item_get_type),
        Symbol( "gtk_icon_view_get_tooltip_column",  cast(void**)& gtk_icon_view_get_tooltip_column),
        Symbol( "gtk_icon_view_set_tooltip_column",  cast(void**)& gtk_icon_view_set_tooltip_column),
        Symbol( "gtk_icon_view_get_tooltip_context",  cast(void**)& gtk_icon_view_get_tooltip_context),
        Symbol( "gtk_icon_view_set_tooltip_cell",  cast(void**)& gtk_icon_view_set_tooltip_cell),
        Symbol( "gtk_icon_view_set_tooltip_item",  cast(void**)& gtk_icon_view_set_tooltip_item),
        Symbol( "gtk_icon_view_convert_widget_to_bin_window_coords",  cast(void**)& gtk_icon_view_convert_widget_to_bin_window_coords),
        Symbol( "gtk_icon_view_create_drag_icon",  cast(void**)& gtk_icon_view_create_drag_icon),
        Symbol( "gtk_icon_view_get_dest_item_at_pos",  cast(void**)& gtk_icon_view_get_dest_item_at_pos),
        Symbol( "gtk_icon_view_get_drag_dest_item",  cast(void**)& gtk_icon_view_get_drag_dest_item),
        Symbol( "gtk_icon_view_set_drag_dest_item",  cast(void**)& gtk_icon_view_set_drag_dest_item),
        Symbol( "gtk_icon_view_get_reorderable",  cast(void**)& gtk_icon_view_get_reorderable),
        Symbol( "gtk_icon_view_set_reorderable",  cast(void**)& gtk_icon_view_set_reorderable),
        Symbol( "gtk_icon_view_unset_model_drag_dest",  cast(void**)& gtk_icon_view_unset_model_drag_dest),
        Symbol( "gtk_icon_view_unset_model_drag_source",  cast(void**)& gtk_icon_view_unset_model_drag_source),
        Symbol( "gtk_icon_view_enable_model_drag_dest",  cast(void**)& gtk_icon_view_enable_model_drag_dest),
        Symbol( "gtk_icon_view_enable_model_drag_source",  cast(void**)& gtk_icon_view_enable_model_drag_source),
        Symbol( "gtk_icon_view_scroll_to_path",  cast(void**)& gtk_icon_view_scroll_to_path),
        Symbol( "gtk_icon_view_get_cursor",  cast(void**)& gtk_icon_view_get_cursor),
        Symbol( "gtk_icon_view_set_cursor",  cast(void**)& gtk_icon_view_set_cursor),
        Symbol( "gtk_icon_view_item_activated",  cast(void**)& gtk_icon_view_item_activated),
        Symbol( "gtk_icon_view_unselect_all",  cast(void**)& gtk_icon_view_unselect_all),
        Symbol( "gtk_icon_view_select_all",  cast(void**)& gtk_icon_view_select_all),
        Symbol( "gtk_icon_view_get_selected_items",  cast(void**)& gtk_icon_view_get_selected_items),
        Symbol( "gtk_icon_view_path_is_selected",  cast(void**)& gtk_icon_view_path_is_selected),
        Symbol( "gtk_icon_view_unselect_path",  cast(void**)& gtk_icon_view_unselect_path),
        Symbol( "gtk_icon_view_select_path",  cast(void**)& gtk_icon_view_select_path),
        Symbol( "gtk_icon_view_get_selection_mode",  cast(void**)& gtk_icon_view_get_selection_mode),
        Symbol( "gtk_icon_view_set_selection_mode",  cast(void**)& gtk_icon_view_set_selection_mode),
        Symbol( "gtk_icon_view_selected_foreach",  cast(void**)& gtk_icon_view_selected_foreach),
        Symbol( "gtk_icon_view_get_visible_range",  cast(void**)& gtk_icon_view_get_visible_range),
        Symbol( "gtk_icon_view_get_item_at_pos",  cast(void**)& gtk_icon_view_get_item_at_pos),
        Symbol( "gtk_icon_view_get_path_at_pos",  cast(void**)& gtk_icon_view_get_path_at_pos),
        Symbol( "gtk_icon_view_get_margin",  cast(void**)& gtk_icon_view_get_margin),
        Symbol( "gtk_icon_view_set_margin",  cast(void**)& gtk_icon_view_set_margin),
        Symbol( "gtk_icon_view_get_column_spacing",  cast(void**)& gtk_icon_view_get_column_spacing),
        Symbol( "gtk_icon_view_set_column_spacing",  cast(void**)& gtk_icon_view_set_column_spacing),
        Symbol( "gtk_icon_view_get_row_spacing",  cast(void**)& gtk_icon_view_get_row_spacing),
        Symbol( "gtk_icon_view_set_row_spacing",  cast(void**)& gtk_icon_view_set_row_spacing),
        Symbol( "gtk_icon_view_get_spacing",  cast(void**)& gtk_icon_view_get_spacing),
        Symbol( "gtk_icon_view_set_spacing",  cast(void**)& gtk_icon_view_set_spacing),
        Symbol( "gtk_icon_view_get_item_width",  cast(void**)& gtk_icon_view_get_item_width),
        Symbol( "gtk_icon_view_set_item_width",  cast(void**)& gtk_icon_view_set_item_width),
        Symbol( "gtk_icon_view_get_columns",  cast(void**)& gtk_icon_view_get_columns),
        Symbol( "gtk_icon_view_set_columns",  cast(void**)& gtk_icon_view_set_columns),
        Symbol( "gtk_icon_view_get_orientation",  cast(void**)& gtk_icon_view_get_orientation),
        Symbol( "gtk_icon_view_set_orientation",  cast(void**)& gtk_icon_view_set_orientation),
        Symbol( "gtk_icon_view_get_pixbuf_column",  cast(void**)& gtk_icon_view_get_pixbuf_column),
        Symbol( "gtk_icon_view_set_pixbuf_column",  cast(void**)& gtk_icon_view_set_pixbuf_column),
        Symbol( "gtk_icon_view_get_markup_column",  cast(void**)& gtk_icon_view_get_markup_column),
        Symbol( "gtk_icon_view_set_markup_column",  cast(void**)& gtk_icon_view_set_markup_column),
        Symbol( "gtk_icon_view_get_text_column",  cast(void**)& gtk_icon_view_get_text_column),
        Symbol( "gtk_icon_view_set_text_column",  cast(void**)& gtk_icon_view_set_text_column),
        Symbol( "gtk_icon_view_get_model",  cast(void**)& gtk_icon_view_get_model),
        Symbol( "gtk_icon_view_set_model",  cast(void**)& gtk_icon_view_set_model),
        Symbol( "gtk_icon_view_new_with_model",  cast(void**)& gtk_icon_view_new_with_model),
        Symbol( "gtk_icon_view_new",  cast(void**)& gtk_icon_view_new),
        Symbol( "gtk_icon_view_get_type",  cast(void**)& gtk_icon_view_get_type),
    //     Symbol( "_gtk_tooltip_hide",  cast(void**)& _gtk_tooltip_hide),
    //     Symbol( "_gtk_tooltip_handle_event",  cast(void**)& _gtk_tooltip_handle_event),
    //     Symbol( "_gtk_tooltip_toggle_keyboard_mode",  cast(void**)& _gtk_tooltip_toggle_keyboard_mode),
    //     Symbol( "_gtk_tooltip_focus_out",  cast(void**)& _gtk_tooltip_focus_out),
    //     Symbol( "_gtk_tooltip_focus_in",  cast(void**)& _gtk_tooltip_focus_in),
        Symbol( "gtk_tooltip_trigger_tooltip_query",  cast(void**)& gtk_tooltip_trigger_tooltip_query),
        Symbol( "gtk_tooltip_set_tip_area",  cast(void**)& gtk_tooltip_set_tip_area),
        Symbol( "gtk_tooltip_set_custom",  cast(void**)& gtk_tooltip_set_custom),
        Symbol( "gtk_tooltip_set_icon_from_stock",  cast(void**)& gtk_tooltip_set_icon_from_stock),
        Symbol( "gtk_tooltip_set_icon",  cast(void**)& gtk_tooltip_set_icon),
        Symbol( "gtk_tooltip_set_text",  cast(void**)& gtk_tooltip_set_text),
        Symbol( "gtk_tooltip_set_markup",  cast(void**)& gtk_tooltip_set_markup),
        Symbol( "gtk_tooltip_get_type",  cast(void**)& gtk_tooltip_get_type),
    //     Symbol( "_gtk_icon_theme_ensure_builtin_cache",  cast(void**)& _gtk_icon_theme_ensure_builtin_cache),
    //     Symbol( "_gtk_icon_theme_check_reload",  cast(void**)& _gtk_icon_theme_check_reload),
        Symbol( "gtk_icon_info_get_display_name",  cast(void**)& gtk_icon_info_get_display_name),
        Symbol( "gtk_icon_info_get_attach_points",  cast(void**)& gtk_icon_info_get_attach_points),
        Symbol( "gtk_icon_info_get_embedded_rect",  cast(void**)& gtk_icon_info_get_embedded_rect),
        Symbol( "gtk_icon_info_set_raw_coordinates",  cast(void**)& gtk_icon_info_set_raw_coordinates),
        Symbol( "gtk_icon_info_load_icon",  cast(void**)& gtk_icon_info_load_icon),
        Symbol( "gtk_icon_info_get_builtin_pixbuf",  cast(void**)& gtk_icon_info_get_builtin_pixbuf),
        Symbol( "gtk_icon_info_get_filename",  cast(void**)& gtk_icon_info_get_filename),
        Symbol( "gtk_icon_info_get_base_size",  cast(void**)& gtk_icon_info_get_base_size),
        Symbol( "gtk_icon_info_free",  cast(void**)& gtk_icon_info_free),
        Symbol( "gtk_icon_info_copy",  cast(void**)& gtk_icon_info_copy),
        Symbol( "gtk_icon_info_get_type",  cast(void**)& gtk_icon_info_get_type),
        Symbol( "gtk_icon_theme_add_builtin_icon",  cast(void**)& gtk_icon_theme_add_builtin_icon),
        Symbol( "gtk_icon_theme_rescan_if_needed",  cast(void**)& gtk_icon_theme_rescan_if_needed),
        Symbol( "gtk_icon_theme_get_example_icon_name",  cast(void**)& gtk_icon_theme_get_example_icon_name),
        Symbol( "gtk_icon_theme_list_contexts",  cast(void**)& gtk_icon_theme_list_contexts),
        Symbol( "gtk_icon_theme_list_icons",  cast(void**)& gtk_icon_theme_list_icons),
        Symbol( "gtk_icon_theme_load_icon",  cast(void**)& gtk_icon_theme_load_icon),
        Symbol( "gtk_icon_theme_choose_icon",  cast(void**)& gtk_icon_theme_choose_icon),
        Symbol( "gtk_icon_theme_lookup_icon",  cast(void**)& gtk_icon_theme_lookup_icon),
        Symbol( "gtk_icon_theme_get_icon_sizes",  cast(void**)& gtk_icon_theme_get_icon_sizes),
        Symbol( "gtk_icon_theme_has_icon",  cast(void**)& gtk_icon_theme_has_icon),
        Symbol( "gtk_icon_theme_set_custom_theme",  cast(void**)& gtk_icon_theme_set_custom_theme),
        Symbol( "gtk_icon_theme_prepend_search_path",  cast(void**)& gtk_icon_theme_prepend_search_path),
        Symbol( "gtk_icon_theme_append_search_path",  cast(void**)& gtk_icon_theme_append_search_path),
        Symbol( "gtk_icon_theme_get_search_path",  cast(void**)& gtk_icon_theme_get_search_path),
        Symbol( "gtk_icon_theme_set_search_path",  cast(void**)& gtk_icon_theme_set_search_path),
        Symbol( "gtk_icon_theme_set_screen",  cast(void**)& gtk_icon_theme_set_screen),
        Symbol( "gtk_icon_theme_get_for_screen",  cast(void**)& gtk_icon_theme_get_for_screen),
        Symbol( "gtk_icon_theme_get_default",  cast(void**)& gtk_icon_theme_get_default),
        Symbol( "gtk_icon_theme_new",  cast(void**)& gtk_icon_theme_new),
        Symbol( "gtk_icon_theme_get_type",  cast(void**)& gtk_icon_theme_get_type),
        Symbol( "gtk_icon_theme_error_quark",  cast(void**)& gtk_icon_theme_error_quark),
    //     Symbol( "_gtk_icon_factory_ensure_default_icons",  cast(void**)& _gtk_icon_factory_ensure_default_icons),
    //     Symbol( "_gtk_icon_factory_list_ids",  cast(void**)& _gtk_icon_factory_list_ids),
    //     Symbol( "_gtk_icon_set_invalidate_caches",  cast(void**)& _gtk_icon_set_invalidate_caches),
        Symbol( "gtk_icon_source_get_size",  cast(void**)& gtk_icon_source_get_size),
        Symbol( "gtk_icon_source_get_state",  cast(void**)& gtk_icon_source_get_state),
        Symbol( "gtk_icon_source_get_direction",  cast(void**)& gtk_icon_source_get_direction),
        Symbol( "gtk_icon_source_set_size",  cast(void**)& gtk_icon_source_set_size),
        Symbol( "gtk_icon_source_set_state",  cast(void**)& gtk_icon_source_set_state),
        Symbol( "gtk_icon_source_set_direction",  cast(void**)& gtk_icon_source_set_direction),
        Symbol( "gtk_icon_source_get_direction_wildcarded",  cast(void**)& gtk_icon_source_get_direction_wildcarded),
        Symbol( "gtk_icon_source_get_state_wildcarded",  cast(void**)& gtk_icon_source_get_state_wildcarded),
        Symbol( "gtk_icon_source_get_size_wildcarded",  cast(void**)& gtk_icon_source_get_size_wildcarded),
        Symbol( "gtk_icon_source_set_size_wildcarded",  cast(void**)& gtk_icon_source_set_size_wildcarded),
        Symbol( "gtk_icon_source_set_state_wildcarded",  cast(void**)& gtk_icon_source_set_state_wildcarded),
        Symbol( "gtk_icon_source_set_direction_wildcarded",  cast(void**)& gtk_icon_source_set_direction_wildcarded),
        Symbol( "gtk_icon_source_get_pixbuf",  cast(void**)& gtk_icon_source_get_pixbuf),
        Symbol( "gtk_icon_source_get_icon_name",  cast(void**)& gtk_icon_source_get_icon_name),
        Symbol( "gtk_icon_source_get_filename",  cast(void**)& gtk_icon_source_get_filename),
        Symbol( "gtk_icon_source_set_pixbuf",  cast(void**)& gtk_icon_source_set_pixbuf),
        Symbol( "gtk_icon_source_set_icon_name",  cast(void**)& gtk_icon_source_set_icon_name),
        Symbol( "gtk_icon_source_set_filename",  cast(void**)& gtk_icon_source_set_filename),
        Symbol( "gtk_icon_source_free",  cast(void**)& gtk_icon_source_free),
        Symbol( "gtk_icon_source_copy",  cast(void**)& gtk_icon_source_copy),
        Symbol( "gtk_icon_source_new",  cast(void**)& gtk_icon_source_new),
        Symbol( "gtk_icon_source_get_type",  cast(void**)& gtk_icon_source_get_type),
        Symbol( "gtk_icon_set_get_sizes",  cast(void**)& gtk_icon_set_get_sizes),
        Symbol( "gtk_icon_set_add_source",  cast(void**)& gtk_icon_set_add_source),
        Symbol( "gtk_icon_set_render_icon",  cast(void**)& gtk_icon_set_render_icon),
        Symbol( "gtk_icon_set_copy",  cast(void**)& gtk_icon_set_copy),
        Symbol( "gtk_icon_set_unref",  cast(void**)& gtk_icon_set_unref),
        Symbol( "gtk_icon_set_ref",  cast(void**)& gtk_icon_set_ref),
        Symbol( "gtk_icon_set_new_from_pixbuf",  cast(void**)& gtk_icon_set_new_from_pixbuf),
        Symbol( "gtk_icon_set_new",  cast(void**)& gtk_icon_set_new),
        Symbol( "gtk_icon_set_get_type",  cast(void**)& gtk_icon_set_get_type),
        Symbol( "gtk_icon_size_get_name",  cast(void**)& gtk_icon_size_get_name),
        Symbol( "gtk_icon_size_from_name",  cast(void**)& gtk_icon_size_from_name),
        Symbol( "gtk_icon_size_register_alias",  cast(void**)& gtk_icon_size_register_alias),
        Symbol( "gtk_icon_size_register",  cast(void**)& gtk_icon_size_register),
        Symbol( "gtk_icon_size_lookup_for_settings",  cast(void**)& gtk_icon_size_lookup_for_settings),
        Symbol( "gtk_icon_size_lookup",  cast(void**)& gtk_icon_size_lookup),
        Symbol( "gtk_icon_factory_lookup_default",  cast(void**)& gtk_icon_factory_lookup_default),
        Symbol( "gtk_icon_factory_remove_default",  cast(void**)& gtk_icon_factory_remove_default),
        Symbol( "gtk_icon_factory_add_default",  cast(void**)& gtk_icon_factory_add_default),
        Symbol( "gtk_icon_factory_lookup",  cast(void**)& gtk_icon_factory_lookup),
        Symbol( "gtk_icon_factory_add",  cast(void**)& gtk_icon_factory_add),
        Symbol( "gtk_icon_factory_new",  cast(void**)& gtk_icon_factory_new),
        Symbol( "gtk_icon_factory_get_type",  cast(void**)& gtk_icon_factory_get_type),
        Symbol( "gtk_hseparator_new",  cast(void**)& gtk_hseparator_new),
        Symbol( "gtk_hseparator_get_type",  cast(void**)& gtk_hseparator_get_type),
        Symbol( "gtk_separator_get_type",  cast(void**)& gtk_separator_get_type),
        Symbol( "gtk_hscale_new_with_range",  cast(void**)& gtk_hscale_new_with_range),
        Symbol( "gtk_hscale_new",  cast(void**)& gtk_hscale_new),
        Symbol( "gtk_hscale_get_type",  cast(void**)& gtk_hscale_get_type),
    //     Symbol( "_gtk_scale_format_value",  cast(void**)& _gtk_scale_format_value),
    //     Symbol( "_gtk_scale_get_value_size",  cast(void**)& _gtk_scale_get_value_size),
    //     Symbol( "_gtk_scale_clear_layout",  cast(void**)& _gtk_scale_clear_layout),
        Symbol( "gtk_scale_get_layout_offsets",  cast(void**)& gtk_scale_get_layout_offsets),
        Symbol( "gtk_scale_get_layout",  cast(void**)& gtk_scale_get_layout),
        Symbol( "gtk_scale_get_value_pos",  cast(void**)& gtk_scale_get_value_pos),
        Symbol( "gtk_scale_set_value_pos",  cast(void**)& gtk_scale_set_value_pos),
        Symbol( "gtk_scale_get_draw_value",  cast(void**)& gtk_scale_get_draw_value),
        Symbol( "gtk_scale_set_draw_value",  cast(void**)& gtk_scale_set_draw_value),
        Symbol( "gtk_scale_get_digits",  cast(void**)& gtk_scale_get_digits),
        Symbol( "gtk_scale_set_digits",  cast(void**)& gtk_scale_set_digits),
        Symbol( "gtk_scale_get_type",  cast(void**)& gtk_scale_get_type),
        Symbol( "gtk_hruler_new",  cast(void**)& gtk_hruler_new),
        Symbol( "gtk_hruler_get_type",  cast(void**)& gtk_hruler_get_type),
        Symbol( "gtk_ruler_get_range",  cast(void**)& gtk_ruler_get_range),
        Symbol( "gtk_ruler_get_metric",  cast(void**)& gtk_ruler_get_metric),
        Symbol( "gtk_ruler_draw_pos",  cast(void**)& gtk_ruler_draw_pos),
        Symbol( "gtk_ruler_draw_ticks",  cast(void**)& gtk_ruler_draw_ticks),
        Symbol( "gtk_ruler_set_range",  cast(void**)& gtk_ruler_set_range),
        Symbol( "gtk_ruler_set_metric",  cast(void**)& gtk_ruler_set_metric),
        Symbol( "gtk_ruler_get_type",  cast(void**)& gtk_ruler_get_type),
        Symbol( "gtk_hpaned_new",  cast(void**)& gtk_hpaned_new),
        Symbol( "gtk_hpaned_get_type",  cast(void**)& gtk_hpaned_get_type),
        Symbol( "gtk_paned_compute_position",  cast(void**)& gtk_paned_compute_position),
        Symbol( "gtk_paned_get_child2",  cast(void**)& gtk_paned_get_child2),
        Symbol( "gtk_paned_get_child1",  cast(void**)& gtk_paned_get_child1),
        Symbol( "gtk_paned_set_position",  cast(void**)& gtk_paned_set_position),
        Symbol( "gtk_paned_get_position",  cast(void**)& gtk_paned_get_position),
        Symbol( "gtk_paned_pack2",  cast(void**)& gtk_paned_pack2),
        Symbol( "gtk_paned_pack1",  cast(void**)& gtk_paned_pack1),
        Symbol( "gtk_paned_add2",  cast(void**)& gtk_paned_add2),
        Symbol( "gtk_paned_add1",  cast(void**)& gtk_paned_add1),
        Symbol( "gtk_paned_get_type",  cast(void**)& gtk_paned_get_type),
        Symbol( "gtk_hbutton_box_set_layout_default",  cast(void**)& gtk_hbutton_box_set_layout_default),
        Symbol( "gtk_hbutton_box_set_spacing_default",  cast(void**)& gtk_hbutton_box_set_spacing_default),
        Symbol( "gtk_hbutton_box_get_layout_default",  cast(void**)& gtk_hbutton_box_get_layout_default),
        Symbol( "gtk_hbutton_box_get_spacing_default",  cast(void**)& gtk_hbutton_box_get_spacing_default),
        Symbol( "gtk_hbutton_box_new",  cast(void**)& gtk_hbutton_box_new),
        Symbol( "gtk_hbutton_box_get_type",  cast(void**)& gtk_hbutton_box_get_type),
        Symbol( "gtk_handle_box_get_snap_edge",  cast(void**)& gtk_handle_box_get_snap_edge),
        Symbol( "gtk_handle_box_set_snap_edge",  cast(void**)& gtk_handle_box_set_snap_edge),
        Symbol( "gtk_handle_box_get_handle_position",  cast(void**)& gtk_handle_box_get_handle_position),
        Symbol( "gtk_handle_box_set_handle_position",  cast(void**)& gtk_handle_box_set_handle_position),
        Symbol( "gtk_handle_box_get_shadow_type",  cast(void**)& gtk_handle_box_get_shadow_type),
        Symbol( "gtk_handle_box_set_shadow_type",  cast(void**)& gtk_handle_box_set_shadow_type),
        Symbol( "gtk_handle_box_new",  cast(void**)& gtk_handle_box_new),
        Symbol( "gtk_handle_box_get_type",  cast(void**)& gtk_handle_box_get_type),
        Symbol( "gtk_gc_release",  cast(void**)& gtk_gc_release),
        Symbol( "gtk_gc_get",  cast(void**)& gtk_gc_get),
        Symbol( "gtk_gamma_curve_new",  cast(void**)& gtk_gamma_curve_new),
        Symbol( "gtk_gamma_curve_get_type",  cast(void**)& gtk_gamma_curve_get_type),
        Symbol( "gtk_font_selection_dialog_set_preview_text",  cast(void**)& gtk_font_selection_dialog_set_preview_text),
        Symbol( "gtk_font_selection_dialog_get_preview_text",  cast(void**)& gtk_font_selection_dialog_get_preview_text),
        Symbol( "gtk_font_selection_dialog_set_font_name",  cast(void**)& gtk_font_selection_dialog_set_font_name),
        Symbol( "gtk_font_selection_dialog_get_font",  cast(void**)& gtk_font_selection_dialog_get_font),
        Symbol( "gtk_font_selection_dialog_get_font_name",  cast(void**)& gtk_font_selection_dialog_get_font_name),
        Symbol( "gtk_font_selection_dialog_new",  cast(void**)& gtk_font_selection_dialog_new),
        Symbol( "gtk_font_selection_dialog_get_type",  cast(void**)& gtk_font_selection_dialog_get_type),
        Symbol( "gtk_font_selection_set_preview_text",  cast(void**)& gtk_font_selection_set_preview_text),
        Symbol( "gtk_font_selection_get_preview_text",  cast(void**)& gtk_font_selection_get_preview_text),
        Symbol( "gtk_font_selection_set_font_name",  cast(void**)& gtk_font_selection_set_font_name),
        Symbol( "gtk_font_selection_get_font",  cast(void**)& gtk_font_selection_get_font),
        Symbol( "gtk_font_selection_get_font_name",  cast(void**)& gtk_font_selection_get_font_name),
        Symbol( "gtk_font_selection_new",  cast(void**)& gtk_font_selection_new),
        Symbol( "gtk_font_selection_get_type",  cast(void**)& gtk_font_selection_get_type),
        Symbol( "gtk_font_button_set_show_size",  cast(void**)& gtk_font_button_set_show_size),
        Symbol( "gtk_font_button_get_show_size",  cast(void**)& gtk_font_button_get_show_size),
        Symbol( "gtk_font_button_set_show_style",  cast(void**)& gtk_font_button_set_show_style),
        Symbol( "gtk_font_button_get_show_style",  cast(void**)& gtk_font_button_get_show_style),
        Symbol( "gtk_font_button_set_font_name",  cast(void**)& gtk_font_button_set_font_name),
        Symbol( "gtk_font_button_get_font_name",  cast(void**)& gtk_font_button_get_font_name),
        Symbol( "gtk_font_button_set_use_size",  cast(void**)& gtk_font_button_set_use_size),
        Symbol( "gtk_font_button_get_use_size",  cast(void**)& gtk_font_button_get_use_size),
        Symbol( "gtk_font_button_set_use_font",  cast(void**)& gtk_font_button_set_use_font),
        Symbol( "gtk_font_button_get_use_font",  cast(void**)& gtk_font_button_get_use_font),
        Symbol( "gtk_font_button_set_title",  cast(void**)& gtk_font_button_set_title),
        Symbol( "gtk_font_button_get_title",  cast(void**)& gtk_font_button_get_title),
        Symbol( "gtk_font_button_new_with_font",  cast(void**)& gtk_font_button_new_with_font),
        Symbol( "gtk_font_button_new",  cast(void**)& gtk_font_button_new),
        Symbol( "gtk_font_button_get_type",  cast(void**)& gtk_font_button_get_type),
        Symbol( "gtk_file_chooser_widget_new_with_backend",  cast(void**)& gtk_file_chooser_widget_new_with_backend),
        Symbol( "gtk_file_chooser_widget_new",  cast(void**)& gtk_file_chooser_widget_new),
        Symbol( "gtk_file_chooser_widget_get_type",  cast(void**)& gtk_file_chooser_widget_get_type),
        Symbol( "gtk_file_chooser_dialog_new_with_backend",  cast(void**)& gtk_file_chooser_dialog_new_with_backend),
        Symbol( "gtk_file_chooser_dialog_new",  cast(void**)& gtk_file_chooser_dialog_new),
        Symbol( "gtk_file_chooser_dialog_get_type",  cast(void**)& gtk_file_chooser_dialog_get_type),
        Symbol( "gtk_file_chooser_button_set_focus_on_click",  cast(void**)& gtk_file_chooser_button_set_focus_on_click),
        Symbol( "gtk_file_chooser_button_get_focus_on_click",  cast(void**)& gtk_file_chooser_button_get_focus_on_click),
        Symbol( "gtk_file_chooser_button_set_width_chars",  cast(void**)& gtk_file_chooser_button_set_width_chars),
        Symbol( "gtk_file_chooser_button_get_width_chars",  cast(void**)& gtk_file_chooser_button_get_width_chars),
        Symbol( "gtk_file_chooser_button_set_title",  cast(void**)& gtk_file_chooser_button_set_title),
        Symbol( "gtk_file_chooser_button_get_title",  cast(void**)& gtk_file_chooser_button_get_title),
        Symbol( "gtk_file_chooser_button_new_with_dialog",  cast(void**)& gtk_file_chooser_button_new_with_dialog),
        Symbol( "gtk_file_chooser_button_new_with_backend",  cast(void**)& gtk_file_chooser_button_new_with_backend),
        Symbol( "gtk_file_chooser_button_new",  cast(void**)& gtk_file_chooser_button_new),
        Symbol( "gtk_file_chooser_button_get_type",  cast(void**)& gtk_file_chooser_button_get_type),
        Symbol( "gtk_file_chooser_list_shortcut_folder_uris",  cast(void**)& gtk_file_chooser_list_shortcut_folder_uris),
        Symbol( "gtk_file_chooser_remove_shortcut_folder_uri",  cast(void**)& gtk_file_chooser_remove_shortcut_folder_uri),
        Symbol( "gtk_file_chooser_add_shortcut_folder_uri",  cast(void**)& gtk_file_chooser_add_shortcut_folder_uri),
        Symbol( "gtk_file_chooser_list_shortcut_folders",  cast(void**)& gtk_file_chooser_list_shortcut_folders),
        Symbol( "gtk_file_chooser_remove_shortcut_folder",  cast(void**)& gtk_file_chooser_remove_shortcut_folder),
        Symbol( "gtk_file_chooser_add_shortcut_folder",  cast(void**)& gtk_file_chooser_add_shortcut_folder),
        Symbol( "gtk_file_chooser_get_filter",  cast(void**)& gtk_file_chooser_get_filter),
        Symbol( "gtk_file_chooser_set_filter",  cast(void**)& gtk_file_chooser_set_filter),
        Symbol( "gtk_file_chooser_list_filters",  cast(void**)& gtk_file_chooser_list_filters),
        Symbol( "gtk_file_chooser_remove_filter",  cast(void**)& gtk_file_chooser_remove_filter),
        Symbol( "gtk_file_chooser_add_filter",  cast(void**)& gtk_file_chooser_add_filter),
        Symbol( "gtk_file_chooser_get_extra_widget",  cast(void**)& gtk_file_chooser_get_extra_widget),
        Symbol( "gtk_file_chooser_set_extra_widget",  cast(void**)& gtk_file_chooser_set_extra_widget),
        Symbol( "gtk_file_chooser_get_preview_uri",  cast(void**)& gtk_file_chooser_get_preview_uri),
        Symbol( "gtk_file_chooser_get_preview_filename",  cast(void**)& gtk_file_chooser_get_preview_filename),
        Symbol( "gtk_file_chooser_get_use_preview_label",  cast(void**)& gtk_file_chooser_get_use_preview_label),
        Symbol( "gtk_file_chooser_set_use_preview_label",  cast(void**)& gtk_file_chooser_set_use_preview_label),
        Symbol( "gtk_file_chooser_get_preview_widget_active",  cast(void**)& gtk_file_chooser_get_preview_widget_active),
        Symbol( "gtk_file_chooser_set_preview_widget_active",  cast(void**)& gtk_file_chooser_set_preview_widget_active),
        Symbol( "gtk_file_chooser_get_preview_widget",  cast(void**)& gtk_file_chooser_get_preview_widget),
        Symbol( "gtk_file_chooser_set_preview_widget",  cast(void**)& gtk_file_chooser_set_preview_widget),
        Symbol( "gtk_file_chooser_get_current_folder_uri",  cast(void**)& gtk_file_chooser_get_current_folder_uri),
        Symbol( "gtk_file_chooser_set_current_folder_uri",  cast(void**)& gtk_file_chooser_set_current_folder_uri),
        Symbol( "gtk_file_chooser_get_uris",  cast(void**)& gtk_file_chooser_get_uris),
        Symbol( "gtk_file_chooser_unselect_uri",  cast(void**)& gtk_file_chooser_unselect_uri),
        Symbol( "gtk_file_chooser_select_uri",  cast(void**)& gtk_file_chooser_select_uri),
        Symbol( "gtk_file_chooser_set_uri",  cast(void**)& gtk_file_chooser_set_uri),
        Symbol( "gtk_file_chooser_get_uri",  cast(void**)& gtk_file_chooser_get_uri),
        Symbol( "gtk_file_chooser_get_current_folder",  cast(void**)& gtk_file_chooser_get_current_folder),
        Symbol( "gtk_file_chooser_set_current_folder",  cast(void**)& gtk_file_chooser_set_current_folder),
        Symbol( "gtk_file_chooser_get_filenames",  cast(void**)& gtk_file_chooser_get_filenames),
        Symbol( "gtk_file_chooser_unselect_all",  cast(void**)& gtk_file_chooser_unselect_all),
        Symbol( "gtk_file_chooser_select_all",  cast(void**)& gtk_file_chooser_select_all),
        Symbol( "gtk_file_chooser_unselect_filename",  cast(void**)& gtk_file_chooser_unselect_filename),
        Symbol( "gtk_file_chooser_select_filename",  cast(void**)& gtk_file_chooser_select_filename),
        Symbol( "gtk_file_chooser_set_filename",  cast(void**)& gtk_file_chooser_set_filename),
        Symbol( "gtk_file_chooser_get_filename",  cast(void**)& gtk_file_chooser_get_filename),
        Symbol( "gtk_file_chooser_set_current_name",  cast(void**)& gtk_file_chooser_set_current_name),
        Symbol( "gtk_file_chooser_get_do_overwrite_confirmation",  cast(void**)& gtk_file_chooser_get_do_overwrite_confirmation),
        Symbol( "gtk_file_chooser_set_do_overwrite_confirmation",  cast(void**)& gtk_file_chooser_set_do_overwrite_confirmation),
        Symbol( "gtk_file_chooser_get_show_hidden",  cast(void**)& gtk_file_chooser_get_show_hidden),
        Symbol( "gtk_file_chooser_set_show_hidden",  cast(void**)& gtk_file_chooser_set_show_hidden),
        Symbol( "gtk_file_chooser_get_select_multiple",  cast(void**)& gtk_file_chooser_get_select_multiple),
        Symbol( "gtk_file_chooser_set_select_multiple",  cast(void**)& gtk_file_chooser_set_select_multiple),
        Symbol( "gtk_file_chooser_get_local_only",  cast(void**)& gtk_file_chooser_get_local_only),
        Symbol( "gtk_file_chooser_set_local_only",  cast(void**)& gtk_file_chooser_set_local_only),
        Symbol( "gtk_file_chooser_get_action",  cast(void**)& gtk_file_chooser_get_action),
        Symbol( "gtk_file_chooser_set_action",  cast(void**)& gtk_file_chooser_set_action),
        Symbol( "gtk_file_chooser_error_quark",  cast(void**)& gtk_file_chooser_error_quark),
        Symbol( "gtk_file_chooser_get_type",  cast(void**)& gtk_file_chooser_get_type),
        Symbol( "gtk_file_filter_filter",  cast(void**)& gtk_file_filter_filter),
        Symbol( "gtk_file_filter_get_needed",  cast(void**)& gtk_file_filter_get_needed),
        Symbol( "gtk_file_filter_add_custom",  cast(void**)& gtk_file_filter_add_custom),
        Symbol( "gtk_file_filter_add_pixbuf_formats",  cast(void**)& gtk_file_filter_add_pixbuf_formats),
        Symbol( "gtk_file_filter_add_pattern",  cast(void**)& gtk_file_filter_add_pattern),
        Symbol( "gtk_file_filter_add_mime_type",  cast(void**)& gtk_file_filter_add_mime_type),
        Symbol( "gtk_file_filter_get_name",  cast(void**)& gtk_file_filter_get_name),
        Symbol( "gtk_file_filter_set_name",  cast(void**)& gtk_file_filter_set_name),
        Symbol( "gtk_file_filter_new",  cast(void**)& gtk_file_filter_new),
        Symbol( "gtk_file_filter_get_type",  cast(void**)& gtk_file_filter_get_type),
        Symbol( "gtk_fixed_get_has_window",  cast(void**)& gtk_fixed_get_has_window),
        Symbol( "gtk_fixed_set_has_window",  cast(void**)& gtk_fixed_set_has_window),
        Symbol( "gtk_fixed_move",  cast(void**)& gtk_fixed_move),
        Symbol( "gtk_fixed_put",  cast(void**)& gtk_fixed_put),
        Symbol( "gtk_fixed_new",  cast(void**)& gtk_fixed_new),
        Symbol( "gtk_fixed_get_type",  cast(void**)& gtk_fixed_get_type),
        Symbol( "gtk_file_selection_get_select_multiple",  cast(void**)& gtk_file_selection_get_select_multiple),
        Symbol( "gtk_file_selection_set_select_multiple",  cast(void**)& gtk_file_selection_set_select_multiple),
        Symbol( "gtk_file_selection_get_selections",  cast(void**)& gtk_file_selection_get_selections),
        Symbol( "gtk_file_selection_hide_fileop_buttons",  cast(void**)& gtk_file_selection_hide_fileop_buttons),
        Symbol( "gtk_file_selection_show_fileop_buttons",  cast(void**)& gtk_file_selection_show_fileop_buttons),
        Symbol( "gtk_file_selection_complete",  cast(void**)& gtk_file_selection_complete),
        Symbol( "gtk_file_selection_get_filename",  cast(void**)& gtk_file_selection_get_filename),
        Symbol( "gtk_file_selection_set_filename",  cast(void**)& gtk_file_selection_set_filename),
        Symbol( "gtk_file_selection_new",  cast(void**)& gtk_file_selection_new),
        Symbol( "gtk_file_selection_get_type",  cast(void**)& gtk_file_selection_get_type),
        Symbol( "gtk_expander_get_label_widget",  cast(void**)& gtk_expander_get_label_widget),
        Symbol( "gtk_expander_set_label_widget",  cast(void**)& gtk_expander_set_label_widget),
        Symbol( "gtk_expander_get_use_markup",  cast(void**)& gtk_expander_get_use_markup),
        Symbol( "gtk_expander_set_use_markup",  cast(void**)& gtk_expander_set_use_markup),
        Symbol( "gtk_expander_get_use_underline",  cast(void**)& gtk_expander_get_use_underline),
        Symbol( "gtk_expander_set_use_underline",  cast(void**)& gtk_expander_set_use_underline),
        Symbol( "gtk_expander_get_label",  cast(void**)& gtk_expander_get_label),
        Symbol( "gtk_expander_set_label",  cast(void**)& gtk_expander_set_label),
        Symbol( "gtk_expander_get_spacing",  cast(void**)& gtk_expander_get_spacing),
        Symbol( "gtk_expander_set_spacing",  cast(void**)& gtk_expander_set_spacing),
        Symbol( "gtk_expander_get_expanded",  cast(void**)& gtk_expander_get_expanded),
        Symbol( "gtk_expander_set_expanded",  cast(void**)& gtk_expander_set_expanded),
        Symbol( "gtk_expander_new_with_mnemonic",  cast(void**)& gtk_expander_new_with_mnemonic),
        Symbol( "gtk_expander_new",  cast(void**)& gtk_expander_new),
        Symbol( "gtk_expander_get_type",  cast(void**)& gtk_expander_get_type),
        Symbol( "gtk_event_box_set_above_child",  cast(void**)& gtk_event_box_set_above_child),
        Symbol( "gtk_event_box_get_above_child",  cast(void**)& gtk_event_box_get_above_child),
        Symbol( "gtk_event_box_set_visible_window",  cast(void**)& gtk_event_box_set_visible_window),
        Symbol( "gtk_event_box_get_visible_window",  cast(void**)& gtk_event_box_get_visible_window),
        Symbol( "gtk_event_box_new",  cast(void**)& gtk_event_box_new),
        Symbol( "gtk_event_box_get_type",  cast(void**)& gtk_event_box_get_type),
        Symbol( "gtk_curve_set_curve_type",  cast(void**)& gtk_curve_set_curve_type),
        Symbol( "gtk_curve_set_vector",  cast(void**)& gtk_curve_set_vector),
        Symbol( "gtk_curve_get_vector",  cast(void**)& gtk_curve_get_vector),
        Symbol( "gtk_curve_set_range",  cast(void**)& gtk_curve_set_range),
        Symbol( "gtk_curve_set_gamma",  cast(void**)& gtk_curve_set_gamma),
        Symbol( "gtk_curve_reset",  cast(void**)& gtk_curve_reset),
        Symbol( "gtk_curve_new",  cast(void**)& gtk_curve_new),
        Symbol( "gtk_curve_get_type",  cast(void**)& gtk_curve_get_type),
        Symbol( "gtk_drawing_area_size",  cast(void**)& gtk_drawing_area_size),
        Symbol( "gtk_drawing_area_new",  cast(void**)& gtk_drawing_area_new),
        Symbol( "gtk_drawing_area_get_type",  cast(void**)& gtk_drawing_area_get_type),
        Symbol( "gtk_ctree_node_get_type",  cast(void**)& gtk_ctree_node_get_type),
        Symbol( "gtk_ctree_sort_recursive",  cast(void**)& gtk_ctree_sort_recursive),
        Symbol( "gtk_ctree_sort_node",  cast(void**)& gtk_ctree_sort_node),
        Symbol( "gtk_ctree_set_drag_compare_func",  cast(void**)& gtk_ctree_set_drag_compare_func),
        Symbol( "gtk_ctree_set_expander_style",  cast(void**)& gtk_ctree_set_expander_style),
        Symbol( "gtk_ctree_set_line_style",  cast(void**)& gtk_ctree_set_line_style),
        Symbol( "gtk_ctree_set_show_stub",  cast(void**)& gtk_ctree_set_show_stub),
        Symbol( "gtk_ctree_set_spacing",  cast(void**)& gtk_ctree_set_spacing),
        Symbol( "gtk_ctree_set_indent",  cast(void**)& gtk_ctree_set_indent),
        Symbol( "gtk_ctree_node_is_visible",  cast(void**)& gtk_ctree_node_is_visible),
        Symbol( "gtk_ctree_node_moveto",  cast(void**)& gtk_ctree_node_moveto),
        Symbol( "gtk_ctree_node_get_row_data",  cast(void**)& gtk_ctree_node_get_row_data),
        Symbol( "gtk_ctree_node_set_row_data_full",  cast(void**)& gtk_ctree_node_set_row_data_full),
        Symbol( "gtk_ctree_node_set_row_data",  cast(void**)& gtk_ctree_node_set_row_data),
        Symbol( "gtk_ctree_node_set_background",  cast(void**)& gtk_ctree_node_set_background),
        Symbol( "gtk_ctree_node_set_foreground",  cast(void**)& gtk_ctree_node_set_foreground),
        Symbol( "gtk_ctree_node_get_cell_style",  cast(void**)& gtk_ctree_node_get_cell_style),
        Symbol( "gtk_ctree_node_set_cell_style",  cast(void**)& gtk_ctree_node_set_cell_style),
        Symbol( "gtk_ctree_node_get_row_style",  cast(void**)& gtk_ctree_node_get_row_style),
        Symbol( "gtk_ctree_node_set_row_style",  cast(void**)& gtk_ctree_node_set_row_style),
        Symbol( "gtk_ctree_get_node_info",  cast(void**)& gtk_ctree_get_node_info),
        Symbol( "gtk_ctree_node_get_pixtext",  cast(void**)& gtk_ctree_node_get_pixtext),
        Symbol( "gtk_ctree_node_get_pixmap",  cast(void**)& gtk_ctree_node_get_pixmap),
        Symbol( "gtk_ctree_node_get_text",  cast(void**)& gtk_ctree_node_get_text),
        Symbol( "gtk_ctree_node_get_cell_type",  cast(void**)& gtk_ctree_node_get_cell_type),
        Symbol( "gtk_ctree_node_get_selectable",  cast(void**)& gtk_ctree_node_get_selectable),
        Symbol( "gtk_ctree_node_set_selectable",  cast(void**)& gtk_ctree_node_set_selectable),
        Symbol( "gtk_ctree_node_set_shift",  cast(void**)& gtk_ctree_node_set_shift),
        Symbol( "gtk_ctree_set_node_info",  cast(void**)& gtk_ctree_set_node_info),
        Symbol( "gtk_ctree_node_set_pixtext",  cast(void**)& gtk_ctree_node_set_pixtext),
        Symbol( "gtk_ctree_node_set_pixmap",  cast(void**)& gtk_ctree_node_set_pixmap),
        Symbol( "gtk_ctree_node_set_text",  cast(void**)& gtk_ctree_node_set_text),
        Symbol( "gtk_ctree_real_select_recursive",  cast(void**)& gtk_ctree_real_select_recursive),
        Symbol( "gtk_ctree_unselect_recursive",  cast(void**)& gtk_ctree_unselect_recursive),
        Symbol( "gtk_ctree_unselect",  cast(void**)& gtk_ctree_unselect),
        Symbol( "gtk_ctree_select_recursive",  cast(void**)& gtk_ctree_select_recursive),
        Symbol( "gtk_ctree_select",  cast(void**)& gtk_ctree_select),
        Symbol( "gtk_ctree_toggle_expansion_recursive",  cast(void**)& gtk_ctree_toggle_expansion_recursive),
        Symbol( "gtk_ctree_toggle_expansion",  cast(void**)& gtk_ctree_toggle_expansion),
        Symbol( "gtk_ctree_collapse_to_depth",  cast(void**)& gtk_ctree_collapse_to_depth),
        Symbol( "gtk_ctree_collapse_recursive",  cast(void**)& gtk_ctree_collapse_recursive),
        Symbol( "gtk_ctree_collapse",  cast(void**)& gtk_ctree_collapse),
        Symbol( "gtk_ctree_expand_to_depth",  cast(void**)& gtk_ctree_expand_to_depth),
        Symbol( "gtk_ctree_expand_recursive",  cast(void**)& gtk_ctree_expand_recursive),
        Symbol( "gtk_ctree_expand",  cast(void**)& gtk_ctree_expand),
        Symbol( "gtk_ctree_move",  cast(void**)& gtk_ctree_move),
        Symbol( "gtk_ctree_is_hot_spot",  cast(void**)& gtk_ctree_is_hot_spot),
        Symbol( "gtk_ctree_find_all_by_row_data_custom",  cast(void**)& gtk_ctree_find_all_by_row_data_custom),
        Symbol( "gtk_ctree_find_by_row_data_custom",  cast(void**)& gtk_ctree_find_by_row_data_custom),
        Symbol( "gtk_ctree_find_all_by_row_data",  cast(void**)& gtk_ctree_find_all_by_row_data),
        Symbol( "gtk_ctree_find_by_row_data",  cast(void**)& gtk_ctree_find_by_row_data),
        Symbol( "gtk_ctree_is_ancestor",  cast(void**)& gtk_ctree_is_ancestor),
        Symbol( "gtk_ctree_find",  cast(void**)& gtk_ctree_find),
        Symbol( "gtk_ctree_node_nth",  cast(void**)& gtk_ctree_node_nth),
        Symbol( "gtk_ctree_find_node_ptr",  cast(void**)& gtk_ctree_find_node_ptr),
        Symbol( "gtk_ctree_last",  cast(void**)& gtk_ctree_last),
        Symbol( "gtk_ctree_is_viewable",  cast(void**)& gtk_ctree_is_viewable),
        Symbol( "gtk_ctree_pre_recursive_to_depth",  cast(void**)& gtk_ctree_pre_recursive_to_depth),
        Symbol( "gtk_ctree_pre_recursive",  cast(void**)& gtk_ctree_pre_recursive),
        Symbol( "gtk_ctree_post_recursive_to_depth",  cast(void**)& gtk_ctree_post_recursive_to_depth),
        Symbol( "gtk_ctree_post_recursive",  cast(void**)& gtk_ctree_post_recursive),
        Symbol( "gtk_ctree_export_to_gnode",  cast(void**)& gtk_ctree_export_to_gnode),
        Symbol( "gtk_ctree_insert_gnode",  cast(void**)& gtk_ctree_insert_gnode),
        Symbol( "gtk_ctree_remove_node",  cast(void**)& gtk_ctree_remove_node),
        Symbol( "gtk_ctree_insert_node",  cast(void**)& gtk_ctree_insert_node),
        Symbol( "gtk_ctree_new",  cast(void**)& gtk_ctree_new),
        Symbol( "gtk_ctree_new_with_titles",  cast(void**)& gtk_ctree_new_with_titles),
        Symbol( "gtk_ctree_get_type",  cast(void**)& gtk_ctree_get_type),
        Symbol( "gtk_combo_box_entry_new_text",  cast(void**)& gtk_combo_box_entry_new_text),
        Symbol( "gtk_combo_box_entry_get_text_column",  cast(void**)& gtk_combo_box_entry_get_text_column),
        Symbol( "gtk_combo_box_entry_set_text_column",  cast(void**)& gtk_combo_box_entry_set_text_column),
        Symbol( "gtk_combo_box_entry_new_with_model",  cast(void**)& gtk_combo_box_entry_new_with_model),
        Symbol( "gtk_combo_box_entry_new",  cast(void**)& gtk_combo_box_entry_new),
        Symbol( "gtk_combo_box_entry_get_type",  cast(void**)& gtk_combo_box_entry_get_type),
    //     Symbol( "_gtk_combo_box_editing_canceled",  cast(void**)& _gtk_combo_box_editing_canceled),
        Symbol( "gtk_combo_box_get_popup_accessible",  cast(void**)& gtk_combo_box_get_popup_accessible),
        Symbol( "gtk_combo_box_popdown",  cast(void**)& gtk_combo_box_popdown),
        Symbol( "gtk_combo_box_popup",  cast(void**)& gtk_combo_box_popup),
        Symbol( "gtk_combo_box_get_active_text",  cast(void**)& gtk_combo_box_get_active_text),
        Symbol( "gtk_combo_box_remove_text",  cast(void**)& gtk_combo_box_remove_text),
        Symbol( "gtk_combo_box_prepend_text",  cast(void**)& gtk_combo_box_prepend_text),
        Symbol( "gtk_combo_box_insert_text",  cast(void**)& gtk_combo_box_insert_text),
        Symbol( "gtk_combo_box_append_text",  cast(void**)& gtk_combo_box_append_text),
        Symbol( "gtk_combo_box_new_text",  cast(void**)& gtk_combo_box_new_text),
        Symbol( "gtk_combo_box_set_row_separator_func",  cast(void**)& gtk_combo_box_set_row_separator_func),
        Symbol( "gtk_combo_box_get_row_separator_func",  cast(void**)& gtk_combo_box_get_row_separator_func),
        Symbol( "gtk_combo_box_get_model",  cast(void**)& gtk_combo_box_get_model),
        Symbol( "gtk_combo_box_set_model",  cast(void**)& gtk_combo_box_set_model),
        Symbol( "gtk_combo_box_set_active_iter",  cast(void**)& gtk_combo_box_set_active_iter),
        Symbol( "gtk_combo_box_get_active_iter",  cast(void**)& gtk_combo_box_get_active_iter),
        Symbol( "gtk_combo_box_set_active",  cast(void**)& gtk_combo_box_set_active),
        Symbol( "gtk_combo_box_get_active",  cast(void**)& gtk_combo_box_get_active),
        Symbol( "gtk_combo_box_set_focus_on_click",  cast(void**)& gtk_combo_box_set_focus_on_click),
        Symbol( "gtk_combo_box_get_focus_on_click",  cast(void**)& gtk_combo_box_get_focus_on_click),
        Symbol( "gtk_combo_box_set_title",  cast(void**)& gtk_combo_box_set_title),
        Symbol( "gtk_combo_box_get_title",  cast(void**)& gtk_combo_box_get_title),
        Symbol( "gtk_combo_box_set_add_tearoffs",  cast(void**)& gtk_combo_box_set_add_tearoffs),
        Symbol( "gtk_combo_box_get_add_tearoffs",  cast(void**)& gtk_combo_box_get_add_tearoffs),
        Symbol( "gtk_combo_box_set_column_span_column",  cast(void**)& gtk_combo_box_set_column_span_column),
        Symbol( "gtk_combo_box_get_column_span_column",  cast(void**)& gtk_combo_box_get_column_span_column),
        Symbol( "gtk_combo_box_set_row_span_column",  cast(void**)& gtk_combo_box_set_row_span_column),
        Symbol( "gtk_combo_box_get_row_span_column",  cast(void**)& gtk_combo_box_get_row_span_column),
        Symbol( "gtk_combo_box_set_wrap_width",  cast(void**)& gtk_combo_box_set_wrap_width),
        Symbol( "gtk_combo_box_get_wrap_width",  cast(void**)& gtk_combo_box_get_wrap_width),
        Symbol( "gtk_combo_box_new_with_model",  cast(void**)& gtk_combo_box_new_with_model),
        Symbol( "gtk_combo_box_new",  cast(void**)& gtk_combo_box_new),
        Symbol( "gtk_combo_box_get_type",  cast(void**)& gtk_combo_box_get_type),
        Symbol( "gtk_tree_view_get_tooltip_column",  cast(void**)& gtk_tree_view_get_tooltip_column),
        Symbol( "gtk_tree_view_set_tooltip_column",  cast(void**)& gtk_tree_view_set_tooltip_column),
        Symbol( "gtk_tree_view_get_tooltip_context",  cast(void**)& gtk_tree_view_get_tooltip_context),
        Symbol( "gtk_tree_view_set_tooltip_cell",  cast(void**)& gtk_tree_view_set_tooltip_cell),
        Symbol( "gtk_tree_view_set_tooltip_row",  cast(void**)& gtk_tree_view_set_tooltip_row),
        Symbol( "gtk_tree_view_get_level_indentation",  cast(void**)& gtk_tree_view_get_level_indentation),
        Symbol( "gtk_tree_view_set_level_indentation",  cast(void**)& gtk_tree_view_set_level_indentation),
        Symbol( "gtk_tree_view_get_show_expanders",  cast(void**)& gtk_tree_view_get_show_expanders),
        Symbol( "gtk_tree_view_set_show_expanders",  cast(void**)& gtk_tree_view_set_show_expanders),
        Symbol( "gtk_tree_view_set_enable_tree_lines",  cast(void**)& gtk_tree_view_set_enable_tree_lines),
        Symbol( "gtk_tree_view_get_enable_tree_lines",  cast(void**)& gtk_tree_view_get_enable_tree_lines),
        Symbol( "gtk_tree_view_set_grid_lines",  cast(void**)& gtk_tree_view_set_grid_lines),
        Symbol( "gtk_tree_view_get_grid_lines",  cast(void**)& gtk_tree_view_get_grid_lines),
        Symbol( "gtk_tree_view_set_row_separator_func",  cast(void**)& gtk_tree_view_set_row_separator_func),
        Symbol( "gtk_tree_view_get_row_separator_func",  cast(void**)& gtk_tree_view_get_row_separator_func),
        Symbol( "gtk_tree_view_is_rubber_banding_active",  cast(void**)& gtk_tree_view_is_rubber_banding_active),
        Symbol( "gtk_tree_view_get_rubber_banding",  cast(void**)& gtk_tree_view_get_rubber_banding),
        Symbol( "gtk_tree_view_set_rubber_banding",  cast(void**)& gtk_tree_view_set_rubber_banding),
        Symbol( "gtk_tree_view_get_hover_expand",  cast(void**)& gtk_tree_view_get_hover_expand),
        Symbol( "gtk_tree_view_set_hover_expand",  cast(void**)& gtk_tree_view_set_hover_expand),
        Symbol( "gtk_tree_view_get_hover_selection",  cast(void**)& gtk_tree_view_get_hover_selection),
        Symbol( "gtk_tree_view_set_hover_selection",  cast(void**)& gtk_tree_view_set_hover_selection),
        Symbol( "gtk_tree_view_get_fixed_height_mode",  cast(void**)& gtk_tree_view_get_fixed_height_mode),
        Symbol( "gtk_tree_view_set_fixed_height_mode",  cast(void**)& gtk_tree_view_set_fixed_height_mode),
        Symbol( "gtk_tree_view_set_destroy_count_func",  cast(void**)& gtk_tree_view_set_destroy_count_func),
        Symbol( "gtk_tree_view_convert_bin_window_to_tree_coords",  cast(void**)& gtk_tree_view_convert_bin_window_to_tree_coords),
        Symbol( "gtk_tree_view_convert_tree_to_bin_window_coords",  cast(void**)& gtk_tree_view_convert_tree_to_bin_window_coords),
        Symbol( "gtk_tree_view_convert_bin_window_to_widget_coords",  cast(void**)& gtk_tree_view_convert_bin_window_to_widget_coords),
        Symbol( "gtk_tree_view_convert_widget_to_bin_window_coords",  cast(void**)& gtk_tree_view_convert_widget_to_bin_window_coords),
        Symbol( "gtk_tree_view_convert_tree_to_widget_coords",  cast(void**)& gtk_tree_view_convert_tree_to_widget_coords),
        Symbol( "gtk_tree_view_convert_widget_to_tree_coords",  cast(void**)& gtk_tree_view_convert_widget_to_tree_coords),
        Symbol( "gtk_tree_view_set_search_position_func",  cast(void**)& gtk_tree_view_set_search_position_func),
        Symbol( "gtk_tree_view_get_search_position_func",  cast(void**)& gtk_tree_view_get_search_position_func),
        Symbol( "gtk_tree_view_set_search_entry",  cast(void**)& gtk_tree_view_set_search_entry),
        Symbol( "gtk_tree_view_get_search_entry",  cast(void**)& gtk_tree_view_get_search_entry),
        Symbol( "gtk_tree_view_set_search_equal_func",  cast(void**)& gtk_tree_view_set_search_equal_func),
        Symbol( "gtk_tree_view_get_search_equal_func",  cast(void**)& gtk_tree_view_get_search_equal_func),
        Symbol( "gtk_tree_view_set_search_column",  cast(void**)& gtk_tree_view_set_search_column),
        Symbol( "gtk_tree_view_get_search_column",  cast(void**)& gtk_tree_view_get_search_column),
        Symbol( "gtk_tree_view_get_enable_search",  cast(void**)& gtk_tree_view_get_enable_search),
        Symbol( "gtk_tree_view_set_enable_search",  cast(void**)& gtk_tree_view_set_enable_search),
        Symbol( "gtk_tree_view_create_row_drag_icon",  cast(void**)& gtk_tree_view_create_row_drag_icon),
        Symbol( "gtk_tree_view_get_dest_row_at_pos",  cast(void**)& gtk_tree_view_get_dest_row_at_pos),
        Symbol( "gtk_tree_view_get_drag_dest_row",  cast(void**)& gtk_tree_view_get_drag_dest_row),
        Symbol( "gtk_tree_view_set_drag_dest_row",  cast(void**)& gtk_tree_view_set_drag_dest_row),
        Symbol( "gtk_tree_view_unset_rows_drag_dest",  cast(void**)& gtk_tree_view_unset_rows_drag_dest),
        Symbol( "gtk_tree_view_unset_rows_drag_source",  cast(void**)& gtk_tree_view_unset_rows_drag_source),
        Symbol( "gtk_tree_view_enable_model_drag_dest",  cast(void**)& gtk_tree_view_enable_model_drag_dest),
        Symbol( "gtk_tree_view_enable_model_drag_source",  cast(void**)& gtk_tree_view_enable_model_drag_source),
        Symbol( "gtk_tree_view_get_visible_range",  cast(void**)& gtk_tree_view_get_visible_range),
        Symbol( "gtk_tree_view_tree_to_widget_coords",  cast(void**)& gtk_tree_view_tree_to_widget_coords),
        Symbol( "gtk_tree_view_widget_to_tree_coords",  cast(void**)& gtk_tree_view_widget_to_tree_coords),
        Symbol( "gtk_tree_view_get_visible_rect",  cast(void**)& gtk_tree_view_get_visible_rect),
        Symbol( "gtk_tree_view_get_background_area",  cast(void**)& gtk_tree_view_get_background_area),
        Symbol( "gtk_tree_view_get_cell_area",  cast(void**)& gtk_tree_view_get_cell_area),
        Symbol( "gtk_tree_view_get_path_at_pos",  cast(void**)& gtk_tree_view_get_path_at_pos),
        Symbol( "gtk_tree_view_get_bin_window",  cast(void**)& gtk_tree_view_get_bin_window),
        Symbol( "gtk_tree_view_get_cursor",  cast(void**)& gtk_tree_view_get_cursor),
        Symbol( "gtk_tree_view_set_cursor_on_cell",  cast(void**)& gtk_tree_view_set_cursor_on_cell),
        Symbol( "gtk_tree_view_set_cursor",  cast(void**)& gtk_tree_view_set_cursor),
        Symbol( "gtk_tree_view_get_reorderable",  cast(void**)& gtk_tree_view_get_reorderable),
        Symbol( "gtk_tree_view_set_reorderable",  cast(void**)& gtk_tree_view_set_reorderable),
        Symbol( "gtk_tree_view_row_expanded",  cast(void**)& gtk_tree_view_row_expanded),
        Symbol( "gtk_tree_view_map_expanded_rows",  cast(void**)& gtk_tree_view_map_expanded_rows),
        Symbol( "gtk_tree_view_collapse_row",  cast(void**)& gtk_tree_view_collapse_row),
        Symbol( "gtk_tree_view_expand_row",  cast(void**)& gtk_tree_view_expand_row),
        Symbol( "gtk_tree_view_expand_to_path",  cast(void**)& gtk_tree_view_expand_to_path),
        Symbol( "gtk_tree_view_collapse_all",  cast(void**)& gtk_tree_view_collapse_all),
        Symbol( "gtk_tree_view_expand_all",  cast(void**)& gtk_tree_view_expand_all),
        Symbol( "gtk_tree_view_row_activated",  cast(void**)& gtk_tree_view_row_activated),
        Symbol( "gtk_tree_view_scroll_to_cell",  cast(void**)& gtk_tree_view_scroll_to_cell),
        Symbol( "gtk_tree_view_scroll_to_point",  cast(void**)& gtk_tree_view_scroll_to_point),
        Symbol( "gtk_tree_view_set_column_drag_function",  cast(void**)& gtk_tree_view_set_column_drag_function),
        Symbol( "gtk_tree_view_get_expander_column",  cast(void**)& gtk_tree_view_get_expander_column),
        Symbol( "gtk_tree_view_set_expander_column",  cast(void**)& gtk_tree_view_set_expander_column),
        Symbol( "gtk_tree_view_move_column_after",  cast(void**)& gtk_tree_view_move_column_after),
        Symbol( "gtk_tree_view_get_columns",  cast(void**)& gtk_tree_view_get_columns),
        Symbol( "gtk_tree_view_get_column",  cast(void**)& gtk_tree_view_get_column),
        Symbol( "gtk_tree_view_insert_column_with_data_func",  cast(void**)& gtk_tree_view_insert_column_with_data_func),
        Symbol( "gtk_tree_view_insert_column_with_attributes",  cast(void**)& gtk_tree_view_insert_column_with_attributes),
        Symbol( "gtk_tree_view_insert_column",  cast(void**)& gtk_tree_view_insert_column),
        Symbol( "gtk_tree_view_remove_column",  cast(void**)& gtk_tree_view_remove_column),
        Symbol( "gtk_tree_view_append_column",  cast(void**)& gtk_tree_view_append_column),
        Symbol( "gtk_tree_view_get_rules_hint",  cast(void**)& gtk_tree_view_get_rules_hint),
        Symbol( "gtk_tree_view_set_rules_hint",  cast(void**)& gtk_tree_view_set_rules_hint),
        Symbol( "gtk_tree_view_set_headers_clickable",  cast(void**)& gtk_tree_view_set_headers_clickable),
        Symbol( "gtk_tree_view_get_headers_clickable",  cast(void**)& gtk_tree_view_get_headers_clickable),
        Symbol( "gtk_tree_view_columns_autosize",  cast(void**)& gtk_tree_view_columns_autosize),
        Symbol( "gtk_tree_view_set_headers_visible",  cast(void**)& gtk_tree_view_set_headers_visible),
        Symbol( "gtk_tree_view_get_headers_visible",  cast(void**)& gtk_tree_view_get_headers_visible),
        Symbol( "gtk_tree_view_set_vadjustment",  cast(void**)& gtk_tree_view_set_vadjustment),
        Symbol( "gtk_tree_view_get_vadjustment",  cast(void**)& gtk_tree_view_get_vadjustment),
        Symbol( "gtk_tree_view_set_hadjustment",  cast(void**)& gtk_tree_view_set_hadjustment),
        Symbol( "gtk_tree_view_get_hadjustment",  cast(void**)& gtk_tree_view_get_hadjustment),
        Symbol( "gtk_tree_view_get_selection",  cast(void**)& gtk_tree_view_get_selection),
        Symbol( "gtk_tree_view_set_model",  cast(void**)& gtk_tree_view_set_model),
        Symbol( "gtk_tree_view_get_model",  cast(void**)& gtk_tree_view_get_model),
        Symbol( "gtk_tree_view_new_with_model",  cast(void**)& gtk_tree_view_new_with_model),
        Symbol( "gtk_tree_view_new",  cast(void**)& gtk_tree_view_new),
        Symbol( "gtk_tree_view_get_type",  cast(void**)& gtk_tree_view_get_type),
        Symbol( "gtk_entry_set_editable",  cast(void**)& gtk_entry_set_editable),
        Symbol( "gtk_entry_select_region",  cast(void**)& gtk_entry_select_region),
        Symbol( "gtk_entry_set_position",  cast(void**)& gtk_entry_set_position),
        Symbol( "gtk_entry_prepend_text",  cast(void**)& gtk_entry_prepend_text),
        Symbol( "gtk_entry_append_text",  cast(void**)& gtk_entry_append_text),
        Symbol( "gtk_entry_new_with_max_length",  cast(void**)& gtk_entry_new_with_max_length),
        Symbol( "gtk_entry_get_cursor_hadjustment",  cast(void**)& gtk_entry_get_cursor_hadjustment),
        Symbol( "gtk_entry_set_cursor_hadjustment",  cast(void**)& gtk_entry_set_cursor_hadjustment),
        Symbol( "gtk_entry_text_index_to_layout_index",  cast(void**)& gtk_entry_text_index_to_layout_index),
        Symbol( "gtk_entry_layout_index_to_text_index",  cast(void**)& gtk_entry_layout_index_to_text_index),
        Symbol( "gtk_entry_get_completion",  cast(void**)& gtk_entry_get_completion),
        Symbol( "gtk_entry_set_completion",  cast(void**)& gtk_entry_set_completion),
        Symbol( "gtk_entry_get_alignment",  cast(void**)& gtk_entry_get_alignment),
        Symbol( "gtk_entry_set_alignment",  cast(void**)& gtk_entry_set_alignment),
        Symbol( "gtk_entry_get_layout_offsets",  cast(void**)& gtk_entry_get_layout_offsets),
        Symbol( "gtk_entry_get_layout",  cast(void**)& gtk_entry_get_layout),
        Symbol( "gtk_entry_get_text",  cast(void**)& gtk_entry_get_text),
        Symbol( "gtk_entry_set_text",  cast(void**)& gtk_entry_set_text),
        Symbol( "gtk_entry_get_width_chars",  cast(void**)& gtk_entry_get_width_chars),
        Symbol( "gtk_entry_set_width_chars",  cast(void**)& gtk_entry_set_width_chars),
        Symbol( "gtk_entry_get_activates_default",  cast(void**)& gtk_entry_get_activates_default),
        Symbol( "gtk_entry_set_activates_default",  cast(void**)& gtk_entry_set_activates_default),
        Symbol( "gtk_entry_get_max_length",  cast(void**)& gtk_entry_get_max_length),
        Symbol( "gtk_entry_set_max_length",  cast(void**)& gtk_entry_set_max_length),
        Symbol( "gtk_entry_get_inner_border",  cast(void**)& gtk_entry_get_inner_border),
        Symbol( "gtk_entry_set_inner_border",  cast(void**)& gtk_entry_set_inner_border),
        Symbol( "gtk_entry_get_has_frame",  cast(void**)& gtk_entry_get_has_frame),
        Symbol( "gtk_entry_set_has_frame",  cast(void**)& gtk_entry_set_has_frame),
        Symbol( "gtk_entry_get_invisible_char",  cast(void**)& gtk_entry_get_invisible_char),
        Symbol( "gtk_entry_set_invisible_char",  cast(void**)& gtk_entry_set_invisible_char),
        Symbol( "gtk_entry_get_visibility",  cast(void**)& gtk_entry_get_visibility),
        Symbol( "gtk_entry_set_visibility",  cast(void**)& gtk_entry_set_visibility),
        Symbol( "gtk_entry_new",  cast(void**)& gtk_entry_new),
        Symbol( "gtk_entry_get_type",  cast(void**)& gtk_entry_get_type),
        Symbol( "gtk_entry_completion_get_text_column",  cast(void**)& gtk_entry_completion_get_text_column),
        Symbol( "gtk_entry_completion_set_text_column",  cast(void**)& gtk_entry_completion_set_text_column),
        Symbol( "gtk_entry_completion_get_completion_prefix",  cast(void**)& gtk_entry_completion_get_completion_prefix),
        Symbol( "gtk_entry_completion_get_popup_single_match",  cast(void**)& gtk_entry_completion_get_popup_single_match),
        Symbol( "gtk_entry_completion_set_popup_single_match",  cast(void**)& gtk_entry_completion_set_popup_single_match),
        Symbol( "gtk_entry_completion_get_popup_set_width",  cast(void**)& gtk_entry_completion_get_popup_set_width),
        Symbol( "gtk_entry_completion_set_popup_set_width",  cast(void**)& gtk_entry_completion_set_popup_set_width),
        Symbol( "gtk_entry_completion_get_popup_completion",  cast(void**)& gtk_entry_completion_get_popup_completion),
        Symbol( "gtk_entry_completion_set_popup_completion",  cast(void**)& gtk_entry_completion_set_popup_completion),
        Symbol( "gtk_entry_completion_get_inline_selection",  cast(void**)& gtk_entry_completion_get_inline_selection),
        Symbol( "gtk_entry_completion_set_inline_selection",  cast(void**)& gtk_entry_completion_set_inline_selection),
        Symbol( "gtk_entry_completion_get_inline_completion",  cast(void**)& gtk_entry_completion_get_inline_completion),
        Symbol( "gtk_entry_completion_set_inline_completion",  cast(void**)& gtk_entry_completion_set_inline_completion),
        Symbol( "gtk_entry_completion_delete_action",  cast(void**)& gtk_entry_completion_delete_action),
        Symbol( "gtk_entry_completion_insert_action_markup",  cast(void**)& gtk_entry_completion_insert_action_markup),
        Symbol( "gtk_entry_completion_insert_action_text",  cast(void**)& gtk_entry_completion_insert_action_text),
        Symbol( "gtk_entry_completion_insert_prefix",  cast(void**)& gtk_entry_completion_insert_prefix),
        Symbol( "gtk_entry_completion_complete",  cast(void**)& gtk_entry_completion_complete),
        Symbol( "gtk_entry_completion_get_minimum_key_length",  cast(void**)& gtk_entry_completion_get_minimum_key_length),
        Symbol( "gtk_entry_completion_set_minimum_key_length",  cast(void**)& gtk_entry_completion_set_minimum_key_length),
        Symbol( "gtk_entry_completion_set_match_func",  cast(void**)& gtk_entry_completion_set_match_func),
        Symbol( "gtk_entry_completion_get_model",  cast(void**)& gtk_entry_completion_get_model),
        Symbol( "gtk_entry_completion_set_model",  cast(void**)& gtk_entry_completion_set_model),
        Symbol( "gtk_entry_completion_get_entry",  cast(void**)& gtk_entry_completion_get_entry),
        Symbol( "gtk_entry_completion_new",  cast(void**)& gtk_entry_completion_new),
        Symbol( "gtk_entry_completion_get_type",  cast(void**)& gtk_entry_completion_get_type),
        Symbol( "gtk_tree_model_filter_clear_cache",  cast(void**)& gtk_tree_model_filter_clear_cache),
        Symbol( "gtk_tree_model_filter_refilter",  cast(void**)& gtk_tree_model_filter_refilter),
        Symbol( "gtk_tree_model_filter_convert_path_to_child_path",  cast(void**)& gtk_tree_model_filter_convert_path_to_child_path),
        Symbol( "gtk_tree_model_filter_convert_child_path_to_path",  cast(void**)& gtk_tree_model_filter_convert_child_path_to_path),
        Symbol( "gtk_tree_model_filter_convert_iter_to_child_iter",  cast(void**)& gtk_tree_model_filter_convert_iter_to_child_iter),
        Symbol( "gtk_tree_model_filter_convert_child_iter_to_iter",  cast(void**)& gtk_tree_model_filter_convert_child_iter_to_iter),
        Symbol( "gtk_tree_model_filter_get_model",  cast(void**)& gtk_tree_model_filter_get_model),
        Symbol( "gtk_tree_model_filter_set_visible_column",  cast(void**)& gtk_tree_model_filter_set_visible_column),
        Symbol( "gtk_tree_model_filter_set_modify_func",  cast(void**)& gtk_tree_model_filter_set_modify_func),
        Symbol( "gtk_tree_model_filter_set_visible_func",  cast(void**)& gtk_tree_model_filter_set_visible_func),
        Symbol( "gtk_tree_model_filter_new",  cast(void**)& gtk_tree_model_filter_new),
        Symbol( "gtk_tree_model_filter_get_type",  cast(void**)& gtk_tree_model_filter_get_type),
        Symbol( "gtk_list_store_move_before",  cast(void**)& gtk_list_store_move_before),
        Symbol( "gtk_list_store_move_after",  cast(void**)& gtk_list_store_move_after),
        Symbol( "gtk_list_store_swap",  cast(void**)& gtk_list_store_swap),
        Symbol( "gtk_list_store_reorder",  cast(void**)& gtk_list_store_reorder),
        Symbol( "gtk_list_store_iter_is_valid",  cast(void**)& gtk_list_store_iter_is_valid),
        Symbol( "gtk_list_store_clear",  cast(void**)& gtk_list_store_clear),
        Symbol( "gtk_list_store_append",  cast(void**)& gtk_list_store_append),
        Symbol( "gtk_list_store_prepend",  cast(void**)& gtk_list_store_prepend),
        Symbol( "gtk_list_store_insert_with_valuesv",  cast(void**)& gtk_list_store_insert_with_valuesv),
        Symbol( "gtk_list_store_insert_with_values",  cast(void**)& gtk_list_store_insert_with_values),
        Symbol( "gtk_list_store_insert_after",  cast(void**)& gtk_list_store_insert_after),
        Symbol( "gtk_list_store_insert_before",  cast(void**)& gtk_list_store_insert_before),
        Symbol( "gtk_list_store_insert",  cast(void**)& gtk_list_store_insert),
        Symbol( "gtk_list_store_remove",  cast(void**)& gtk_list_store_remove),
        Symbol( "gtk_list_store_set_valist",  cast(void**)& gtk_list_store_set_valist),
        Symbol( "gtk_list_store_set_valuesv",  cast(void**)& gtk_list_store_set_valuesv),
        Symbol( "gtk_list_store_set",  cast(void**)& gtk_list_store_set),
        Symbol( "gtk_list_store_set_value",  cast(void**)& gtk_list_store_set_value),
        Symbol( "gtk_list_store_set_column_types",  cast(void**)& gtk_list_store_set_column_types),
        Symbol( "gtk_list_store_newv",  cast(void**)& gtk_list_store_newv),
        Symbol( "gtk_list_store_new",  cast(void**)& gtk_list_store_new),
        Symbol( "gtk_list_store_get_type",  cast(void**)& gtk_list_store_get_type),
        Symbol( "gtk_im_context_delete_surrounding",  cast(void**)& gtk_im_context_delete_surrounding),
        Symbol( "gtk_im_context_get_surrounding",  cast(void**)& gtk_im_context_get_surrounding),
        Symbol( "gtk_im_context_set_surrounding",  cast(void**)& gtk_im_context_set_surrounding),
        Symbol( "gtk_im_context_set_use_preedit",  cast(void**)& gtk_im_context_set_use_preedit),
        Symbol( "gtk_im_context_set_cursor_location",  cast(void**)& gtk_im_context_set_cursor_location),
        Symbol( "gtk_im_context_reset",  cast(void**)& gtk_im_context_reset),
        Symbol( "gtk_im_context_focus_out",  cast(void**)& gtk_im_context_focus_out),
        Symbol( "gtk_im_context_focus_in",  cast(void**)& gtk_im_context_focus_in),
        Symbol( "gtk_im_context_filter_keypress",  cast(void**)& gtk_im_context_filter_keypress),
        Symbol( "gtk_im_context_get_preedit_string",  cast(void**)& gtk_im_context_get_preedit_string),
        Symbol( "gtk_im_context_set_client_window",  cast(void**)& gtk_im_context_set_client_window),
        Symbol( "gtk_im_context_get_type",  cast(void**)& gtk_im_context_get_type),
        Symbol( "gtk_editable_get_editable",  cast(void**)& gtk_editable_get_editable),
        Symbol( "gtk_editable_set_editable",  cast(void**)& gtk_editable_set_editable),
        Symbol( "gtk_editable_get_position",  cast(void**)& gtk_editable_get_position),
        Symbol( "gtk_editable_set_position",  cast(void**)& gtk_editable_set_position),
        Symbol( "gtk_editable_delete_selection",  cast(void**)& gtk_editable_delete_selection),
        Symbol( "gtk_editable_paste_clipboard",  cast(void**)& gtk_editable_paste_clipboard),
        Symbol( "gtk_editable_copy_clipboard",  cast(void**)& gtk_editable_copy_clipboard),
        Symbol( "gtk_editable_cut_clipboard",  cast(void**)& gtk_editable_cut_clipboard),
        Symbol( "gtk_editable_get_chars",  cast(void**)& gtk_editable_get_chars),
        Symbol( "gtk_editable_delete_text",  cast(void**)& gtk_editable_delete_text),
        Symbol( "gtk_editable_insert_text",  cast(void**)& gtk_editable_insert_text),
        Symbol( "gtk_editable_get_selection_bounds",  cast(void**)& gtk_editable_get_selection_bounds),
        Symbol( "gtk_editable_select_region",  cast(void**)& gtk_editable_select_region),
        Symbol( "gtk_editable_get_type",  cast(void**)& gtk_editable_get_type),
        Symbol( "gtk_drag_set_default_icon",  cast(void**)& gtk_drag_set_default_icon),
    //     Symbol( "_gtk_drag_dest_handle_event",  cast(void**)& _gtk_drag_dest_handle_event),
    //     Symbol( "_gtk_drag_source_handle_event",  cast(void**)& _gtk_drag_source_handle_event),
        Symbol( "gtk_drag_check_threshold",  cast(void**)& gtk_drag_check_threshold),
        Symbol( "gtk_drag_set_icon_default",  cast(void**)& gtk_drag_set_icon_default),
        Symbol( "gtk_drag_set_icon_name",  cast(void**)& gtk_drag_set_icon_name),
        Symbol( "gtk_drag_set_icon_stock",  cast(void**)& gtk_drag_set_icon_stock),
        Symbol( "gtk_drag_set_icon_pixbuf",  cast(void**)& gtk_drag_set_icon_pixbuf),
        Symbol( "gtk_drag_set_icon_pixmap",  cast(void**)& gtk_drag_set_icon_pixmap),
        Symbol( "gtk_drag_set_icon_widget",  cast(void**)& gtk_drag_set_icon_widget),
        Symbol( "gtk_drag_begin",  cast(void**)& gtk_drag_begin),
        Symbol( "gtk_drag_source_set_icon_name",  cast(void**)& gtk_drag_source_set_icon_name),
        Symbol( "gtk_drag_source_set_icon_stock",  cast(void**)& gtk_drag_source_set_icon_stock),
        Symbol( "gtk_drag_source_set_icon_pixbuf",  cast(void**)& gtk_drag_source_set_icon_pixbuf),
        Symbol( "gtk_drag_source_set_icon",  cast(void**)& gtk_drag_source_set_icon),
        Symbol( "gtk_drag_source_add_uri_targets",  cast(void**)& gtk_drag_source_add_uri_targets),
        Symbol( "gtk_drag_source_add_image_targets",  cast(void**)& gtk_drag_source_add_image_targets),
        Symbol( "gtk_drag_source_add_text_targets",  cast(void**)& gtk_drag_source_add_text_targets),
        Symbol( "gtk_drag_source_set_target_list",  cast(void**)& gtk_drag_source_set_target_list),
        Symbol( "gtk_drag_source_get_target_list",  cast(void**)& gtk_drag_source_get_target_list),
        Symbol( "gtk_drag_source_unset",  cast(void**)& gtk_drag_source_unset),
        Symbol( "gtk_drag_source_set",  cast(void**)& gtk_drag_source_set),
        Symbol( "gtk_drag_dest_get_track_motion",  cast(void**)& gtk_drag_dest_get_track_motion),
        Symbol( "gtk_drag_dest_set_track_motion",  cast(void**)& gtk_drag_dest_set_track_motion),
        Symbol( "gtk_drag_dest_add_uri_targets",  cast(void**)& gtk_drag_dest_add_uri_targets),
        Symbol( "gtk_drag_dest_add_image_targets",  cast(void**)& gtk_drag_dest_add_image_targets),
        Symbol( "gtk_drag_dest_add_text_targets",  cast(void**)& gtk_drag_dest_add_text_targets),
        Symbol( "gtk_drag_dest_set_target_list",  cast(void**)& gtk_drag_dest_set_target_list),
        Symbol( "gtk_drag_dest_get_target_list",  cast(void**)& gtk_drag_dest_get_target_list),
        Symbol( "gtk_drag_dest_find_target",  cast(void**)& gtk_drag_dest_find_target),
        Symbol( "gtk_drag_dest_unset",  cast(void**)& gtk_drag_dest_unset),
        Symbol( "gtk_drag_dest_set_proxy",  cast(void**)& gtk_drag_dest_set_proxy),
        Symbol( "gtk_drag_dest_set",  cast(void**)& gtk_drag_dest_set),
        Symbol( "gtk_drag_unhighlight",  cast(void**)& gtk_drag_unhighlight),
        Symbol( "gtk_drag_highlight",  cast(void**)& gtk_drag_highlight),
        Symbol( "gtk_drag_get_source_widget",  cast(void**)& gtk_drag_get_source_widget),
        Symbol( "gtk_drag_finish",  cast(void**)& gtk_drag_finish),
        Symbol( "gtk_drag_get_data",  cast(void**)& gtk_drag_get_data),
        Symbol( "gtk_combo_disable_activate",  cast(void**)& gtk_combo_disable_activate),
        Symbol( "gtk_combo_set_popdown_strings",  cast(void**)& gtk_combo_set_popdown_strings),
        Symbol( "gtk_combo_set_item_string",  cast(void**)& gtk_combo_set_item_string),
        Symbol( "gtk_combo_set_case_sensitive",  cast(void**)& gtk_combo_set_case_sensitive),
        Symbol( "gtk_combo_set_use_arrows_always",  cast(void**)& gtk_combo_set_use_arrows_always),
        Symbol( "gtk_combo_set_use_arrows",  cast(void**)& gtk_combo_set_use_arrows),
        Symbol( "gtk_combo_set_value_in_list",  cast(void**)& gtk_combo_set_value_in_list),
        Symbol( "gtk_combo_new",  cast(void**)& gtk_combo_new),
        Symbol( "gtk_combo_get_type",  cast(void**)& gtk_combo_get_type),
        Symbol( "gtk_hbox_new",  cast(void**)& gtk_hbox_new),
        Symbol( "gtk_hbox_get_type",  cast(void**)& gtk_hbox_get_type),
        Symbol( "gtk_color_selection_dialog_new",  cast(void**)& gtk_color_selection_dialog_new),
        Symbol( "gtk_color_selection_dialog_get_type",  cast(void**)& gtk_color_selection_dialog_get_type),
        Symbol( "gtk_color_selection_set_update_policy",  cast(void**)& gtk_color_selection_set_update_policy),
        Symbol( "gtk_color_selection_get_color",  cast(void**)& gtk_color_selection_get_color),
        Symbol( "gtk_color_selection_set_color",  cast(void**)& gtk_color_selection_set_color),
        Symbol( "gtk_color_selection_set_change_palette_with_screen_hook",  cast(void**)& gtk_color_selection_set_change_palette_with_screen_hook),
        Symbol( "gtk_color_selection_set_change_palette_hook",  cast(void**)& gtk_color_selection_set_change_palette_hook),
        Symbol( "gtk_color_selection_palette_to_string",  cast(void**)& gtk_color_selection_palette_to_string),
        Symbol( "gtk_color_selection_palette_from_string",  cast(void**)& gtk_color_selection_palette_from_string),
        Symbol( "gtk_color_selection_is_adjusting",  cast(void**)& gtk_color_selection_is_adjusting),
        Symbol( "gtk_color_selection_get_previous_alpha",  cast(void**)& gtk_color_selection_get_previous_alpha),
        Symbol( "gtk_color_selection_get_previous_color",  cast(void**)& gtk_color_selection_get_previous_color),
        Symbol( "gtk_color_selection_set_previous_alpha",  cast(void**)& gtk_color_selection_set_previous_alpha),
        Symbol( "gtk_color_selection_set_previous_color",  cast(void**)& gtk_color_selection_set_previous_color),
        Symbol( "gtk_color_selection_get_current_alpha",  cast(void**)& gtk_color_selection_get_current_alpha),
        Symbol( "gtk_color_selection_get_current_color",  cast(void**)& gtk_color_selection_get_current_color),
        Symbol( "gtk_color_selection_set_current_alpha",  cast(void**)& gtk_color_selection_set_current_alpha),
        Symbol( "gtk_color_selection_set_current_color",  cast(void**)& gtk_color_selection_set_current_color),
        Symbol( "gtk_color_selection_set_has_palette",  cast(void**)& gtk_color_selection_set_has_palette),
        Symbol( "gtk_color_selection_get_has_palette",  cast(void**)& gtk_color_selection_get_has_palette),
        Symbol( "gtk_color_selection_set_has_opacity_control",  cast(void**)& gtk_color_selection_set_has_opacity_control),
        Symbol( "gtk_color_selection_get_has_opacity_control",  cast(void**)& gtk_color_selection_get_has_opacity_control),
        Symbol( "gtk_color_selection_new",  cast(void**)& gtk_color_selection_new),
        Symbol( "gtk_color_selection_get_type",  cast(void**)& gtk_color_selection_get_type),
        Symbol( "gtk_vbox_new",  cast(void**)& gtk_vbox_new),
        Symbol( "gtk_vbox_get_type",  cast(void**)& gtk_vbox_get_type),
        Symbol( "gtk_color_button_get_title",  cast(void**)& gtk_color_button_get_title),
        Symbol( "gtk_color_button_set_title",  cast(void**)& gtk_color_button_set_title),
        Symbol( "gtk_color_button_get_use_alpha",  cast(void**)& gtk_color_button_get_use_alpha),
        Symbol( "gtk_color_button_set_use_alpha",  cast(void**)& gtk_color_button_set_use_alpha),
        Symbol( "gtk_color_button_get_alpha",  cast(void**)& gtk_color_button_get_alpha),
        Symbol( "gtk_color_button_get_color",  cast(void**)& gtk_color_button_get_color),
        Symbol( "gtk_color_button_set_alpha",  cast(void**)& gtk_color_button_set_alpha),
        Symbol( "gtk_color_button_set_color",  cast(void**)& gtk_color_button_set_color),
        Symbol( "gtk_color_button_new_with_color",  cast(void**)& gtk_color_button_new_with_color),
        Symbol( "gtk_color_button_new",  cast(void**)& gtk_color_button_new),
        Symbol( "gtk_color_button_get_type",  cast(void**)& gtk_color_button_get_type),
    //     Symbol( "_gtk_clist_create_cell_layout",  cast(void**)& _gtk_clist_create_cell_layout),
        Symbol( "gtk_clist_set_auto_sort",  cast(void**)& gtk_clist_set_auto_sort),
        Symbol( "gtk_clist_sort",  cast(void**)& gtk_clist_sort),
        Symbol( "gtk_clist_set_sort_type",  cast(void**)& gtk_clist_set_sort_type),
        Symbol( "gtk_clist_set_sort_column",  cast(void**)& gtk_clist_set_sort_column),
        Symbol( "gtk_clist_set_compare_func",  cast(void**)& gtk_clist_set_compare_func),
        Symbol( "gtk_clist_row_move",  cast(void**)& gtk_clist_row_move),
        Symbol( "gtk_clist_swap_rows",  cast(void**)& gtk_clist_swap_rows),
        Symbol( "gtk_clist_unselect_all",  cast(void**)& gtk_clist_unselect_all),
        Symbol( "gtk_clist_select_all",  cast(void**)& gtk_clist_select_all),
        Symbol( "gtk_clist_get_selection_info",  cast(void**)& gtk_clist_get_selection_info),
        Symbol( "gtk_clist_clear",  cast(void**)& gtk_clist_clear),
        Symbol( "gtk_clist_undo_selection",  cast(void**)& gtk_clist_undo_selection),
        Symbol( "gtk_clist_unselect_row",  cast(void**)& gtk_clist_unselect_row),
        Symbol( "gtk_clist_select_row",  cast(void**)& gtk_clist_select_row),
        Symbol( "gtk_clist_find_row_from_data",  cast(void**)& gtk_clist_find_row_from_data),
        Symbol( "gtk_clist_get_row_data",  cast(void**)& gtk_clist_get_row_data),
        Symbol( "gtk_clist_set_row_data_full",  cast(void**)& gtk_clist_set_row_data_full),
        Symbol( "gtk_clist_set_row_data",  cast(void**)& gtk_clist_set_row_data),
        Symbol( "gtk_clist_remove",  cast(void**)& gtk_clist_remove),
        Symbol( "gtk_clist_insert",  cast(void**)& gtk_clist_insert),
        Symbol( "gtk_clist_append",  cast(void**)& gtk_clist_append),
        Symbol( "gtk_clist_prepend",  cast(void**)& gtk_clist_prepend),
        Symbol( "gtk_clist_get_selectable",  cast(void**)& gtk_clist_get_selectable),
        Symbol( "gtk_clist_set_selectable",  cast(void**)& gtk_clist_set_selectable),
        Symbol( "gtk_clist_set_shift",  cast(void**)& gtk_clist_set_shift),
        Symbol( "gtk_clist_get_row_style",  cast(void**)& gtk_clist_get_row_style),
        Symbol( "gtk_clist_set_row_style",  cast(void**)& gtk_clist_set_row_style),
        Symbol( "gtk_clist_get_cell_style",  cast(void**)& gtk_clist_get_cell_style),
        Symbol( "gtk_clist_set_cell_style",  cast(void**)& gtk_clist_set_cell_style),
        Symbol( "gtk_clist_set_background",  cast(void**)& gtk_clist_set_background),
        Symbol( "gtk_clist_set_foreground",  cast(void**)& gtk_clist_set_foreground),
        Symbol( "gtk_clist_get_pixtext",  cast(void**)& gtk_clist_get_pixtext),
        Symbol( "gtk_clist_set_pixtext",  cast(void**)& gtk_clist_set_pixtext),
        Symbol( "gtk_clist_get_pixmap",  cast(void**)& gtk_clist_get_pixmap),
        Symbol( "gtk_clist_set_pixmap",  cast(void**)& gtk_clist_set_pixmap),
        Symbol( "gtk_clist_get_text",  cast(void**)& gtk_clist_get_text),
        Symbol( "gtk_clist_set_text",  cast(void**)& gtk_clist_set_text),
        Symbol( "gtk_clist_get_cell_type",  cast(void**)& gtk_clist_get_cell_type),
        Symbol( "gtk_clist_row_is_visible",  cast(void**)& gtk_clist_row_is_visible),
        Symbol( "gtk_clist_moveto",  cast(void**)& gtk_clist_moveto),
        Symbol( "gtk_clist_set_row_height",  cast(void**)& gtk_clist_set_row_height),
        Symbol( "gtk_clist_set_column_max_width",  cast(void**)& gtk_clist_set_column_max_width),
        Symbol( "gtk_clist_set_column_min_width",  cast(void**)& gtk_clist_set_column_min_width),
        Symbol( "gtk_clist_set_column_width",  cast(void**)& gtk_clist_set_column_width),
        Symbol( "gtk_clist_optimal_column_width",  cast(void**)& gtk_clist_optimal_column_width),
        Symbol( "gtk_clist_columns_autosize",  cast(void**)& gtk_clist_columns_autosize),
        Symbol( "gtk_clist_set_column_auto_resize",  cast(void**)& gtk_clist_set_column_auto_resize),
        Symbol( "gtk_clist_set_column_resizeable",  cast(void**)& gtk_clist_set_column_resizeable),
        Symbol( "gtk_clist_set_column_visibility",  cast(void**)& gtk_clist_set_column_visibility),
        Symbol( "gtk_clist_set_column_justification",  cast(void**)& gtk_clist_set_column_justification),
        Symbol( "gtk_clist_get_column_widget",  cast(void**)& gtk_clist_get_column_widget),
        Symbol( "gtk_clist_set_column_widget",  cast(void**)& gtk_clist_set_column_widget),
        Symbol( "gtk_clist_get_column_title",  cast(void**)& gtk_clist_get_column_title),
        Symbol( "gtk_clist_set_column_title",  cast(void**)& gtk_clist_set_column_title),
        Symbol( "gtk_clist_column_titles_passive",  cast(void**)& gtk_clist_column_titles_passive),
        Symbol( "gtk_clist_column_titles_active",  cast(void**)& gtk_clist_column_titles_active),
        Symbol( "gtk_clist_column_title_passive",  cast(void**)& gtk_clist_column_title_passive),
        Symbol( "gtk_clist_column_title_active",  cast(void**)& gtk_clist_column_title_active),
        Symbol( "gtk_clist_column_titles_hide",  cast(void**)& gtk_clist_column_titles_hide),
        Symbol( "gtk_clist_column_titles_show",  cast(void**)& gtk_clist_column_titles_show),
        Symbol( "gtk_clist_thaw",  cast(void**)& gtk_clist_thaw),
        Symbol( "gtk_clist_freeze",  cast(void**)& gtk_clist_freeze),
        Symbol( "gtk_clist_set_button_actions",  cast(void**)& gtk_clist_set_button_actions),
        Symbol( "gtk_clist_set_use_drag_icons",  cast(void**)& gtk_clist_set_use_drag_icons),
        Symbol( "gtk_clist_set_reorderable",  cast(void**)& gtk_clist_set_reorderable),
        Symbol( "gtk_clist_set_selection_mode",  cast(void**)& gtk_clist_set_selection_mode),
        Symbol( "gtk_clist_set_shadow_type",  cast(void**)& gtk_clist_set_shadow_type),
        Symbol( "gtk_clist_get_vadjustment",  cast(void**)& gtk_clist_get_vadjustment),
        Symbol( "gtk_clist_get_hadjustment",  cast(void**)& gtk_clist_get_hadjustment),
        Symbol( "gtk_clist_set_vadjustment",  cast(void**)& gtk_clist_set_vadjustment),
        Symbol( "gtk_clist_set_hadjustment",  cast(void**)& gtk_clist_set_hadjustment),
        Symbol( "gtk_clist_new_with_titles",  cast(void**)& gtk_clist_new_with_titles),
        Symbol( "gtk_clist_new",  cast(void**)& gtk_clist_new),
        Symbol( "gtk_clist_get_type",  cast(void**)& gtk_clist_get_type),
        Symbol( "gtk_vscrollbar_new",  cast(void**)& gtk_vscrollbar_new),
        Symbol( "gtk_vscrollbar_get_type",  cast(void**)& gtk_vscrollbar_get_type),
        Symbol( "gtk_hscrollbar_new",  cast(void**)& gtk_hscrollbar_new),
        Symbol( "gtk_hscrollbar_get_type",  cast(void**)& gtk_hscrollbar_get_type),
        Symbol( "gtk_scrollbar_get_type",  cast(void**)& gtk_scrollbar_get_type),
    //     Symbol( "_gtk_range_get_wheel_delta",  cast(void**)& _gtk_range_get_wheel_delta),
        Symbol( "gtk_range_get_fill_level",  cast(void**)& gtk_range_get_fill_level),
        Symbol( "gtk_range_set_fill_level",  cast(void**)& gtk_range_set_fill_level),
        Symbol( "gtk_range_get_restrict_to_fill_level",  cast(void**)& gtk_range_get_restrict_to_fill_level),
        Symbol( "gtk_range_set_restrict_to_fill_level",  cast(void**)& gtk_range_set_restrict_to_fill_level),
        Symbol( "gtk_range_get_show_fill_level",  cast(void**)& gtk_range_get_show_fill_level),
        Symbol( "gtk_range_set_show_fill_level",  cast(void**)& gtk_range_set_show_fill_level),
        Symbol( "gtk_range_get_value",  cast(void**)& gtk_range_get_value),
        Symbol( "gtk_range_set_value",  cast(void**)& gtk_range_set_value),
        Symbol( "gtk_range_set_range",  cast(void**)& gtk_range_set_range),
        Symbol( "gtk_range_set_increments",  cast(void**)& gtk_range_set_increments),
        Symbol( "gtk_range_get_upper_stepper_sensitivity",  cast(void**)& gtk_range_get_upper_stepper_sensitivity),
        Symbol( "gtk_range_set_upper_stepper_sensitivity",  cast(void**)& gtk_range_set_upper_stepper_sensitivity),
        Symbol( "gtk_range_get_lower_stepper_sensitivity",  cast(void**)& gtk_range_get_lower_stepper_sensitivity),
        Symbol( "gtk_range_set_lower_stepper_sensitivity",  cast(void**)& gtk_range_set_lower_stepper_sensitivity),
        Symbol( "gtk_range_get_inverted",  cast(void**)& gtk_range_get_inverted),
        Symbol( "gtk_range_set_inverted",  cast(void**)& gtk_range_set_inverted),
        Symbol( "gtk_range_get_adjustment",  cast(void**)& gtk_range_get_adjustment),
        Symbol( "gtk_range_set_adjustment",  cast(void**)& gtk_range_set_adjustment),
        Symbol( "gtk_range_get_update_policy",  cast(void**)& gtk_range_get_update_policy),
        Symbol( "gtk_range_set_update_policy",  cast(void**)& gtk_range_set_update_policy),
        Symbol( "gtk_range_get_type",  cast(void**)& gtk_range_get_type),
    //     Symbol( "_gtk_clipboard_store_all",  cast(void**)& _gtk_clipboard_store_all),
    //     Symbol( "_gtk_clipboard_handle_event",  cast(void**)& _gtk_clipboard_handle_event),
        Symbol( "gtk_clipboard_store",  cast(void**)& gtk_clipboard_store),
        Symbol( "gtk_clipboard_set_can_store",  cast(void**)& gtk_clipboard_set_can_store),
        Symbol( "gtk_clipboard_wait_is_target_available",  cast(void**)& gtk_clipboard_wait_is_target_available),
        Symbol( "gtk_clipboard_wait_is_image_available",  cast(void**)& gtk_clipboard_wait_is_image_available),
        Symbol( "gtk_clipboard_wait_is_rich_text_available",  cast(void**)& gtk_clipboard_wait_is_rich_text_available),
        Symbol( "gtk_clipboard_wait_is_text_available",  cast(void**)& gtk_clipboard_wait_is_text_available),
        Symbol( "gtk_clipboard_wait_for_targets",  cast(void**)& gtk_clipboard_wait_for_targets),
        Symbol( "gtk_clipboard_wait_for_image",  cast(void**)& gtk_clipboard_wait_for_image),
        Symbol( "gtk_clipboard_wait_for_rich_text",  cast(void**)& gtk_clipboard_wait_for_rich_text),
        Symbol( "gtk_clipboard_wait_for_text",  cast(void**)& gtk_clipboard_wait_for_text),
        Symbol( "gtk_clipboard_wait_for_contents",  cast(void**)& gtk_clipboard_wait_for_contents),
        Symbol( "gtk_clipboard_request_targets",  cast(void**)& gtk_clipboard_request_targets),
        Symbol( "gtk_clipboard_request_image",  cast(void**)& gtk_clipboard_request_image),
        Symbol( "gtk_clipboard_request_rich_text",  cast(void**)& gtk_clipboard_request_rich_text),
        Symbol( "gtk_clipboard_request_text",  cast(void**)& gtk_clipboard_request_text),
        Symbol( "gtk_clipboard_request_contents",  cast(void**)& gtk_clipboard_request_contents),
        Symbol( "gtk_clipboard_set_image",  cast(void**)& gtk_clipboard_set_image),
        Symbol( "gtk_clipboard_set_text",  cast(void**)& gtk_clipboard_set_text),
        Symbol( "gtk_clipboard_clear",  cast(void**)& gtk_clipboard_clear),
        Symbol( "gtk_clipboard_get_owner",  cast(void**)& gtk_clipboard_get_owner),
        Symbol( "gtk_clipboard_set_with_owner",  cast(void**)& gtk_clipboard_set_with_owner),
        Symbol( "gtk_clipboard_set_with_data",  cast(void**)& gtk_clipboard_set_with_data),
        Symbol( "gtk_clipboard_get_display",  cast(void**)& gtk_clipboard_get_display),
        Symbol( "gtk_clipboard_get",  cast(void**)& gtk_clipboard_get),
        Symbol( "gtk_clipboard_get_for_display",  cast(void**)& gtk_clipboard_get_for_display),
        Symbol( "gtk_clipboard_get_type",  cast(void**)& gtk_clipboard_get_type),
        Symbol( "gtk_target_list_get_type",  cast(void**)& gtk_target_list_get_type),
        Symbol( "gtk_selection_data_free",  cast(void**)& gtk_selection_data_free),
        Symbol( "gtk_selection_data_copy",  cast(void**)& gtk_selection_data_copy),
        Symbol( "gtk_selection_data_get_type",  cast(void**)& gtk_selection_data_get_type),
    //     Symbol( "_gtk_selection_property_notify",  cast(void**)& _gtk_selection_property_notify),
    //     Symbol( "_gtk_selection_notify",  cast(void**)& _gtk_selection_notify),
    //     Symbol( "_gtk_selection_incr_event",  cast(void**)& _gtk_selection_incr_event),
    //     Symbol( "_gtk_selection_request",  cast(void**)& _gtk_selection_request),
        Symbol( "gtk_selection_clear",  cast(void**)& gtk_selection_clear),
        Symbol( "gtk_selection_remove_all",  cast(void**)& gtk_selection_remove_all),
        Symbol( "gtk_targets_include_uri",  cast(void**)& gtk_targets_include_uri),
        Symbol( "gtk_targets_include_image",  cast(void**)& gtk_targets_include_image),
        Symbol( "gtk_targets_include_rich_text",  cast(void**)& gtk_targets_include_rich_text),
        Symbol( "gtk_targets_include_text",  cast(void**)& gtk_targets_include_text),
        Symbol( "gtk_selection_data_targets_include_uri",  cast(void**)& gtk_selection_data_targets_include_uri),
        Symbol( "gtk_selection_data_targets_include_image",  cast(void**)& gtk_selection_data_targets_include_image),
        Symbol( "gtk_selection_data_targets_include_rich_text",  cast(void**)& gtk_selection_data_targets_include_rich_text),
        Symbol( "gtk_selection_data_targets_include_text",  cast(void**)& gtk_selection_data_targets_include_text),
        Symbol( "gtk_selection_data_get_targets",  cast(void**)& gtk_selection_data_get_targets),
        Symbol( "gtk_selection_data_get_uris",  cast(void**)& gtk_selection_data_get_uris),
        Symbol( "gtk_selection_data_set_uris",  cast(void**)& gtk_selection_data_set_uris),
        Symbol( "gtk_selection_data_get_pixbuf",  cast(void**)& gtk_selection_data_get_pixbuf),
        Symbol( "gtk_selection_data_set_pixbuf",  cast(void**)& gtk_selection_data_set_pixbuf),
        Symbol( "gtk_selection_data_get_text",  cast(void**)& gtk_selection_data_get_text),
        Symbol( "gtk_selection_data_set_text",  cast(void**)& gtk_selection_data_set_text),
        Symbol( "gtk_selection_data_set",  cast(void**)& gtk_selection_data_set),
        Symbol( "gtk_selection_convert",  cast(void**)& gtk_selection_convert),
        Symbol( "gtk_selection_clear_targets",  cast(void**)& gtk_selection_clear_targets),
        Symbol( "gtk_selection_add_targets",  cast(void**)& gtk_selection_add_targets),
        Symbol( "gtk_selection_add_target",  cast(void**)& gtk_selection_add_target),
        Symbol( "gtk_selection_owner_set_for_display",  cast(void**)& gtk_selection_owner_set_for_display),
        Symbol( "gtk_selection_owner_set",  cast(void**)& gtk_selection_owner_set),
        Symbol( "gtk_target_table_free",  cast(void**)& gtk_target_table_free),
        Symbol( "gtk_target_table_new_from_list",  cast(void**)& gtk_target_table_new_from_list),
        Symbol( "gtk_target_list_find",  cast(void**)& gtk_target_list_find),
        Symbol( "gtk_target_list_remove",  cast(void**)& gtk_target_list_remove),
        Symbol( "gtk_target_list_add_table",  cast(void**)& gtk_target_list_add_table),
        Symbol( "gtk_target_list_add_uri_targets",  cast(void**)& gtk_target_list_add_uri_targets),
        Symbol( "gtk_target_list_add_image_targets",  cast(void**)& gtk_target_list_add_image_targets),
        Symbol( "gtk_target_list_add_rich_text_targets",  cast(void**)& gtk_target_list_add_rich_text_targets),
        Symbol( "gtk_target_list_add_text_targets",  cast(void**)& gtk_target_list_add_text_targets),
        Symbol( "gtk_target_list_add",  cast(void**)& gtk_target_list_add),
        Symbol( "gtk_target_list_unref",  cast(void**)& gtk_target_list_unref),
        Symbol( "gtk_target_list_ref",  cast(void**)& gtk_target_list_ref),
        Symbol( "gtk_target_list_new",  cast(void**)& gtk_target_list_new),
        Symbol( "gtk_text_iter_order",  cast(void**)& gtk_text_iter_order),
        Symbol( "gtk_text_iter_in_range",  cast(void**)& gtk_text_iter_in_range),
        Symbol( "gtk_text_iter_compare",  cast(void**)& gtk_text_iter_compare),
        Symbol( "gtk_text_iter_equal",  cast(void**)& gtk_text_iter_equal),
        Symbol( "gtk_text_iter_backward_search",  cast(void**)& gtk_text_iter_backward_search),
        Symbol( "gtk_text_iter_forward_search",  cast(void**)& gtk_text_iter_forward_search),
        Symbol( "gtk_text_iter_backward_find_char",  cast(void**)& gtk_text_iter_backward_find_char),
        Symbol( "gtk_text_iter_forward_find_char",  cast(void**)& gtk_text_iter_forward_find_char),
        Symbol( "gtk_text_iter_backward_to_tag_toggle",  cast(void**)& gtk_text_iter_backward_to_tag_toggle),
        Symbol( "gtk_text_iter_forward_to_tag_toggle",  cast(void**)& gtk_text_iter_forward_to_tag_toggle),
        Symbol( "gtk_text_iter_set_visible_line_index",  cast(void**)& gtk_text_iter_set_visible_line_index),
        Symbol( "gtk_text_iter_set_visible_line_offset",  cast(void**)& gtk_text_iter_set_visible_line_offset),
        Symbol( "gtk_text_iter_forward_to_line_end",  cast(void**)& gtk_text_iter_forward_to_line_end),
        Symbol( "gtk_text_iter_forward_to_end",  cast(void**)& gtk_text_iter_forward_to_end),
        Symbol( "gtk_text_iter_set_line_index",  cast(void**)& gtk_text_iter_set_line_index),
        Symbol( "gtk_text_iter_set_line_offset",  cast(void**)& gtk_text_iter_set_line_offset),
        Symbol( "gtk_text_iter_set_line",  cast(void**)& gtk_text_iter_set_line),
        Symbol( "gtk_text_iter_set_offset",  cast(void**)& gtk_text_iter_set_offset),
        Symbol( "gtk_text_iter_backward_visible_cursor_positions",  cast(void**)& gtk_text_iter_backward_visible_cursor_positions),
        Symbol( "gtk_text_iter_forward_visible_cursor_positions",  cast(void**)& gtk_text_iter_forward_visible_cursor_positions),
        Symbol( "gtk_text_iter_backward_visible_cursor_position",  cast(void**)& gtk_text_iter_backward_visible_cursor_position),
        Symbol( "gtk_text_iter_forward_visible_cursor_position",  cast(void**)& gtk_text_iter_forward_visible_cursor_position),
        Symbol( "gtk_text_iter_backward_cursor_positions",  cast(void**)& gtk_text_iter_backward_cursor_positions),
        Symbol( "gtk_text_iter_forward_cursor_positions",  cast(void**)& gtk_text_iter_forward_cursor_positions),
        Symbol( "gtk_text_iter_backward_cursor_position",  cast(void**)& gtk_text_iter_backward_cursor_position),
        Symbol( "gtk_text_iter_forward_cursor_position",  cast(void**)& gtk_text_iter_forward_cursor_position),
        Symbol( "gtk_text_iter_backward_sentence_starts",  cast(void**)& gtk_text_iter_backward_sentence_starts),
        Symbol( "gtk_text_iter_forward_sentence_ends",  cast(void**)& gtk_text_iter_forward_sentence_ends),
        Symbol( "gtk_text_iter_backward_sentence_start",  cast(void**)& gtk_text_iter_backward_sentence_start),
        Symbol( "gtk_text_iter_forward_sentence_end",  cast(void**)& gtk_text_iter_forward_sentence_end),
        Symbol( "gtk_text_iter_backward_visible_word_starts",  cast(void**)& gtk_text_iter_backward_visible_word_starts),
        Symbol( "gtk_text_iter_forward_visible_word_ends",  cast(void**)& gtk_text_iter_forward_visible_word_ends),
        Symbol( "gtk_text_iter_backward_visible_word_start",  cast(void**)& gtk_text_iter_backward_visible_word_start),
        Symbol( "gtk_text_iter_forward_visible_word_end",  cast(void**)& gtk_text_iter_forward_visible_word_end),
        Symbol( "gtk_text_iter_backward_visible_lines",  cast(void**)& gtk_text_iter_backward_visible_lines),
        Symbol( "gtk_text_iter_forward_visible_lines",  cast(void**)& gtk_text_iter_forward_visible_lines),
        Symbol( "gtk_text_iter_backward_visible_line",  cast(void**)& gtk_text_iter_backward_visible_line),
        Symbol( "gtk_text_iter_forward_visible_line",  cast(void**)& gtk_text_iter_forward_visible_line),
        Symbol( "gtk_text_iter_backward_word_starts",  cast(void**)& gtk_text_iter_backward_word_starts),
        Symbol( "gtk_text_iter_forward_word_ends",  cast(void**)& gtk_text_iter_forward_word_ends),
        Symbol( "gtk_text_iter_backward_word_start",  cast(void**)& gtk_text_iter_backward_word_start),
        Symbol( "gtk_text_iter_forward_word_end",  cast(void**)& gtk_text_iter_forward_word_end),
        Symbol( "gtk_text_iter_backward_lines",  cast(void**)& gtk_text_iter_backward_lines),
        Symbol( "gtk_text_iter_forward_lines",  cast(void**)& gtk_text_iter_forward_lines),
        Symbol( "gtk_text_iter_backward_line",  cast(void**)& gtk_text_iter_backward_line),
        Symbol( "gtk_text_iter_forward_line",  cast(void**)& gtk_text_iter_forward_line),
        Symbol( "gtk_text_iter_backward_chars",  cast(void**)& gtk_text_iter_backward_chars),
        Symbol( "gtk_text_iter_forward_chars",  cast(void**)& gtk_text_iter_forward_chars),
        Symbol( "gtk_text_iter_backward_char",  cast(void**)& gtk_text_iter_backward_char),
        Symbol( "gtk_text_iter_forward_char",  cast(void**)& gtk_text_iter_forward_char),
        Symbol( "gtk_text_iter_is_start",  cast(void**)& gtk_text_iter_is_start),
        Symbol( "gtk_text_iter_is_end",  cast(void**)& gtk_text_iter_is_end),
        Symbol( "gtk_text_iter_get_language",  cast(void**)& gtk_text_iter_get_language),
        Symbol( "gtk_text_iter_get_attributes",  cast(void**)& gtk_text_iter_get_attributes),
        Symbol( "gtk_text_iter_get_bytes_in_line",  cast(void**)& gtk_text_iter_get_bytes_in_line),
        Symbol( "gtk_text_iter_get_chars_in_line",  cast(void**)& gtk_text_iter_get_chars_in_line),
        Symbol( "gtk_text_iter_is_cursor_position",  cast(void**)& gtk_text_iter_is_cursor_position),
        Symbol( "gtk_text_iter_ends_line",  cast(void**)& gtk_text_iter_ends_line),
        Symbol( "gtk_text_iter_starts_line",  cast(void**)& gtk_text_iter_starts_line),
        Symbol( "gtk_text_iter_inside_sentence",  cast(void**)& gtk_text_iter_inside_sentence),
        Symbol( "gtk_text_iter_ends_sentence",  cast(void**)& gtk_text_iter_ends_sentence),
        Symbol( "gtk_text_iter_starts_sentence",  cast(void**)& gtk_text_iter_starts_sentence),
        Symbol( "gtk_text_iter_inside_word",  cast(void**)& gtk_text_iter_inside_word),
        Symbol( "gtk_text_iter_ends_word",  cast(void**)& gtk_text_iter_ends_word),
        Symbol( "gtk_text_iter_starts_word",  cast(void**)& gtk_text_iter_starts_word),
        Symbol( "gtk_text_iter_can_insert",  cast(void**)& gtk_text_iter_can_insert),
        Symbol( "gtk_text_iter_editable",  cast(void**)& gtk_text_iter_editable),
        Symbol( "gtk_text_iter_get_tags",  cast(void**)& gtk_text_iter_get_tags),
        Symbol( "gtk_text_iter_has_tag",  cast(void**)& gtk_text_iter_has_tag),
        Symbol( "gtk_text_iter_toggles_tag",  cast(void**)& gtk_text_iter_toggles_tag),
        Symbol( "gtk_text_iter_ends_tag",  cast(void**)& gtk_text_iter_ends_tag),
        Symbol( "gtk_text_iter_begins_tag",  cast(void**)& gtk_text_iter_begins_tag),
        Symbol( "gtk_text_iter_get_toggled_tags",  cast(void**)& gtk_text_iter_get_toggled_tags),
        Symbol( "gtk_text_iter_get_child_anchor",  cast(void**)& gtk_text_iter_get_child_anchor),
        Symbol( "gtk_text_iter_get_marks",  cast(void**)& gtk_text_iter_get_marks),
        Symbol( "gtk_text_iter_get_pixbuf",  cast(void**)& gtk_text_iter_get_pixbuf),
        Symbol( "gtk_text_iter_get_visible_text",  cast(void**)& gtk_text_iter_get_visible_text),
        Symbol( "gtk_text_iter_get_visible_slice",  cast(void**)& gtk_text_iter_get_visible_slice),
        Symbol( "gtk_text_iter_get_text",  cast(void**)& gtk_text_iter_get_text),
        Symbol( "gtk_text_iter_get_slice",  cast(void**)& gtk_text_iter_get_slice),
        Symbol( "gtk_text_iter_get_char",  cast(void**)& gtk_text_iter_get_char),
        Symbol( "gtk_text_iter_get_visible_line_index",  cast(void**)& gtk_text_iter_get_visible_line_index),
        Symbol( "gtk_text_iter_get_visible_line_offset",  cast(void**)& gtk_text_iter_get_visible_line_offset),
        Symbol( "gtk_text_iter_get_line_index",  cast(void**)& gtk_text_iter_get_line_index),
        Symbol( "gtk_text_iter_get_line_offset",  cast(void**)& gtk_text_iter_get_line_offset),
        Symbol( "gtk_text_iter_get_line",  cast(void**)& gtk_text_iter_get_line),
        Symbol( "gtk_text_iter_get_offset",  cast(void**)& gtk_text_iter_get_offset),
        Symbol( "gtk_text_iter_get_type",  cast(void**)& gtk_text_iter_get_type),
        Symbol( "gtk_text_iter_free",  cast(void**)& gtk_text_iter_free),
        Symbol( "gtk_text_iter_copy",  cast(void**)& gtk_text_iter_copy),
        Symbol( "gtk_text_iter_get_buffer",  cast(void**)& gtk_text_iter_get_buffer),
        Symbol( "gtk_text_child_anchor_get_deleted",  cast(void**)& gtk_text_child_anchor_get_deleted),
        Symbol( "gtk_text_child_anchor_get_widgets",  cast(void**)& gtk_text_child_anchor_get_widgets),
        Symbol( "gtk_text_child_anchor_new",  cast(void**)& gtk_text_child_anchor_new),
        Symbol( "gtk_text_child_anchor_get_type",  cast(void**)& gtk_text_child_anchor_get_type),
        Symbol( "gtk_text_attributes_get_type",  cast(void**)& gtk_text_attributes_get_type),
        Symbol( "gtk_text_attributes_ref",  cast(void**)& gtk_text_attributes_ref),
        Symbol( "gtk_text_attributes_unref",  cast(void**)& gtk_text_attributes_unref),
        Symbol( "gtk_text_attributes_copy_values",  cast(void**)& gtk_text_attributes_copy_values),
        Symbol( "gtk_text_attributes_copy",  cast(void**)& gtk_text_attributes_copy),
        Symbol( "gtk_text_attributes_new",  cast(void**)& gtk_text_attributes_new),
        Symbol( "gtk_text_tag_event",  cast(void**)& gtk_text_tag_event),
        Symbol( "gtk_text_tag_set_priority",  cast(void**)& gtk_text_tag_set_priority),
        Symbol( "gtk_text_tag_get_priority",  cast(void**)& gtk_text_tag_get_priority),
        Symbol( "gtk_text_tag_new",  cast(void**)& gtk_text_tag_new),
        Symbol( "gtk_text_tag_get_type",  cast(void**)& gtk_text_tag_get_type),
        Symbol( "gtk_check_menu_item_set_show_toggle",  cast(void**)& gtk_check_menu_item_set_show_toggle),
        Symbol( "gtk_check_menu_item_get_draw_as_radio",  cast(void**)& gtk_check_menu_item_get_draw_as_radio),
        Symbol( "gtk_check_menu_item_set_draw_as_radio",  cast(void**)& gtk_check_menu_item_set_draw_as_radio),
        Symbol( "gtk_check_menu_item_get_inconsistent",  cast(void**)& gtk_check_menu_item_get_inconsistent),
        Symbol( "gtk_check_menu_item_set_inconsistent",  cast(void**)& gtk_check_menu_item_set_inconsistent),
        Symbol( "gtk_check_menu_item_toggled",  cast(void**)& gtk_check_menu_item_toggled),
        Symbol( "gtk_check_menu_item_get_active",  cast(void**)& gtk_check_menu_item_get_active),
        Symbol( "gtk_check_menu_item_set_active",  cast(void**)& gtk_check_menu_item_set_active),
        Symbol( "gtk_check_menu_item_new_with_mnemonic",  cast(void**)& gtk_check_menu_item_new_with_mnemonic),
        Symbol( "gtk_check_menu_item_new_with_label",  cast(void**)& gtk_check_menu_item_new_with_label),
        Symbol( "gtk_check_menu_item_new",  cast(void**)& gtk_check_menu_item_new),
        Symbol( "gtk_check_menu_item_get_type",  cast(void**)& gtk_check_menu_item_get_type),
        Symbol( "gtk_menu_item_remove_submenu",  cast(void**)& gtk_menu_item_remove_submenu),
    //     Symbol( "_gtk_menu_item_popdown_submenu",  cast(void**)& _gtk_menu_item_popdown_submenu),
    //     Symbol( "_gtk_menu_item_popup_submenu",  cast(void**)& _gtk_menu_item_popup_submenu),
    //     Symbol( "_gtk_menu_item_is_selectable",  cast(void**)& _gtk_menu_item_is_selectable),
    //     Symbol( "_gtk_menu_item_refresh_accel_path",  cast(void**)& _gtk_menu_item_refresh_accel_path),
        Symbol( "gtk_menu_item_set_accel_path",  cast(void**)& gtk_menu_item_set_accel_path),
        Symbol( "gtk_menu_item_get_right_justified",  cast(void**)& gtk_menu_item_get_right_justified),
        Symbol( "gtk_menu_item_set_right_justified",  cast(void**)& gtk_menu_item_set_right_justified),
        Symbol( "gtk_menu_item_toggle_size_allocate",  cast(void**)& gtk_menu_item_toggle_size_allocate),
        Symbol( "gtk_menu_item_toggle_size_request",  cast(void**)& gtk_menu_item_toggle_size_request),
        Symbol( "gtk_menu_item_activate",  cast(void**)& gtk_menu_item_activate),
        Symbol( "gtk_menu_item_deselect",  cast(void**)& gtk_menu_item_deselect),
        Symbol( "gtk_menu_item_select",  cast(void**)& gtk_menu_item_select),
        Symbol( "gtk_menu_item_get_submenu",  cast(void**)& gtk_menu_item_get_submenu),
        Symbol( "gtk_menu_item_set_submenu",  cast(void**)& gtk_menu_item_set_submenu),
        Symbol( "gtk_menu_item_new_with_mnemonic",  cast(void**)& gtk_menu_item_new_with_mnemonic),
        Symbol( "gtk_menu_item_new_with_label",  cast(void**)& gtk_menu_item_new_with_label),
        Symbol( "gtk_menu_item_new",  cast(void**)& gtk_menu_item_new),
        Symbol( "gtk_menu_item_get_type",  cast(void**)& gtk_menu_item_get_type),
        Symbol( "gtk_item_toggle",  cast(void**)& gtk_item_toggle),
        Symbol( "gtk_item_deselect",  cast(void**)& gtk_item_deselect),
        Symbol( "gtk_item_select",  cast(void**)& gtk_item_select),
        Symbol( "gtk_item_get_type",  cast(void**)& gtk_item_get_type),
    //     Symbol( "_gtk_check_button_get_props",  cast(void**)& _gtk_check_button_get_props),
        Symbol( "gtk_check_button_new_with_mnemonic",  cast(void**)& gtk_check_button_new_with_mnemonic),
        Symbol( "gtk_check_button_new_with_label",  cast(void**)& gtk_check_button_new_with_label),
        Symbol( "gtk_check_button_new",  cast(void**)& gtk_check_button_new),
        Symbol( "gtk_check_button_get_type",  cast(void**)& gtk_check_button_get_type),
        Symbol( "gtk_toggle_button_get_inconsistent",  cast(void**)& gtk_toggle_button_get_inconsistent),
        Symbol( "gtk_toggle_button_set_inconsistent",  cast(void**)& gtk_toggle_button_set_inconsistent),
        Symbol( "gtk_toggle_button_toggled",  cast(void**)& gtk_toggle_button_toggled),
        Symbol( "gtk_toggle_button_get_active",  cast(void**)& gtk_toggle_button_get_active),
        Symbol( "gtk_toggle_button_set_active",  cast(void**)& gtk_toggle_button_set_active),
        Symbol( "gtk_toggle_button_get_mode",  cast(void**)& gtk_toggle_button_get_mode),
        Symbol( "gtk_toggle_button_set_mode",  cast(void**)& gtk_toggle_button_set_mode),
        Symbol( "gtk_toggle_button_new_with_mnemonic",  cast(void**)& gtk_toggle_button_new_with_mnemonic),
        Symbol( "gtk_toggle_button_new_with_label",  cast(void**)& gtk_toggle_button_new_with_label),
        Symbol( "gtk_toggle_button_new",  cast(void**)& gtk_toggle_button_new),
        Symbol( "gtk_toggle_button_get_type",  cast(void**)& gtk_toggle_button_get_type),
        Symbol( "gtk_cell_view_get_cell_renderers",  cast(void**)& gtk_cell_view_get_cell_renderers),
        Symbol( "gtk_cell_view_set_background_color",  cast(void**)& gtk_cell_view_set_background_color),
        Symbol( "gtk_cell_view_get_size_of_row",  cast(void**)& gtk_cell_view_get_size_of_row),
        Symbol( "gtk_cell_view_get_displayed_row",  cast(void**)& gtk_cell_view_get_displayed_row),
        Symbol( "gtk_cell_view_set_displayed_row",  cast(void**)& gtk_cell_view_set_displayed_row),
        Symbol( "gtk_cell_view_set_model",  cast(void**)& gtk_cell_view_set_model),
        Symbol( "gtk_cell_view_new_with_pixbuf",  cast(void**)& gtk_cell_view_new_with_pixbuf),
        Symbol( "gtk_cell_view_new_with_markup",  cast(void**)& gtk_cell_view_new_with_markup),
        Symbol( "gtk_cell_view_new_with_text",  cast(void**)& gtk_cell_view_new_with_text),
        Symbol( "gtk_cell_view_new",  cast(void**)& gtk_cell_view_new),
        Symbol( "gtk_cell_view_get_type",  cast(void**)& gtk_cell_view_get_type),
        Symbol( "gtk_cell_renderer_toggle_set_active",  cast(void**)& gtk_cell_renderer_toggle_set_active),
        Symbol( "gtk_cell_renderer_toggle_get_active",  cast(void**)& gtk_cell_renderer_toggle_get_active),
        Symbol( "gtk_cell_renderer_toggle_set_radio",  cast(void**)& gtk_cell_renderer_toggle_set_radio),
        Symbol( "gtk_cell_renderer_toggle_get_radio",  cast(void**)& gtk_cell_renderer_toggle_get_radio),
        Symbol( "gtk_cell_renderer_toggle_new",  cast(void**)& gtk_cell_renderer_toggle_new),
        Symbol( "gtk_cell_renderer_toggle_get_type",  cast(void**)& gtk_cell_renderer_toggle_get_type),
        Symbol( "gtk_cell_renderer_spin_new",  cast(void**)& gtk_cell_renderer_spin_new),
        Symbol( "gtk_cell_renderer_spin_get_type",  cast(void**)& gtk_cell_renderer_spin_get_type),
        Symbol( "gtk_cell_renderer_progress_new",  cast(void**)& gtk_cell_renderer_progress_new),
        Symbol( "gtk_cell_renderer_progress_get_type",  cast(void**)& gtk_cell_renderer_progress_get_type),
        Symbol( "gtk_cell_renderer_pixbuf_new",  cast(void**)& gtk_cell_renderer_pixbuf_new),
        Symbol( "gtk_cell_renderer_pixbuf_get_type",  cast(void**)& gtk_cell_renderer_pixbuf_get_type),
        Symbol( "gtk_cell_renderer_combo_new",  cast(void**)& gtk_cell_renderer_combo_new),
        Symbol( "gtk_cell_renderer_combo_get_type",  cast(void**)& gtk_cell_renderer_combo_get_type),
        Symbol( "gtk_cell_renderer_accel_new",  cast(void**)& gtk_cell_renderer_accel_new),
        Symbol( "gtk_cell_renderer_accel_get_type",  cast(void**)& gtk_cell_renderer_accel_get_type),
        Symbol( "gtk_cell_renderer_text_set_fixed_height_from_font",  cast(void**)& gtk_cell_renderer_text_set_fixed_height_from_font),
        Symbol( "gtk_cell_renderer_text_new",  cast(void**)& gtk_cell_renderer_text_new),
        Symbol( "gtk_cell_renderer_text_get_type",  cast(void**)& gtk_cell_renderer_text_get_type),
    //     Symbol( "_gtk_cell_layout_buildable_add_child",  cast(void**)& _gtk_cell_layout_buildable_add_child),
    //     Symbol( "_gtk_cell_layout_buildable_custom_tag_end",  cast(void**)& _gtk_cell_layout_buildable_custom_tag_end),
    //     Symbol( "_gtk_cell_layout_buildable_custom_tag_start",  cast(void**)& _gtk_cell_layout_buildable_custom_tag_start),
        Symbol( "gtk_cell_layout_reorder",  cast(void**)& gtk_cell_layout_reorder),
        Symbol( "gtk_cell_layout_clear_attributes",  cast(void**)& gtk_cell_layout_clear_attributes),
        Symbol( "gtk_cell_layout_set_cell_data_func",  cast(void**)& gtk_cell_layout_set_cell_data_func),
        Symbol( "gtk_cell_layout_add_attribute",  cast(void**)& gtk_cell_layout_add_attribute),
        Symbol( "gtk_cell_layout_set_attributes",  cast(void**)& gtk_cell_layout_set_attributes),
        Symbol( "gtk_cell_layout_clear",  cast(void**)& gtk_cell_layout_clear),
        Symbol( "gtk_cell_layout_get_cells",  cast(void**)& gtk_cell_layout_get_cells),
        Symbol( "gtk_cell_layout_pack_end",  cast(void**)& gtk_cell_layout_pack_end),
        Symbol( "gtk_cell_layout_pack_start",  cast(void**)& gtk_cell_layout_pack_start),
        Symbol( "gtk_cell_layout_get_type",  cast(void**)& gtk_cell_layout_get_type),
        Symbol( "gtk_tree_view_column_get_tree_view",  cast(void**)& gtk_tree_view_column_get_tree_view),
        Symbol( "gtk_tree_view_column_queue_resize",  cast(void**)& gtk_tree_view_column_queue_resize),
        Symbol( "gtk_tree_view_column_cell_get_position",  cast(void**)& gtk_tree_view_column_cell_get_position),
        Symbol( "gtk_tree_view_column_focus_cell",  cast(void**)& gtk_tree_view_column_focus_cell),
        Symbol( "gtk_tree_view_column_cell_is_visible",  cast(void**)& gtk_tree_view_column_cell_is_visible),
        Symbol( "gtk_tree_view_column_cell_get_size",  cast(void**)& gtk_tree_view_column_cell_get_size),
        Symbol( "gtk_tree_view_column_cell_set_cell_data",  cast(void**)& gtk_tree_view_column_cell_set_cell_data),
        Symbol( "gtk_tree_view_column_get_sort_order",  cast(void**)& gtk_tree_view_column_get_sort_order),
        Symbol( "gtk_tree_view_column_set_sort_order",  cast(void**)& gtk_tree_view_column_set_sort_order),
        Symbol( "gtk_tree_view_column_get_sort_indicator",  cast(void**)& gtk_tree_view_column_get_sort_indicator),
        Symbol( "gtk_tree_view_column_set_sort_indicator",  cast(void**)& gtk_tree_view_column_set_sort_indicator),
        Symbol( "gtk_tree_view_column_get_sort_column_id",  cast(void**)& gtk_tree_view_column_get_sort_column_id),
        Symbol( "gtk_tree_view_column_set_sort_column_id",  cast(void**)& gtk_tree_view_column_set_sort_column_id),
        Symbol( "gtk_tree_view_column_get_reorderable",  cast(void**)& gtk_tree_view_column_get_reorderable),
        Symbol( "gtk_tree_view_column_set_reorderable",  cast(void**)& gtk_tree_view_column_set_reorderable),
        Symbol( "gtk_tree_view_column_get_alignment",  cast(void**)& gtk_tree_view_column_get_alignment),
        Symbol( "gtk_tree_view_column_set_alignment",  cast(void**)& gtk_tree_view_column_set_alignment),
        Symbol( "gtk_tree_view_column_get_widget",  cast(void**)& gtk_tree_view_column_get_widget),
        Symbol( "gtk_tree_view_column_set_widget",  cast(void**)& gtk_tree_view_column_set_widget),
        Symbol( "gtk_tree_view_column_get_clickable",  cast(void**)& gtk_tree_view_column_get_clickable),
        Symbol( "gtk_tree_view_column_set_clickable",  cast(void**)& gtk_tree_view_column_set_clickable),
        Symbol( "gtk_tree_view_column_get_expand",  cast(void**)& gtk_tree_view_column_get_expand),
        Symbol( "gtk_tree_view_column_set_expand",  cast(void**)& gtk_tree_view_column_set_expand),
        Symbol( "gtk_tree_view_column_get_title",  cast(void**)& gtk_tree_view_column_get_title),
        Symbol( "gtk_tree_view_column_set_title",  cast(void**)& gtk_tree_view_column_set_title),
        Symbol( "gtk_tree_view_column_clicked",  cast(void**)& gtk_tree_view_column_clicked),
        Symbol( "gtk_tree_view_column_get_max_width",  cast(void**)& gtk_tree_view_column_get_max_width),
        Symbol( "gtk_tree_view_column_set_max_width",  cast(void**)& gtk_tree_view_column_set_max_width),
        Symbol( "gtk_tree_view_column_get_min_width",  cast(void**)& gtk_tree_view_column_get_min_width),
        Symbol( "gtk_tree_view_column_set_min_width",  cast(void**)& gtk_tree_view_column_set_min_width),
        Symbol( "gtk_tree_view_column_set_fixed_width",  cast(void**)& gtk_tree_view_column_set_fixed_width),
        Symbol( "gtk_tree_view_column_get_fixed_width",  cast(void**)& gtk_tree_view_column_get_fixed_width),
        Symbol( "gtk_tree_view_column_get_width",  cast(void**)& gtk_tree_view_column_get_width),
        Symbol( "gtk_tree_view_column_get_sizing",  cast(void**)& gtk_tree_view_column_get_sizing),
        Symbol( "gtk_tree_view_column_set_sizing",  cast(void**)& gtk_tree_view_column_set_sizing),
        Symbol( "gtk_tree_view_column_get_resizable",  cast(void**)& gtk_tree_view_column_get_resizable),
        Symbol( "gtk_tree_view_column_set_resizable",  cast(void**)& gtk_tree_view_column_set_resizable),
        Symbol( "gtk_tree_view_column_get_visible",  cast(void**)& gtk_tree_view_column_get_visible),
        Symbol( "gtk_tree_view_column_set_visible",  cast(void**)& gtk_tree_view_column_set_visible),
        Symbol( "gtk_tree_view_column_get_spacing",  cast(void**)& gtk_tree_view_column_get_spacing),
        Symbol( "gtk_tree_view_column_set_spacing",  cast(void**)& gtk_tree_view_column_set_spacing),
        Symbol( "gtk_tree_view_column_clear_attributes",  cast(void**)& gtk_tree_view_column_clear_attributes),
        Symbol( "gtk_tree_view_column_set_cell_data_func",  cast(void**)& gtk_tree_view_column_set_cell_data_func),
        Symbol( "gtk_tree_view_column_set_attributes",  cast(void**)& gtk_tree_view_column_set_attributes),
        Symbol( "gtk_tree_view_column_add_attribute",  cast(void**)& gtk_tree_view_column_add_attribute),
        Symbol( "gtk_tree_view_column_get_cell_renderers",  cast(void**)& gtk_tree_view_column_get_cell_renderers),
        Symbol( "gtk_tree_view_column_clear",  cast(void**)& gtk_tree_view_column_clear),
        Symbol( "gtk_tree_view_column_pack_end",  cast(void**)& gtk_tree_view_column_pack_end),
        Symbol( "gtk_tree_view_column_pack_start",  cast(void**)& gtk_tree_view_column_pack_start),
        Symbol( "gtk_tree_view_column_new_with_attributes",  cast(void**)& gtk_tree_view_column_new_with_attributes),
        Symbol( "gtk_tree_view_column_new",  cast(void**)& gtk_tree_view_column_new),
        Symbol( "gtk_tree_view_column_get_type",  cast(void**)& gtk_tree_view_column_get_type),
        Symbol( "gtk_tree_sortable_has_default_sort_func",  cast(void**)& gtk_tree_sortable_has_default_sort_func),
        Symbol( "gtk_tree_sortable_set_default_sort_func",  cast(void**)& gtk_tree_sortable_set_default_sort_func),
        Symbol( "gtk_tree_sortable_set_sort_func",  cast(void**)& gtk_tree_sortable_set_sort_func),
        Symbol( "gtk_tree_sortable_set_sort_column_id",  cast(void**)& gtk_tree_sortable_set_sort_column_id),
        Symbol( "gtk_tree_sortable_get_sort_column_id",  cast(void**)& gtk_tree_sortable_get_sort_column_id),
        Symbol( "gtk_tree_sortable_sort_column_changed",  cast(void**)& gtk_tree_sortable_sort_column_changed),
        Symbol( "gtk_tree_sortable_get_type",  cast(void**)& gtk_tree_sortable_get_type),
        Symbol( "gtk_tree_model_rows_reordered",  cast(void**)& gtk_tree_model_rows_reordered),
        Symbol( "gtk_tree_model_row_deleted",  cast(void**)& gtk_tree_model_row_deleted),
        Symbol( "gtk_tree_model_row_has_child_toggled",  cast(void**)& gtk_tree_model_row_has_child_toggled),
        Symbol( "gtk_tree_model_row_inserted",  cast(void**)& gtk_tree_model_row_inserted),
        Symbol( "gtk_tree_model_row_changed",  cast(void**)& gtk_tree_model_row_changed),
        Symbol( "gtk_tree_model_foreach",  cast(void**)& gtk_tree_model_foreach),
        Symbol( "gtk_tree_model_get_valist",  cast(void**)& gtk_tree_model_get_valist),
        Symbol( "gtk_tree_model_get",  cast(void**)& gtk_tree_model_get),
        Symbol( "gtk_tree_model_unref_node",  cast(void**)& gtk_tree_model_unref_node),
        Symbol( "gtk_tree_model_ref_node",  cast(void**)& gtk_tree_model_ref_node),
        Symbol( "gtk_tree_model_iter_parent",  cast(void**)& gtk_tree_model_iter_parent),
        Symbol( "gtk_tree_model_iter_nth_child",  cast(void**)& gtk_tree_model_iter_nth_child),
        Symbol( "gtk_tree_model_iter_n_children",  cast(void**)& gtk_tree_model_iter_n_children),
        Symbol( "gtk_tree_model_iter_has_child",  cast(void**)& gtk_tree_model_iter_has_child),
        Symbol( "gtk_tree_model_iter_children",  cast(void**)& gtk_tree_model_iter_children),
        Symbol( "gtk_tree_model_iter_next",  cast(void**)& gtk_tree_model_iter_next),
        Symbol( "gtk_tree_model_get_value",  cast(void**)& gtk_tree_model_get_value),
        Symbol( "gtk_tree_model_get_path",  cast(void**)& gtk_tree_model_get_path),
        Symbol( "gtk_tree_model_get_iter_first",  cast(void**)& gtk_tree_model_get_iter_first),
        Symbol( "gtk_tree_model_get_string_from_iter",  cast(void**)& gtk_tree_model_get_string_from_iter),
        Symbol( "gtk_tree_model_get_iter_from_string",  cast(void**)& gtk_tree_model_get_iter_from_string),
        Symbol( "gtk_tree_model_get_iter",  cast(void**)& gtk_tree_model_get_iter),
        Symbol( "gtk_tree_model_get_column_type",  cast(void**)& gtk_tree_model_get_column_type),
        Symbol( "gtk_tree_model_get_n_columns",  cast(void**)& gtk_tree_model_get_n_columns),
        Symbol( "gtk_tree_model_get_flags",  cast(void**)& gtk_tree_model_get_flags),
        Symbol( "gtk_tree_model_get_type",  cast(void**)& gtk_tree_model_get_type),
        Symbol( "gtk_tree_iter_get_type",  cast(void**)& gtk_tree_iter_get_type),
        Symbol( "gtk_tree_iter_free",  cast(void**)& gtk_tree_iter_free),
        Symbol( "gtk_tree_iter_copy",  cast(void**)& gtk_tree_iter_copy),
        Symbol( "gtk_tree_row_reference_reordered",  cast(void**)& gtk_tree_row_reference_reordered),
        Symbol( "gtk_tree_row_reference_deleted",  cast(void**)& gtk_tree_row_reference_deleted),
        Symbol( "gtk_tree_row_reference_inserted",  cast(void**)& gtk_tree_row_reference_inserted),
        Symbol( "gtk_tree_row_reference_free",  cast(void**)& gtk_tree_row_reference_free),
        Symbol( "gtk_tree_row_reference_copy",  cast(void**)& gtk_tree_row_reference_copy),
        Symbol( "gtk_tree_row_reference_valid",  cast(void**)& gtk_tree_row_reference_valid),
        Symbol( "gtk_tree_row_reference_get_model",  cast(void**)& gtk_tree_row_reference_get_model),
        Symbol( "gtk_tree_row_reference_get_path",  cast(void**)& gtk_tree_row_reference_get_path),
        Symbol( "gtk_tree_row_reference_new_proxy",  cast(void**)& gtk_tree_row_reference_new_proxy),
        Symbol( "gtk_tree_row_reference_new",  cast(void**)& gtk_tree_row_reference_new),
        Symbol( "gtk_tree_row_reference_get_type",  cast(void**)& gtk_tree_row_reference_get_type),
        Symbol( "gtk_tree_path_is_descendant",  cast(void**)& gtk_tree_path_is_descendant),
        Symbol( "gtk_tree_path_is_ancestor",  cast(void**)& gtk_tree_path_is_ancestor),
        Symbol( "gtk_tree_path_down",  cast(void**)& gtk_tree_path_down),
        Symbol( "gtk_tree_path_up",  cast(void**)& gtk_tree_path_up),
        Symbol( "gtk_tree_path_prev",  cast(void**)& gtk_tree_path_prev),
        Symbol( "gtk_tree_path_next",  cast(void**)& gtk_tree_path_next),
        Symbol( "gtk_tree_path_compare",  cast(void**)& gtk_tree_path_compare),
        Symbol( "gtk_tree_path_get_type",  cast(void**)& gtk_tree_path_get_type),
        Symbol( "gtk_tree_path_copy",  cast(void**)& gtk_tree_path_copy),
        Symbol( "gtk_tree_path_free",  cast(void**)& gtk_tree_path_free),
        Symbol( "gtk_tree_path_get_indices",  cast(void**)& gtk_tree_path_get_indices),
        Symbol( "gtk_tree_path_get_depth",  cast(void**)& gtk_tree_path_get_depth),
        Symbol( "gtk_tree_path_prepend_index",  cast(void**)& gtk_tree_path_prepend_index),
        Symbol( "gtk_tree_path_append_index",  cast(void**)& gtk_tree_path_append_index),
        Symbol( "gtk_tree_path_new_first",  cast(void**)& gtk_tree_path_new_first),
        Symbol( "gtk_tree_path_to_string",  cast(void**)& gtk_tree_path_to_string),
        Symbol( "gtk_tree_path_new_from_indices",  cast(void**)& gtk_tree_path_new_from_indices),
        Symbol( "gtk_tree_path_new_from_string",  cast(void**)& gtk_tree_path_new_from_string),
        Symbol( "gtk_tree_path_new",  cast(void**)& gtk_tree_path_new),
        Symbol( "gtk_cell_renderer_stop_editing",  cast(void**)& gtk_cell_renderer_stop_editing),
        Symbol( "gtk_cell_renderer_editing_canceled",  cast(void**)& gtk_cell_renderer_editing_canceled),
        Symbol( "gtk_cell_renderer_get_fixed_size",  cast(void**)& gtk_cell_renderer_get_fixed_size),
        Symbol( "gtk_cell_renderer_set_fixed_size",  cast(void**)& gtk_cell_renderer_set_fixed_size),
        Symbol( "gtk_cell_renderer_start_editing",  cast(void**)& gtk_cell_renderer_start_editing),
        Symbol( "gtk_cell_renderer_activate",  cast(void**)& gtk_cell_renderer_activate),
        Symbol( "gtk_cell_renderer_render",  cast(void**)& gtk_cell_renderer_render),
        Symbol( "gtk_cell_renderer_get_size",  cast(void**)& gtk_cell_renderer_get_size),
        Symbol( "gtk_cell_renderer_get_type",  cast(void**)& gtk_cell_renderer_get_type),
        Symbol( "gtk_cell_editable_remove_widget",  cast(void**)& gtk_cell_editable_remove_widget),
        Symbol( "gtk_cell_editable_editing_done",  cast(void**)& gtk_cell_editable_editing_done),
        Symbol( "gtk_cell_editable_start_editing",  cast(void**)& gtk_cell_editable_start_editing),
        Symbol( "gtk_cell_editable_get_type",  cast(void**)& gtk_cell_editable_get_type),
        Symbol( "gtk_calendar_thaw",  cast(void**)& gtk_calendar_thaw),
        Symbol( "gtk_calendar_freeze",  cast(void**)& gtk_calendar_freeze),
        Symbol( "gtk_calendar_get_date",  cast(void**)& gtk_calendar_get_date),
        Symbol( "gtk_calendar_display_options",  cast(void**)& gtk_calendar_display_options),
        Symbol( "gtk_calendar_get_display_options",  cast(void**)& gtk_calendar_get_display_options),
        Symbol( "gtk_calendar_set_display_options",  cast(void**)& gtk_calendar_set_display_options),
        Symbol( "gtk_calendar_clear_marks",  cast(void**)& gtk_calendar_clear_marks),
        Symbol( "gtk_calendar_unmark_day",  cast(void**)& gtk_calendar_unmark_day),
        Symbol( "gtk_calendar_mark_day",  cast(void**)& gtk_calendar_mark_day),
        Symbol( "gtk_calendar_select_day",  cast(void**)& gtk_calendar_select_day),
        Symbol( "gtk_calendar_select_month",  cast(void**)& gtk_calendar_select_month),
        Symbol( "gtk_calendar_new",  cast(void**)& gtk_calendar_new),
        Symbol( "gtk_calendar_get_type",  cast(void**)& gtk_calendar_get_type),
        Symbol( "gtk_signal_compat_matched",  cast(void**)& gtk_signal_compat_matched),
        Symbol( "gtk_signal_emitv_by_name",  cast(void**)& gtk_signal_emitv_by_name),
        Symbol( "gtk_signal_emit_by_name",  cast(void**)& gtk_signal_emit_by_name),
        Symbol( "gtk_signal_emit",  cast(void**)& gtk_signal_emit),
        Symbol( "gtk_signal_emitv",  cast(void**)& gtk_signal_emitv),
        Symbol( "gtk_signal_connect_full",  cast(void**)& gtk_signal_connect_full),
        Symbol( "gtk_signal_connect_while_alive",  cast(void**)& gtk_signal_connect_while_alive),
        Symbol( "gtk_signal_connect_object_while_alive",  cast(void**)& gtk_signal_connect_object_while_alive),
        Symbol( "gtk_signal_emit_stop_by_name",  cast(void**)& gtk_signal_emit_stop_by_name),
        Symbol( "gtk_signal_new",  cast(void**)& gtk_signal_new),
        Symbol( "gtk_signal_newv",  cast(void**)& gtk_signal_newv),
        Symbol( "gtk_marshal_VOID__UINT_STRING",  cast(void**)& gtk_marshal_VOID__UINT_STRING),
        Symbol( "gtk_marshal_VOID__UINT_POINTER_UINT_UINT_ENUM",  cast(void**)& gtk_marshal_VOID__UINT_POINTER_UINT_UINT_ENUM),
        Symbol( "gtk_marshal_VOID__UINT_POINTER_UINT_ENUM_ENUM_POINTER",  cast(void**)& gtk_marshal_VOID__UINT_POINTER_UINT_ENUM_ENUM_POINTER),
        Symbol( "gtk_marshal_VOID__STRING_INT_POINTER",  cast(void**)& gtk_marshal_VOID__STRING_INT_POINTER),
        Symbol( "gtk_marshal_VOID__POINTER_UINT_UINT",  cast(void**)& gtk_marshal_VOID__POINTER_UINT_UINT),
        Symbol( "gtk_marshal_VOID__POINTER_INT_INT_POINTER_UINT_UINT",  cast(void**)& gtk_marshal_VOID__POINTER_INT_INT_POINTER_UINT_UINT),
        Symbol( "gtk_marshal_VOID__POINTER_POINTER_UINT_UINT",  cast(void**)& gtk_marshal_VOID__POINTER_POINTER_UINT_UINT),
        Symbol( "gtk_marshal_VOID__POINTER_UINT_ENUM",  cast(void**)& gtk_marshal_VOID__POINTER_UINT_ENUM),
        Symbol( "gtk_marshal_VOID__POINTER_UINT",  cast(void**)& gtk_marshal_VOID__POINTER_UINT),
        Symbol( "gtk_marshal_VOID__POINTER_STRING_STRING",  cast(void**)& gtk_marshal_VOID__POINTER_STRING_STRING),
        Symbol( "gtk_marshal_VOID__POINTER_POINTER_POINTER",  cast(void**)& gtk_marshal_VOID__POINTER_POINTER_POINTER),
        Symbol( "gtk_marshal_VOID__POINTER_POINTER",  cast(void**)& gtk_marshal_VOID__POINTER_POINTER),
        Symbol( "gtk_marshal_VOID__POINTER_INT",  cast(void**)& gtk_marshal_VOID__POINTER_INT),
        Symbol( "gtk_marshal_VOID__INT_INT_POINTER",  cast(void**)& gtk_marshal_VOID__INT_INT_POINTER),
        Symbol( "gtk_marshal_VOID__INT_INT",  cast(void**)& gtk_marshal_VOID__INT_INT),
        Symbol( "gtk_marshal_VOID__ENUM_FLOAT_BOOLEAN",  cast(void**)& gtk_marshal_VOID__ENUM_FLOAT_BOOLEAN),
        Symbol( "gtk_marshal_VOID__ENUM_FLOAT",  cast(void**)& gtk_marshal_VOID__ENUM_FLOAT),
        Symbol( "gtk_marshal_INT__POINTER_CHAR_CHAR",  cast(void**)& gtk_marshal_INT__POINTER_CHAR_CHAR),
        Symbol( "gtk_marshal_INT__POINTER",  cast(void**)& gtk_marshal_INT__POINTER),
        Symbol( "gtk_marshal_ENUM__ENUM",  cast(void**)& gtk_marshal_ENUM__ENUM),
        Symbol( "gtk_marshal_BOOLEAN__POINTER_STRING_STRING_POINTER",  cast(void**)& gtk_marshal_BOOLEAN__POINTER_STRING_STRING_POINTER),
        Symbol( "gtk_marshal_BOOLEAN__POINTER_INT_INT_UINT",  cast(void**)& gtk_marshal_BOOLEAN__POINTER_INT_INT_UINT),
        Symbol( "gtk_marshal_BOOLEAN__POINTER_INT_INT",  cast(void**)& gtk_marshal_BOOLEAN__POINTER_INT_INT),
        Symbol( "gtk_marshal_BOOLEAN__POINTER_POINTER_INT_INT",  cast(void**)& gtk_marshal_BOOLEAN__POINTER_POINTER_INT_INT),
        Symbol( "gtk_marshal_BOOLEAN__POINTER",  cast(void**)& gtk_marshal_BOOLEAN__POINTER),
        Symbol( "gtk_marshal_BOOLEAN__VOID",  cast(void**)& gtk_marshal_BOOLEAN__VOID),
    //     Symbol( "_gtk_button_paint",  cast(void**)& _gtk_button_paint),
    //     Symbol( "_gtk_button_set_depressed",  cast(void**)& _gtk_button_set_depressed),
        Symbol( "gtk_button_get_image_position",  cast(void**)& gtk_button_get_image_position),
        Symbol( "gtk_button_set_image_position",  cast(void**)& gtk_button_set_image_position),
        Symbol( "gtk_button_get_image",  cast(void**)& gtk_button_get_image),
        Symbol( "gtk_button_set_image",  cast(void**)& gtk_button_set_image),
        Symbol( "gtk_button_get_alignment",  cast(void**)& gtk_button_get_alignment),
        Symbol( "gtk_button_set_alignment",  cast(void**)& gtk_button_set_alignment),
        Symbol( "gtk_button_get_focus_on_click",  cast(void**)& gtk_button_get_focus_on_click),
        Symbol( "gtk_button_set_focus_on_click",  cast(void**)& gtk_button_set_focus_on_click),
        Symbol( "gtk_button_get_use_stock",  cast(void**)& gtk_button_get_use_stock),
        Symbol( "gtk_button_set_use_stock",  cast(void**)& gtk_button_set_use_stock),
        Symbol( "gtk_button_get_use_underline",  cast(void**)& gtk_button_get_use_underline),
        Symbol( "gtk_button_set_use_underline",  cast(void**)& gtk_button_set_use_underline),
        Symbol( "gtk_button_get_label",  cast(void**)& gtk_button_get_label),
        Symbol( "gtk_button_set_label",  cast(void**)& gtk_button_set_label),
        Symbol( "gtk_button_get_relief",  cast(void**)& gtk_button_get_relief),
        Symbol( "gtk_button_set_relief",  cast(void**)& gtk_button_set_relief),
        Symbol( "gtk_button_leave",  cast(void**)& gtk_button_leave),
        Symbol( "gtk_button_enter",  cast(void**)& gtk_button_enter),
        Symbol( "gtk_button_clicked",  cast(void**)& gtk_button_clicked),
        Symbol( "gtk_button_released",  cast(void**)& gtk_button_released),
        Symbol( "gtk_button_pressed",  cast(void**)& gtk_button_pressed),
        Symbol( "gtk_button_new_with_mnemonic",  cast(void**)& gtk_button_new_with_mnemonic),
        Symbol( "gtk_button_new_from_stock",  cast(void**)& gtk_button_new_from_stock),
        Symbol( "gtk_button_new_with_label",  cast(void**)& gtk_button_new_with_label),
        Symbol( "gtk_button_new",  cast(void**)& gtk_button_new),
        Symbol( "gtk_button_get_type",  cast(void**)& gtk_button_get_type),
        Symbol( "gtk_image_get",  cast(void**)& gtk_image_get),
        Symbol( "gtk_image_set",  cast(void**)& gtk_image_set),
        Symbol( "gtk_image_get_pixel_size",  cast(void**)& gtk_image_get_pixel_size),
        Symbol( "gtk_image_get_icon_name",  cast(void**)& gtk_image_get_icon_name),
        Symbol( "gtk_image_get_animation",  cast(void**)& gtk_image_get_animation),
        Symbol( "gtk_image_get_icon_set",  cast(void**)& gtk_image_get_icon_set),
        Symbol( "gtk_image_get_stock",  cast(void**)& gtk_image_get_stock),
        Symbol( "gtk_image_get_pixbuf",  cast(void**)& gtk_image_get_pixbuf),
        Symbol( "gtk_image_get_image",  cast(void**)& gtk_image_get_image),
        Symbol( "gtk_image_get_pixmap",  cast(void**)& gtk_image_get_pixmap),
        Symbol( "gtk_image_get_storage_type",  cast(void**)& gtk_image_get_storage_type),
        Symbol( "gtk_image_set_pixel_size",  cast(void**)& gtk_image_set_pixel_size),
        Symbol( "gtk_image_set_from_icon_name",  cast(void**)& gtk_image_set_from_icon_name),
        Symbol( "gtk_image_set_from_animation",  cast(void**)& gtk_image_set_from_animation),
        Symbol( "gtk_image_set_from_icon_set",  cast(void**)& gtk_image_set_from_icon_set),
        Symbol( "gtk_image_set_from_stock",  cast(void**)& gtk_image_set_from_stock),
        Symbol( "gtk_image_set_from_pixbuf",  cast(void**)& gtk_image_set_from_pixbuf),
        Symbol( "gtk_image_set_from_file",  cast(void**)& gtk_image_set_from_file),
        Symbol( "gtk_image_set_from_image",  cast(void**)& gtk_image_set_from_image),
        Symbol( "gtk_image_set_from_pixmap",  cast(void**)& gtk_image_set_from_pixmap),
        Symbol( "gtk_image_clear",  cast(void**)& gtk_image_clear),
        Symbol( "gtk_image_new_from_icon_name",  cast(void**)& gtk_image_new_from_icon_name),
        Symbol( "gtk_image_new_from_animation",  cast(void**)& gtk_image_new_from_animation),
        Symbol( "gtk_image_new_from_icon_set",  cast(void**)& gtk_image_new_from_icon_set),
        Symbol( "gtk_image_new_from_stock",  cast(void**)& gtk_image_new_from_stock),
        Symbol( "gtk_image_new_from_pixbuf",  cast(void**)& gtk_image_new_from_pixbuf),
        Symbol( "gtk_image_new_from_file",  cast(void**)& gtk_image_new_from_file),
        Symbol( "gtk_image_new_from_image",  cast(void**)& gtk_image_new_from_image),
        Symbol( "gtk_image_new_from_pixmap",  cast(void**)& gtk_image_new_from_pixmap),
        Symbol( "gtk_image_new",  cast(void**)& gtk_image_new),
        Symbol( "gtk_image_get_type",  cast(void**)& gtk_image_get_type),
        Symbol( "gtk_buildable_get_internal_child",  cast(void**)& gtk_buildable_get_internal_child),
        Symbol( "gtk_buildable_parser_finished",  cast(void**)& gtk_buildable_parser_finished),
        Symbol( "gtk_buildable_custom_finished",  cast(void**)& gtk_buildable_custom_finished),
        Symbol( "gtk_buildable_custom_tag_end",  cast(void**)& gtk_buildable_custom_tag_end),
        Symbol( "gtk_buildable_custom_tag_start",  cast(void**)& gtk_buildable_custom_tag_start),
        Symbol( "gtk_buildable_construct_child",  cast(void**)& gtk_buildable_construct_child),
        Symbol( "gtk_buildable_set_buildable_property",  cast(void**)& gtk_buildable_set_buildable_property),
        Symbol( "gtk_buildable_add_child",  cast(void**)& gtk_buildable_add_child),
        Symbol( "gtk_buildable_get_name",  cast(void**)& gtk_buildable_get_name),
        Symbol( "gtk_buildable_set_name",  cast(void**)& gtk_buildable_set_name),
        Symbol( "gtk_buildable_get_type",  cast(void**)& gtk_buildable_get_type),
        Symbol( "gtk_builder_value_from_string_type",  cast(void**)& gtk_builder_value_from_string_type),
        Symbol( "gtk_builder_value_from_string",  cast(void**)& gtk_builder_value_from_string),
        Symbol( "gtk_builder_get_type_from_name",  cast(void**)& gtk_builder_get_type_from_name),
        Symbol( "gtk_builder_get_translation_domain",  cast(void**)& gtk_builder_get_translation_domain),
        Symbol( "gtk_builder_set_translation_domain",  cast(void**)& gtk_builder_set_translation_domain),
        Symbol( "gtk_builder_connect_signals_full",  cast(void**)& gtk_builder_connect_signals_full),
        Symbol( "gtk_builder_connect_signals",  cast(void**)& gtk_builder_connect_signals),
        Symbol( "gtk_builder_get_objects",  cast(void**)& gtk_builder_get_objects),
        Symbol( "gtk_builder_get_object",  cast(void**)& gtk_builder_get_object),
        Symbol( "gtk_builder_add_from_string",  cast(void**)& gtk_builder_add_from_string),
        Symbol( "gtk_builder_add_from_file",  cast(void**)& gtk_builder_add_from_file),
        Symbol( "gtk_builder_new",  cast(void**)& gtk_builder_new),
        Symbol( "gtk_builder_get_type",  cast(void**)& gtk_builder_get_type),
        Symbol( "gtk_builder_error_quark",  cast(void**)& gtk_builder_error_quark),
    //     Symbol( "_gtk_binding_signal_new",  cast(void**)& _gtk_binding_signal_new),
    //     Symbol( "_gtk_binding_entry_add_signall",  cast(void**)& _gtk_binding_entry_add_signall),
    //     Symbol( "_gtk_binding_reset_parsed",  cast(void**)& _gtk_binding_reset_parsed),
    //     Symbol( "_gtk_binding_parse_binding",  cast(void**)& _gtk_binding_parse_binding),
        Symbol( "gtk_binding_set_add_path",  cast(void**)& gtk_binding_set_add_path),
        Symbol( "gtk_binding_entry_remove",  cast(void**)& gtk_binding_entry_remove),
        Symbol( "gtk_binding_entry_add_signal",  cast(void**)& gtk_binding_entry_add_signal),
        Symbol( "gtk_binding_entry_skip",  cast(void**)& gtk_binding_entry_skip),
        Symbol( "gtk_binding_parse_binding",  cast(void**)& gtk_binding_parse_binding),
        Symbol( "gtk_binding_entry_add_signall",  cast(void**)& gtk_binding_entry_add_signall),
        Symbol( "gtk_binding_entry_clear",  cast(void**)& gtk_binding_entry_clear),
        Symbol( "gtk_binding_set_activate",  cast(void**)& gtk_binding_set_activate),
        Symbol( "gtk_bindings_activate_event",  cast(void**)& gtk_bindings_activate_event),
        Symbol( "gtk_bindings_activate",  cast(void**)& gtk_bindings_activate),
        Symbol( "gtk_binding_set_find",  cast(void**)& gtk_binding_set_find),
        Symbol( "gtk_binding_set_by_class",  cast(void**)& gtk_binding_set_by_class),
        Symbol( "gtk_binding_set_new",  cast(void**)& gtk_binding_set_new),
    //     Symbol( "_gtk_button_box_child_requisition",  cast(void**)& _gtk_button_box_child_requisition),
        Symbol( "gtk_button_box_get_child_ipadding",  cast(void**)& gtk_button_box_get_child_ipadding),
        Symbol( "gtk_button_box_get_child_size",  cast(void**)& gtk_button_box_get_child_size),
        Symbol( "gtk_button_box_set_child_ipadding",  cast(void**)& gtk_button_box_set_child_ipadding),
        Symbol( "gtk_button_box_set_child_size",  cast(void**)& gtk_button_box_set_child_size),
        Symbol( "gtk_button_box_set_child_secondary",  cast(void**)& gtk_button_box_set_child_secondary),
        Symbol( "gtk_button_box_get_child_secondary",  cast(void**)& gtk_button_box_get_child_secondary),
        Symbol( "gtk_button_box_set_layout",  cast(void**)& gtk_button_box_set_layout),
        Symbol( "gtk_button_box_get_layout",  cast(void**)& gtk_button_box_get_layout),
        Symbol( "gtk_button_box_get_type",  cast(void**)& gtk_button_box_get_type),
        Symbol( "gtk_box_set_child_packing",  cast(void**)& gtk_box_set_child_packing),
        Symbol( "gtk_box_query_child_packing",  cast(void**)& gtk_box_query_child_packing),
        Symbol( "gtk_box_reorder_child",  cast(void**)& gtk_box_reorder_child),
        Symbol( "gtk_box_get_spacing",  cast(void**)& gtk_box_get_spacing),
        Symbol( "gtk_box_set_spacing",  cast(void**)& gtk_box_set_spacing),
        Symbol( "gtk_box_get_homogeneous",  cast(void**)& gtk_box_get_homogeneous),
        Symbol( "gtk_box_set_homogeneous",  cast(void**)& gtk_box_set_homogeneous),
        Symbol( "gtk_box_pack_end_defaults",  cast(void**)& gtk_box_pack_end_defaults),
        Symbol( "gtk_box_pack_start_defaults",  cast(void**)& gtk_box_pack_start_defaults),
        Symbol( "gtk_box_pack_end",  cast(void**)& gtk_box_pack_end),
        Symbol( "gtk_box_pack_start",  cast(void**)& gtk_box_pack_start),
        Symbol( "gtk_box_get_type",  cast(void**)& gtk_box_get_type),
        Symbol( "gtk_assistant_update_buttons_state",  cast(void**)& gtk_assistant_update_buttons_state),
        Symbol( "gtk_assistant_remove_action_widget",  cast(void**)& gtk_assistant_remove_action_widget),
        Symbol( "gtk_assistant_add_action_widget",  cast(void**)& gtk_assistant_add_action_widget),
        Symbol( "gtk_assistant_get_page_complete",  cast(void**)& gtk_assistant_get_page_complete),
        Symbol( "gtk_assistant_set_page_complete",  cast(void**)& gtk_assistant_set_page_complete),
        Symbol( "gtk_assistant_get_page_side_image",  cast(void**)& gtk_assistant_get_page_side_image),
        Symbol( "gtk_assistant_set_page_side_image",  cast(void**)& gtk_assistant_set_page_side_image),
        Symbol( "gtk_assistant_get_page_header_image",  cast(void**)& gtk_assistant_get_page_header_image),
        Symbol( "gtk_assistant_set_page_header_image",  cast(void**)& gtk_assistant_set_page_header_image),
        Symbol( "gtk_assistant_get_page_title",  cast(void**)& gtk_assistant_get_page_title),
        Symbol( "gtk_assistant_set_page_title",  cast(void**)& gtk_assistant_set_page_title),
        Symbol( "gtk_assistant_get_page_type",  cast(void**)& gtk_assistant_get_page_type),
        Symbol( "gtk_assistant_set_page_type",  cast(void**)& gtk_assistant_set_page_type),
        Symbol( "gtk_assistant_set_forward_page_func",  cast(void**)& gtk_assistant_set_forward_page_func),
        Symbol( "gtk_assistant_insert_page",  cast(void**)& gtk_assistant_insert_page),
        Symbol( "gtk_assistant_append_page",  cast(void**)& gtk_assistant_append_page),
        Symbol( "gtk_assistant_prepend_page",  cast(void**)& gtk_assistant_prepend_page),
        Symbol( "gtk_assistant_get_nth_page",  cast(void**)& gtk_assistant_get_nth_page),
        Symbol( "gtk_assistant_get_n_pages",  cast(void**)& gtk_assistant_get_n_pages),
        Symbol( "gtk_assistant_set_current_page",  cast(void**)& gtk_assistant_set_current_page),
        Symbol( "gtk_assistant_get_current_page",  cast(void**)& gtk_assistant_get_current_page),
        Symbol( "gtk_assistant_new",  cast(void**)& gtk_assistant_new),
        Symbol( "gtk_assistant_get_type",  cast(void**)& gtk_assistant_get_type),
        Symbol( "gtk_aspect_frame_set",  cast(void**)& gtk_aspect_frame_set),
        Symbol( "gtk_aspect_frame_new",  cast(void**)& gtk_aspect_frame_new),
        Symbol( "gtk_aspect_frame_get_type",  cast(void**)& gtk_aspect_frame_get_type),
        Symbol( "gtk_frame_get_shadow_type",  cast(void**)& gtk_frame_get_shadow_type),
        Symbol( "gtk_frame_set_shadow_type",  cast(void**)& gtk_frame_set_shadow_type),
        Symbol( "gtk_frame_get_label_align",  cast(void**)& gtk_frame_get_label_align),
        Symbol( "gtk_frame_set_label_align",  cast(void**)& gtk_frame_set_label_align),
        Symbol( "gtk_frame_get_label_widget",  cast(void**)& gtk_frame_get_label_widget),
        Symbol( "gtk_frame_set_label_widget",  cast(void**)& gtk_frame_set_label_widget),
        Symbol( "gtk_frame_get_label",  cast(void**)& gtk_frame_get_label),
        Symbol( "gtk_frame_set_label",  cast(void**)& gtk_frame_set_label),
        Symbol( "gtk_frame_new",  cast(void**)& gtk_frame_new),
        Symbol( "gtk_frame_get_type",  cast(void**)& gtk_frame_get_type),
        Symbol( "gtk_arrow_set",  cast(void**)& gtk_arrow_set),
        Symbol( "gtk_arrow_new",  cast(void**)& gtk_arrow_new),
        Symbol( "gtk_arrow_get_type",  cast(void**)& gtk_arrow_get_type),
        Symbol( "gtk_alignment_get_padding",  cast(void**)& gtk_alignment_get_padding),
        Symbol( "gtk_alignment_set_padding",  cast(void**)& gtk_alignment_set_padding),
        Symbol( "gtk_alignment_set",  cast(void**)& gtk_alignment_set),
        Symbol( "gtk_alignment_new",  cast(void**)& gtk_alignment_new),
        Symbol( "gtk_alignment_get_type",  cast(void**)& gtk_alignment_get_type),
    //     Symbol( "_gtk_action_group_emit_post_activate",  cast(void**)& _gtk_action_group_emit_post_activate),
    //     Symbol( "_gtk_action_group_emit_pre_activate",  cast(void**)& _gtk_action_group_emit_pre_activate),
    //     Symbol( "_gtk_action_group_emit_disconnect_proxy",  cast(void**)& _gtk_action_group_emit_disconnect_proxy),
    //     Symbol( "_gtk_action_group_emit_connect_proxy",  cast(void**)& _gtk_action_group_emit_connect_proxy),
        Symbol( "gtk_action_group_translate_string",  cast(void**)& gtk_action_group_translate_string),
        Symbol( "gtk_action_group_set_translation_domain",  cast(void**)& gtk_action_group_set_translation_domain),
        Symbol( "gtk_action_group_set_translate_func",  cast(void**)& gtk_action_group_set_translate_func),
        Symbol( "gtk_action_group_add_radio_actions_full",  cast(void**)& gtk_action_group_add_radio_actions_full),
        Symbol( "gtk_action_group_add_toggle_actions_full",  cast(void**)& gtk_action_group_add_toggle_actions_full),
        Symbol( "gtk_action_group_add_actions_full",  cast(void**)& gtk_action_group_add_actions_full),
        Symbol( "gtk_action_group_add_radio_actions",  cast(void**)& gtk_action_group_add_radio_actions),
        Symbol( "gtk_action_group_add_toggle_actions",  cast(void**)& gtk_action_group_add_toggle_actions),
        Symbol( "gtk_action_group_add_actions",  cast(void**)& gtk_action_group_add_actions),
        Symbol( "gtk_action_group_remove_action",  cast(void**)& gtk_action_group_remove_action),
        Symbol( "gtk_action_group_add_action_with_accel",  cast(void**)& gtk_action_group_add_action_with_accel),
        Symbol( "gtk_action_group_add_action",  cast(void**)& gtk_action_group_add_action),
        Symbol( "gtk_action_group_list_actions",  cast(void**)& gtk_action_group_list_actions),
        Symbol( "gtk_action_group_get_action",  cast(void**)& gtk_action_group_get_action),
        Symbol( "gtk_action_group_set_visible",  cast(void**)& gtk_action_group_set_visible),
        Symbol( "gtk_action_group_get_visible",  cast(void**)& gtk_action_group_get_visible),
        Symbol( "gtk_action_group_set_sensitive",  cast(void**)& gtk_action_group_set_sensitive),
        Symbol( "gtk_action_group_get_sensitive",  cast(void**)& gtk_action_group_get_sensitive),
        Symbol( "gtk_action_group_get_name",  cast(void**)& gtk_action_group_get_name),
        Symbol( "gtk_action_group_new",  cast(void**)& gtk_action_group_new),
        Symbol( "gtk_action_group_get_type",  cast(void**)& gtk_action_group_get_type),
        Symbol( "gtk_item_factories_path_delete",  cast(void**)& gtk_item_factories_path_delete),
        Symbol( "gtk_item_factory_create_menu_entries",  cast(void**)& gtk_item_factory_create_menu_entries),
        Symbol( "gtk_item_factory_from_path",  cast(void**)& gtk_item_factory_from_path),
        Symbol( "gtk_item_factory_create_items_ac",  cast(void**)& gtk_item_factory_create_items_ac),
        Symbol( "gtk_item_factory_set_translate_func",  cast(void**)& gtk_item_factory_set_translate_func),
        Symbol( "gtk_item_factory_popup_data_from_widget",  cast(void**)& gtk_item_factory_popup_data_from_widget),
        Symbol( "gtk_item_factory_popup_data",  cast(void**)& gtk_item_factory_popup_data),
        Symbol( "gtk_item_factory_popup_with_data",  cast(void**)& gtk_item_factory_popup_with_data),
        Symbol( "gtk_item_factory_popup",  cast(void**)& gtk_item_factory_popup),
        Symbol( "gtk_item_factory_delete_entries",  cast(void**)& gtk_item_factory_delete_entries),
        Symbol( "gtk_item_factory_delete_entry",  cast(void**)& gtk_item_factory_delete_entry),
        Symbol( "gtk_item_factory_delete_item",  cast(void**)& gtk_item_factory_delete_item),
        Symbol( "gtk_item_factory_create_items",  cast(void**)& gtk_item_factory_create_items),
        Symbol( "gtk_item_factory_create_item",  cast(void**)& gtk_item_factory_create_item),
        Symbol( "gtk_item_factory_get_item_by_action",  cast(void**)& gtk_item_factory_get_item_by_action),
        Symbol( "gtk_item_factory_get_widget_by_action",  cast(void**)& gtk_item_factory_get_widget_by_action),
        Symbol( "gtk_item_factory_get_widget",  cast(void**)& gtk_item_factory_get_widget),
        Symbol( "gtk_item_factory_get_item",  cast(void**)& gtk_item_factory_get_item),
        Symbol( "gtk_item_factory_path_from_widget",  cast(void**)& gtk_item_factory_path_from_widget),
        Symbol( "gtk_item_factory_from_widget",  cast(void**)& gtk_item_factory_from_widget),
        Symbol( "gtk_item_factory_add_foreign",  cast(void**)& gtk_item_factory_add_foreign),
        Symbol( "gtk_item_factory_construct",  cast(void**)& gtk_item_factory_construct),
        Symbol( "gtk_item_factory_new",  cast(void**)& gtk_item_factory_new),
        Symbol( "gtk_item_factory_get_type",  cast(void**)& gtk_item_factory_get_type),
    //     Symbol( "_gtk_action_sync_menu_visible",  cast(void**)& _gtk_action_sync_menu_visible),
    //     Symbol( "_gtk_action_sync_visible",  cast(void**)& _gtk_action_sync_visible),
    //     Symbol( "_gtk_action_sync_sensitive",  cast(void**)& _gtk_action_sync_sensitive),
        Symbol( "gtk_action_set_accel_group",  cast(void**)& gtk_action_set_accel_group),
        Symbol( "gtk_action_set_accel_path",  cast(void**)& gtk_action_set_accel_path),
    //     Symbol( "_gtk_action_emit_activate",  cast(void**)& _gtk_action_emit_activate),
        Symbol( "gtk_action_unblock_activate_from",  cast(void**)& gtk_action_unblock_activate_from),
        Symbol( "gtk_action_block_activate_from",  cast(void**)& gtk_action_block_activate_from),
        Symbol( "gtk_action_get_accel_closure",  cast(void**)& gtk_action_get_accel_closure),
        Symbol( "gtk_action_get_accel_path",  cast(void**)& gtk_action_get_accel_path),
        Symbol( "gtk_action_disconnect_accelerator",  cast(void**)& gtk_action_disconnect_accelerator),
        Symbol( "gtk_action_connect_accelerator",  cast(void**)& gtk_action_connect_accelerator),
        Symbol( "gtk_widget_get_action",  cast(void**)& gtk_widget_get_action),
        Symbol( "gtk_action_get_proxies",  cast(void**)& gtk_action_get_proxies),
        Symbol( "gtk_action_disconnect_proxy",  cast(void**)& gtk_action_disconnect_proxy),
        Symbol( "gtk_action_connect_proxy",  cast(void**)& gtk_action_connect_proxy),
        Symbol( "gtk_action_create_menu",  cast(void**)& gtk_action_create_menu),
        Symbol( "gtk_action_create_tool_item",  cast(void**)& gtk_action_create_tool_item),
        Symbol( "gtk_action_create_menu_item",  cast(void**)& gtk_action_create_menu_item),
        Symbol( "gtk_action_create_icon",  cast(void**)& gtk_action_create_icon),
        Symbol( "gtk_action_activate",  cast(void**)& gtk_action_activate),
        Symbol( "gtk_action_set_visible",  cast(void**)& gtk_action_set_visible),
        Symbol( "gtk_action_get_visible",  cast(void**)& gtk_action_get_visible),
        Symbol( "gtk_action_is_visible",  cast(void**)& gtk_action_is_visible),
        Symbol( "gtk_action_set_sensitive",  cast(void**)& gtk_action_set_sensitive),
        Symbol( "gtk_action_get_sensitive",  cast(void**)& gtk_action_get_sensitive),
        Symbol( "gtk_action_is_sensitive",  cast(void**)& gtk_action_is_sensitive),
        Symbol( "gtk_action_get_name",  cast(void**)& gtk_action_get_name),
        Symbol( "gtk_action_new",  cast(void**)& gtk_action_new),
        Symbol( "gtk_action_get_type",  cast(void**)& gtk_action_get_type),
        Symbol( "gtk_accessible_connect_widget_destroyed",  cast(void**)& gtk_accessible_connect_widget_destroyed),
        Symbol( "gtk_accessible_get_type",  cast(void**)& gtk_accessible_get_type),
    //     Symbol( "_gtk_accel_path_is_valid",  cast(void**)& _gtk_accel_path_is_valid),
    //     Symbol( "_gtk_accel_map_remove_group",  cast(void**)& _gtk_accel_map_remove_group),
    //     Symbol( "_gtk_accel_map_add_group",  cast(void**)& _gtk_accel_map_add_group),
    //     Symbol( "_gtk_accel_map_init",  cast(void**)& _gtk_accel_map_init),
        Symbol( "gtk_accel_map_get",  cast(void**)& gtk_accel_map_get),
        Symbol( "gtk_accel_map_get_type",  cast(void**)& gtk_accel_map_get_type),
        Symbol( "gtk_accel_map_foreach_unfiltered",  cast(void**)& gtk_accel_map_foreach_unfiltered),
        Symbol( "gtk_accel_map_add_filter",  cast(void**)& gtk_accel_map_add_filter),
        Symbol( "gtk_accel_map_unlock_path",  cast(void**)& gtk_accel_map_unlock_path),
        Symbol( "gtk_accel_map_lock_path",  cast(void**)& gtk_accel_map_lock_path),
        Symbol( "gtk_accel_map_save_fd",  cast(void**)& gtk_accel_map_save_fd),
        Symbol( "gtk_accel_map_load_scanner",  cast(void**)& gtk_accel_map_load_scanner),
        Symbol( "gtk_accel_map_load_fd",  cast(void**)& gtk_accel_map_load_fd),
        Symbol( "gtk_accel_map_foreach",  cast(void**)& gtk_accel_map_foreach),
        Symbol( "gtk_accel_map_save",  cast(void**)& gtk_accel_map_save),
        Symbol( "gtk_accel_map_load",  cast(void**)& gtk_accel_map_load),
        Symbol( "gtk_accel_map_change_entry",  cast(void**)& gtk_accel_map_change_entry),
        Symbol( "gtk_accel_map_lookup_entry",  cast(void**)& gtk_accel_map_lookup_entry),
        Symbol( "gtk_accel_map_add_entry",  cast(void**)& gtk_accel_map_add_entry),
    //     Symbol( "_gtk_accel_label_class_get_accelerator_label",  cast(void**)& _gtk_accel_label_class_get_accelerator_label),
        Symbol( "gtk_accel_label_refetch",  cast(void**)& gtk_accel_label_refetch),
        Symbol( "gtk_accel_label_set_accel_closure",  cast(void**)& gtk_accel_label_set_accel_closure),
        Symbol( "gtk_accel_label_set_accel_widget",  cast(void**)& gtk_accel_label_set_accel_widget),
        Symbol( "gtk_accel_label_get_accel_width",  cast(void**)& gtk_accel_label_get_accel_width),
        Symbol( "gtk_accel_label_get_accel_widget",  cast(void**)& gtk_accel_label_get_accel_widget),
        Symbol( "gtk_accel_label_new",  cast(void**)& gtk_accel_label_new),
        Symbol( "gtk_accel_label_get_type",  cast(void**)& gtk_accel_label_get_type),
        Symbol( "gtk_label_parse_uline",  cast(void**)& gtk_label_parse_uline),
        Symbol( "gtk_label_get",  cast(void**)& gtk_label_get),
        Symbol( "gtk_label_get_single_line_mode",  cast(void**)& gtk_label_get_single_line_mode),
        Symbol( "gtk_label_set_single_line_mode",  cast(void**)& gtk_label_set_single_line_mode),
        Symbol( "gtk_label_get_layout_offsets",  cast(void**)& gtk_label_get_layout_offsets),
        Symbol( "gtk_label_get_layout",  cast(void**)& gtk_label_get_layout),
        Symbol( "gtk_label_get_selection_bounds",  cast(void**)& gtk_label_get_selection_bounds),
        Symbol( "gtk_label_select_region",  cast(void**)& gtk_label_select_region),
        Symbol( "gtk_label_get_angle",  cast(void**)& gtk_label_get_angle),
        Symbol( "gtk_label_set_angle",  cast(void**)& gtk_label_set_angle),
        Symbol( "gtk_label_get_selectable",  cast(void**)& gtk_label_get_selectable),
        Symbol( "gtk_label_set_selectable",  cast(void**)& gtk_label_set_selectable),
        Symbol( "gtk_label_get_line_wrap_mode",  cast(void**)& gtk_label_get_line_wrap_mode),
        Symbol( "gtk_label_set_line_wrap_mode",  cast(void**)& gtk_label_set_line_wrap_mode),
        Symbol( "gtk_label_get_line_wrap",  cast(void**)& gtk_label_get_line_wrap),
        Symbol( "gtk_label_set_line_wrap",  cast(void**)& gtk_label_set_line_wrap),
        Symbol( "gtk_label_set_pattern",  cast(void**)& gtk_label_set_pattern),
        Symbol( "gtk_label_get_max_width_chars",  cast(void**)& gtk_label_get_max_width_chars),
        Symbol( "gtk_label_set_max_width_chars",  cast(void**)& gtk_label_set_max_width_chars),
        Symbol( "gtk_label_get_width_chars",  cast(void**)& gtk_label_get_width_chars),
        Symbol( "gtk_label_set_width_chars",  cast(void**)& gtk_label_set_width_chars),
        Symbol( "gtk_label_get_ellipsize",  cast(void**)& gtk_label_get_ellipsize),
        Symbol( "gtk_label_set_ellipsize",  cast(void**)& gtk_label_set_ellipsize),
        Symbol( "gtk_label_get_justify",  cast(void**)& gtk_label_get_justify),
        Symbol( "gtk_label_set_justify",  cast(void**)& gtk_label_set_justify),
        Symbol( "gtk_label_set_text_with_mnemonic",  cast(void**)& gtk_label_set_text_with_mnemonic),
        Symbol( "gtk_label_get_mnemonic_widget",  cast(void**)& gtk_label_get_mnemonic_widget),
        Symbol( "gtk_label_set_mnemonic_widget",  cast(void**)& gtk_label_set_mnemonic_widget),
        Symbol( "gtk_label_get_mnemonic_keyval",  cast(void**)& gtk_label_get_mnemonic_keyval),
        Symbol( "gtk_label_set_markup_with_mnemonic",  cast(void**)& gtk_label_set_markup_with_mnemonic),
        Symbol( "gtk_label_get_use_underline",  cast(void**)& gtk_label_get_use_underline),
        Symbol( "gtk_label_set_use_underline",  cast(void**)& gtk_label_set_use_underline),
        Symbol( "gtk_label_get_use_markup",  cast(void**)& gtk_label_get_use_markup),
        Symbol( "gtk_label_set_use_markup",  cast(void**)& gtk_label_set_use_markup),
        Symbol( "gtk_label_set_markup",  cast(void**)& gtk_label_set_markup),
        Symbol( "gtk_label_get_label",  cast(void**)& gtk_label_get_label),
        Symbol( "gtk_label_set_label",  cast(void**)& gtk_label_set_label),
        Symbol( "gtk_label_get_attributes",  cast(void**)& gtk_label_get_attributes),
        Symbol( "gtk_label_set_attributes",  cast(void**)& gtk_label_set_attributes),
        Symbol( "gtk_label_get_text",  cast(void**)& gtk_label_get_text),
        Symbol( "gtk_label_set_text",  cast(void**)& gtk_label_set_text),
        Symbol( "gtk_label_new_with_mnemonic",  cast(void**)& gtk_label_new_with_mnemonic),
        Symbol( "gtk_label_new",  cast(void**)& gtk_label_new),
        Symbol( "gtk_label_get_type",  cast(void**)& gtk_label_get_type),
        Symbol( "gtk_menu_get_for_attach_widget",  cast(void**)& gtk_menu_get_for_attach_widget),
        Symbol( "gtk_menu_set_monitor",  cast(void**)& gtk_menu_set_monitor),
        Symbol( "gtk_menu_attach",  cast(void**)& gtk_menu_attach),
        Symbol( "gtk_menu_set_screen",  cast(void**)& gtk_menu_set_screen),
        Symbol( "gtk_menu_reorder_child",  cast(void**)& gtk_menu_reorder_child),
        Symbol( "gtk_menu_get_title",  cast(void**)& gtk_menu_get_title),
        Symbol( "gtk_menu_set_title",  cast(void**)& gtk_menu_set_title),
        Symbol( "gtk_menu_get_tearoff_state",  cast(void**)& gtk_menu_get_tearoff_state),
        Symbol( "gtk_menu_set_tearoff_state",  cast(void**)& gtk_menu_set_tearoff_state),
        Symbol( "gtk_menu_get_attach_widget",  cast(void**)& gtk_menu_get_attach_widget),
        Symbol( "gtk_menu_detach",  cast(void**)& gtk_menu_detach),
        Symbol( "gtk_menu_attach_to_widget",  cast(void**)& gtk_menu_attach_to_widget),
        Symbol( "gtk_menu_set_accel_path",  cast(void**)& gtk_menu_set_accel_path),
        Symbol( "gtk_menu_get_accel_group",  cast(void**)& gtk_menu_get_accel_group),
        Symbol( "gtk_menu_set_accel_group",  cast(void**)& gtk_menu_set_accel_group),
        Symbol( "gtk_menu_set_active",  cast(void**)& gtk_menu_set_active),
        Symbol( "gtk_menu_get_active",  cast(void**)& gtk_menu_get_active),
        Symbol( "gtk_menu_popdown",  cast(void**)& gtk_menu_popdown),
        Symbol( "gtk_menu_reposition",  cast(void**)& gtk_menu_reposition),
        Symbol( "gtk_menu_popup",  cast(void**)& gtk_menu_popup),
        Symbol( "gtk_menu_new",  cast(void**)& gtk_menu_new),
        Symbol( "gtk_menu_get_type",  cast(void**)& gtk_menu_get_type),
        Symbol( "gtk_menu_shell_set_take_focus",  cast(void**)& gtk_menu_shell_set_take_focus),
        Symbol( "gtk_menu_shell_get_take_focus",  cast(void**)& gtk_menu_shell_get_take_focus),
    //     Symbol( "_gtk_menu_shell_remove_mnemonic",  cast(void**)& _gtk_menu_shell_remove_mnemonic),
    //     Symbol( "_gtk_menu_shell_add_mnemonic",  cast(void**)& _gtk_menu_shell_add_mnemonic),
        Symbol( "gtk_menu_shell_cancel",  cast(void**)& gtk_menu_shell_cancel),
    //     Symbol( "_gtk_menu_shell_get_popup_delay",  cast(void**)& _gtk_menu_shell_get_popup_delay),
    //     Symbol( "_gtk_menu_shell_activate",  cast(void**)& _gtk_menu_shell_activate),
    //     Symbol( "_gtk_menu_shell_select_last",  cast(void**)& _gtk_menu_shell_select_last),
        Symbol( "gtk_menu_shell_select_first",  cast(void**)& gtk_menu_shell_select_first),
        Symbol( "gtk_menu_shell_activate_item",  cast(void**)& gtk_menu_shell_activate_item),
        Symbol( "gtk_menu_shell_deselect",  cast(void**)& gtk_menu_shell_deselect),
        Symbol( "gtk_menu_shell_select_item",  cast(void**)& gtk_menu_shell_select_item),
        Symbol( "gtk_menu_shell_deactivate",  cast(void**)& gtk_menu_shell_deactivate),
        Symbol( "gtk_menu_shell_insert",  cast(void**)& gtk_menu_shell_insert),
        Symbol( "gtk_menu_shell_prepend",  cast(void**)& gtk_menu_shell_prepend),
        Symbol( "gtk_menu_shell_append",  cast(void**)& gtk_menu_shell_append),
        Symbol( "gtk_menu_shell_get_type",  cast(void**)& gtk_menu_shell_get_type),
        Symbol( "gtk_misc_get_padding",  cast(void**)& gtk_misc_get_padding),
        Symbol( "gtk_misc_set_padding",  cast(void**)& gtk_misc_set_padding),
        Symbol( "gtk_misc_get_alignment",  cast(void**)& gtk_misc_get_alignment),
        Symbol( "gtk_misc_set_alignment",  cast(void**)& gtk_misc_set_alignment),
        Symbol( "gtk_misc_get_type",  cast(void**)& gtk_misc_get_type),
        Symbol( "gtk_about_dialog_set_url_hook",  cast(void**)& gtk_about_dialog_set_url_hook),
        Symbol( "gtk_about_dialog_set_email_hook",  cast(void**)& gtk_about_dialog_set_email_hook),
        Symbol( "gtk_about_dialog_set_logo_icon_name",  cast(void**)& gtk_about_dialog_set_logo_icon_name),
        Symbol( "gtk_about_dialog_get_logo_icon_name",  cast(void**)& gtk_about_dialog_get_logo_icon_name),
        Symbol( "gtk_about_dialog_set_logo",  cast(void**)& gtk_about_dialog_set_logo),
        Symbol( "gtk_about_dialog_get_logo",  cast(void**)& gtk_about_dialog_get_logo),
        Symbol( "gtk_about_dialog_set_translator_credits",  cast(void**)& gtk_about_dialog_set_translator_credits),
        Symbol( "gtk_about_dialog_get_translator_credits",  cast(void**)& gtk_about_dialog_get_translator_credits),
        Symbol( "gtk_about_dialog_set_artists",  cast(void**)& gtk_about_dialog_set_artists),
        Symbol( "gtk_about_dialog_get_artists",  cast(void**)& gtk_about_dialog_get_artists),
        Symbol( "gtk_about_dialog_set_documenters",  cast(void**)& gtk_about_dialog_set_documenters),
        Symbol( "gtk_about_dialog_get_documenters",  cast(void**)& gtk_about_dialog_get_documenters),
        Symbol( "gtk_about_dialog_set_authors",  cast(void**)& gtk_about_dialog_set_authors),
        Symbol( "gtk_about_dialog_get_authors",  cast(void**)& gtk_about_dialog_get_authors),
        Symbol( "gtk_about_dialog_set_website_label",  cast(void**)& gtk_about_dialog_set_website_label),
        Symbol( "gtk_about_dialog_get_website_label",  cast(void**)& gtk_about_dialog_get_website_label),
        Symbol( "gtk_about_dialog_set_website",  cast(void**)& gtk_about_dialog_set_website),
        Symbol( "gtk_about_dialog_get_website",  cast(void**)& gtk_about_dialog_get_website),
        Symbol( "gtk_about_dialog_set_wrap_license",  cast(void**)& gtk_about_dialog_set_wrap_license),
        Symbol( "gtk_about_dialog_get_wrap_license",  cast(void**)& gtk_about_dialog_get_wrap_license),
        Symbol( "gtk_about_dialog_set_license",  cast(void**)& gtk_about_dialog_set_license),
        Symbol( "gtk_about_dialog_get_license",  cast(void**)& gtk_about_dialog_get_license),
        Symbol( "gtk_about_dialog_set_comments",  cast(void**)& gtk_about_dialog_set_comments),
        Symbol( "gtk_about_dialog_get_comments",  cast(void**)& gtk_about_dialog_get_comments),
        Symbol( "gtk_about_dialog_set_copyright",  cast(void**)& gtk_about_dialog_set_copyright),
        Symbol( "gtk_about_dialog_get_copyright",  cast(void**)& gtk_about_dialog_get_copyright),
        Symbol( "gtk_about_dialog_set_version",  cast(void**)& gtk_about_dialog_set_version),
        Symbol( "gtk_about_dialog_get_version",  cast(void**)& gtk_about_dialog_get_version),
        Symbol( "gtk_about_dialog_set_program_name",  cast(void**)& gtk_about_dialog_set_program_name),
        Symbol( "gtk_about_dialog_get_program_name",  cast(void**)& gtk_about_dialog_get_program_name),
        Symbol( "gtk_about_dialog_set_name",  cast(void**)& gtk_about_dialog_set_name),
        Symbol( "gtk_about_dialog_get_name",  cast(void**)& gtk_about_dialog_get_name),
        Symbol( "gtk_show_about_dialog",  cast(void**)& gtk_show_about_dialog),
        Symbol( "gtk_about_dialog_new",  cast(void**)& gtk_about_dialog_new),
        Symbol( "gtk_about_dialog_get_type",  cast(void**)& gtk_about_dialog_get_type),
    //     Symbol( "_gtk_dialog_set_ignore_separator",  cast(void**)& _gtk_dialog_set_ignore_separator),
        Symbol( "gtk_dialog_run",  cast(void**)& gtk_dialog_run),
        Symbol( "gtk_dialog_response",  cast(void**)& gtk_dialog_response),
        Symbol( "gtk_dialog_set_alternative_button_order_from_array",  cast(void**)& gtk_dialog_set_alternative_button_order_from_array),
        Symbol( "gtk_dialog_set_alternative_button_order",  cast(void**)& gtk_dialog_set_alternative_button_order),
        Symbol( "gtk_alternative_dialog_button_order",  cast(void**)& gtk_alternative_dialog_button_order),
        Symbol( "gtk_dialog_get_has_separator",  cast(void**)& gtk_dialog_get_has_separator),
        Symbol( "gtk_dialog_set_has_separator",  cast(void**)& gtk_dialog_set_has_separator),
        Symbol( "gtk_dialog_get_response_for_widget",  cast(void**)& gtk_dialog_get_response_for_widget),
        Symbol( "gtk_dialog_set_default_response",  cast(void**)& gtk_dialog_set_default_response),
        Symbol( "gtk_dialog_set_response_sensitive",  cast(void**)& gtk_dialog_set_response_sensitive),
        Symbol( "gtk_dialog_add_buttons",  cast(void**)& gtk_dialog_add_buttons),
        Symbol( "gtk_dialog_add_button",  cast(void**)& gtk_dialog_add_button),
        Symbol( "gtk_dialog_add_action_widget",  cast(void**)& gtk_dialog_add_action_widget),
        Symbol( "gtk_dialog_new_with_buttons",  cast(void**)& gtk_dialog_new_with_buttons),
        Symbol( "gtk_dialog_new",  cast(void**)& gtk_dialog_new),
        Symbol( "gtk_dialog_get_type",  cast(void**)& gtk_dialog_get_type),
    //     Symbol( "_gtk_window_query_nonaccels",  cast(void**)& _gtk_window_query_nonaccels),
    //     Symbol( "_gtk_window_keys_foreach",  cast(void**)& _gtk_window_keys_foreach),
    //     Symbol( "_gtk_window_set_is_active",  cast(void**)& _gtk_window_set_is_active),
    //     Symbol( "_gtk_window_unset_focus_and_default",  cast(void**)& _gtk_window_unset_focus_and_default),
    //     Symbol( "_gtk_window_set_has_toplevel_focus",  cast(void**)& _gtk_window_set_has_toplevel_focus),
    //     Symbol( "_gtk_window_group_get_current_grab",  cast(void**)& _gtk_window_group_get_current_grab),
    //     Symbol( "_gtk_window_constrain_size",  cast(void**)& _gtk_window_constrain_size),
    //     Symbol( "_gtk_window_reposition",  cast(void**)& _gtk_window_reposition),
        Symbol( "gtk_window_add_embedded_xid",  cast(void**)& gtk_window_add_embedded_xid),
        Symbol( "gtk_window_remove_embedded_xid",  cast(void**)& gtk_window_remove_embedded_xid),
    //     Symbol( "_gtk_window_internal_set_focus",  cast(void**)& _gtk_window_internal_set_focus),
        Symbol( "gtk_window_group_remove_window",  cast(void**)& gtk_window_group_remove_window),
        Symbol( "gtk_window_group_add_window",  cast(void**)& gtk_window_group_add_window),
        Symbol( "gtk_window_group_new",  cast(void**)& gtk_window_group_new),
        Symbol( "gtk_window_group_get_type",  cast(void**)& gtk_window_group_get_type),
        Symbol( "gtk_window_reshow_with_initial_size",  cast(void**)& gtk_window_reshow_with_initial_size),
        Symbol( "gtk_window_get_group",  cast(void**)& gtk_window_get_group),
        Symbol( "gtk_window_parse_geometry",  cast(void**)& gtk_window_parse_geometry),
        Symbol( "gtk_window_get_position",  cast(void**)& gtk_window_get_position),
        Symbol( "gtk_window_move",  cast(void**)& gtk_window_move),
        Symbol( "gtk_window_get_size",  cast(void**)& gtk_window_get_size),
        Symbol( "gtk_window_resize",  cast(void**)& gtk_window_resize),
        Symbol( "gtk_window_get_default_size",  cast(void**)& gtk_window_get_default_size),
        Symbol( "gtk_window_set_default_size",  cast(void**)& gtk_window_set_default_size),
        Symbol( "gtk_window_set_policy",  cast(void**)& gtk_window_set_policy),
        Symbol( "gtk_window_begin_move_drag",  cast(void**)& gtk_window_begin_move_drag),
        Symbol( "gtk_window_begin_resize_drag",  cast(void**)& gtk_window_begin_resize_drag),
        Symbol( "gtk_window_set_keep_below",  cast(void**)& gtk_window_set_keep_below),
        Symbol( "gtk_window_set_keep_above",  cast(void**)& gtk_window_set_keep_above),
        Symbol( "gtk_window_unfullscreen",  cast(void**)& gtk_window_unfullscreen),
        Symbol( "gtk_window_fullscreen",  cast(void**)& gtk_window_fullscreen),
        Symbol( "gtk_window_unmaximize",  cast(void**)& gtk_window_unmaximize),
        Symbol( "gtk_window_maximize",  cast(void**)& gtk_window_maximize),
        Symbol( "gtk_window_unstick",  cast(void**)& gtk_window_unstick),
        Symbol( "gtk_window_stick",  cast(void**)& gtk_window_stick),
        Symbol( "gtk_window_deiconify",  cast(void**)& gtk_window_deiconify),
        Symbol( "gtk_window_iconify",  cast(void**)& gtk_window_iconify),
        Symbol( "gtk_window_present_with_time",  cast(void**)& gtk_window_present_with_time),
        Symbol( "gtk_window_present",  cast(void**)& gtk_window_present),
        Symbol( "gtk_window_propagate_key_event",  cast(void**)& gtk_window_propagate_key_event),
        Symbol( "gtk_window_activate_key",  cast(void**)& gtk_window_activate_key),
        Symbol( "gtk_window_get_mnemonic_modifier",  cast(void**)& gtk_window_get_mnemonic_modifier),
        Symbol( "gtk_window_set_mnemonic_modifier",  cast(void**)& gtk_window_set_mnemonic_modifier),
        Symbol( "gtk_window_mnemonic_activate",  cast(void**)& gtk_window_mnemonic_activate),
        Symbol( "gtk_window_remove_mnemonic",  cast(void**)& gtk_window_remove_mnemonic),
        Symbol( "gtk_window_add_mnemonic",  cast(void**)& gtk_window_add_mnemonic),
        Symbol( "gtk_window_list_toplevels",  cast(void**)& gtk_window_list_toplevels),
        Symbol( "gtk_window_get_modal",  cast(void**)& gtk_window_get_modal),
        Symbol( "gtk_window_set_modal",  cast(void**)& gtk_window_set_modal),
        Symbol( "gtk_window_set_auto_startup_notification",  cast(void**)& gtk_window_set_auto_startup_notification),
        Symbol( "gtk_window_set_default_icon_from_file",  cast(void**)& gtk_window_set_default_icon_from_file),
        Symbol( "gtk_window_set_default_icon_name",  cast(void**)& gtk_window_set_default_icon_name),
        Symbol( "gtk_window_set_default_icon",  cast(void**)& gtk_window_set_default_icon),
        Symbol( "gtk_window_get_default_icon_list",  cast(void**)& gtk_window_get_default_icon_list),
        Symbol( "gtk_window_set_default_icon_list",  cast(void**)& gtk_window_set_default_icon_list),
        Symbol( "gtk_window_get_icon_name",  cast(void**)& gtk_window_get_icon_name),
        Symbol( "gtk_window_get_icon",  cast(void**)& gtk_window_get_icon),
        Symbol( "gtk_window_set_icon_from_file",  cast(void**)& gtk_window_set_icon_from_file),
        Symbol( "gtk_window_set_icon_name",  cast(void**)& gtk_window_set_icon_name),
        Symbol( "gtk_window_set_icon",  cast(void**)& gtk_window_set_icon),
        Symbol( "gtk_window_get_icon_list",  cast(void**)& gtk_window_get_icon_list),
        Symbol( "gtk_window_set_icon_list",  cast(void**)& gtk_window_set_icon_list),
        Symbol( "gtk_window_get_deletable",  cast(void**)& gtk_window_get_deletable),
        Symbol( "gtk_window_set_deletable",  cast(void**)& gtk_window_set_deletable),
        Symbol( "gtk_window_get_decorated",  cast(void**)& gtk_window_get_decorated),
        Symbol( "gtk_window_set_decorated",  cast(void**)& gtk_window_set_decorated),
        Symbol( "gtk_window_get_frame_dimensions",  cast(void**)& gtk_window_get_frame_dimensions),
        Symbol( "gtk_window_set_frame_dimensions",  cast(void**)& gtk_window_set_frame_dimensions),
        Symbol( "gtk_window_get_has_frame",  cast(void**)& gtk_window_get_has_frame),
        Symbol( "gtk_window_set_has_frame",  cast(void**)& gtk_window_set_has_frame),
        Symbol( "gtk_window_has_toplevel_focus",  cast(void**)& gtk_window_has_toplevel_focus),
        Symbol( "gtk_window_is_active",  cast(void**)& gtk_window_is_active),
        Symbol( "gtk_window_get_screen",  cast(void**)& gtk_window_get_screen),
        Symbol( "gtk_window_set_screen",  cast(void**)& gtk_window_set_screen),
        Symbol( "gtk_window_set_geometry_hints",  cast(void**)& gtk_window_set_geometry_hints),
        Symbol( "gtk_window_get_gravity",  cast(void**)& gtk_window_get_gravity),
        Symbol( "gtk_window_set_gravity",  cast(void**)& gtk_window_set_gravity),
        Symbol( "gtk_window_get_resizable",  cast(void**)& gtk_window_get_resizable),
        Symbol( "gtk_window_set_resizable",  cast(void**)& gtk_window_set_resizable),
        Symbol( "gtk_window_get_destroy_with_parent",  cast(void**)& gtk_window_get_destroy_with_parent),
        Symbol( "gtk_window_set_destroy_with_parent",  cast(void**)& gtk_window_set_destroy_with_parent),
        Symbol( "gtk_window_get_focus_on_map",  cast(void**)& gtk_window_get_focus_on_map),
        Symbol( "gtk_window_set_focus_on_map",  cast(void**)& gtk_window_set_focus_on_map),
        Symbol( "gtk_window_get_accept_focus",  cast(void**)& gtk_window_get_accept_focus),
        Symbol( "gtk_window_set_accept_focus",  cast(void**)& gtk_window_set_accept_focus),
        Symbol( "gtk_window_get_urgency_hint",  cast(void**)& gtk_window_get_urgency_hint),
        Symbol( "gtk_window_set_urgency_hint",  cast(void**)& gtk_window_set_urgency_hint),
        Symbol( "gtk_window_get_skip_pager_hint",  cast(void**)& gtk_window_get_skip_pager_hint),
        Symbol( "gtk_window_set_skip_pager_hint",  cast(void**)& gtk_window_set_skip_pager_hint),
        Symbol( "gtk_window_get_skip_taskbar_hint",  cast(void**)& gtk_window_get_skip_taskbar_hint),
        Symbol( "gtk_window_set_skip_taskbar_hint",  cast(void**)& gtk_window_set_skip_taskbar_hint),
        Symbol( "gtk_window_get_type_hint",  cast(void**)& gtk_window_get_type_hint),
        Symbol( "gtk_window_set_type_hint",  cast(void**)& gtk_window_set_type_hint),
        Symbol( "gtk_window_get_opacity",  cast(void**)& gtk_window_get_opacity),
        Symbol( "gtk_window_set_opacity",  cast(void**)& gtk_window_set_opacity),
        Symbol( "gtk_window_get_transient_for",  cast(void**)& gtk_window_get_transient_for),
        Symbol( "gtk_window_set_transient_for",  cast(void**)& gtk_window_set_transient_for),
        Symbol( "gtk_window_activate_default",  cast(void**)& gtk_window_activate_default),
        Symbol( "gtk_window_set_default",  cast(void**)& gtk_window_set_default),
        Symbol( "gtk_window_get_focus",  cast(void**)& gtk_window_get_focus),
        Symbol( "gtk_window_set_focus",  cast(void**)& gtk_window_set_focus),
        Symbol( "gtk_window_activate_focus",  cast(void**)& gtk_window_activate_focus),
        Symbol( "gtk_window_set_position",  cast(void**)& gtk_window_set_position),
        Symbol( "gtk_window_remove_accel_group",  cast(void**)& gtk_window_remove_accel_group),
        Symbol( "gtk_window_add_accel_group",  cast(void**)& gtk_window_add_accel_group),
        Symbol( "gtk_window_get_role",  cast(void**)& gtk_window_get_role),
        Symbol( "gtk_window_set_startup_id",  cast(void**)& gtk_window_set_startup_id),
        Symbol( "gtk_window_set_role",  cast(void**)& gtk_window_set_role),
        Symbol( "gtk_window_set_wmclass",  cast(void**)& gtk_window_set_wmclass),
        Symbol( "gtk_window_get_title",  cast(void**)& gtk_window_get_title),
        Symbol( "gtk_window_set_title",  cast(void**)& gtk_window_set_title),
        Symbol( "gtk_window_new",  cast(void**)& gtk_window_new),
        Symbol( "gtk_window_get_type",  cast(void**)& gtk_window_get_type),
        Symbol( "gtk_bin_get_child",  cast(void**)& gtk_bin_get_child),
        Symbol( "gtk_bin_get_type",  cast(void**)& gtk_bin_get_type),
    //     Symbol( "_gtk_container_focus_sort",  cast(void**)& _gtk_container_focus_sort),
    //     Symbol( "_gtk_container_dequeue_resize_handler",  cast(void**)& _gtk_container_dequeue_resize_handler),
    //     Symbol( "_gtk_container_child_composite_name",  cast(void**)& _gtk_container_child_composite_name),
    //     Symbol( "_gtk_container_clear_resize_widgets",  cast(void**)& _gtk_container_clear_resize_widgets),
    //     Symbol( "_gtk_container_queue_resize",  cast(void**)& _gtk_container_queue_resize),
        Symbol( "gtk_container_forall",  cast(void**)& gtk_container_forall),
        Symbol( "gtk_container_child_get_property",  cast(void**)& gtk_container_child_get_property),
        Symbol( "gtk_container_child_set_property",  cast(void**)& gtk_container_child_set_property),
        Symbol( "gtk_container_child_get_valist",  cast(void**)& gtk_container_child_get_valist),
        Symbol( "gtk_container_child_set_valist",  cast(void**)& gtk_container_child_set_valist),
        Symbol( "gtk_container_child_get",  cast(void**)& gtk_container_child_get),
        Symbol( "gtk_container_child_set",  cast(void**)& gtk_container_child_set),
        Symbol( "gtk_container_add_with_properties",  cast(void**)& gtk_container_add_with_properties),
        Symbol( "gtk_container_class_list_child_properties",  cast(void**)& gtk_container_class_list_child_properties),
        Symbol( "gtk_container_class_find_child_property",  cast(void**)& gtk_container_class_find_child_property),
        Symbol( "gtk_container_class_install_child_property",  cast(void**)& gtk_container_class_install_child_property),
        Symbol( "gtk_container_child_type",  cast(void**)& gtk_container_child_type),
        Symbol( "gtk_container_resize_children",  cast(void**)& gtk_container_resize_children),
        Symbol( "gtk_container_get_focus_hadjustment",  cast(void**)& gtk_container_get_focus_hadjustment),
        Symbol( "gtk_container_set_focus_hadjustment",  cast(void**)& gtk_container_set_focus_hadjustment),
        Symbol( "gtk_container_get_focus_vadjustment",  cast(void**)& gtk_container_get_focus_vadjustment),
        Symbol( "gtk_container_set_focus_vadjustment",  cast(void**)& gtk_container_set_focus_vadjustment),
        Symbol( "gtk_container_set_focus_child",  cast(void**)& gtk_container_set_focus_child),
        Symbol( "gtk_container_set_reallocate_redraws",  cast(void**)& gtk_container_set_reallocate_redraws),
        Symbol( "gtk_container_unset_focus_chain",  cast(void**)& gtk_container_unset_focus_chain),
        Symbol( "gtk_container_get_focus_chain",  cast(void**)& gtk_container_get_focus_chain),
        Symbol( "gtk_container_set_focus_chain",  cast(void**)& gtk_container_set_focus_chain),
        Symbol( "gtk_container_propagate_expose",  cast(void**)& gtk_container_propagate_expose),
        Symbol( "gtk_container_get_children",  cast(void**)& gtk_container_get_children),
        Symbol( "gtk_container_foreach_full",  cast(void**)& gtk_container_foreach_full),
        Symbol( "gtk_container_foreach",  cast(void**)& gtk_container_foreach),
        Symbol( "gtk_container_check_resize",  cast(void**)& gtk_container_check_resize),
        Symbol( "gtk_container_get_resize_mode",  cast(void**)& gtk_container_get_resize_mode),
        Symbol( "gtk_container_set_resize_mode",  cast(void**)& gtk_container_set_resize_mode),
        Symbol( "gtk_container_remove",  cast(void**)& gtk_container_remove),
        Symbol( "gtk_container_add",  cast(void**)& gtk_container_add),
        Symbol( "gtk_container_get_border_width",  cast(void**)& gtk_container_get_border_width),
        Symbol( "gtk_container_set_border_width",  cast(void**)& gtk_container_set_border_width),
        Symbol( "gtk_container_get_type",  cast(void**)& gtk_container_get_type),
    //     Symbol( "_gtk_widget_peek_colormap",  cast(void**)& _gtk_widget_peek_colormap),
    //     Symbol( "_gtk_widget_propagate_composited_changed",  cast(void**)& _gtk_widget_propagate_composited_changed),
    //     Symbol( "_gtk_widget_propagate_screen_changed",  cast(void**)& _gtk_widget_propagate_screen_changed),
    //     Symbol( "_gtk_widget_propagate_hierarchy_changed",  cast(void**)& _gtk_widget_propagate_hierarchy_changed),
    //     Symbol( "_gtk_widget_get_aux_info",  cast(void**)& _gtk_widget_get_aux_info),
    //     Symbol( "_gtk_widget_grab_notify",  cast(void**)& _gtk_widget_grab_notify),
        Symbol( "gtk_requisition_free",  cast(void**)& gtk_requisition_free),
        Symbol( "gtk_requisition_copy",  cast(void**)& gtk_requisition_copy),
        Symbol( "gtk_requisition_get_type",  cast(void**)& gtk_requisition_get_type),
        Symbol( "gtk_widget_get_has_tooltip",  cast(void**)& gtk_widget_get_has_tooltip),
        Symbol( "gtk_widget_set_has_tooltip",  cast(void**)& gtk_widget_set_has_tooltip),
        Symbol( "gtk_widget_get_tooltip_markup",  cast(void**)& gtk_widget_get_tooltip_markup),
        Symbol( "gtk_widget_set_tooltip_markup",  cast(void**)& gtk_widget_set_tooltip_markup),
        Symbol( "gtk_widget_get_tooltip_text",  cast(void**)& gtk_widget_get_tooltip_text),
        Symbol( "gtk_widget_set_tooltip_text",  cast(void**)& gtk_widget_set_tooltip_text),
        Symbol( "gtk_widget_trigger_tooltip_query",  cast(void**)& gtk_widget_trigger_tooltip_query),
        Symbol( "gtk_widget_get_tooltip_window",  cast(void**)& gtk_widget_get_tooltip_window),
        Symbol( "gtk_widget_set_tooltip_window",  cast(void**)& gtk_widget_set_tooltip_window),
        Symbol( "gtk_widget_remove_mnemonic_label",  cast(void**)& gtk_widget_remove_mnemonic_label),
        Symbol( "gtk_widget_add_mnemonic_label",  cast(void**)& gtk_widget_add_mnemonic_label),
        Symbol( "gtk_widget_list_mnemonic_labels",  cast(void**)& gtk_widget_list_mnemonic_labels),
        Symbol( "gtk_widget_class_path",  cast(void**)& gtk_widget_class_path),
        Symbol( "gtk_widget_path",  cast(void**)& gtk_widget_path),
        Symbol( "gtk_widget_reset_shapes",  cast(void**)& gtk_widget_reset_shapes),
        Symbol( "gtk_widget_input_shape_combine_mask",  cast(void**)& gtk_widget_input_shape_combine_mask),
        Symbol( "gtk_widget_shape_combine_mask",  cast(void**)& gtk_widget_shape_combine_mask),
        Symbol( "gtk_widget_is_composited",  cast(void**)& gtk_widget_is_composited),
        Symbol( "gtk_widget_get_default_direction",  cast(void**)& gtk_widget_get_default_direction),
        Symbol( "gtk_widget_set_default_direction",  cast(void**)& gtk_widget_set_default_direction),
        Symbol( "gtk_widget_get_direction",  cast(void**)& gtk_widget_get_direction),
        Symbol( "gtk_widget_set_direction",  cast(void**)& gtk_widget_set_direction),
        Symbol( "gtk_widget_get_default_visual",  cast(void**)& gtk_widget_get_default_visual),
        Symbol( "gtk_widget_get_default_colormap",  cast(void**)& gtk_widget_get_default_colormap),
        Symbol( "gtk_widget_get_default_style",  cast(void**)& gtk_widget_get_default_style),
        Symbol( "gtk_widget_set_default_colormap",  cast(void**)& gtk_widget_set_default_colormap),
        Symbol( "gtk_widget_style_get",  cast(void**)& gtk_widget_style_get),
        Symbol( "gtk_widget_style_get_valist",  cast(void**)& gtk_widget_style_get_valist),
        Symbol( "gtk_widget_style_get_property",  cast(void**)& gtk_widget_style_get_property),
        Symbol( "gtk_widget_class_list_style_properties",  cast(void**)& gtk_widget_class_list_style_properties),
        Symbol( "gtk_widget_class_find_style_property",  cast(void**)& gtk_widget_class_find_style_property),
        Symbol( "gtk_widget_class_install_style_property_parser",  cast(void**)& gtk_widget_class_install_style_property_parser),
        Symbol( "gtk_widget_class_install_style_property",  cast(void**)& gtk_widget_class_install_style_property),
        Symbol( "gtk_widget_pop_colormap",  cast(void**)& gtk_widget_pop_colormap),
        Symbol( "gtk_widget_pop_composite_child",  cast(void**)& gtk_widget_pop_composite_child),
        Symbol( "gtk_widget_push_composite_child",  cast(void**)& gtk_widget_push_composite_child),
        Symbol( "gtk_widget_push_colormap",  cast(void**)& gtk_widget_push_colormap),
        Symbol( "gtk_widget_reset_rc_styles",  cast(void**)& gtk_widget_reset_rc_styles),
        Symbol( "gtk_widget_get_composite_name",  cast(void**)& gtk_widget_get_composite_name),
        Symbol( "gtk_widget_set_composite_name",  cast(void**)& gtk_widget_set_composite_name),
        Symbol( "gtk_widget_render_icon",  cast(void**)& gtk_widget_render_icon),
        Symbol( "gtk_widget_create_pango_layout",  cast(void**)& gtk_widget_create_pango_layout),
        Symbol( "gtk_widget_get_pango_context",  cast(void**)& gtk_widget_get_pango_context),
        Symbol( "gtk_widget_create_pango_context",  cast(void**)& gtk_widget_create_pango_context),
        Symbol( "gtk_widget_modify_font",  cast(void**)& gtk_widget_modify_font),
        Symbol( "gtk_widget_modify_cursor",  cast(void**)& gtk_widget_modify_cursor),
        Symbol( "gtk_widget_modify_base",  cast(void**)& gtk_widget_modify_base),
        Symbol( "gtk_widget_modify_text",  cast(void**)& gtk_widget_modify_text),
        Symbol( "gtk_widget_modify_bg",  cast(void**)& gtk_widget_modify_bg),
        Symbol( "gtk_widget_modify_fg",  cast(void**)& gtk_widget_modify_fg),
        Symbol( "gtk_widget_get_modifier_style",  cast(void**)& gtk_widget_get_modifier_style),
        Symbol( "gtk_widget_modify_style",  cast(void**)& gtk_widget_modify_style),
        Symbol( "gtk_widget_get_style",  cast(void**)& gtk_widget_get_style),
        Symbol( "gtk_widget_ensure_style",  cast(void**)& gtk_widget_ensure_style),
        Symbol( "gtk_widget_set_style",  cast(void**)& gtk_widget_set_style),
        Symbol( "gtk_widget_hide_on_delete",  cast(void**)& gtk_widget_hide_on_delete),
        Symbol( "gtk_widget_translate_coordinates",  cast(void**)& gtk_widget_translate_coordinates),
        Symbol( "gtk_widget_is_ancestor",  cast(void**)& gtk_widget_is_ancestor),
        Symbol( "gtk_widget_get_pointer",  cast(void**)& gtk_widget_get_pointer),
        Symbol( "gtk_widget_get_events",  cast(void**)& gtk_widget_get_events),
        Symbol( "gtk_widget_set_colormap",  cast(void**)& gtk_widget_set_colormap),
        Symbol( "gtk_widget_get_accessible",  cast(void**)& gtk_widget_get_accessible),
        Symbol( "gtk_widget_get_clipboard",  cast(void**)& gtk_widget_get_clipboard),
        Symbol( "gtk_widget_get_settings",  cast(void**)& gtk_widget_get_settings),
        Symbol( "gtk_widget_get_root_window",  cast(void**)& gtk_widget_get_root_window),
        Symbol( "gtk_widget_get_display",  cast(void**)& gtk_widget_get_display),
        Symbol( "gtk_widget_has_screen",  cast(void**)& gtk_widget_has_screen),
        Symbol( "gtk_widget_get_screen",  cast(void**)& gtk_widget_get_screen),
        Symbol( "gtk_widget_get_visual",  cast(void**)& gtk_widget_get_visual),
        Symbol( "gtk_widget_get_colormap",  cast(void**)& gtk_widget_get_colormap),
        Symbol( "gtk_widget_get_ancestor",  cast(void**)& gtk_widget_get_ancestor),
        Symbol( "gtk_widget_get_toplevel",  cast(void**)& gtk_widget_get_toplevel),
        Symbol( "gtk_widget_get_extension_events",  cast(void**)& gtk_widget_get_extension_events),
        Symbol( "gtk_widget_set_extension_events",  cast(void**)& gtk_widget_set_extension_events),
        Symbol( "gtk_widget_add_events",  cast(void**)& gtk_widget_add_events),
        Symbol( "gtk_widget_set_events",  cast(void**)& gtk_widget_set_events),
        Symbol( "gtk_widget_set_usize",  cast(void**)& gtk_widget_set_usize),
        Symbol( "gtk_widget_set_uposition",  cast(void**)& gtk_widget_set_uposition),
        Symbol( "gtk_widget_get_size_request",  cast(void**)& gtk_widget_get_size_request),
        Symbol( "gtk_widget_set_size_request",  cast(void**)& gtk_widget_set_size_request),
        Symbol( "gtk_widget_error_bell",  cast(void**)& gtk_widget_error_bell),
        Symbol( "gtk_widget_keynav_failed",  cast(void**)& gtk_widget_keynav_failed),
        Symbol( "gtk_widget_child_focus",  cast(void**)& gtk_widget_child_focus),
        Symbol( "gtk_widget_get_parent_window",  cast(void**)& gtk_widget_get_parent_window),
        Symbol( "gtk_widget_get_parent",  cast(void**)& gtk_widget_get_parent),
        Symbol( "gtk_widget_get_child_visible",  cast(void**)& gtk_widget_get_child_visible),
        Symbol( "gtk_widget_set_child_visible",  cast(void**)& gtk_widget_set_child_visible),
        Symbol( "gtk_widget_set_parent_window",  cast(void**)& gtk_widget_set_parent_window),
        Symbol( "gtk_widget_set_parent",  cast(void**)& gtk_widget_set_parent),
        Symbol( "gtk_widget_set_redraw_on_allocate",  cast(void**)& gtk_widget_set_redraw_on_allocate),
        Symbol( "gtk_widget_set_double_buffered",  cast(void**)& gtk_widget_set_double_buffered),
        Symbol( "gtk_widget_set_app_paintable",  cast(void**)& gtk_widget_set_app_paintable),
        Symbol( "gtk_widget_set_sensitive",  cast(void**)& gtk_widget_set_sensitive),
        Symbol( "gtk_widget_set_state",  cast(void**)& gtk_widget_set_state),
        Symbol( "gtk_widget_get_name",  cast(void**)& gtk_widget_get_name),
        Symbol( "gtk_widget_set_name",  cast(void**)& gtk_widget_set_name),
        Symbol( "gtk_widget_grab_default",  cast(void**)& gtk_widget_grab_default),
        Symbol( "gtk_widget_grab_focus",  cast(void**)& gtk_widget_grab_focus),
        Symbol( "gtk_widget_is_focus",  cast(void**)& gtk_widget_is_focus),
        Symbol( "gtk_widget_thaw_child_notify",  cast(void**)& gtk_widget_thaw_child_notify),
        Symbol( "gtk_widget_child_notify",  cast(void**)& gtk_widget_child_notify),
        Symbol( "gtk_widget_freeze_child_notify",  cast(void**)& gtk_widget_freeze_child_notify),
        Symbol( "gtk_widget_region_intersect",  cast(void**)& gtk_widget_region_intersect),
        Symbol( "gtk_widget_intersect",  cast(void**)& gtk_widget_intersect),
        Symbol( "gtk_widget_reparent",  cast(void**)& gtk_widget_reparent),
        Symbol( "gtk_widget_set_scroll_adjustments",  cast(void**)& gtk_widget_set_scroll_adjustments),
        Symbol( "gtk_widget_activate",  cast(void**)& gtk_widget_activate),
        Symbol( "gtk_widget_send_expose",  cast(void**)& gtk_widget_send_expose),
        Symbol( "gtk_widget_event",  cast(void**)& gtk_widget_event),
        Symbol( "gtk_widget_mnemonic_activate",  cast(void**)& gtk_widget_mnemonic_activate),
        Symbol( "gtk_widget_can_activate_accel",  cast(void**)& gtk_widget_can_activate_accel),
        Symbol( "gtk_widget_list_accel_closures",  cast(void**)& gtk_widget_list_accel_closures),
    //     Symbol( "_gtk_widget_get_accel_path",  cast(void**)& _gtk_widget_get_accel_path),
        Symbol( "gtk_widget_set_accel_path",  cast(void**)& gtk_widget_set_accel_path),
        Symbol( "gtk_widget_remove_accelerator",  cast(void**)& gtk_widget_remove_accelerator),
        Symbol( "gtk_widget_add_accelerator",  cast(void**)& gtk_widget_add_accelerator),
        Symbol( "gtk_widget_get_child_requisition",  cast(void**)& gtk_widget_get_child_requisition),
        Symbol( "gtk_widget_size_allocate",  cast(void**)& gtk_widget_size_allocate),
        Symbol( "gtk_widget_size_request",  cast(void**)& gtk_widget_size_request),
        Symbol( "gtk_widget_draw",  cast(void**)& gtk_widget_draw),
        Symbol( "gtk_widget_queue_resize_no_redraw",  cast(void**)& gtk_widget_queue_resize_no_redraw),
        Symbol( "gtk_widget_queue_resize",  cast(void**)& gtk_widget_queue_resize),
        Symbol( "gtk_widget_queue_clear_area",  cast(void**)& gtk_widget_queue_clear_area),
        Symbol( "gtk_widget_queue_clear",  cast(void**)& gtk_widget_queue_clear),
        Symbol( "gtk_widget_queue_draw_area",  cast(void**)& gtk_widget_queue_draw_area),
        Symbol( "gtk_widget_queue_draw",  cast(void**)& gtk_widget_queue_draw),
        Symbol( "gtk_widget_unrealize",  cast(void**)& gtk_widget_unrealize),
        Symbol( "gtk_widget_realize",  cast(void**)& gtk_widget_realize),
        Symbol( "gtk_widget_unmap",  cast(void**)& gtk_widget_unmap),
        Symbol( "gtk_widget_map",  cast(void**)& gtk_widget_map),
        Symbol( "gtk_widget_get_no_show_all",  cast(void**)& gtk_widget_get_no_show_all),
        Symbol( "gtk_widget_set_no_show_all",  cast(void**)& gtk_widget_set_no_show_all),
        Symbol( "gtk_widget_hide_all",  cast(void**)& gtk_widget_hide_all),
        Symbol( "gtk_widget_show_all",  cast(void**)& gtk_widget_show_all),
        Symbol( "gtk_widget_hide",  cast(void**)& gtk_widget_hide),
        Symbol( "gtk_widget_show_now",  cast(void**)& gtk_widget_show_now),
        Symbol( "gtk_widget_show",  cast(void**)& gtk_widget_show),
        Symbol( "gtk_widget_unparent",  cast(void**)& gtk_widget_unparent),
        Symbol( "gtk_widget_set",  cast(void**)& gtk_widget_set),
        Symbol( "gtk_widget_unref",  cast(void**)& gtk_widget_unref),
        Symbol( "gtk_widget_ref",  cast(void**)& gtk_widget_ref),
        Symbol( "gtk_widget_destroyed",  cast(void**)& gtk_widget_destroyed),
        Symbol( "gtk_widget_destroy",  cast(void**)& gtk_widget_destroy),
        Symbol( "gtk_widget_new",  cast(void**)& gtk_widget_new),
        Symbol( "gtk_widget_get_type",  cast(void**)& gtk_widget_get_type),
    //     Symbol( "_gtk_settings_parse_convert",  cast(void**)& _gtk_settings_parse_convert),
    //     Symbol( "_gtk_rc_property_parser_from_type",  cast(void**)& _gtk_rc_property_parser_from_type),
    //     Symbol( "_gtk_settings_handle_event",  cast(void**)& _gtk_settings_handle_event),
    //     Symbol( "_gtk_settings_reset_rc_values",  cast(void**)& _gtk_settings_reset_rc_values),
    //     Symbol( "_gtk_settings_set_property_value_from_rc",  cast(void**)& _gtk_settings_set_property_value_from_rc),
        Symbol( "gtk_settings_set_double_property",  cast(void**)& gtk_settings_set_double_property),
        Symbol( "gtk_settings_set_long_property",  cast(void**)& gtk_settings_set_long_property),
        Symbol( "gtk_settings_set_string_property",  cast(void**)& gtk_settings_set_string_property),
        Symbol( "gtk_settings_set_property_value",  cast(void**)& gtk_settings_set_property_value),
        Symbol( "gtk_rc_property_parse_border",  cast(void**)& gtk_rc_property_parse_border),
        Symbol( "gtk_rc_property_parse_requisition",  cast(void**)& gtk_rc_property_parse_requisition),
        Symbol( "gtk_rc_property_parse_flags",  cast(void**)& gtk_rc_property_parse_flags),
        Symbol( "gtk_rc_property_parse_enum",  cast(void**)& gtk_rc_property_parse_enum),
        Symbol( "gtk_rc_property_parse_color",  cast(void**)& gtk_rc_property_parse_color),
        Symbol( "gtk_settings_install_property_parser",  cast(void**)& gtk_settings_install_property_parser),
        Symbol( "gtk_settings_install_property",  cast(void**)& gtk_settings_install_property),
        Symbol( "gtk_settings_get_for_screen",  cast(void**)& gtk_settings_get_for_screen),
        Symbol( "gtk_settings_get_default",  cast(void**)& gtk_settings_get_default),
        Symbol( "gtk_settings_get_type",  cast(void**)& gtk_settings_get_type),
    //     Symbol( "_gtk_rc_context_destroy",  cast(void**)& _gtk_rc_context_destroy),
    //     Symbol( "_gtk_rc_context_get_default_font_name",  cast(void**)& _gtk_rc_context_get_default_font_name),
    //     Symbol( "_gtk_rc_style_get_color_hashes",  cast(void**)& _gtk_rc_style_get_color_hashes),
    //     Symbol( "_gtk_rc_style_unset_rc_property",  cast(void**)& _gtk_rc_style_unset_rc_property),
    //     Symbol( "_gtk_rc_style_set_rc_property",  cast(void**)& _gtk_rc_style_set_rc_property),
    //     Symbol( "_gtk_rc_style_lookup_rc_property",  cast(void**)& _gtk_rc_style_lookup_rc_property),
        Symbol( "gtk_rc_parse_priority",  cast(void**)& gtk_rc_parse_priority),
        Symbol( "gtk_rc_parse_state",  cast(void**)& gtk_rc_parse_state),
        Symbol( "gtk_rc_parse_color_full",  cast(void**)& gtk_rc_parse_color_full),
        Symbol( "gtk_rc_parse_color",  cast(void**)& gtk_rc_parse_color),
        Symbol( "gtk_rc_scanner_new",  cast(void**)& gtk_rc_scanner_new),
        Symbol( "gtk_rc_get_im_module_file",  cast(void**)& gtk_rc_get_im_module_file),
        Symbol( "gtk_rc_get_im_module_path",  cast(void**)& gtk_rc_get_im_module_path),
        Symbol( "gtk_rc_get_module_dir",  cast(void**)& gtk_rc_get_module_dir),
        Symbol( "gtk_rc_get_theme_dir",  cast(void**)& gtk_rc_get_theme_dir),
        Symbol( "gtk_rc_find_module_in_path",  cast(void**)& gtk_rc_find_module_in_path),
        Symbol( "gtk_rc_style_unref",  cast(void**)& gtk_rc_style_unref),
        Symbol( "gtk_rc_style_ref",  cast(void**)& gtk_rc_style_ref),
        Symbol( "gtk_rc_style_copy",  cast(void**)& gtk_rc_style_copy),
        Symbol( "gtk_rc_style_new",  cast(void**)& gtk_rc_style_new),
        Symbol( "gtk_rc_style_get_type",  cast(void**)& gtk_rc_style_get_type),
        Symbol( "gtk_rc_add_class_style",  cast(void**)& gtk_rc_add_class_style),
        Symbol( "gtk_rc_add_widget_class_style",  cast(void**)& gtk_rc_add_widget_class_style),
        Symbol( "gtk_rc_add_widget_name_style",  cast(void**)& gtk_rc_add_widget_name_style),
        Symbol( "gtk_rc_reparse_all",  cast(void**)& gtk_rc_reparse_all),
        Symbol( "gtk_rc_parse_string",  cast(void**)& gtk_rc_parse_string),
        Symbol( "gtk_rc_parse",  cast(void**)& gtk_rc_parse),
        Symbol( "gtk_rc_find_pixmap_in_path",  cast(void**)& gtk_rc_find_pixmap_in_path),
        Symbol( "gtk_rc_reset_styles",  cast(void**)& gtk_rc_reset_styles),
        Symbol( "gtk_rc_reparse_all_for_settings",  cast(void**)& gtk_rc_reparse_all_for_settings),
        Symbol( "gtk_rc_get_style_by_paths",  cast(void**)& gtk_rc_get_style_by_paths),
        Symbol( "gtk_rc_get_style",  cast(void**)& gtk_rc_get_style),
        Symbol( "gtk_rc_get_default_files",  cast(void**)& gtk_rc_get_default_files),
        Symbol( "gtk_rc_set_default_files",  cast(void**)& gtk_rc_set_default_files),
        Symbol( "gtk_rc_add_default_file",  cast(void**)& gtk_rc_add_default_file),
    //     Symbol( "_gtk_rc_match_widget_class",  cast(void**)& _gtk_rc_match_widget_class),
    //     Symbol( "_gtk_rc_free_widget_class_path",  cast(void**)& _gtk_rc_free_widget_class_path),
    //     Symbol( "_gtk_rc_parse_widget_class_path",  cast(void**)& _gtk_rc_parse_widget_class_path),
    //     Symbol( "_gtk_rc_init",  cast(void**)& _gtk_rc_init),
    //     Symbol( "_gtk_widget_get_cursor_color",  cast(void**)& _gtk_widget_get_cursor_color),
    //     Symbol( "_gtk_widget_get_cursor_gc",  cast(void**)& _gtk_widget_get_cursor_gc),
        Symbol( "gtk_draw_insertion_cursor",  cast(void**)& gtk_draw_insertion_cursor),
        Symbol( "gtk_paint_string",  cast(void**)& gtk_paint_string),
        Symbol( "gtk_draw_string",  cast(void**)& gtk_draw_string),
    //     Symbol( "_gtk_style_shade",  cast(void**)& _gtk_style_shade),
    //     Symbol( "_gtk_style_init_for_settings",  cast(void**)& _gtk_style_init_for_settings),
    //     Symbol( "_gtk_style_peek_property_value",  cast(void**)& _gtk_style_peek_property_value),
        Symbol( "gtk_border_free",  cast(void**)& gtk_border_free),
        Symbol( "gtk_border_copy",  cast(void**)& gtk_border_copy),
        Symbol( "gtk_border_get_type",  cast(void**)& gtk_border_get_type),
        Symbol( "gtk_paint_resize_grip",  cast(void**)& gtk_paint_resize_grip),
        Symbol( "gtk_paint_layout",  cast(void**)& gtk_paint_layout),
        Symbol( "gtk_paint_expander",  cast(void**)& gtk_paint_expander),
        Symbol( "gtk_paint_handle",  cast(void**)& gtk_paint_handle),
        Symbol( "gtk_paint_slider",  cast(void**)& gtk_paint_slider),
        Symbol( "gtk_paint_focus",  cast(void**)& gtk_paint_focus),
        Symbol( "gtk_paint_extension",  cast(void**)& gtk_paint_extension),
        Symbol( "gtk_paint_box_gap",  cast(void**)& gtk_paint_box_gap),
        Symbol( "gtk_paint_shadow_gap",  cast(void**)& gtk_paint_shadow_gap),
        Symbol( "gtk_paint_tab",  cast(void**)& gtk_paint_tab),
        Symbol( "gtk_paint_option",  cast(void**)& gtk_paint_option),
        Symbol( "gtk_paint_check",  cast(void**)& gtk_paint_check),
        Symbol( "gtk_paint_flat_box",  cast(void**)& gtk_paint_flat_box),
        Symbol( "gtk_paint_box",  cast(void**)& gtk_paint_box),
        Symbol( "gtk_paint_diamond",  cast(void**)& gtk_paint_diamond),
        Symbol( "gtk_paint_arrow",  cast(void**)& gtk_paint_arrow),
        Symbol( "gtk_paint_polygon",  cast(void**)& gtk_paint_polygon),
        Symbol( "gtk_paint_shadow",  cast(void**)& gtk_paint_shadow),
        Symbol( "gtk_paint_vline",  cast(void**)& gtk_paint_vline),
        Symbol( "gtk_paint_hline",  cast(void**)& gtk_paint_hline),
        Symbol( "gtk_draw_resize_grip",  cast(void**)& gtk_draw_resize_grip),
        Symbol( "gtk_draw_layout",  cast(void**)& gtk_draw_layout),
        Symbol( "gtk_draw_expander",  cast(void**)& gtk_draw_expander),
        Symbol( "gtk_draw_handle",  cast(void**)& gtk_draw_handle),
        Symbol( "gtk_draw_slider",  cast(void**)& gtk_draw_slider),
        Symbol( "gtk_draw_focus",  cast(void**)& gtk_draw_focus),
        Symbol( "gtk_draw_extension",  cast(void**)& gtk_draw_extension),
        Symbol( "gtk_draw_box_gap",  cast(void**)& gtk_draw_box_gap),
        Symbol( "gtk_draw_shadow_gap",  cast(void**)& gtk_draw_shadow_gap),
        Symbol( "gtk_draw_tab",  cast(void**)& gtk_draw_tab),
        Symbol( "gtk_draw_option",  cast(void**)& gtk_draw_option),
        Symbol( "gtk_draw_check",  cast(void**)& gtk_draw_check),
        Symbol( "gtk_draw_flat_box",  cast(void**)& gtk_draw_flat_box),
        Symbol( "gtk_draw_box",  cast(void**)& gtk_draw_box),
        Symbol( "gtk_draw_diamond",  cast(void**)& gtk_draw_diamond),
        Symbol( "gtk_draw_arrow",  cast(void**)& gtk_draw_arrow),
        Symbol( "gtk_draw_polygon",  cast(void**)& gtk_draw_polygon),
        Symbol( "gtk_draw_shadow",  cast(void**)& gtk_draw_shadow),
        Symbol( "gtk_draw_vline",  cast(void**)& gtk_draw_vline),
        Symbol( "gtk_draw_hline",  cast(void**)& gtk_draw_hline),
        Symbol( "gtk_style_render_icon",  cast(void**)& gtk_style_render_icon),
        Symbol( "gtk_style_lookup_color",  cast(void**)& gtk_style_lookup_color),
        Symbol( "gtk_style_lookup_icon_set",  cast(void**)& gtk_style_lookup_icon_set),
        Symbol( "gtk_style_apply_default_background",  cast(void**)& gtk_style_apply_default_background),
        Symbol( "gtk_style_set_background",  cast(void**)& gtk_style_set_background),
        Symbol( "gtk_style_set_font",  cast(void**)& gtk_style_set_font),
        Symbol( "gtk_style_get_font",  cast(void**)& gtk_style_get_font),
        Symbol( "gtk_style_unref",  cast(void**)& gtk_style_unref),
        Symbol( "gtk_style_ref",  cast(void**)& gtk_style_ref),
        Symbol( "gtk_style_detach",  cast(void**)& gtk_style_detach),
        Symbol( "gtk_style_attach",  cast(void**)& gtk_style_attach),
        Symbol( "gtk_style_copy",  cast(void**)& gtk_style_copy),
        Symbol( "gtk_style_new",  cast(void**)& gtk_style_new),
        Symbol( "gtk_style_get_type",  cast(void**)& gtk_style_get_type),
        Symbol( "gtk_adjustment_set_value",  cast(void**)& gtk_adjustment_set_value),
        Symbol( "gtk_adjustment_get_value",  cast(void**)& gtk_adjustment_get_value),
        Symbol( "gtk_adjustment_clamp_page",  cast(void**)& gtk_adjustment_clamp_page),
        Symbol( "gtk_adjustment_value_changed",  cast(void**)& gtk_adjustment_value_changed),
        Symbol( "gtk_adjustment_changed",  cast(void**)& gtk_adjustment_changed),
        Symbol( "gtk_adjustment_new",  cast(void**)& gtk_adjustment_new),
        Symbol( "gtk_adjustment_get_type",  cast(void**)& gtk_adjustment_get_type),
        Symbol( "gtk_object_add_arg_type",  cast(void**)& gtk_object_add_arg_type),
        Symbol( "gtk_object_set",  cast(void**)& gtk_object_set),
        Symbol( "gtk_object_get",  cast(void**)& gtk_object_get),
        Symbol( "gtk_object_remove_no_notify_by_id",  cast(void**)& gtk_object_remove_no_notify_by_id),
        Symbol( "gtk_object_remove_data_by_id",  cast(void**)& gtk_object_remove_data_by_id),
        Symbol( "gtk_object_get_data_by_id",  cast(void**)& gtk_object_get_data_by_id),
        Symbol( "gtk_object_set_data_by_id_full",  cast(void**)& gtk_object_set_data_by_id_full),
        Symbol( "gtk_object_set_data_by_id",  cast(void**)& gtk_object_set_data_by_id),
        Symbol( "gtk_object_get_user_data",  cast(void**)& gtk_object_get_user_data),
        Symbol( "gtk_object_set_user_data",  cast(void**)& gtk_object_set_user_data),
        Symbol( "gtk_object_remove_no_notify",  cast(void**)& gtk_object_remove_no_notify),
        Symbol( "gtk_object_get_data",  cast(void**)& gtk_object_get_data),
        Symbol( "gtk_object_remove_data",  cast(void**)& gtk_object_remove_data),
        Symbol( "gtk_object_set_data_full",  cast(void**)& gtk_object_set_data_full),
        Symbol( "gtk_object_set_data",  cast(void**)& gtk_object_set_data),
        Symbol( "gtk_object_weakunref",  cast(void**)& gtk_object_weakunref),
        Symbol( "gtk_object_weakref",  cast(void**)& gtk_object_weakref),
        Symbol( "gtk_object_unref",  cast(void**)& gtk_object_unref),
        Symbol( "gtk_object_ref",  cast(void**)& gtk_object_ref),
        Symbol( "gtk_object_new",  cast(void**)& gtk_object_new),
        Symbol( "gtk_object_destroy",  cast(void**)& gtk_object_destroy),
        Symbol( "gtk_object_sink",  cast(void**)& gtk_object_sink),
        Symbol( "gtk_object_get_type",  cast(void**)& gtk_object_get_type),
        Symbol( "gtk_debug_flags",  cast(void**)& gtk_debug_flags),
        Symbol( "gtk_type_init",  cast(void**)& gtk_type_init),
        Symbol( "gtk_type_flags_find_value",  cast(void**)& gtk_type_flags_find_value),
        Symbol( "gtk_type_enum_find_value",  cast(void**)& gtk_type_enum_find_value),
        Symbol( "gtk_type_flags_get_values",  cast(void**)& gtk_type_flags_get_values),
        Symbol( "gtk_type_enum_get_values",  cast(void**)& gtk_type_enum_get_values),
        Symbol( "gtk_type_new",  cast(void**)& gtk_type_new),
        Symbol( "gtk_type_unique",  cast(void**)& gtk_type_unique),
        Symbol( "gtk_type_class",  cast(void**)& gtk_type_class),
        Symbol( "gtk_identifier_get_type",  cast(void**)& gtk_identifier_get_type),
        Symbol( "gtk_widget_help_type_get_type",  cast(void**)& gtk_widget_help_type_get_type),
        Symbol( "gtk_widget_flags_get_type",  cast(void**)& gtk_widget_flags_get_type),
        Symbol( "gtk_ui_manager_item_type_get_type",  cast(void**)& gtk_ui_manager_item_type_get_type),
        Symbol( "gtk_tree_view_column_sizing_get_type",  cast(void**)& gtk_tree_view_column_sizing_get_type),
        Symbol( "gtk_tree_view_drop_position_get_type",  cast(void**)& gtk_tree_view_drop_position_get_type),
        Symbol( "gtk_tree_model_flags_get_type",  cast(void**)& gtk_tree_model_flags_get_type),
        Symbol( "gtk_tree_view_mode_get_type",  cast(void**)& gtk_tree_view_mode_get_type),
        Symbol( "gtk_toolbar_space_style_get_type",  cast(void**)& gtk_toolbar_space_style_get_type),
        Symbol( "gtk_toolbar_child_type_get_type",  cast(void**)& gtk_toolbar_child_type_get_type),
        Symbol( "gtk_text_window_type_get_type",  cast(void**)& gtk_text_window_type_get_type),
        Symbol( "gtk_text_search_flags_get_type",  cast(void**)& gtk_text_search_flags_get_type),
        Symbol( "gtk_text_buffer_target_info_get_type",  cast(void**)& gtk_text_buffer_target_info_get_type),
        Symbol( "gtk_spin_type_get_type",  cast(void**)& gtk_spin_type_get_type),
        Symbol( "gtk_spin_button_update_policy_get_type",  cast(void**)& gtk_spin_button_update_policy_get_type),
        Symbol( "gtk_size_group_mode_get_type",  cast(void**)& gtk_size_group_mode_get_type),
        Symbol( "gtk_recent_manager_error_get_type",  cast(void**)& gtk_recent_manager_error_get_type),
        Symbol( "gtk_recent_filter_flags_get_type",  cast(void**)& gtk_recent_filter_flags_get_type),
        Symbol( "gtk_recent_chooser_error_get_type",  cast(void**)& gtk_recent_chooser_error_get_type),
        Symbol( "gtk_recent_sort_type_get_type",  cast(void**)& gtk_recent_sort_type_get_type),
        Symbol( "gtk_rc_token_type_get_type",  cast(void**)& gtk_rc_token_type_get_type),
        Symbol( "gtk_rc_flags_get_type",  cast(void**)& gtk_rc_flags_get_type),
        Symbol( "gtk_progress_bar_orientation_get_type",  cast(void**)& gtk_progress_bar_orientation_get_type),
        Symbol( "gtk_progress_bar_style_get_type",  cast(void**)& gtk_progress_bar_style_get_type),
        Symbol( "gtk_private_flags_get_type",  cast(void**)& gtk_private_flags_get_type),
        Symbol( "gtk_print_error_get_type",  cast(void**)& gtk_print_error_get_type),
        Symbol( "gtk_print_operation_action_get_type",  cast(void**)& gtk_print_operation_action_get_type),
        Symbol( "gtk_print_operation_result_get_type",  cast(void**)& gtk_print_operation_result_get_type),
        Symbol( "gtk_print_status_get_type",  cast(void**)& gtk_print_status_get_type),
        Symbol( "gtk_arg_flags_get_type",  cast(void**)& gtk_arg_flags_get_type),
        Symbol( "gtk_object_flags_get_type",  cast(void**)& gtk_object_flags_get_type),
        Symbol( "gtk_notebook_tab_get_type",  cast(void**)& gtk_notebook_tab_get_type),
        Symbol( "gtk_buttons_type_get_type",  cast(void**)& gtk_buttons_type_get_type),
        Symbol( "gtk_message_type_get_type",  cast(void**)& gtk_message_type_get_type),
        Symbol( "gtk_image_type_get_type",  cast(void**)& gtk_image_type_get_type),
        Symbol( "gtk_icon_view_drop_position_get_type",  cast(void**)& gtk_icon_view_drop_position_get_type),
        Symbol( "gtk_icon_theme_error_get_type",  cast(void**)& gtk_icon_theme_error_get_type),
        Symbol( "gtk_icon_lookup_flags_get_type",  cast(void**)& gtk_icon_lookup_flags_get_type),
        Symbol( "gtk_file_filter_flags_get_type",  cast(void**)& gtk_file_filter_flags_get_type),
        Symbol( "gtk_file_chooser_error_get_type",  cast(void**)& gtk_file_chooser_error_get_type),
        Symbol( "gtk_file_chooser_confirmation_get_type",  cast(void**)& gtk_file_chooser_confirmation_get_type),
        Symbol( "gtk_file_chooser_action_get_type",  cast(void**)& gtk_file_chooser_action_get_type),
        Symbol( "gtk_drag_result_get_type",  cast(void**)& gtk_drag_result_get_type),
        Symbol( "gtk_tree_view_grid_lines_get_type",  cast(void**)& gtk_tree_view_grid_lines_get_type),
        Symbol( "gtk_unit_get_type",  cast(void**)& gtk_unit_get_type),
        Symbol( "gtk_print_duplex_get_type",  cast(void**)& gtk_print_duplex_get_type),
        Symbol( "gtk_print_quality_get_type",  cast(void**)& gtk_print_quality_get_type),
        Symbol( "gtk_page_orientation_get_type",  cast(void**)& gtk_page_orientation_get_type),
        Symbol( "gtk_page_set_get_type",  cast(void**)& gtk_page_set_get_type),
        Symbol( "gtk_print_pages_get_type",  cast(void**)& gtk_print_pages_get_type),
        Symbol( "gtk_pack_direction_get_type",  cast(void**)& gtk_pack_direction_get_type),
        Symbol( "gtk_im_status_style_get_type",  cast(void**)& gtk_im_status_style_get_type),
        Symbol( "gtk_im_preedit_style_get_type",  cast(void**)& gtk_im_preedit_style_get_type),
        Symbol( "gtk_sort_type_get_type",  cast(void**)& gtk_sort_type_get_type),
        Symbol( "gtk_wrap_mode_get_type",  cast(void**)& gtk_wrap_mode_get_type),
        Symbol( "gtk_window_type_get_type",  cast(void**)& gtk_window_type_get_type),
        Symbol( "gtk_window_position_get_type",  cast(void**)& gtk_window_position_get_type),
        Symbol( "gtk_visibility_get_type",  cast(void**)& gtk_visibility_get_type),
        Symbol( "gtk_update_type_get_type",  cast(void**)& gtk_update_type_get_type),
        Symbol( "gtk_toolbar_style_get_type",  cast(void**)& gtk_toolbar_style_get_type),
        Symbol( "gtk_submenu_placement_get_type",  cast(void**)& gtk_submenu_placement_get_type),
        Symbol( "gtk_submenu_direction_get_type",  cast(void**)& gtk_submenu_direction_get_type),
        Symbol( "gtk_state_type_get_type",  cast(void**)& gtk_state_type_get_type),
        Symbol( "gtk_shadow_type_get_type",  cast(void**)& gtk_shadow_type_get_type),
        Symbol( "gtk_selection_mode_get_type",  cast(void**)& gtk_selection_mode_get_type),
        Symbol( "gtk_scroll_type_get_type",  cast(void**)& gtk_scroll_type_get_type),
        Symbol( "gtk_signal_run_type_get_type",  cast(void**)& gtk_signal_run_type_get_type),
        Symbol( "gtk_resize_mode_get_type",  cast(void**)& gtk_resize_mode_get_type),
        Symbol( "gtk_relief_style_get_type",  cast(void**)& gtk_relief_style_get_type),
        Symbol( "gtk_preview_type_get_type",  cast(void**)& gtk_preview_type_get_type),
        Symbol( "gtk_position_type_get_type",  cast(void**)& gtk_position_type_get_type),
        Symbol( "gtk_policy_type_get_type",  cast(void**)& gtk_policy_type_get_type),
        Symbol( "gtk_path_type_get_type",  cast(void**)& gtk_path_type_get_type),
        Symbol( "gtk_path_priority_type_get_type",  cast(void**)& gtk_path_priority_type_get_type),
        Symbol( "gtk_pack_type_get_type",  cast(void**)& gtk_pack_type_get_type),
        Symbol( "gtk_corner_type_get_type",  cast(void**)& gtk_corner_type_get_type),
        Symbol( "gtk_orientation_get_type",  cast(void**)& gtk_orientation_get_type),
        Symbol( "gtk_scroll_step_get_type",  cast(void**)& gtk_scroll_step_get_type),
        Symbol( "gtk_movement_step_get_type",  cast(void**)& gtk_movement_step_get_type),
        Symbol( "gtk_metric_type_get_type",  cast(void**)& gtk_metric_type_get_type),
        Symbol( "gtk_menu_direction_type_get_type",  cast(void**)& gtk_menu_direction_type_get_type),
        Symbol( "gtk_match_type_get_type",  cast(void**)& gtk_match_type_get_type),
        Symbol( "gtk_justification_get_type",  cast(void**)& gtk_justification_get_type),
        Symbol( "gtk_text_direction_get_type",  cast(void**)& gtk_text_direction_get_type),
        Symbol( "gtk_side_type_get_type",  cast(void**)& gtk_side_type_get_type),
        Symbol( "gtk_sensitivity_type_get_type",  cast(void**)& gtk_sensitivity_type_get_type),
        Symbol( "gtk_icon_size_get_type",  cast(void**)& gtk_icon_size_get_type),
        Symbol( "gtk_expander_style_get_type",  cast(void**)& gtk_expander_style_get_type),
        Symbol( "gtk_direction_type_get_type",  cast(void**)& gtk_direction_type_get_type),
        Symbol( "gtk_delete_type_get_type",  cast(void**)& gtk_delete_type_get_type),
        Symbol( "gtk_curve_type_get_type",  cast(void**)& gtk_curve_type_get_type),
        Symbol( "gtk_button_box_style_get_type",  cast(void**)& gtk_button_box_style_get_type),
        Symbol( "gtk_attach_options_get_type",  cast(void**)& gtk_attach_options_get_type),
        Symbol( "gtk_arrow_type_get_type",  cast(void**)& gtk_arrow_type_get_type),
        Symbol( "gtk_anchor_type_get_type",  cast(void**)& gtk_anchor_type_get_type),
        Symbol( "gtk_target_flags_get_type",  cast(void**)& gtk_target_flags_get_type),
        Symbol( "gtk_dest_defaults_get_type",  cast(void**)& gtk_dest_defaults_get_type),
        Symbol( "gtk_response_type_get_type",  cast(void**)& gtk_response_type_get_type),
        Symbol( "gtk_dialog_flags_get_type",  cast(void**)& gtk_dialog_flags_get_type),
        Symbol( "gtk_debug_flag_get_type",  cast(void**)& gtk_debug_flag_get_type),
        Symbol( "gtk_ctree_expansion_type_get_type",  cast(void**)& gtk_ctree_expansion_type_get_type),
        Symbol( "gtk_ctree_expander_style_get_type",  cast(void**)& gtk_ctree_expander_style_get_type),
        Symbol( "gtk_ctree_line_style_get_type",  cast(void**)& gtk_ctree_line_style_get_type),
        Symbol( "gtk_ctree_pos_get_type",  cast(void**)& gtk_ctree_pos_get_type),
        Symbol( "gtk_button_action_get_type",  cast(void**)& gtk_button_action_get_type),
        Symbol( "gtk_clist_drag_pos_get_type",  cast(void**)& gtk_clist_drag_pos_get_type),
        Symbol( "gtk_cell_type_get_type",  cast(void**)& gtk_cell_type_get_type),
        Symbol( "gtk_cell_renderer_accel_mode_get_type",  cast(void**)& gtk_cell_renderer_accel_mode_get_type),
        Symbol( "gtk_cell_renderer_mode_get_type",  cast(void**)& gtk_cell_renderer_mode_get_type),
        Symbol( "gtk_cell_renderer_state_get_type",  cast(void**)& gtk_cell_renderer_state_get_type),
        Symbol( "gtk_calendar_display_options_get_type",  cast(void**)& gtk_calendar_display_options_get_type),
        Symbol( "gtk_builder_error_get_type",  cast(void**)& gtk_builder_error_get_type),
        Symbol( "gtk_assistant_page_type_get_type",  cast(void**)& gtk_assistant_page_type_get_type),
        Symbol( "gtk_accel_flags_get_type",  cast(void**)& gtk_accel_flags_get_type),
    //     Symbol( "_gtk_accel_group_reconnect",  cast(void**)& _gtk_accel_group_reconnect),
        Symbol( "gtk_accel_group_query",  cast(void**)& gtk_accel_group_query),
        Symbol( "gtk_accelerator_get_default_mod_mask",  cast(void**)& gtk_accelerator_get_default_mod_mask),
        Symbol( "gtk_accelerator_set_default_mod_mask",  cast(void**)& gtk_accelerator_set_default_mod_mask),
        Symbol( "gtk_accelerator_get_label",  cast(void**)& gtk_accelerator_get_label),
        Symbol( "gtk_accelerator_name",  cast(void**)& gtk_accelerator_name),
        Symbol( "gtk_accelerator_parse",  cast(void**)& gtk_accelerator_parse),
        Symbol( "gtk_accelerator_valid",  cast(void**)& gtk_accelerator_valid),
        Symbol( "gtk_accel_group_from_accel_closure",  cast(void**)& gtk_accel_group_from_accel_closure),
        Symbol( "gtk_accel_group_find",  cast(void**)& gtk_accel_group_find),
        Symbol( "gtk_accel_groups_from_object",  cast(void**)& gtk_accel_groups_from_object),
        Symbol( "gtk_accel_groups_activate",  cast(void**)& gtk_accel_groups_activate),
    //     Symbol( "_gtk_accel_group_detach",  cast(void**)& _gtk_accel_group_detach),
    //     Symbol( "_gtk_accel_group_attach",  cast(void**)& _gtk_accel_group_attach),
        Symbol( "gtk_accel_group_activate",  cast(void**)& gtk_accel_group_activate),
        Symbol( "gtk_accel_group_disconnect_key",  cast(void**)& gtk_accel_group_disconnect_key),
        Symbol( "gtk_accel_group_disconnect",  cast(void**)& gtk_accel_group_disconnect),
        Symbol( "gtk_accel_group_connect_by_path",  cast(void**)& gtk_accel_group_connect_by_path),
        Symbol( "gtk_accel_group_connect",  cast(void**)& gtk_accel_group_connect),
        Symbol( "gtk_accel_group_unlock",  cast(void**)& gtk_accel_group_unlock),
        Symbol( "gtk_accel_group_lock",  cast(void**)& gtk_accel_group_lock),
        Symbol( "gtk_accel_group_new",  cast(void**)& gtk_accel_group_new),
        Symbol( "gtk_accel_group_get_type",  cast(void**)& gtk_accel_group_get_type),
        Symbol( "gtk_widget_get_window",  cast(void**)& gtk_widget_get_window),
        Symbol( "gtk_widget_get_allocation",  cast(void**)& gtk_widget_get_allocation),
        Symbol( "gtk_widget_set_allocation",  cast(void**)& gtk_widget_set_allocation),
        Symbol( "gtk_scrolled_window_get_hscrollbar",  cast(void**)& gtk_scrolled_window_get_hscrollbar),
        Symbol( "gtk_scrolled_window_get_vscrollbar",  cast(void**)& gtk_scrolled_window_get_vscrollbar),
        Symbol( "gtk_widget_set_tooltip_window",  cast(void**)& gtk_widget_set_tooltip_window)
    ];
}

} else { // version(DYNLINK)
extern (C) _GtkWidget * gtk_vseparator_new();
extern (C) GType gtk_vseparator_get_type();
extern (C) _GtkWidget * gtk_vscale_new_with_range(double, double, double);
extern (C) _GtkWidget * gtk_vscale_new(aGtkAdjustment *);
extern (C) GType gtk_vscale_get_type();
extern (C) _GtkWidget * gtk_vruler_new();
extern (C) guint gtk_vruler_get_type();
extern (C) _GtkWidget * gtk_vpaned_new();
extern (C) GType gtk_vpaned_get_type();
extern (C) _GtkWidget * gtk_volume_button_new();
extern (C) GType gtk_volume_button_get_type();
extern (C) void gtk_vbutton_box_set_layout_default(gint);
extern (C) gint gtk_vbutton_box_get_layout_default();
extern (C) void gtk_vbutton_box_set_spacing_default(gint);
extern (C) gint gtk_vbutton_box_get_spacing_default();
extern (C) _GtkWidget * gtk_vbutton_box_new();
extern (C) GType gtk_vbutton_box_get_type();
extern (C) guint gtk_ui_manager_new_merge_id(aGtkUIManager *);
extern (C) void gtk_ui_manager_ensure_update(aGtkUIManager *);
extern (C) char * gtk_ui_manager_get_ui(aGtkUIManager *);
extern (C) void gtk_ui_manager_remove_ui(aGtkUIManager *, guint);
extern (C) void gtk_ui_manager_add_ui(aGtkUIManager *, guint, char *, char *, char *, gint, gint);
extern (C) guint gtk_ui_manager_add_ui_from_file(aGtkUIManager *, char *, _GError * *);
extern (C) guint gtk_ui_manager_add_ui_from_string(aGtkUIManager *, char *, gssize, _GError * *);
extern (C) _GtkAction * gtk_ui_manager_get_action(aGtkUIManager *, char *);
extern (C) _GSList * gtk_ui_manager_get_toplevels(aGtkUIManager *, gint);
extern (C) _GtkWidget * gtk_ui_manager_get_widget(aGtkUIManager *, char *);
extern (C) _GtkAccelGroup * gtk_ui_manager_get_accel_group(aGtkUIManager *);
extern (C) _GList * gtk_ui_manager_get_action_groups(aGtkUIManager *);
extern (C) void gtk_ui_manager_remove_action_group(aGtkUIManager *, aGtkActionGroup *);
extern (C) void gtk_ui_manager_insert_action_group(aGtkUIManager *, aGtkActionGroup *, gint);
extern (C) gint gtk_ui_manager_get_add_tearoffs(aGtkUIManager *);
extern (C) void gtk_ui_manager_set_add_tearoffs(aGtkUIManager *, gint);
extern (C) _GtkUIManager * gtk_ui_manager_new();
extern (C) GType gtk_ui_manager_get_type();
extern (C) void gtk_tree_store_move_after(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *);
extern (C) void gtk_tree_store_move_before(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *);
extern (C) void gtk_tree_store_swap(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *);
extern (C) void gtk_tree_store_reorder(aGtkTreeStore *, aGtkTreeIter *, gint *);
extern (C) gint gtk_tree_store_iter_is_valid(aGtkTreeStore *, aGtkTreeIter *);
extern (C) void gtk_tree_store_clear(aGtkTreeStore *);
extern (C) gint gtk_tree_store_iter_depth(aGtkTreeStore *, aGtkTreeIter *);
extern (C) gint gtk_tree_store_is_ancestor(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *);
extern (C) void gtk_tree_store_append(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *);
extern (C) void gtk_tree_store_prepend(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *);
extern (C) void gtk_tree_store_insert_with_valuesv(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *, gint, gint *, _GValue *, gint);
extern (C) void gtk_tree_store_insert_with_values(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *, gint, ...);
extern (C) void gtk_tree_store_insert_after(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *, aGtkTreeIter *);
extern (C) void gtk_tree_store_insert_before(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *, aGtkTreeIter *);
extern (C) void gtk_tree_store_insert(aGtkTreeStore *, aGtkTreeIter *, aGtkTreeIter *, gint);
extern (C) gint gtk_tree_store_remove(aGtkTreeStore *, aGtkTreeIter *);
extern (C) void gtk_tree_store_set_valist(aGtkTreeStore *, aGtkTreeIter *, char *);
extern (C) void gtk_tree_store_set_valuesv(aGtkTreeStore *, aGtkTreeIter *, gint *, _GValue *, gint);
extern (C) void gtk_tree_store_set(aGtkTreeStore *, aGtkTreeIter *, ...);
extern (C) void gtk_tree_store_set_value(aGtkTreeStore *, aGtkTreeIter *, gint, _GValue *);
extern (C) void gtk_tree_store_set_column_types(aGtkTreeStore *, gint, GType *);
extern (C) _GtkTreeStore * gtk_tree_store_newv(gint, GType *);
extern (C) _GtkTreeStore * gtk_tree_store_new(gint, ...);
extern (C) GType gtk_tree_store_get_type();
extern (C) void gtk_tree_selection_unselect_range(aGtkTreeSelection *, void *, void *);
extern (C) void gtk_tree_selection_select_range(aGtkTreeSelection *, void *, void *);
extern (C) void gtk_tree_selection_unselect_all(aGtkTreeSelection *);
extern (C) void gtk_tree_selection_select_all(aGtkTreeSelection *);
extern (C) gint gtk_tree_selection_iter_is_selected(aGtkTreeSelection *, aGtkTreeIter *);
extern (C) gint gtk_tree_selection_path_is_selected(aGtkTreeSelection *, void *);
extern (C) void gtk_tree_selection_unselect_iter(aGtkTreeSelection *, aGtkTreeIter *);
extern (C) void gtk_tree_selection_select_iter(aGtkTreeSelection *, aGtkTreeIter *);
extern (C) void gtk_tree_selection_unselect_path(aGtkTreeSelection *, void *);
extern (C) void gtk_tree_selection_select_path(aGtkTreeSelection *, void *);
extern (C) void gtk_tree_selection_selected_foreach(aGtkTreeSelection *, _BCD_func__9093, void *);
extern (C) gint gtk_tree_selection_count_selected_rows(aGtkTreeSelection *);
extern (C) _GList * gtk_tree_selection_get_selected_rows(aGtkTreeSelection *, void * *);
extern (C) gint gtk_tree_selection_get_selected(aGtkTreeSelection *, void * *, aGtkTreeIter *);
extern (C) _GtkTreeView * gtk_tree_selection_get_tree_view(aGtkTreeSelection *);
extern (C) void * gtk_tree_selection_get_user_data(aGtkTreeSelection *);
extern (C) void gtk_tree_selection_set_select_function(aGtkTreeSelection *, _BCD_func__9094, void *, _BCD_func__13158);
extern (C) gint gtk_tree_selection_get_mode(aGtkTreeSelection *);
extern (C) void gtk_tree_selection_set_mode(aGtkTreeSelection *, gint);
extern (C) GType gtk_tree_selection_get_type();
extern (C) gint gtk_tree_model_sort_iter_is_valid(aGtkTreeModelSort *, aGtkTreeIter *);
extern (C) void gtk_tree_model_sort_clear_cache(aGtkTreeModelSort *);
extern (C) void gtk_tree_model_sort_reset_default_sort_func(aGtkTreeModelSort *);
extern (C) void gtk_tree_model_sort_convert_iter_to_child_iter(aGtkTreeModelSort *, aGtkTreeIter *, aGtkTreeIter *);
extern (C) void * gtk_tree_model_sort_convert_path_to_child_path(aGtkTreeModelSort *, void *);
extern (C) void gtk_tree_model_sort_convert_child_iter_to_iter(aGtkTreeModelSort *, aGtkTreeIter *, aGtkTreeIter *);
extern (C) void * gtk_tree_model_sort_convert_child_path_to_path(aGtkTreeModelSort *, void *);
extern (C) void * gtk_tree_model_sort_get_model(aGtkTreeModelSort *);
extern (C) void * gtk_tree_model_sort_new_with_model(void *);
extern (C) GType gtk_tree_model_sort_get_type();
extern (C) gint gtk_tree_get_row_drag_data(aGtkSelectionData *, void * *, void * *);
extern (C) gint gtk_tree_set_row_drag_data(aGtkSelectionData *, void *, void *);
extern (C) gint gtk_tree_drag_dest_row_drop_possible(void *, void *, aGtkSelectionData *);
extern (C) gint gtk_tree_drag_dest_drag_data_received(void *, void *, aGtkSelectionData *);
extern (C) GType gtk_tree_drag_dest_get_type();
extern (C) gint gtk_tree_drag_source_drag_data_get(void *, void *, aGtkSelectionData *);
extern (C) gint gtk_tree_drag_source_drag_data_delete(void *, void *);
extern (C) gint gtk_tree_drag_source_row_draggable(void *, void *);
extern (C) GType gtk_tree_drag_source_get_type();
extern (C) void gtk_toolbar_insert_widget(aGtkToolbar *, aGtkWidget *, char *, char *, gint);
extern (C) void gtk_toolbar_prepend_widget(aGtkToolbar *, aGtkWidget *, char *, char *);
extern (C) void gtk_toolbar_append_widget(aGtkToolbar *, aGtkWidget *, char *, char *);
extern (C) _GtkWidget * gtk_toolbar_insert_element(aGtkToolbar *, gint, aGtkWidget *, char *, char *, char *, aGtkWidget *, _BCD_func__12122, void *, gint);
extern (C) _GtkWidget * gtk_toolbar_prepend_element(aGtkToolbar *, gint, aGtkWidget *, char *, char *, char *, aGtkWidget *, _BCD_func__12122, void *);
extern (C) _GtkWidget * gtk_toolbar_append_element(aGtkToolbar *, gint, aGtkWidget *, char *, char *, char *, aGtkWidget *, _BCD_func__12122, void *);
extern (C) void gtk_toolbar_remove_space(aGtkToolbar *, gint);
extern (C) void gtk_toolbar_insert_space(aGtkToolbar *, gint);
extern (C) void gtk_toolbar_prepend_space(aGtkToolbar *);
extern (C) void gtk_toolbar_append_space(aGtkToolbar *);
extern (C) _GtkWidget * gtk_toolbar_insert_stock(aGtkToolbar *, char *, char *, char *, _BCD_func__12122, void *, gint);
extern (C) _GtkWidget * gtk_toolbar_insert_item(aGtkToolbar *, char *, char *, char *, aGtkWidget *, _BCD_func__12122, void *, gint);
extern (C) _GtkWidget * gtk_toolbar_prepend_item(aGtkToolbar *, char *, char *, char *, aGtkWidget *, _BCD_func__12122, void *);
extern (C) _GtkWidget * gtk_toolbar_append_item(aGtkToolbar *, char *, char *, char *, aGtkWidget *, _BCD_func__12122, void *);
extern (C) void gtk_toolbar_unset_icon_size(aGtkToolbar *);
extern (C) void gtk_toolbar_set_icon_size(aGtkToolbar *, gint);
extern (C) void _gtk_toolbar_rebuild_menu(aGtkToolbar *);
extern (C) gint _gtk_toolbar_get_default_space_size();
extern (C) void _gtk_toolbar_paint_space_line(aGtkWidget *, aGtkToolbar *, _GdkRectangle *, _GdkRectangle *);
extern (C) char * _gtk_toolbar_elide_underscores(char *);
extern (C) void gtk_toolbar_set_drop_highlight_item(aGtkToolbar *, aGtkToolItem *, gint);
extern (C) gint gtk_toolbar_get_drop_index(aGtkToolbar *, gint, gint);
extern (C) gint gtk_toolbar_get_relief_style(aGtkToolbar *);
extern (C) gint gtk_toolbar_get_icon_size(aGtkToolbar *);
extern (C) void gtk_toolbar_unset_style(aGtkToolbar *);
extern (C) void gtk_toolbar_set_style(aGtkToolbar *, gint);
extern (C) gint gtk_toolbar_get_style(aGtkToolbar *);
extern (C) void gtk_toolbar_set_tooltips(aGtkToolbar *, gint);
extern (C) gint gtk_toolbar_get_tooltips(aGtkToolbar *);
extern (C) void gtk_toolbar_set_orientation(aGtkToolbar *, gint);
extern (C) gint gtk_toolbar_get_orientation(aGtkToolbar *);
extern (C) void gtk_toolbar_set_show_arrow(aGtkToolbar *, gint);
extern (C) gint gtk_toolbar_get_show_arrow(aGtkToolbar *);
extern (C) _GtkToolItem * gtk_toolbar_get_nth_item(aGtkToolbar *, gint);
extern (C) gint gtk_toolbar_get_n_items(aGtkToolbar *);
extern (C) gint gtk_toolbar_get_item_index(aGtkToolbar *, aGtkToolItem *);
extern (C) void gtk_toolbar_insert(aGtkToolbar *, aGtkToolItem *, gint);
extern (C) _GtkWidget * gtk_toolbar_new();
extern (C) GType gtk_toolbar_get_type();
extern (C) void gtk_tips_query_set_labels(aGtkTipsQuery *, char *, char *);
extern (C) void gtk_tips_query_set_caller(aGtkTipsQuery *, aGtkWidget *);
extern (C) void gtk_tips_query_stop_query(aGtkTipsQuery *);
extern (C) void gtk_tips_query_start_query(aGtkTipsQuery *);
extern (C) _GtkWidget * gtk_tips_query_new();
extern (C) guint gtk_tips_query_get_type();
extern (C) _GtkTextAttributes * gtk_text_view_get_default_attributes(aGtkTextView *);
extern (C) void * gtk_text_view_get_tabs(aGtkTextView *);
extern (C) void gtk_text_view_set_tabs(aGtkTextView *, void *);
extern (C) gint gtk_text_view_get_indent(aGtkTextView *);
extern (C) void gtk_text_view_set_indent(aGtkTextView *, gint);
extern (C) gint gtk_text_view_get_right_margin(aGtkTextView *);
extern (C) void gtk_text_view_set_right_margin(aGtkTextView *, gint);
extern (C) gint gtk_text_view_get_left_margin(aGtkTextView *);
extern (C) void gtk_text_view_set_left_margin(aGtkTextView *, gint);
extern (C) gint gtk_text_view_get_justification(aGtkTextView *);
extern (C) void gtk_text_view_set_justification(aGtkTextView *, gint);
extern (C) gint gtk_text_view_get_pixels_inside_wrap(aGtkTextView *);
extern (C) void gtk_text_view_set_pixels_inside_wrap(aGtkTextView *, gint);
extern (C) gint gtk_text_view_get_pixels_below_lines(aGtkTextView *);
extern (C) void gtk_text_view_set_pixels_below_lines(aGtkTextView *, gint);
extern (C) gint gtk_text_view_get_pixels_above_lines(aGtkTextView *);
extern (C) void gtk_text_view_set_pixels_above_lines(aGtkTextView *, gint);
extern (C) gint gtk_text_view_get_accepts_tab(aGtkTextView *);
extern (C) void gtk_text_view_set_accepts_tab(aGtkTextView *, gint);
extern (C) gint gtk_text_view_get_overwrite(aGtkTextView *);
extern (C) void gtk_text_view_set_overwrite(aGtkTextView *, gint);
extern (C) gint gtk_text_view_get_editable(aGtkTextView *);
extern (C) void gtk_text_view_set_editable(aGtkTextView *, gint);
extern (C) gint gtk_text_view_get_wrap_mode(aGtkTextView *);
extern (C) void gtk_text_view_set_wrap_mode(aGtkTextView *, gint);
extern (C) void gtk_text_view_move_child(aGtkTextView *, aGtkWidget *, gint, gint);
extern (C) void gtk_text_view_add_child_in_window(aGtkTextView *, aGtkWidget *, gint, gint, gint);
extern (C) void gtk_text_view_add_child_at_anchor(aGtkTextView *, aGtkWidget *, aGtkTextChildAnchor *);
extern (C) gint gtk_text_view_move_visually(aGtkTextView *, aGtkTextIter *, gint);
extern (C) gint gtk_text_view_starts_display_line(aGtkTextView *, aGtkTextIter *);
extern (C) gint gtk_text_view_backward_display_line_start(aGtkTextView *, aGtkTextIter *);
extern (C) gint gtk_text_view_forward_display_line_end(aGtkTextView *, aGtkTextIter *);
extern (C) gint gtk_text_view_backward_display_line(aGtkTextView *, aGtkTextIter *);
extern (C) gint gtk_text_view_forward_display_line(aGtkTextView *, aGtkTextIter *);
extern (C) gint gtk_text_view_get_border_window_size(aGtkTextView *, gint);
extern (C) void gtk_text_view_set_border_window_size(aGtkTextView *, gint, gint);
extern (C) gint gtk_text_view_get_window_type(aGtkTextView *, _GdkDrawable *);
extern (C) _GdkDrawable * gtk_text_view_get_window(aGtkTextView *, gint);
extern (C) void gtk_text_view_window_to_buffer_coords(aGtkTextView *, gint, gint, gint, gint *, gint *);
extern (C) void gtk_text_view_buffer_to_window_coords(aGtkTextView *, gint, gint, gint, gint *, gint *);
extern (C) void gtk_text_view_get_line_at_y(aGtkTextView *, aGtkTextIter *, gint, gint *);
extern (C) void gtk_text_view_get_line_yrange(aGtkTextView *, aGtkTextIter *, gint *, gint *);
extern (C) void gtk_text_view_get_iter_at_position(aGtkTextView *, aGtkTextIter *, gint *, gint, gint);
extern (C) void gtk_text_view_get_iter_at_location(aGtkTextView *, aGtkTextIter *, gint, gint);
extern (C) void gtk_text_view_get_iter_location(aGtkTextView *, aGtkTextIter *, _GdkRectangle *);
extern (C) gint gtk_text_view_get_cursor_visible(aGtkTextView *);
extern (C) void gtk_text_view_set_cursor_visible(aGtkTextView *, gint);
extern (C) void gtk_text_view_get_visible_rect(aGtkTextView *, _GdkRectangle *);
extern (C) gint gtk_text_view_place_cursor_onscreen(aGtkTextView *);
extern (C) gint gtk_text_view_move_mark_onscreen(aGtkTextView *, aGtkTextMark *);
extern (C) void gtk_text_view_scroll_mark_onscreen(aGtkTextView *, aGtkTextMark *);
extern (C) void gtk_text_view_scroll_to_mark(aGtkTextView *, aGtkTextMark *, double, gint, double, double);
extern (C) gint gtk_text_view_scroll_to_iter(aGtkTextView *, aGtkTextIter *, double, gint, double, double);
extern (C) _GtkTextBuffer * gtk_text_view_get_buffer(aGtkTextView *);
extern (C) void gtk_text_view_set_buffer(aGtkTextView *, aGtkTextBuffer *);
extern (C) _GtkWidget * gtk_text_view_new_with_buffer(aGtkTextBuffer *);
extern (C) _GtkWidget * gtk_text_view_new();
extern (C) GType gtk_text_view_get_type();
extern (C) gint gtk_text_buffer_deserialize(aGtkTextBuffer *, aGtkTextBuffer *, void *, aGtkTextIter *, char *, gsize, _GError * *);
extern (C) char * gtk_text_buffer_serialize(aGtkTextBuffer *, aGtkTextBuffer *, void *, aGtkTextIter *, aGtkTextIter *, gsize *);
extern (C) void * * gtk_text_buffer_get_deserialize_formats(aGtkTextBuffer *, gint *);
extern (C) void * * gtk_text_buffer_get_serialize_formats(aGtkTextBuffer *, gint *);
extern (C) gint gtk_text_buffer_deserialize_get_can_create_tags(aGtkTextBuffer *, void *);
extern (C) void gtk_text_buffer_deserialize_set_can_create_tags(aGtkTextBuffer *, void *, gint);
extern (C) void gtk_text_buffer_unregister_deserialize_format(aGtkTextBuffer *, void *);
extern (C) void gtk_text_buffer_unregister_serialize_format(aGtkTextBuffer *, void *);
extern (C) void * gtk_text_buffer_register_deserialize_tagset(aGtkTextBuffer *, char *);
extern (C) void * gtk_text_buffer_register_deserialize_format(aGtkTextBuffer *, char *, _BCD_func__9281, void *, _BCD_func__13158);
extern (C) void * gtk_text_buffer_register_serialize_tagset(aGtkTextBuffer *, char *);
extern (C) void * gtk_text_buffer_register_serialize_format(aGtkTextBuffer *, char *, _BCD_func__9282, void *, _BCD_func__13158);
extern (C) void _gtk_text_buffer_notify_will_remove_tag(aGtkTextBuffer *, aGtkTextTag *);
extern (C) _PangoLogAttr * _gtk_text_buffer_get_line_log_attrs(aGtkTextBuffer *, aGtkTextIter *, gint *);
extern (C) void * _gtk_text_buffer_get_btree(aGtkTextBuffer *);
extern (C) void _gtk_text_buffer_spew(aGtkTextBuffer *);
extern (C) _GtkTargetList * gtk_text_buffer_get_paste_target_list(aGtkTextBuffer *);
extern (C) _GtkTargetList * gtk_text_buffer_get_copy_target_list(aGtkTextBuffer *);
extern (C) void gtk_text_buffer_end_user_action(aGtkTextBuffer *);
extern (C) void gtk_text_buffer_begin_user_action(aGtkTextBuffer *);
extern (C) gint gtk_text_buffer_delete_selection(aGtkTextBuffer *, gint, gint);
extern (C) gint gtk_text_buffer_get_selection_bounds(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *);
extern (C) void gtk_text_buffer_paste_clipboard(aGtkTextBuffer *, void *, aGtkTextIter *, gint);
extern (C) void gtk_text_buffer_copy_clipboard(aGtkTextBuffer *, void *);
extern (C) void gtk_text_buffer_cut_clipboard(aGtkTextBuffer *, void *, gint);
extern (C) void gtk_text_buffer_remove_selection_clipboard(aGtkTextBuffer *, void *);
extern (C) void gtk_text_buffer_add_selection_clipboard(aGtkTextBuffer *, void *);
extern (C) gint gtk_text_buffer_get_has_selection(aGtkTextBuffer *);
extern (C) void gtk_text_buffer_set_modified(aGtkTextBuffer *, gint);
extern (C) gint gtk_text_buffer_get_modified(aGtkTextBuffer *);
extern (C) void gtk_text_buffer_get_iter_at_child_anchor(aGtkTextBuffer *, aGtkTextIter *, aGtkTextChildAnchor *);
extern (C) void gtk_text_buffer_get_iter_at_mark(aGtkTextBuffer *, aGtkTextIter *, aGtkTextMark *);
extern (C) void gtk_text_buffer_get_bounds(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *);
extern (C) void gtk_text_buffer_get_end_iter(aGtkTextBuffer *, aGtkTextIter *);
extern (C) void gtk_text_buffer_get_start_iter(aGtkTextBuffer *, aGtkTextIter *);
extern (C) void gtk_text_buffer_get_iter_at_line(aGtkTextBuffer *, aGtkTextIter *, gint);
extern (C) void gtk_text_buffer_get_iter_at_offset(aGtkTextBuffer *, aGtkTextIter *, gint);
extern (C) void gtk_text_buffer_get_iter_at_line_index(aGtkTextBuffer *, aGtkTextIter *, gint, gint);
extern (C) void gtk_text_buffer_get_iter_at_line_offset(aGtkTextBuffer *, aGtkTextIter *, gint, gint);
extern (C) _GtkTextTag * gtk_text_buffer_create_tag(aGtkTextBuffer *, char *, char *, ...);
extern (C) void gtk_text_buffer_remove_all_tags(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *);
extern (C) void gtk_text_buffer_remove_tag_by_name(aGtkTextBuffer *, char *, aGtkTextIter *, aGtkTextIter *);
extern (C) void gtk_text_buffer_apply_tag_by_name(aGtkTextBuffer *, char *, aGtkTextIter *, aGtkTextIter *);
extern (C) void gtk_text_buffer_remove_tag(aGtkTextBuffer *, aGtkTextTag *, aGtkTextIter *, aGtkTextIter *);
extern (C) void gtk_text_buffer_apply_tag(aGtkTextBuffer *, aGtkTextTag *, aGtkTextIter *, aGtkTextIter *);
extern (C) void gtk_text_buffer_select_range(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *);
extern (C) void gtk_text_buffer_place_cursor(aGtkTextBuffer *, aGtkTextIter *);
extern (C) _GtkTextMark * gtk_text_buffer_get_selection_bound(aGtkTextBuffer *);
extern (C) _GtkTextMark * gtk_text_buffer_get_insert(aGtkTextBuffer *);
extern (C) void gtk_text_buffer_delete_mark_by_name(aGtkTextBuffer *, char *);
extern (C) void gtk_text_buffer_move_mark_by_name(aGtkTextBuffer *, char *, aGtkTextIter *);
extern (C) _GtkTextMark * gtk_text_buffer_get_mark(aGtkTextBuffer *, char *);
extern (C) void gtk_text_buffer_delete_mark(aGtkTextBuffer *, aGtkTextMark *);
extern (C) void gtk_text_buffer_move_mark(aGtkTextBuffer *, aGtkTextMark *, aGtkTextIter *);
extern (C) _GtkTextMark * gtk_text_buffer_create_mark(aGtkTextBuffer *, char *, aGtkTextIter *, gint);
extern (C) void gtk_text_buffer_add_mark(aGtkTextBuffer *, aGtkTextMark *, aGtkTextIter *);
extern (C) _GtkTextChildAnchor * gtk_text_buffer_create_child_anchor(aGtkTextBuffer *, aGtkTextIter *);
extern (C) void gtk_text_buffer_insert_child_anchor(aGtkTextBuffer *, aGtkTextIter *, aGtkTextChildAnchor *);
extern (C) void gtk_text_buffer_insert_pixbuf(aGtkTextBuffer *, aGtkTextIter *, void *);
extern (C) char * gtk_text_buffer_get_slice(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *, gint);
extern (C) char * gtk_text_buffer_get_text(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *, gint);
extern (C) gint gtk_text_buffer_backspace(aGtkTextBuffer *, aGtkTextIter *, gint, gint);
extern (C) gint gtk_text_buffer_delete_interactive(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *, gint);
extern (C) void gtk_text_buffer_delete(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *);
extern (C) void gtk_text_buffer_insert_with_tags_by_name(aGtkTextBuffer *, aGtkTextIter *, char *, gint, char *, ...);
extern (C) void gtk_text_buffer_insert_with_tags(aGtkTextBuffer *, aGtkTextIter *, char *, gint, aGtkTextTag *, ...);
extern (C) gint gtk_text_buffer_insert_range_interactive(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *, aGtkTextIter *, gint);
extern (C) void gtk_text_buffer_insert_range(aGtkTextBuffer *, aGtkTextIter *, aGtkTextIter *, aGtkTextIter *);
extern (C) gint gtk_text_buffer_insert_interactive_at_cursor(aGtkTextBuffer *, char *, gint, gint);
extern (C) gint gtk_text_buffer_insert_interactive(aGtkTextBuffer *, aGtkTextIter *, char *, gint, gint);
extern (C) void gtk_text_buffer_insert_at_cursor(aGtkTextBuffer *, char *, gint);
extern (C) void gtk_text_buffer_insert(aGtkTextBuffer *, aGtkTextIter *, char *, gint);
extern (C) void gtk_text_buffer_set_text(aGtkTextBuffer *, in char *, gint);
extern (C) _GtkTextTagTable * gtk_text_buffer_get_tag_table(aGtkTextBuffer *);
extern (C) gint gtk_text_buffer_get_char_count(aGtkTextBuffer *);
extern (C) gint gtk_text_buffer_get_line_count(aGtkTextBuffer *);
extern (C) _GtkTextBuffer * gtk_text_buffer_new(aGtkTextTagTable *);
extern (C) GType gtk_text_buffer_get_type();
extern (C) gint gtk_text_mark_get_left_gravity(aGtkTextMark *);
extern (C) _GtkTextBuffer * gtk_text_mark_get_buffer(aGtkTextMark *);
extern (C) gint gtk_text_mark_get_deleted(aGtkTextMark *);
extern (C) char * gtk_text_mark_get_name(aGtkTextMark *);
extern (C) _GtkTextMark * gtk_text_mark_new(char *, gint);
extern (C) gint gtk_text_mark_get_visible(aGtkTextMark *);
extern (C) void gtk_text_mark_set_visible(aGtkTextMark *, gint);
extern (C) GType gtk_text_mark_get_type();
extern (C) void _gtk_text_tag_table_remove_buffer(aGtkTextTagTable *, void *);
extern (C) void _gtk_text_tag_table_add_buffer(aGtkTextTagTable *, void *);
extern (C) gint gtk_text_tag_table_get_size(aGtkTextTagTable *);
extern (C) void gtk_text_tag_table_foreach(aGtkTextTagTable *, _BCD_func__9332, void *);
extern (C) _GtkTextTag * gtk_text_tag_table_lookup(aGtkTextTagTable *, char *);
extern (C) void gtk_text_tag_table_remove(aGtkTextTagTable *, aGtkTextTag *);
extern (C) void gtk_text_tag_table_add(aGtkTextTagTable *, aGtkTextTag *);
extern (C) _GtkTextTagTable * gtk_text_tag_table_new();
extern (C) GType gtk_text_tag_table_get_type();
extern (C) _GtkWidget * gtk_tearoff_menu_item_new();
extern (C) GType gtk_tearoff_menu_item_get_type();
extern (C) gint gtk_table_get_homogeneous(aGtkTable *);
extern (C) void gtk_table_set_homogeneous(aGtkTable *, gint);
extern (C) guint gtk_table_get_default_col_spacing(aGtkTable *);
extern (C) void gtk_table_set_col_spacings(aGtkTable *, guint);
extern (C) guint gtk_table_get_default_row_spacing(aGtkTable *);
extern (C) void gtk_table_set_row_spacings(aGtkTable *, guint);
extern (C) guint gtk_table_get_col_spacing(aGtkTable *, guint);
extern (C) void gtk_table_set_col_spacing(aGtkTable *, guint, guint);
extern (C) guint gtk_table_get_row_spacing(aGtkTable *, guint);
extern (C) void gtk_table_set_row_spacing(aGtkTable *, guint, guint);
extern (C) void gtk_table_attach_defaults(aGtkTable *, aGtkWidget *, guint, guint, guint, guint);
extern (C) void gtk_table_attach(aGtkTable *, aGtkWidget *, guint, guint, guint, guint, gint, gint, guint, guint);
extern (C) void gtk_table_resize(aGtkTable *, guint, guint);
extern (C) _GtkWidget * gtk_table_new(guint, guint, gint);
extern (C) GType gtk_table_get_type();
extern (C) void gtk_stock_set_translate_func(char *, _BCD_func__12124, void *, _BCD_func__13158);
extern (C) void gtk_stock_item_free(aGtkStockItem *);
extern (C) _GtkStockItem * gtk_stock_item_copy(aGtkStockItem *);
extern (C) _GSList * gtk_stock_list_ids();
extern (C) gint gtk_stock_lookup(char *, aGtkStockItem *);
extern (C) void gtk_stock_add_static(aGtkStockItem *, guint);
extern (C) void gtk_stock_add(aGtkStockItem *, guint);
extern (C) gint gtk_status_icon_get_geometry(aGtkStatusIcon *, _GdkScreen * *, _GdkRectangle *, gint *);
extern (C) void gtk_status_icon_position_menu(aGtkMenu *, gint *, gint *, gint *, void *);
extern (C) gint gtk_status_icon_is_embedded(aGtkStatusIcon *);
extern (C) gint gtk_status_icon_get_blinking(aGtkStatusIcon *);
extern (C) void gtk_status_icon_set_blinking(aGtkStatusIcon *, gint);
extern (C) gint gtk_status_icon_get_visible(aGtkStatusIcon *);
extern (C) void gtk_status_icon_set_visible(aGtkStatusIcon *, gint);
extern (C) void gtk_status_icon_set_tooltip(aGtkStatusIcon *, char *);
extern (C) _GdkScreen * gtk_status_icon_get_screen(aGtkStatusIcon *);
extern (C) void gtk_status_icon_set_screen(aGtkStatusIcon *, _GdkScreen *);
extern (C) gint gtk_status_icon_get_size(aGtkStatusIcon *);
extern (C) char * gtk_status_icon_get_icon_name(aGtkStatusIcon *);
extern (C) char * gtk_status_icon_get_stock(aGtkStatusIcon *);
extern (C) void * gtk_status_icon_get_pixbuf(aGtkStatusIcon *);
extern (C) gint gtk_status_icon_get_storage_type(aGtkStatusIcon *);
extern (C) void gtk_status_icon_set_from_icon_name(aGtkStatusIcon *, char *);
extern (C) void gtk_status_icon_set_from_stock(aGtkStatusIcon *, char *);
extern (C) void gtk_status_icon_set_from_file(aGtkStatusIcon *, char *);
extern (C) void gtk_status_icon_set_from_pixbuf(aGtkStatusIcon *, void *);
extern (C) _GtkStatusIcon * gtk_status_icon_new_from_icon_name(char *);
extern (C) _GtkStatusIcon * gtk_status_icon_new_from_stock(char *);
extern (C) _GtkStatusIcon * gtk_status_icon_new_from_file(char *);
extern (C) _GtkStatusIcon * gtk_status_icon_new_from_pixbuf(void *);
extern (C) _GtkStatusIcon * gtk_status_icon_new();
extern (C) GType gtk_status_icon_get_type();
extern (C) gint gtk_statusbar_get_has_resize_grip(aGtkStatusbar *);
extern (C) void gtk_statusbar_set_has_resize_grip(aGtkStatusbar *, gint);
extern (C) void gtk_statusbar_remove(aGtkStatusbar *, guint, guint);
extern (C) void gtk_statusbar_pop(aGtkStatusbar *, guint);
extern (C) guint gtk_statusbar_push(aGtkStatusbar *, guint, char *);
extern (C) guint gtk_statusbar_get_context_id(aGtkStatusbar *, char *);
extern (C) _GtkWidget * gtk_statusbar_new();
extern (C) GType gtk_statusbar_get_type();
extern (C) void gtk_spin_button_update(aGtkSpinButton *);
extern (C) gint gtk_spin_button_get_snap_to_ticks(aGtkSpinButton *);
extern (C) void gtk_spin_button_set_snap_to_ticks(aGtkSpinButton *, gint);
extern (C) gint gtk_spin_button_get_wrap(aGtkSpinButton *);
extern (C) void gtk_spin_button_set_wrap(aGtkSpinButton *, gint);
extern (C) void gtk_spin_button_spin(aGtkSpinButton *, gint, double);
extern (C) gint gtk_spin_button_get_numeric(aGtkSpinButton *);
extern (C) void gtk_spin_button_set_numeric(aGtkSpinButton *, gint);
extern (C) gint gtk_spin_button_get_update_policy(aGtkSpinButton *);
extern (C) void gtk_spin_button_set_update_policy(aGtkSpinButton *, gint);
extern (C) void gtk_spin_button_set_value(aGtkSpinButton *, double);
extern (C) gint gtk_spin_button_get_value_as_int(aGtkSpinButton *);
extern (C) double gtk_spin_button_get_value(aGtkSpinButton *);
extern (C) void gtk_spin_button_get_range(aGtkSpinButton *, double *, double *);
extern (C) void gtk_spin_button_set_range(aGtkSpinButton *, double, double);
extern (C) void gtk_spin_button_get_increments(aGtkSpinButton *, double *, double *);
extern (C) void gtk_spin_button_set_increments(aGtkSpinButton *, double, double);
extern (C) guint gtk_spin_button_get_digits(aGtkSpinButton *);
extern (C) void gtk_spin_button_set_digits(aGtkSpinButton *, guint);
extern (C) _GtkAdjustment * gtk_spin_button_get_adjustment(aGtkSpinButton *);
extern (C) void gtk_spin_button_set_adjustment(aGtkSpinButton *, aGtkAdjustment *);
extern (C) _GtkWidget * gtk_spin_button_new_with_range(double, double, double);
extern (C) _GtkWidget * gtk_spin_button_new(aGtkAdjustment *, double, guint);
extern (C) void gtk_spin_button_configure(aGtkSpinButton *, aGtkAdjustment *, double, guint);
extern (C) GType gtk_spin_button_get_type();
extern (C) void _gtk_size_group_queue_resize(aGtkWidget *);
extern (C) void _gtk_size_group_compute_requisition(aGtkWidget *, aGtkRequisition *);
extern (C) void _gtk_size_group_get_child_requisition(aGtkWidget *, aGtkRequisition *);
extern (C) _GSList * gtk_size_group_get_widgets(aGtkSizeGroup *);
extern (C) void gtk_size_group_remove_widget(aGtkSizeGroup *, aGtkWidget *);
extern (C) void gtk_size_group_add_widget(aGtkSizeGroup *, aGtkWidget *);
extern (C) gint gtk_size_group_get_ignore_hidden(aGtkSizeGroup *);
extern (C) void gtk_size_group_set_ignore_hidden(aGtkSizeGroup *, gint);
extern (C) gint gtk_size_group_get_mode(aGtkSizeGroup *);
extern (C) void gtk_size_group_set_mode(aGtkSizeGroup *, gint);
extern (C) _GtkSizeGroup * gtk_size_group_new(gint);
extern (C) GType gtk_size_group_get_type();
extern (C) void gtk_separator_tool_item_set_draw(aGtkSeparatorToolItem *, gint);
extern (C) gint gtk_separator_tool_item_get_draw(aGtkSeparatorToolItem *);
extern (C) _GtkToolItem * gtk_separator_tool_item_new();
extern (C) GType gtk_separator_tool_item_get_type();
extern (C) _GtkWidget * gtk_separator_menu_item_new();
extern (C) GType gtk_separator_menu_item_get_type();
extern (C) gint _gtk_scrolled_window_get_scrollbar_spacing(aGtkScrolledWindow *);
extern (C) void gtk_scrolled_window_add_with_viewport(aGtkScrolledWindow *, aGtkWidget *);
extern (C) gint gtk_scrolled_window_get_shadow_type(aGtkScrolledWindow *);
extern (C) void gtk_scrolled_window_set_shadow_type(aGtkScrolledWindow *, gint);
extern (C) gint gtk_scrolled_window_get_placement(aGtkScrolledWindow *);
extern (C) void gtk_scrolled_window_unset_placement(aGtkScrolledWindow *);
extern (C) void gtk_scrolled_window_set_placement(aGtkScrolledWindow *, gint);
extern (C) void gtk_scrolled_window_get_policy(aGtkScrolledWindow *, gint *, gint *);
extern (C) void gtk_scrolled_window_set_policy(aGtkScrolledWindow *, gint, gint);
extern (C) _GtkWidget * gtk_scrolled_window_get_vscrollbar(aGtkScrolledWindow *);
extern (C) _GtkWidget * gtk_scrolled_window_get_hscrollbar(aGtkScrolledWindow *);
extern (C) void gtk_widget_set_tooltip_window(GtkWidget *, GtkWindow *);
extern (C) _GtkAdjustment * gtk_scrolled_window_get_vadjustment(aGtkScrolledWindow *);
extern (C) _GtkAdjustment * gtk_scrolled_window_get_hadjustment(aGtkScrolledWindow *);
extern (C) void gtk_scrolled_window_set_vadjustment(aGtkScrolledWindow *, aGtkAdjustment *);
extern (C) void gtk_scrolled_window_set_hadjustment(aGtkScrolledWindow *, aGtkAdjustment *);
extern (C) _GtkWidget * gtk_scrolled_window_new(aGtkAdjustment *, aGtkAdjustment *);
extern (C) GType gtk_scrolled_window_get_type();
extern (C) gint gtk_viewport_get_shadow_type(aGtkViewport *);
extern (C) void gtk_viewport_set_shadow_type(aGtkViewport *, gint);
extern (C) void gtk_viewport_set_vadjustment(aGtkViewport *, aGtkAdjustment *);
extern (C) void gtk_viewport_set_hadjustment(aGtkViewport *, aGtkAdjustment *);
extern (C) _GtkAdjustment * gtk_viewport_get_vadjustment(aGtkViewport *);
extern (C) _GtkAdjustment * gtk_viewport_get_hadjustment(aGtkViewport *);
extern (C) _GtkWidget * gtk_viewport_new(aGtkAdjustment *, aGtkAdjustment *);
extern (C) GType gtk_viewport_get_type();
extern (C) void gtk_scale_button_set_adjustment(aGtkScaleButton *, aGtkAdjustment *);
extern (C) _GtkAdjustment * gtk_scale_button_get_adjustment(aGtkScaleButton *);
extern (C) void gtk_scale_button_set_value(aGtkScaleButton *, double);
extern (C) double gtk_scale_button_get_value(aGtkScaleButton *);
extern (C) void gtk_scale_button_set_icons(aGtkScaleButton *, char * *);
extern (C) _GtkWidget * gtk_scale_button_new(gint, double, double, double, char * *);
extern (C) GType gtk_scale_button_get_type();
extern (C) _GtkWidget * gtk_recent_chooser_widget_new_for_manager(aGtkRecentManager *);
extern (C) _GtkWidget * gtk_recent_chooser_widget_new();
extern (C) GType gtk_recent_chooser_widget_get_type();
extern (C) void gtk_recent_chooser_menu_set_show_numbers(aGtkRecentChooserMenu *, gint);
extern (C) gint gtk_recent_chooser_menu_get_show_numbers(aGtkRecentChooserMenu *);
extern (C) _GtkWidget * gtk_recent_chooser_menu_new_for_manager(aGtkRecentManager *);
extern (C) _GtkWidget * gtk_recent_chooser_menu_new();
extern (C) GType gtk_recent_chooser_menu_get_type();
extern (C) _GtkWidget * gtk_recent_chooser_dialog_new_for_manager(char *, aGtkWindow *, aGtkRecentManager *, char *, ...);
extern (C) _GtkWidget * gtk_recent_chooser_dialog_new(char *, aGtkWindow *, char *, ...);
extern (C) GType gtk_recent_chooser_dialog_get_type();
extern (C) void * gtk_recent_chooser_get_filter(void *);
extern (C) void gtk_recent_chooser_set_filter(void *, void *);
extern (C) _GSList * gtk_recent_chooser_list_filters(void *);
extern (C) void gtk_recent_chooser_remove_filter(void *, void *);
extern (C) void gtk_recent_chooser_add_filter(void *, void *);
extern (C) char * * gtk_recent_chooser_get_uris(void *, gsize *);
extern (C) _GList * gtk_recent_chooser_get_items(void *);
extern (C) void gtk_recent_chooser_unselect_all(void *);
extern (C) void gtk_recent_chooser_select_all(void *);
extern (C) void gtk_recent_chooser_unselect_uri(void *, char *);
extern (C) gint gtk_recent_chooser_select_uri(void *, char *, _GError * *);
extern (C) void * gtk_recent_chooser_get_current_item(void *);
extern (C) char * gtk_recent_chooser_get_current_uri(void *);
extern (C) gint gtk_recent_chooser_set_current_uri(void *, char *, _GError * *);
extern (C) void gtk_recent_chooser_set_sort_func(void *, _BCD_func__9605, void *, _BCD_func__13158);
extern (C) gint gtk_recent_chooser_get_sort_type(void *);
extern (C) void gtk_recent_chooser_set_sort_type(void *, gint);
extern (C) gint gtk_recent_chooser_get_show_icons(void *);
extern (C) void gtk_recent_chooser_set_show_icons(void *, gint);
extern (C) gint gtk_recent_chooser_get_show_numbers(void *);
extern (C) void gtk_recent_chooser_set_show_numbers(void *, gint);
extern (C) gint gtk_recent_chooser_get_show_tips(void *);
extern (C) void gtk_recent_chooser_set_show_tips(void *, gint);
extern (C) gint gtk_recent_chooser_get_local_only(void *);
extern (C) void gtk_recent_chooser_set_local_only(void *, gint);
extern (C) gint gtk_recent_chooser_get_limit(void *);
extern (C) void gtk_recent_chooser_set_limit(void *, gint);
extern (C) gint gtk_recent_chooser_get_select_multiple(void *);
extern (C) void gtk_recent_chooser_set_select_multiple(void *, gint);
extern (C) gint gtk_recent_chooser_get_show_not_found(void *);
extern (C) void gtk_recent_chooser_set_show_not_found(void *, gint);
extern (C) gint gtk_recent_chooser_get_show_private(void *);
extern (C) void gtk_recent_chooser_set_show_private(void *, gint);
extern (C) GType gtk_recent_chooser_get_type();
extern (C) GQuark gtk_recent_chooser_error_quark();
extern (C) gint gtk_recent_filter_filter(void *, aGtkRecentFilterInfo *);
extern (C) gint gtk_recent_filter_get_needed(void *);
extern (C) void gtk_recent_filter_add_custom(void *, gint, _BCD_func__9607, void *, _BCD_func__13158);
extern (C) void gtk_recent_filter_add_age(void *, gint);
extern (C) void gtk_recent_filter_add_group(void *, char *);
extern (C) void gtk_recent_filter_add_application(void *, char *);
extern (C) void gtk_recent_filter_add_pixbuf_formats(void *);
extern (C) void gtk_recent_filter_add_pattern(void *, char *);
extern (C) void gtk_recent_filter_add_mime_type(void *, char *);
extern (C) char * gtk_recent_filter_get_name(void *);
extern (C) void gtk_recent_filter_set_name(void *, char *);
extern (C) void * gtk_recent_filter_new();
extern (C) GType gtk_recent_filter_get_type();
extern (C) void gtk_recent_action_set_show_numbers(aGtkRecentAction *, gint);
extern (C) gint gtk_recent_action_get_show_numbers(aGtkRecentAction *);
extern (C) _GtkAction * gtk_recent_action_new_for_manager(char *, char *, char *, char *, aGtkRecentManager *);
extern (C) _GtkAction * gtk_recent_action_new(char *, char *, char *, char *);
extern (C) GType gtk_recent_action_get_type();
extern (C) void _gtk_recent_manager_sync();
extern (C) gint gtk_recent_info_match(void *, void *);
extern (C) gint gtk_recent_info_exists(void *);
extern (C) gint gtk_recent_info_is_local(void *);
extern (C) gint gtk_recent_info_get_age(void *);
extern (C) char * gtk_recent_info_get_uri_display(void *);
extern (C) char * gtk_recent_info_get_short_name(void *);
extern (C) void * gtk_recent_info_get_icon(void *, gint);
extern (C) gint gtk_recent_info_has_group(void *, char *);
extern (C) char * * gtk_recent_info_get_groups(void *, gsize *);
extern (C) gint gtk_recent_info_has_application(void *, char *);
extern (C) char * gtk_recent_info_last_application(void *);
extern (C) char * * gtk_recent_info_get_applications(void *, gsize *);
extern (C) gint gtk_recent_info_get_application_info(void *, char *, char * *, guint *, gint *);
extern (C) gint gtk_recent_info_get_private_hint(void *);
extern (C) gint gtk_recent_info_get_visited(void *);
extern (C) gint gtk_recent_info_get_modified(void *);
extern (C) gint gtk_recent_info_get_added(void *);
extern (C) char * gtk_recent_info_get_mime_type(void *);
extern (C) char * gtk_recent_info_get_description(void *);
extern (C) char * gtk_recent_info_get_display_name(void *);
extern (C) char * gtk_recent_info_get_uri(void *);
extern (C) void gtk_recent_info_unref(void *);
extern (C) void * gtk_recent_info_ref(void *);
extern (C) GType gtk_recent_info_get_type();
extern (C) gint gtk_recent_manager_purge_items(aGtkRecentManager *, _GError * *);
extern (C) _GList * gtk_recent_manager_get_items(aGtkRecentManager *);
extern (C) gint gtk_recent_manager_get_limit(aGtkRecentManager *);
extern (C) void gtk_recent_manager_set_limit(aGtkRecentManager *, gint);
extern (C) gint gtk_recent_manager_move_item(aGtkRecentManager *, char *, char *, _GError * *);
extern (C) gint gtk_recent_manager_has_item(aGtkRecentManager *, char *);
extern (C) void * gtk_recent_manager_lookup_item(aGtkRecentManager *, char *, _GError * *);
extern (C) gint gtk_recent_manager_remove_item(aGtkRecentManager *, char *, _GError * *);
extern (C) gint gtk_recent_manager_add_full(aGtkRecentManager *, char *, aGtkRecentData *);
extern (C) gint gtk_recent_manager_add_item(aGtkRecentManager *, char *);
extern (C) void gtk_recent_manager_set_screen(aGtkRecentManager *, _GdkScreen *);
extern (C) _GtkRecentManager * gtk_recent_manager_get_for_screen(_GdkScreen *);
extern (C) _GtkRecentManager * gtk_recent_manager_get_default();
extern (C) _GtkRecentManager * gtk_recent_manager_new();
extern (C) GType gtk_recent_manager_get_type();
extern (C) GQuark gtk_recent_manager_error_quark();
extern (C) void gtk_radio_tool_button_set_group(aGtkRadioToolButton *, _GSList *);
extern (C) _GSList * gtk_radio_tool_button_get_group(aGtkRadioToolButton *);
extern (C) _GtkToolItem * gtk_radio_tool_button_new_with_stock_from_widget(aGtkRadioToolButton *, char *);
extern (C) _GtkToolItem * gtk_radio_tool_button_new_from_widget(aGtkRadioToolButton *);
extern (C) _GtkToolItem * gtk_radio_tool_button_new_from_stock(_GSList *, char *);
extern (C) _GtkToolItem * gtk_radio_tool_button_new(_GSList *);
extern (C) GType gtk_radio_tool_button_get_type();
extern (C) gint gtk_toggle_tool_button_get_active(aGtkToggleToolButton *);
extern (C) void gtk_toggle_tool_button_set_active(aGtkToggleToolButton *, gint);
extern (C) _GtkToolItem * gtk_toggle_tool_button_new_from_stock(char *);
extern (C) _GtkToolItem * gtk_toggle_tool_button_new();
extern (C) GType gtk_toggle_tool_button_get_type();
extern (C) void gtk_radio_menu_item_set_group(aGtkRadioMenuItem *, _GSList *);
extern (C) _GSList * gtk_radio_menu_item_get_group(aGtkRadioMenuItem *);
extern (C) _GtkWidget * gtk_radio_menu_item_new_with_label_from_widget(aGtkRadioMenuItem *, char *);
extern (C) _GtkWidget * gtk_radio_menu_item_new_with_mnemonic_from_widget(aGtkRadioMenuItem *, char *);
extern (C) _GtkWidget * gtk_radio_menu_item_new_from_widget(aGtkRadioMenuItem *);
extern (C) _GtkWidget * gtk_radio_menu_item_new_with_mnemonic(_GSList *, char *);
extern (C) _GtkWidget * gtk_radio_menu_item_new_with_label(_GSList *, char *);
extern (C) _GtkWidget * gtk_radio_menu_item_new(_GSList *);
extern (C) GType gtk_radio_menu_item_get_type();
extern (C) void gtk_radio_button_set_group(aGtkRadioButton *, _GSList *);
extern (C) _GSList * gtk_radio_button_get_group(aGtkRadioButton *);
extern (C) _GtkWidget * gtk_radio_button_new_with_mnemonic_from_widget(aGtkRadioButton *, char *);
extern (C) _GtkWidget * gtk_radio_button_new_with_mnemonic(_GSList *, char *);
extern (C) _GtkWidget * gtk_radio_button_new_with_label_from_widget(aGtkRadioButton *, char *);
extern (C) _GtkWidget * gtk_radio_button_new_with_label(_GSList *, char *);
extern (C) _GtkWidget * gtk_radio_button_new_from_widget(aGtkRadioButton *);
extern (C) _GtkWidget * gtk_radio_button_new(_GSList *);
extern (C) GType gtk_radio_button_get_type();
extern (C) void gtk_radio_action_set_current_value(aGtkRadioAction *, gint);
extern (C) gint gtk_radio_action_get_current_value(aGtkRadioAction *);
extern (C) void gtk_radio_action_set_group(aGtkRadioAction *, _GSList *);
extern (C) _GSList * gtk_radio_action_get_group(aGtkRadioAction *);
extern (C) _GtkRadioAction * gtk_radio_action_new(char *, char *, char *, char *, gint);
extern (C) GType gtk_radio_action_get_type();
extern (C) gint gtk_toggle_action_get_draw_as_radio(aGtkToggleAction *);
extern (C) void gtk_toggle_action_set_draw_as_radio(aGtkToggleAction *, gint);
extern (C) gint gtk_toggle_action_get_active(aGtkToggleAction *);
extern (C) void gtk_toggle_action_set_active(aGtkToggleAction *, gint);
extern (C) void gtk_toggle_action_toggled(aGtkToggleAction *);
extern (C) _GtkToggleAction * gtk_toggle_action_new(char *, char *, char *, char *);
extern (C) GType gtk_toggle_action_get_type();
extern (C) void gtk_progress_bar_update(aGtkProgressBar *, double);
extern (C) void gtk_progress_bar_set_activity_blocks(aGtkProgressBar *, guint);
extern (C) void gtk_progress_bar_set_activity_step(aGtkProgressBar *, guint);
extern (C) void gtk_progress_bar_set_discrete_blocks(aGtkProgressBar *, guint);
extern (C) void gtk_progress_bar_set_bar_style(aGtkProgressBar *, gint);
extern (C) _GtkWidget * gtk_progress_bar_new_with_adjustment(aGtkAdjustment *);
extern (C) gint gtk_progress_bar_get_ellipsize(aGtkProgressBar *);
extern (C) void gtk_progress_bar_set_ellipsize(aGtkProgressBar *, gint);
extern (C) gint gtk_progress_bar_get_orientation(aGtkProgressBar *);
extern (C) double gtk_progress_bar_get_pulse_step(aGtkProgressBar *);
extern (C) double gtk_progress_bar_get_fraction(aGtkProgressBar *);
extern (C) char * gtk_progress_bar_get_text(aGtkProgressBar *);
extern (C) void gtk_progress_bar_set_orientation(aGtkProgressBar *, gint);
extern (C) void gtk_progress_bar_set_pulse_step(aGtkProgressBar *, double);
extern (C) void gtk_progress_bar_set_fraction(aGtkProgressBar *, double);
extern (C) void gtk_progress_bar_set_text(aGtkProgressBar *, char *);
extern (C) void gtk_progress_bar_pulse(aGtkProgressBar *);
extern (C) _GtkWidget * gtk_progress_bar_new();
extern (C) GType gtk_progress_bar_get_type();
extern (C) double gtk_progress_get_percentage_from_value(aGtkProgress *, double);
extern (C) double gtk_progress_get_current_percentage(aGtkProgress *);
extern (C) char * gtk_progress_get_text_from_value(aGtkProgress *, double);
extern (C) char * gtk_progress_get_current_text(aGtkProgress *);
extern (C) void gtk_progress_set_activity_mode(aGtkProgress *, gint);
extern (C) double gtk_progress_get_value(aGtkProgress *);
extern (C) void gtk_progress_set_value(aGtkProgress *, double);
extern (C) void gtk_progress_set_percentage(aGtkProgress *, double);
extern (C) void gtk_progress_configure(aGtkProgress *, double, double, double);
extern (C) void gtk_progress_set_adjustment(aGtkProgress *, aGtkAdjustment *);
extern (C) void gtk_progress_set_format_string(aGtkProgress *, char *);
extern (C) void gtk_progress_set_text_alignment(aGtkProgress *, float, float);
extern (C) void gtk_progress_set_show_text(aGtkProgress *, gint);
extern (C) guint gtk_progress_get_type();
extern (C) void gtk_print_run_page_setup_dialog_async(aGtkWindow *, void *, void *, _BCD_func__9769, void *);
extern (C) void * gtk_print_run_page_setup_dialog(aGtkWindow *, void *, void *);
extern (C) void gtk_print_operation_cancel(aGtkPrintOperation *);
extern (C) gint gtk_print_operation_is_finished(aGtkPrintOperation *);
extern (C) char * gtk_print_operation_get_status_string(aGtkPrintOperation *);
extern (C) gint gtk_print_operation_get_status(aGtkPrintOperation *);
extern (C) void gtk_print_operation_get_error(aGtkPrintOperation *, _GError * *);
extern (C) gint gtk_print_operation_run(aGtkPrintOperation *, gint, aGtkWindow *, _GError * *);
extern (C) void gtk_print_operation_set_custom_tab_label(aGtkPrintOperation *, char *);
extern (C) void gtk_print_operation_set_allow_async(aGtkPrintOperation *, gint);
extern (C) void gtk_print_operation_set_show_progress(aGtkPrintOperation *, gint);
extern (C) void gtk_print_operation_set_track_print_status(aGtkPrintOperation *, gint);
extern (C) void gtk_print_operation_set_export_filename(aGtkPrintOperation *, char *);
extern (C) void gtk_print_operation_set_unit(aGtkPrintOperation *, gint);
extern (C) void gtk_print_operation_set_use_full_page(aGtkPrintOperation *, gint);
extern (C) void gtk_print_operation_set_current_page(aGtkPrintOperation *, gint);
extern (C) void gtk_print_operation_set_n_pages(aGtkPrintOperation *, gint);
extern (C) void gtk_print_operation_set_job_name(aGtkPrintOperation *, char *);
extern (C) void * gtk_print_operation_get_print_settings(aGtkPrintOperation *);
extern (C) void gtk_print_operation_set_print_settings(aGtkPrintOperation *, void *);
extern (C) void * gtk_print_operation_get_default_page_setup(aGtkPrintOperation *);
extern (C) void gtk_print_operation_set_default_page_setup(aGtkPrintOperation *, void *);
extern (C) _GtkPrintOperation * gtk_print_operation_new();
extern (C) GType gtk_print_operation_get_type();
extern (C) GQuark gtk_print_error_quark();
extern (C) gint gtk_print_operation_preview_is_selected(void *, gint);
extern (C) void gtk_print_operation_preview_end_preview(void *);
extern (C) void gtk_print_operation_preview_render_page(void *, gint);
extern (C) GType gtk_print_operation_preview_get_type();
extern (C) void gtk_print_context_set_cairo_context(void *, void *, double, double);
extern (C) void * gtk_print_context_create_pango_layout(void *);
extern (C) void * gtk_print_context_create_pango_context(void *);
extern (C) void * gtk_print_context_get_pango_fontmap(void *);
extern (C) double gtk_print_context_get_dpi_y(void *);
extern (C) double gtk_print_context_get_dpi_x(void *);
extern (C) double gtk_print_context_get_height(void *);
extern (C) double gtk_print_context_get_width(void *);
extern (C) void * gtk_print_context_get_page_setup(void *);
extern (C) void * gtk_print_context_get_cairo_context(void *);
extern (C) GType gtk_print_context_get_type();
extern (C) void gtk_print_settings_set_output_bin(void *, char *);
extern (C) char * gtk_print_settings_get_output_bin(void *);
extern (C) void gtk_print_settings_set_finishings(void *, char *);
extern (C) char * gtk_print_settings_get_finishings(void *);
extern (C) void gtk_print_settings_set_dither(void *, char *);
extern (C) char * gtk_print_settings_get_dither(void *);
extern (C) void gtk_print_settings_set_media_type(void *, char *);
extern (C) char * gtk_print_settings_get_media_type(void *);
extern (C) void gtk_print_settings_set_default_source(void *, char *);
extern (C) char * gtk_print_settings_get_default_source(void *);
extern (C) void gtk_print_settings_set_page_set(void *, gint);
extern (C) gint gtk_print_settings_get_page_set(void *);
extern (C) void gtk_print_settings_set_page_ranges(void *, aGtkPageRange *, gint);
extern (C) _GtkPageRange * gtk_print_settings_get_page_ranges(void *, gint *);
extern (C) void gtk_print_settings_set_print_pages(void *, gint);
extern (C) gint gtk_print_settings_get_print_pages(void *);
extern (C) void gtk_print_settings_set_scale(void *, double);
extern (C) double gtk_print_settings_get_scale(void *);
extern (C) void gtk_print_settings_set_resolution(void *, gint);
extern (C) gint gtk_print_settings_get_resolution(void *);
extern (C) void gtk_print_settings_set_number_up(void *, gint);
extern (C) gint gtk_print_settings_get_number_up(void *);
extern (C) void gtk_print_settings_set_n_copies(void *, gint);
extern (C) gint gtk_print_settings_get_n_copies(void *);
extern (C) void gtk_print_settings_set_quality(void *, gint);
extern (C) gint gtk_print_settings_get_quality(void *);
extern (C) void gtk_print_settings_set_duplex(void *, gint);
extern (C) gint gtk_print_settings_get_duplex(void *);
extern (C) void gtk_print_settings_set_reverse(void *, gint);
extern (C) gint gtk_print_settings_get_reverse(void *);
extern (C) void gtk_print_settings_set_collate(void *, gint);
extern (C) gint gtk_print_settings_get_collate(void *);
extern (C) void gtk_print_settings_set_use_color(void *, gint);
extern (C) gint gtk_print_settings_get_use_color(void *);
extern (C) void gtk_print_settings_set_paper_height(void *, double, gint);
extern (C) double gtk_print_settings_get_paper_height(void *, gint);
extern (C) void gtk_print_settings_set_paper_width(void *, double, gint);
extern (C) double gtk_print_settings_get_paper_width(void *, gint);
extern (C) void gtk_print_settings_set_paper_size(void *, void *);
extern (C) void * gtk_print_settings_get_paper_size(void *);
extern (C) void gtk_print_settings_set_orientation(void *, gint);
extern (C) gint gtk_print_settings_get_orientation(void *);
extern (C) void gtk_print_settings_set_printer(void *, char *);
extern (C) char * gtk_print_settings_get_printer(void *);
extern (C) void gtk_print_settings_set_int(void *, char *, gint);
extern (C) gint gtk_print_settings_get_int_with_default(void *, char *, gint);
extern (C) gint gtk_print_settings_get_int(void *, char *);
extern (C) void gtk_print_settings_set_length(void *, char *, double, gint);
extern (C) double gtk_print_settings_get_length(void *, char *, gint);
extern (C) void gtk_print_settings_set_double(void *, char *, double);
extern (C) double gtk_print_settings_get_double_with_default(void *, char *, double);
extern (C) double gtk_print_settings_get_double(void *, char *);
extern (C) void gtk_print_settings_set_bool(void *, char *, gint);
extern (C) gint gtk_print_settings_get_bool(void *, char *);
extern (C) void gtk_print_settings_foreach(void *, _BCD_func__9823, void *);
extern (C) void gtk_print_settings_unset(void *, char *);
extern (C) void gtk_print_settings_set(void *, in char *, in char *);
extern (C) char * gtk_print_settings_get(void *, in char *);
extern (C) gint gtk_print_settings_has_key(void *, char *);
extern (C) void gtk_print_settings_to_key_file(void *, void *, char *);
extern (C) void * gtk_print_settings_new_from_key_file(void *, char *, _GError * *);
extern (C) gint gtk_print_settings_to_file(void *, char *, _GError * *);
extern (C) void * gtk_print_settings_new_from_file(char *, _GError * *);
extern (C) void * gtk_print_settings_copy(void *);
extern (C) void * gtk_print_settings_new();
extern (C) GType gtk_print_settings_get_type();
extern (C) void gtk_page_setup_to_key_file(void *, void *, char *);
extern (C) void * gtk_page_setup_new_from_key_file(void *, char *, _GError * *);
extern (C) gint gtk_page_setup_to_file(void *, char *, _GError * *);
extern (C) void * gtk_page_setup_new_from_file(char *, _GError * *);
extern (C) double gtk_page_setup_get_page_height(void *, gint);
extern (C) double gtk_page_setup_get_page_width(void *, gint);
extern (C) double gtk_page_setup_get_paper_height(void *, gint);
extern (C) double gtk_page_setup_get_paper_width(void *, gint);
extern (C) void gtk_page_setup_set_paper_size_and_default_margins(void *, void *);
extern (C) void gtk_page_setup_set_right_margin(void *, double, gint);
extern (C) double gtk_page_setup_get_right_margin(void *, gint);
extern (C) void gtk_page_setup_set_left_margin(void *, double, gint);
extern (C) double gtk_page_setup_get_left_margin(void *, gint);
extern (C) void gtk_page_setup_set_bottom_margin(void *, double, gint);
extern (C) double gtk_page_setup_get_bottom_margin(void *, gint);
extern (C) void gtk_page_setup_set_top_margin(void *, double, gint);
extern (C) double gtk_page_setup_get_top_margin(void *, gint);
extern (C) void gtk_page_setup_set_paper_size(void *, void *);
extern (C) void * gtk_page_setup_get_paper_size(void *);
extern (C) void gtk_page_setup_set_orientation(void *, gint);
extern (C) gint gtk_page_setup_get_orientation(void *);
extern (C) void * gtk_page_setup_copy(void *);
extern (C) void * gtk_page_setup_new();
extern (C) GType gtk_page_setup_get_type();
extern (C) void gtk_paper_size_to_key_file(void *, void *, char *);
extern (C) void * gtk_paper_size_new_from_key_file(void *, char *, _GError * *);
extern (C) char * gtk_paper_size_get_default();
extern (C) double gtk_paper_size_get_default_right_margin(void *, gint);
extern (C) double gtk_paper_size_get_default_left_margin(void *, gint);
extern (C) double gtk_paper_size_get_default_bottom_margin(void *, gint);
extern (C) double gtk_paper_size_get_default_top_margin(void *, gint);
extern (C) void gtk_paper_size_set_size(void *, double, double, gint);
extern (C) gint gtk_paper_size_is_custom(void *);
extern (C) double gtk_paper_size_get_height(void *, gint);
extern (C) double gtk_paper_size_get_width(void *, gint);
extern (C) char * gtk_paper_size_get_ppd_name(void *);
extern (C) char * gtk_paper_size_get_display_name(void *);
extern (C) char * gtk_paper_size_get_name(void *);
extern (C) _GList * gtk_paper_size_get_paper_sizes(gint);
extern (C) gint gtk_paper_size_is_equal(void *, void *);
extern (C) void gtk_paper_size_free(void *);
extern (C) void * gtk_paper_size_copy(void *);
extern (C) void * gtk_paper_size_new_custom(in char *, in char *, double, double, gint);
extern (C) void * gtk_paper_size_new_from_ppd(in char *, in char *, double, double);
extern (C) void * gtk_paper_size_new(in char *);
extern (C) GType gtk_paper_size_get_type();
extern (C) void gtk_preview_reset();
extern (C) _GtkPreviewInfo * gtk_preview_get_info();
extern (C) _GdkColormap * gtk_preview_get_cmap();
extern (C) _GdkVisual * gtk_preview_get_visual();
extern (C) void gtk_preview_set_dither(aGtkPreview *, gint);
extern (C) void gtk_preview_set_reserved(gint);
extern (C) void gtk_preview_set_install_cmap(gint);
extern (C) void gtk_preview_set_color_cube(guint, guint, guint, guint);
extern (C) void gtk_preview_set_gamma(double);
extern (C) void gtk_preview_set_expand(aGtkPreview *, gint);
extern (C) void gtk_preview_draw_row(aGtkPreview *, char *, gint, gint, gint);
extern (C) void gtk_preview_put(aGtkPreview *, _GdkDrawable *, _GdkGC *, gint, gint, gint, gint, gint, gint);
extern (C) void gtk_preview_size(aGtkPreview *, gint, gint);
extern (C) _GtkWidget * gtk_preview_new(gint);
extern (C) void gtk_preview_uninit();
extern (C) guint gtk_preview_get_type();
extern (C) void _gtk_plug_remove_from_socket(aGtkPlug *, aGtkSocket *);
extern (C) void _gtk_plug_add_to_socket(aGtkPlug *, aGtkSocket *);
extern (C) guint gtk_plug_get_id(aGtkPlug *);
extern (C) _GtkWidget * gtk_plug_new_for_display(_GdkDisplay *, guint);
extern (C) void gtk_plug_construct_for_display(aGtkPlug *, _GdkDisplay *, guint);
extern (C) _GtkWidget * gtk_plug_new(GdkNativeWindow);
extern (C) void gtk_plug_construct(aGtkPlug *, guint);
extern (C) GType gtk_plug_get_type();
extern (C) void gtk_socket_steal(aGtkSocket *, guint);
extern (C) guint gtk_socket_get_id(aGtkSocket *);
extern (C) void gtk_socket_add_id(aGtkSocket *, guint);
extern (C) _GtkWidget * gtk_socket_new();
extern (C) GType gtk_socket_get_type();
extern (C) void gtk_pixmap_set_build_insensitive(aGtkPixmap *, gint);
extern (C) void gtk_pixmap_get(aGtkPixmap *, _GdkDrawable * *, _GdkDrawable * *);
extern (C) void gtk_pixmap_set(aGtkPixmap *, _GdkDrawable *, _GdkDrawable *);
extern (C) _GtkWidget * gtk_pixmap_new(_GdkDrawable *, _GdkDrawable *);
extern (C) guint gtk_pixmap_get_type();
extern (C) void gtk_option_menu_set_history(aGtkOptionMenu *, guint);
extern (C) gint gtk_option_menu_get_history(aGtkOptionMenu *);
extern (C) void gtk_option_menu_remove_menu(aGtkOptionMenu *);
extern (C) void gtk_option_menu_set_menu(aGtkOptionMenu *, aGtkWidget *);
extern (C) _GtkWidget * gtk_option_menu_get_menu(aGtkOptionMenu *);
extern (C) _GtkWidget * gtk_option_menu_new();
extern (C) guint gtk_option_menu_get_type();
extern (C) void gtk_old_editable_changed(aGtkOldEditable *);
extern (C) void gtk_old_editable_claim_selection(aGtkOldEditable *, gint, guint);
extern (C) guint gtk_old_editable_get_type();
extern (C) void gtk_notebook_set_tab_detachable(aGtkNotebook *, aGtkWidget *, gint);
extern (C) gint gtk_notebook_get_tab_detachable(aGtkNotebook *, aGtkWidget *);
extern (C) void gtk_notebook_set_tab_reorderable(aGtkNotebook *, aGtkWidget *, gint);
extern (C) gint gtk_notebook_get_tab_reorderable(aGtkNotebook *, aGtkWidget *);
extern (C) void gtk_notebook_reorder_child(aGtkNotebook *, aGtkWidget *, gint);
extern (C) void gtk_notebook_set_tab_label_packing(aGtkNotebook *, aGtkWidget *, gint, gint, gint);
extern (C) void gtk_notebook_query_tab_label_packing(aGtkNotebook *, aGtkWidget *, gint *, gint *, gint *);
extern (C) char * gtk_notebook_get_menu_label_text(aGtkNotebook *, aGtkWidget *);
extern (C) void gtk_notebook_set_menu_label_text(aGtkNotebook *, aGtkWidget *, char *);
extern (C) void gtk_notebook_set_menu_label(aGtkNotebook *, aGtkWidget *, aGtkWidget *);
extern (C) _GtkWidget * gtk_notebook_get_menu_label(aGtkNotebook *, aGtkWidget *);
extern (C) char * gtk_notebook_get_tab_label_text(aGtkNotebook *, aGtkWidget *);
extern (C) void gtk_notebook_set_tab_label_text(aGtkNotebook *, aGtkWidget *, char *);
extern (C) void gtk_notebook_set_tab_label(aGtkNotebook *, aGtkWidget *, aGtkWidget *);
extern (C) _GtkWidget * gtk_notebook_get_tab_label(aGtkNotebook *, aGtkWidget *);
extern (C) void gtk_notebook_popup_disable(aGtkNotebook *);
extern (C) void gtk_notebook_popup_enable(aGtkNotebook *);
extern (C) gint gtk_notebook_get_scrollable(aGtkNotebook *);
extern (C) void gtk_notebook_set_scrollable(aGtkNotebook *, gint);
extern (C) void gtk_notebook_set_tab_vborder(aGtkNotebook *, guint);
extern (C) void gtk_notebook_set_tab_hborder(aGtkNotebook *, guint);
extern (C) void gtk_notebook_set_tab_border(aGtkNotebook *, guint);
extern (C) void gtk_notebook_set_homogeneous_tabs(aGtkNotebook *, gint);
extern (C) gint gtk_notebook_get_tab_pos(aGtkNotebook *);
extern (C) void gtk_notebook_set_tab_pos(aGtkNotebook *, gint);
extern (C) gint gtk_notebook_get_show_tabs(aGtkNotebook *);
extern (C) void gtk_notebook_set_show_tabs(aGtkNotebook *, gint);
extern (C) gint gtk_notebook_get_show_border(aGtkNotebook *);
extern (C) void gtk_notebook_set_show_border(aGtkNotebook *, gint);
extern (C) void gtk_notebook_prev_page(aGtkNotebook *);
extern (C) void gtk_notebook_next_page(aGtkNotebook *);
extern (C) void gtk_notebook_set_current_page(aGtkNotebook *, gint);
extern (C) gint gtk_notebook_page_num(aGtkNotebook *, aGtkWidget *);
extern (C) gint gtk_notebook_get_n_pages(aGtkNotebook *);
extern (C) _GtkWidget * gtk_notebook_get_nth_page(aGtkNotebook *, gint);
extern (C) gint gtk_notebook_get_current_page(aGtkNotebook *);
extern (C) void * gtk_notebook_get_group(aGtkNotebook *);
extern (C) void gtk_notebook_set_group(aGtkNotebook *, void *);
extern (C) gint gtk_notebook_get_group_id(aGtkNotebook *);
extern (C) void gtk_notebook_set_group_id(aGtkNotebook *, gint);
extern (C) void gtk_notebook_set_window_creation_hook(_BCD_func__9964, void *, _BCD_func__13158);
extern (C) void gtk_notebook_remove_page(aGtkNotebook *, gint);
extern (C) gint gtk_notebook_insert_page_menu(aGtkNotebook *, aGtkWidget *, aGtkWidget *, aGtkWidget *, gint);
extern (C) gint gtk_notebook_insert_page(aGtkNotebook *, aGtkWidget *, aGtkWidget *, gint);
extern (C) gint gtk_notebook_prepend_page_menu(aGtkNotebook *, aGtkWidget *, aGtkWidget *, aGtkWidget *);
extern (C) gint gtk_notebook_prepend_page(aGtkNotebook *, aGtkWidget *, aGtkWidget *);
extern (C) gint gtk_notebook_append_page_menu(aGtkNotebook *, aGtkWidget *, aGtkWidget *, aGtkWidget *);
extern (C) gint gtk_notebook_append_page(aGtkNotebook *, aGtkWidget *, aGtkWidget *);
extern (C) _GtkWidget * gtk_notebook_new();
extern (C) GType gtk_notebook_get_type();
extern (C) void _gtk_modules_settings_changed(aGtkSettings *, char *);
extern (C) void _gtk_modules_init(gint *, char * * *, char *);
extern (C) char * * _gtk_get_module_path(char *);
extern (C) char * _gtk_find_module(char *, char *);
extern (C) void gtk_message_dialog_format_secondary_markup(aGtkMessageDialog *, char *, ...);
extern (C) void gtk_message_dialog_format_secondary_text(aGtkMessageDialog *, char *, ...);
extern (C) void gtk_message_dialog_set_markup(aGtkMessageDialog *, char *);
extern (C) void gtk_message_dialog_set_image(aGtkMessageDialog *, aGtkWidget *);
extern (C) _GtkWidget * gtk_message_dialog_new_with_markup(aGtkWindow *, gint, gint, gint, char *, ...);
extern (C) _GtkWidget * gtk_message_dialog_new(aGtkWindow *, gint, gint, gint, char *, ...);
extern (C) GType gtk_message_dialog_get_type();
extern (C) void gtk_menu_tool_button_set_arrow_tooltip_markup(aGtkMenuToolButton *, char *);
extern (C) void gtk_menu_tool_button_set_arrow_tooltip_text(aGtkMenuToolButton *, char *);
extern (C) void gtk_menu_tool_button_set_arrow_tooltip(aGtkMenuToolButton *, aGtkTooltips *, char *, char *);
extern (C) _GtkWidget * gtk_menu_tool_button_get_menu(aGtkMenuToolButton *);
extern (C) void gtk_menu_tool_button_set_menu(aGtkMenuToolButton *, aGtkWidget *);
extern (C) _GtkToolItem * gtk_menu_tool_button_new_from_stock(char *);
extern (C) _GtkToolItem * gtk_menu_tool_button_new(aGtkWidget *, char *);
extern (C) GType gtk_menu_tool_button_get_type();
extern (C) _GtkWidget * _gtk_tool_button_get_button(aGtkToolButton *);
extern (C) _GtkWidget * gtk_tool_button_get_label_widget(aGtkToolButton *);
extern (C) void gtk_tool_button_set_label_widget(aGtkToolButton *, aGtkWidget *);
extern (C) _GtkWidget * gtk_tool_button_get_icon_widget(aGtkToolButton *);
extern (C) void gtk_tool_button_set_icon_widget(aGtkToolButton *, aGtkWidget *);
extern (C) char * gtk_tool_button_get_icon_name(aGtkToolButton *);
extern (C) void gtk_tool_button_set_icon_name(aGtkToolButton *, char *);
extern (C) char * gtk_tool_button_get_stock_id(aGtkToolButton *);
extern (C) void gtk_tool_button_set_stock_id(aGtkToolButton *, char *);
extern (C) gint gtk_tool_button_get_use_underline(aGtkToolButton *);
extern (C) void gtk_tool_button_set_use_underline(aGtkToolButton *, gint);
extern (C) char * gtk_tool_button_get_label(aGtkToolButton *);
extern (C) void gtk_tool_button_set_label(aGtkToolButton *, char *);
extern (C) _GtkToolItem * gtk_tool_button_new_from_stock(char *);
extern (C) _GtkToolItem * gtk_tool_button_new(aGtkWidget *, char *);
extern (C) GType gtk_tool_button_get_type();
extern (C) void _gtk_tool_item_toolbar_reconfigured(aGtkToolItem *);
extern (C) void gtk_tool_item_rebuild_menu(aGtkToolItem *);
extern (C) void gtk_tool_item_set_proxy_menu_item(aGtkToolItem *, char *, aGtkWidget *);
extern (C) _GtkWidget * gtk_tool_item_get_proxy_menu_item(aGtkToolItem *, char *);
extern (C) _GtkWidget * gtk_tool_item_retrieve_proxy_menu_item(aGtkToolItem *);
extern (C) gint gtk_tool_item_get_relief_style(aGtkToolItem *);
extern (C) gint gtk_tool_item_get_toolbar_style(aGtkToolItem *);
extern (C) gint gtk_tool_item_get_orientation(aGtkToolItem *);
extern (C) gint gtk_tool_item_get_icon_size(aGtkToolItem *);
extern (C) void gtk_tool_item_set_is_important(aGtkToolItem *, gint);
extern (C) gint gtk_tool_item_get_is_important(aGtkToolItem *);
extern (C) gint gtk_tool_item_get_visible_vertical(aGtkToolItem *);
extern (C) void gtk_tool_item_set_visible_vertical(aGtkToolItem *, gint);
extern (C) gint gtk_tool_item_get_visible_horizontal(aGtkToolItem *);
extern (C) void gtk_tool_item_set_visible_horizontal(aGtkToolItem *, gint);
extern (C) gint gtk_tool_item_get_use_drag_window(aGtkToolItem *);
extern (C) void gtk_tool_item_set_use_drag_window(aGtkToolItem *, gint);
extern (C) void gtk_tool_item_set_tooltip_markup(aGtkToolItem *, char *);
extern (C) void gtk_tool_item_set_tooltip_text(aGtkToolItem *, char *);
extern (C) void gtk_tool_item_set_tooltip(aGtkToolItem *, aGtkTooltips *, char *, char *);
extern (C) gint gtk_tool_item_get_expand(aGtkToolItem *);
extern (C) void gtk_tool_item_set_expand(aGtkToolItem *, gint);
extern (C) gint gtk_tool_item_get_homogeneous(aGtkToolItem *);
extern (C) void gtk_tool_item_set_homogeneous(aGtkToolItem *, gint);
extern (C) _GtkToolItem * gtk_tool_item_new();
extern (C) GType gtk_tool_item_get_type();
extern (C) gint gtk_tooltips_get_info_from_tip_window(aGtkWindow *, _GtkTooltips * *, _GtkWidget * *);
extern (C) void gtk_tooltips_force_window(aGtkTooltips *);
extern (C) _GtkTooltipsData * gtk_tooltips_data_get(aGtkWidget *);
extern (C) void gtk_tooltips_set_tip(aGtkTooltips *, aGtkWidget *, char *, char *);
extern (C) void gtk_tooltips_set_delay(aGtkTooltips *, guint);
extern (C) void gtk_tooltips_disable(aGtkTooltips *);
extern (C) void gtk_tooltips_enable(aGtkTooltips *);
extern (C) _GtkTooltips * gtk_tooltips_new();
extern (C) guint gtk_tooltips_get_type();
extern (C) void _gtk_menu_bar_cycle_focus(aGtkMenuBar *, gint);
extern (C) void gtk_menu_bar_set_child_pack_direction(aGtkMenuBar *, gint);
extern (C) gint gtk_menu_bar_get_child_pack_direction(aGtkMenuBar *);
extern (C) void gtk_menu_bar_set_pack_direction(aGtkMenuBar *, gint);
extern (C) gint gtk_menu_bar_get_pack_direction(aGtkMenuBar *);
extern (C) _GtkWidget * gtk_menu_bar_new();
extern (C) GType gtk_menu_bar_get_type();
extern (C) char * _gtk_get_lc_ctype();
extern (C) gint _gtk_boolean_handled_accumulator(_GSignalInvocationHint *, _GValue *, _GValue *, void *);
extern (C) void gtk_propagate_event(aGtkWidget *, _GdkEvent *);
extern (C) _GtkWidget * gtk_get_event_widget(_GdkEvent *);
extern (C) gint gtk_get_current_event_state(gint *);
extern (C) guint32 gtk_get_current_event_time();
extern (C) _GdkEvent * gtk_get_current_event();
extern (C) void gtk_key_snooper_remove(guint);
extern (C) guint gtk_key_snooper_install(_BCD_func__10115, void *);
extern (C) void gtk_input_remove(guint);
extern (C) guint gtk_input_add_full(gint, gint, _BCD_func__13745, _BCD_func__13157, void *, _BCD_func__13158);
extern (C) void gtk_idle_remove_by_data(void *);
extern (C) void gtk_idle_remove(guint);
extern (C) guint gtk_idle_add_full(gint, _BCD_func__12884, _BCD_func__13157, void *, _BCD_func__13158);
extern (C) guint gtk_idle_add_priority(gint, _BCD_func__12884, void *);
extern (C) guint gtk_idle_add(_BCD_func__12884, void *);
extern (C) void gtk_timeout_remove(guint);
extern (C) guint gtk_timeout_add_full(guint, _BCD_func__12884, _BCD_func__13157, void *, _BCD_func__13158);
extern (C) guint gtk_timeout_add(guint, _BCD_func__12884, void *);
extern (C) void gtk_quit_remove_by_data(void *);
extern (C) void gtk_quit_remove(guint);
extern (C) guint gtk_quit_add_full(guint, _BCD_func__12884, _BCD_func__13157, void *, _BCD_func__13158);
extern (C) guint gtk_quit_add(guint, _BCD_func__12884, void *);
extern (C) void gtk_quit_add_destroy(guint, aGtkObject *);
extern (C) void gtk_init_add(_BCD_func__12884, void *);
extern (C) void gtk_grab_remove(aGtkWidget *);
extern (C) _GtkWidget * gtk_grab_get_current();
extern (C) void gtk_grab_add(aGtkWidget *);
extern (C) gint gtk_false();
extern (C) gint gtk_true();
extern (C) gint gtk_main_iteration_do(gint);
extern (C) gint gtk_main_iteration();
extern (C) void gtk_main_quit();
extern (C) guint gtk_main_level();
extern (C) void gtk_main();
extern (C) void gtk_main_do_event(_GdkEvent *);
extern (C) gint gtk_events_pending();
extern (C) void * gtk_get_default_language();
extern (C) char * gtk_set_locale();
extern (C) void gtk_disable_setlocale();
extern (C) void gtk_exit(gint);
extern (C) void * gtk_get_option_group(gint);
extern (C) gint gtk_init_with_args(gint *, char * * *, char *, _GOptionEntry *, char *, _GError * *);
extern (C) gint gtk_init_check(gint *, in char * * *);
extern (C) void gtk_init(gint *, char * * *);
extern (C) gint gtk_parse_args(gint *, char * * *);
extern (C) char * gtk_check_version(guint, guint, guint);
mixin(gshared!(
"extern (C) extern guint gtk_interface_age;
extern (C) extern guint gtk_binary_age;
extern (C) extern guint gtk_micro_version;
extern (C) extern guint gtk_minor_version;
extern (C) extern guint gtk_major_version;"
));
extern (C) void gtk_list_end_drag_selection(aGtkList *);
extern (C) void gtk_list_undo_selection(aGtkList *);
extern (C) void gtk_list_toggle_row(aGtkList *, aGtkWidget *);
extern (C) void gtk_list_toggle_focus_row(aGtkList *);
extern (C) void gtk_list_toggle_add_mode(aGtkList *);
extern (C) void gtk_list_scroll_vertical(aGtkList *, gint, float);
extern (C) void gtk_list_scroll_horizontal(aGtkList *, gint, float);
extern (C) void gtk_list_unselect_all(aGtkList *);
extern (C) void gtk_list_select_all(aGtkList *);
extern (C) void gtk_list_end_selection(aGtkList *);
extern (C) void gtk_list_start_selection(aGtkList *);
extern (C) void gtk_list_extend_selection(aGtkList *, gint, float, gint);
extern (C) void gtk_list_set_selection_mode(aGtkList *, gint);
extern (C) gint gtk_list_child_position(aGtkList *, aGtkWidget *);
extern (C) void gtk_list_unselect_child(aGtkList *, aGtkWidget *);
extern (C) void gtk_list_select_child(aGtkList *, aGtkWidget *);
extern (C) void gtk_list_unselect_item(aGtkList *, gint);
extern (C) void gtk_list_select_item(aGtkList *, gint);
extern (C) void gtk_list_clear_items(aGtkList *, gint, gint);
extern (C) void gtk_list_remove_items_no_unref(aGtkList *, _GList *);
extern (C) void gtk_list_remove_items(aGtkList *, _GList *);
extern (C) void gtk_list_prepend_items(aGtkList *, _GList *);
extern (C) void gtk_list_append_items(aGtkList *, _GList *);
extern (C) void gtk_list_insert_items(aGtkList *, _GList *, gint);
extern (C) _GtkWidget * gtk_list_new();
extern (C) guint gtk_list_get_type();
extern (C) void gtk_list_item_deselect(aGtkListItem *);
extern (C) void gtk_list_item_select(aGtkListItem *);
extern (C) _GtkWidget * gtk_list_item_new_with_label(char *);
extern (C) _GtkWidget * gtk_list_item_new();
extern (C) guint gtk_list_item_get_type();
extern (C) _BCD_func__10158 gtk_link_button_set_uri_hook(_BCD_func__10158, void *, _BCD_func__13158);
extern (C) void gtk_link_button_set_uri(aGtkLinkButton *, char *);
extern (C) char * gtk_link_button_get_uri(aGtkLinkButton *);
extern (C) _GtkWidget * gtk_link_button_new_with_label(char *, char *);
extern (C) _GtkWidget * gtk_link_button_new(char *);
extern (C) GType gtk_link_button_get_type();
extern (C) void gtk_layout_thaw(aGtkLayout *);
extern (C) void gtk_layout_freeze(aGtkLayout *);
extern (C) void gtk_layout_set_vadjustment(aGtkLayout *, aGtkAdjustment *);
extern (C) void gtk_layout_set_hadjustment(aGtkLayout *, aGtkAdjustment *);
extern (C) _GtkAdjustment * gtk_layout_get_vadjustment(aGtkLayout *);
extern (C) _GtkAdjustment * gtk_layout_get_hadjustment(aGtkLayout *);
extern (C) void gtk_layout_get_size(aGtkLayout *, guint *, guint *);
extern (C) void gtk_layout_set_size(aGtkLayout *, guint, guint);
extern (C) void gtk_layout_move(aGtkLayout *, aGtkWidget *, gint, gint);
extern (C) void gtk_layout_put(aGtkLayout *, aGtkWidget *, gint, gint);
extern (C) _GtkWidget * gtk_layout_new(aGtkAdjustment *, aGtkAdjustment *);
extern (C) GType gtk_layout_get_type();
extern (C) _GdkScreen * gtk_invisible_get_screen(aGtkInvisible *);
extern (C) void gtk_invisible_set_screen(aGtkInvisible *, _GdkScreen *);
extern (C) _GtkWidget * gtk_invisible_new_for_screen(_GdkScreen *);
extern (C) _GtkWidget * gtk_invisible_new();
extern (C) GType gtk_invisible_get_type();
extern (C) _GtkWidget * gtk_input_dialog_new();
extern (C) guint gtk_input_dialog_get_type();
extern (C) void gtk_im_multicontext_append_menuitems(aGtkIMMulticontext *, aGtkMenuShell *);
extern (C) _GtkIMContext * gtk_im_multicontext_new();
extern (C) GType gtk_im_multicontext_get_type();
extern (C) void gtk_im_context_simple_add_table(aGtkIMContextSimple *, ushort *, gint, gint);
extern (C) _GtkIMContext * gtk_im_context_simple_new();
extern (C) GType gtk_im_context_simple_get_type();
extern (C) _GtkWidget * gtk_image_menu_item_get_image(aGtkImageMenuItem *);
extern (C) void gtk_image_menu_item_set_image(aGtkImageMenuItem *, aGtkWidget *);
extern (C) _GtkWidget * gtk_image_menu_item_new_from_stock(char *, aGtkAccelGroup *);
extern (C) _GtkWidget * gtk_image_menu_item_new_with_mnemonic(char *);
extern (C) _GtkWidget * gtk_image_menu_item_new_with_label(char *);
extern (C) _GtkWidget * gtk_image_menu_item_new();
extern (C) GType gtk_image_menu_item_get_type();
extern (C) gint gtk_icon_view_get_tooltip_column(aGtkIconView *);
extern (C) void gtk_icon_view_set_tooltip_column(aGtkIconView *, gint);
extern (C) gint gtk_icon_view_get_tooltip_context(aGtkIconView *, gint *, gint *, gint, void * *, void * *, aGtkTreeIter *);
extern (C) void gtk_icon_view_set_tooltip_cell(aGtkIconView *, void *, void *, aGtkCellRenderer *);
extern (C) void gtk_icon_view_set_tooltip_item(aGtkIconView *, void *, void *);
extern (C) void gtk_icon_view_convert_widget_to_bin_window_coords(aGtkIconView *, gint, gint, gint *, gint *);
extern (C) _GdkDrawable * gtk_icon_view_create_drag_icon(aGtkIconView *, void *);
extern (C) gint gtk_icon_view_get_dest_item_at_pos(aGtkIconView *, gint, gint, void * *, gint *);
extern (C) void gtk_icon_view_get_drag_dest_item(aGtkIconView *, void * *, gint *);
extern (C) void gtk_icon_view_set_drag_dest_item(aGtkIconView *, void *, gint);
extern (C) gint gtk_icon_view_get_reorderable(aGtkIconView *);
extern (C) void gtk_icon_view_set_reorderable(aGtkIconView *, gint);
extern (C) void gtk_icon_view_unset_model_drag_dest(aGtkIconView *);
extern (C) void gtk_icon_view_unset_model_drag_source(aGtkIconView *);
extern (C) void gtk_icon_view_enable_model_drag_dest(aGtkIconView *, aGtkTargetEntry *, gint, gint);
extern (C) void gtk_icon_view_enable_model_drag_source(aGtkIconView *, gint, aGtkTargetEntry *, gint, gint);
extern (C) void gtk_icon_view_scroll_to_path(aGtkIconView *, void *, gint, float, float);
extern (C) gint gtk_icon_view_get_cursor(aGtkIconView *, void * *, _GtkCellRenderer * *);
extern (C) void gtk_icon_view_set_cursor(aGtkIconView *, void *, aGtkCellRenderer *, gint);
extern (C) void gtk_icon_view_item_activated(aGtkIconView *, void *);
extern (C) void gtk_icon_view_unselect_all(aGtkIconView *);
extern (C) void gtk_icon_view_select_all(aGtkIconView *);
extern (C) _GList * gtk_icon_view_get_selected_items(aGtkIconView *);
extern (C) gint gtk_icon_view_path_is_selected(aGtkIconView *, void *);
extern (C) void gtk_icon_view_unselect_path(aGtkIconView *, void *);
extern (C) void gtk_icon_view_select_path(aGtkIconView *, void *);
extern (C) gint gtk_icon_view_get_selection_mode(aGtkIconView *);
extern (C) void gtk_icon_view_set_selection_mode(aGtkIconView *, gint);
extern (C) void gtk_icon_view_selected_foreach(aGtkIconView *, _BCD_func__10270, void *);
extern (C) gint gtk_icon_view_get_visible_range(aGtkIconView *, void * *, void * *);
extern (C) gint gtk_icon_view_get_item_at_pos(aGtkIconView *, gint, gint, void * *, _GtkCellRenderer * *);
extern (C) void * gtk_icon_view_get_path_at_pos(aGtkIconView *, gint, gint);
extern (C) gint gtk_icon_view_get_margin(aGtkIconView *);
extern (C) void gtk_icon_view_set_margin(aGtkIconView *, gint);
extern (C) gint gtk_icon_view_get_column_spacing(aGtkIconView *);
extern (C) void gtk_icon_view_set_column_spacing(aGtkIconView *, gint);
extern (C) gint gtk_icon_view_get_row_spacing(aGtkIconView *);
extern (C) void gtk_icon_view_set_row_spacing(aGtkIconView *, gint);
extern (C) gint gtk_icon_view_get_spacing(aGtkIconView *);
extern (C) void gtk_icon_view_set_spacing(aGtkIconView *, gint);
extern (C) gint gtk_icon_view_get_item_width(aGtkIconView *);
extern (C) void gtk_icon_view_set_item_width(aGtkIconView *, gint);
extern (C) gint gtk_icon_view_get_columns(aGtkIconView *);
extern (C) void gtk_icon_view_set_columns(aGtkIconView *, gint);
extern (C) gint gtk_icon_view_get_orientation(aGtkIconView *);
extern (C) void gtk_icon_view_set_orientation(aGtkIconView *, gint);
extern (C) gint gtk_icon_view_get_pixbuf_column(aGtkIconView *);
extern (C) void gtk_icon_view_set_pixbuf_column(aGtkIconView *, gint);
extern (C) gint gtk_icon_view_get_markup_column(aGtkIconView *);
extern (C) void gtk_icon_view_set_markup_column(aGtkIconView *, gint);
extern (C) gint gtk_icon_view_get_text_column(aGtkIconView *);
extern (C) void gtk_icon_view_set_text_column(aGtkIconView *, gint);
extern (C) void * gtk_icon_view_get_model(aGtkIconView *);
extern (C) void gtk_icon_view_set_model(aGtkIconView *, void *);
extern (C) _GtkWidget * gtk_icon_view_new_with_model(void *);
extern (C) _GtkWidget * gtk_icon_view_new();
extern (C) GType gtk_icon_view_get_type();
extern (C) void _gtk_tooltip_hide(aGtkWidget *);
extern (C) void _gtk_tooltip_handle_event(_GdkEvent *);
extern (C) void _gtk_tooltip_toggle_keyboard_mode(aGtkWidget *);
extern (C) void _gtk_tooltip_focus_out(aGtkWidget *);
extern (C) void _gtk_tooltip_focus_in(aGtkWidget *);
extern (C) void gtk_tooltip_trigger_tooltip_query(_GdkDisplay *);
extern (C) void gtk_tooltip_set_tip_area(void *, _GdkRectangle *);
extern (C) void gtk_tooltip_set_custom(void *, aGtkWidget *);
extern (C) void gtk_tooltip_set_icon_from_stock(void *, char *, gint);
extern (C) void gtk_tooltip_set_icon(void *, void *);
extern (C) void gtk_tooltip_set_text(void *, char *);
extern (C) void gtk_tooltip_set_markup(void *, char *);
extern (C) GType gtk_tooltip_get_type();
extern (C) void _gtk_icon_theme_ensure_builtin_cache();
extern (C) void _gtk_icon_theme_check_reload(_GdkDisplay *);
extern (C) char * gtk_icon_info_get_display_name(void *);
extern (C) gint gtk_icon_info_get_attach_points(void *, _GdkPoint * *, gint *);
extern (C) gint gtk_icon_info_get_embedded_rect(void *, _GdkRectangle *);
extern (C) void gtk_icon_info_set_raw_coordinates(void *, gint);
extern (C) void * gtk_icon_info_load_icon(void *, _GError * *);
extern (C) void * gtk_icon_info_get_builtin_pixbuf(void *);
extern (C) char * gtk_icon_info_get_filename(void *);
extern (C) gint gtk_icon_info_get_base_size(void *);
extern (C) void gtk_icon_info_free(void *);
extern (C) void * gtk_icon_info_copy(void *);
extern (C) GType gtk_icon_info_get_type();
extern (C) void gtk_icon_theme_add_builtin_icon(char *, gint, void *);
extern (C) gint gtk_icon_theme_rescan_if_needed(aGtkIconTheme *);
extern (C) char * gtk_icon_theme_get_example_icon_name(aGtkIconTheme *);
extern (C) _GList * gtk_icon_theme_list_contexts(aGtkIconTheme *);
extern (C) _GList * gtk_icon_theme_list_icons(aGtkIconTheme *, char *);
extern (C) void * gtk_icon_theme_load_icon(aGtkIconTheme *, char *, gint, gint, _GError * *);
extern (C) void * gtk_icon_theme_choose_icon(aGtkIconTheme *, char * *, gint, gint);
extern (C) void * gtk_icon_theme_lookup_icon(aGtkIconTheme *, char *, gint, gint);
extern (C) gint * gtk_icon_theme_get_icon_sizes(aGtkIconTheme *, char *);
extern (C) gint gtk_icon_theme_has_icon(aGtkIconTheme *, char *);
extern (C) void gtk_icon_theme_set_custom_theme(aGtkIconTheme *, char *);
extern (C) void gtk_icon_theme_prepend_search_path(aGtkIconTheme *, char *);
extern (C) void gtk_icon_theme_append_search_path(aGtkIconTheme *, char *);
extern (C) void gtk_icon_theme_get_search_path(aGtkIconTheme *, char * * *, gint *);
extern (C) void gtk_icon_theme_set_search_path(aGtkIconTheme *, char * *, gint);
extern (C) void gtk_icon_theme_set_screen(aGtkIconTheme *, _GdkScreen *);
extern (C) _GtkIconTheme * gtk_icon_theme_get_for_screen(_GdkScreen *);
extern (C) _GtkIconTheme * gtk_icon_theme_get_default();
extern (C) _GtkIconTheme * gtk_icon_theme_new();
extern (C) GType gtk_icon_theme_get_type();
extern (C) GQuark gtk_icon_theme_error_quark();
extern (C) void _gtk_icon_factory_ensure_default_icons();
extern (C) _GList * _gtk_icon_factory_list_ids();
extern (C) void _gtk_icon_set_invalidate_caches();
extern (C) gint gtk_icon_source_get_size(void *);
extern (C) gint gtk_icon_source_get_state(void *);
extern (C) gint gtk_icon_source_get_direction(void *);
extern (C) void gtk_icon_source_set_size(void *, gint);
extern (C) void gtk_icon_source_set_state(void *, gint);
extern (C) void gtk_icon_source_set_direction(void *, gint);
extern (C) gint gtk_icon_source_get_direction_wildcarded(void *);
extern (C) gint gtk_icon_source_get_state_wildcarded(void *);
extern (C) gint gtk_icon_source_get_size_wildcarded(void *);
extern (C) void gtk_icon_source_set_size_wildcarded(void *, gint);
extern (C) void gtk_icon_source_set_state_wildcarded(void *, gint);
extern (C) void gtk_icon_source_set_direction_wildcarded(void *, gint);
extern (C) void * gtk_icon_source_get_pixbuf(void *);
extern (C) char * gtk_icon_source_get_icon_name(void *);
extern (C) char * gtk_icon_source_get_filename(void *);
extern (C) void gtk_icon_source_set_pixbuf(void *, void *);
extern (C) void gtk_icon_source_set_icon_name(void *, char *);
extern (C) void gtk_icon_source_set_filename(void *, char *);
extern (C) void gtk_icon_source_free(void *);
extern (C) void * gtk_icon_source_copy(void *);
extern (C) void * gtk_icon_source_new();
extern (C) GType gtk_icon_source_get_type();
extern (C) void gtk_icon_set_get_sizes(void *, gint * *, gint *);
extern (C) void gtk_icon_set_add_source(void *, void *);
extern (C) void * gtk_icon_set_render_icon(void *, aGtkStyle *, gint, gint, gint, aGtkWidget *, char *);
extern (C) void * gtk_icon_set_copy(void *);
extern (C) void gtk_icon_set_unref(void *);
extern (C) void * gtk_icon_set_ref(void *);
extern (C) void * gtk_icon_set_new_from_pixbuf(void *);
extern (C) void * gtk_icon_set_new();
extern (C) GType gtk_icon_set_get_type();
extern (C) char * gtk_icon_size_get_name(gint);
extern (C) gint gtk_icon_size_from_name(char *);
extern (C) void gtk_icon_size_register_alias(char *, gint);
extern (C) gint gtk_icon_size_register(char *, gint, gint);
extern (C) gint gtk_icon_size_lookup_for_settings(aGtkSettings *, gint, gint *, gint *);
extern (C) gint gtk_icon_size_lookup(gint, gint *, gint *);
extern (C) void * gtk_icon_factory_lookup_default(in char *);
extern (C) void gtk_icon_factory_remove_default(aGtkIconFactory *);
extern (C) void gtk_icon_factory_add_default(aGtkIconFactory *);
extern (C) void * gtk_icon_factory_lookup(aGtkIconFactory *, in char *);
extern (C) void gtk_icon_factory_add(aGtkIconFactory *, char *, void *);
extern (C) _GtkIconFactory * gtk_icon_factory_new();
extern (C) GType gtk_icon_factory_get_type();
extern (C) _GtkWidget * gtk_hseparator_new();
extern (C) GType gtk_hseparator_get_type();
extern (C) GType gtk_separator_get_type();
extern (C) _GtkWidget * gtk_hscale_new_with_range(double, double, double);
extern (C) _GtkWidget * gtk_hscale_new(aGtkAdjustment *);
extern (C) GType gtk_hscale_get_type();
extern (C) char * _gtk_scale_format_value(aGtkScale *, double);
extern (C) void _gtk_scale_get_value_size(aGtkScale *, gint *, gint *);
extern (C) void _gtk_scale_clear_layout(aGtkScale *);
extern (C) void gtk_scale_get_layout_offsets(aGtkScale *, gint *, gint *);
extern (C) void * gtk_scale_get_layout(aGtkScale *);
extern (C) gint gtk_scale_get_value_pos(aGtkScale *);
extern (C) void gtk_scale_set_value_pos(aGtkScale *, gint);
extern (C) gint gtk_scale_get_draw_value(aGtkScale *);
extern (C) void gtk_scale_set_draw_value(aGtkScale *, gint);
extern (C) gint gtk_scale_get_digits(aGtkScale *);
extern (C) void gtk_scale_set_digits(aGtkScale *, gint);
extern (C) GType gtk_scale_get_type();
extern (C) _GtkWidget * gtk_hruler_new();
extern (C) guint gtk_hruler_get_type();
extern (C) void gtk_ruler_get_range(aGtkRuler *, double *, double *, double *, double *);
extern (C) gint gtk_ruler_get_metric(aGtkRuler *);
extern (C) void gtk_ruler_draw_pos(aGtkRuler *);
extern (C) void gtk_ruler_draw_ticks(aGtkRuler *);
extern (C) void gtk_ruler_set_range(aGtkRuler *, double, double, double, double);
extern (C) void gtk_ruler_set_metric(aGtkRuler *, gint);
extern (C) guint gtk_ruler_get_type();
extern (C) _GtkWidget * gtk_hpaned_new();
extern (C) GType gtk_hpaned_get_type();
extern (C) void gtk_paned_compute_position(aGtkPaned *, gint, gint, gint);
extern (C) _GtkWidget * gtk_paned_get_child2(aGtkPaned *);
extern (C) _GtkWidget * gtk_paned_get_child1(aGtkPaned *);
extern (C) void gtk_paned_set_position(aGtkPaned *, gint);
extern (C) gint gtk_paned_get_position(aGtkPaned *);
extern (C) void gtk_paned_pack2(aGtkPaned *, aGtkWidget *, gint, gint);
extern (C) void gtk_paned_pack1(aGtkPaned *, aGtkWidget *, gint, gint);
extern (C) void gtk_paned_add2(aGtkPaned *, aGtkWidget *);
extern (C) void gtk_paned_add1(aGtkPaned *, aGtkWidget *);
extern (C) GType gtk_paned_get_type();
extern (C) void gtk_hbutton_box_set_layout_default(gint);
extern (C) void gtk_hbutton_box_set_spacing_default(gint);
extern (C) gint gtk_hbutton_box_get_layout_default();
extern (C) gint gtk_hbutton_box_get_spacing_default();
extern (C) _GtkWidget * gtk_hbutton_box_new();
extern (C) GType gtk_hbutton_box_get_type();
extern (C) gint gtk_handle_box_get_snap_edge(aGtkHandleBox *);
extern (C) void gtk_handle_box_set_snap_edge(aGtkHandleBox *, gint);
extern (C) gint gtk_handle_box_get_handle_position(aGtkHandleBox *);
extern (C) void gtk_handle_box_set_handle_position(aGtkHandleBox *, gint);
extern (C) gint gtk_handle_box_get_shadow_type(aGtkHandleBox *);
extern (C) void gtk_handle_box_set_shadow_type(aGtkHandleBox *, gint);
extern (C) _GtkWidget * gtk_handle_box_new();
extern (C) GType gtk_handle_box_get_type();
extern (C) void gtk_gc_release(_GdkGC *);
extern (C) _GdkGC * gtk_gc_get(gint, _GdkColormap *, _GdkGCValues *, gint);
extern (C) _GtkWidget * gtk_gamma_curve_new();
extern (C) guint gtk_gamma_curve_get_type();
extern (C) void gtk_font_selection_dialog_set_preview_text(aGtkFontSelectionDialog *, char *);
extern (C) char * gtk_font_selection_dialog_get_preview_text(aGtkFontSelectionDialog *);
extern (C) gint gtk_font_selection_dialog_set_font_name(aGtkFontSelectionDialog *, char *);
extern (C) _GdkFont * gtk_font_selection_dialog_get_font(aGtkFontSelectionDialog *);
extern (C) char * gtk_font_selection_dialog_get_font_name(aGtkFontSelectionDialog *);
extern (C) _GtkWidget * gtk_font_selection_dialog_new(char *);
extern (C) GType gtk_font_selection_dialog_get_type();
extern (C) void gtk_font_selection_set_preview_text(aGtkFontSelection *, char *);
extern (C) char * gtk_font_selection_get_preview_text(aGtkFontSelection *);
extern (C) gint gtk_font_selection_set_font_name(aGtkFontSelection *, char *);
extern (C) _GdkFont * gtk_font_selection_get_font(aGtkFontSelection *);
extern (C) char * gtk_font_selection_get_font_name(aGtkFontSelection *);
extern (C) _GtkWidget * gtk_font_selection_new();
extern (C) GType gtk_font_selection_get_type();
extern (C) void gtk_font_button_set_show_size(aGtkFontButton *, gint);
extern (C) gint gtk_font_button_get_show_size(aGtkFontButton *);
extern (C) void gtk_font_button_set_show_style(aGtkFontButton *, gint);
extern (C) gint gtk_font_button_get_show_style(aGtkFontButton *);
extern (C) gint gtk_font_button_set_font_name(aGtkFontButton *, char *);
extern (C) char * gtk_font_button_get_font_name(aGtkFontButton *);
extern (C) void gtk_font_button_set_use_size(aGtkFontButton *, gint);
extern (C) gint gtk_font_button_get_use_size(aGtkFontButton *);
extern (C) void gtk_font_button_set_use_font(aGtkFontButton *, gint);
extern (C) gint gtk_font_button_get_use_font(aGtkFontButton *);
extern (C) void gtk_font_button_set_title(aGtkFontButton *, char *);
extern (C) char * gtk_font_button_get_title(aGtkFontButton *);
extern (C) _GtkWidget * gtk_font_button_new_with_font(char *);
extern (C) _GtkWidget * gtk_font_button_new();
extern (C) GType gtk_font_button_get_type();
extern (C) _GtkWidget * gtk_file_chooser_widget_new_with_backend(gint, char *);
extern (C) _GtkWidget * gtk_file_chooser_widget_new(gint);
extern (C) GType gtk_file_chooser_widget_get_type();
extern (C) _GtkWidget * gtk_file_chooser_dialog_new_with_backend(char *, aGtkWindow *, gint, char *, char *, ...);
extern (C) _GtkWidget * gtk_file_chooser_dialog_new(in char *, aGtkWindow *, gint, in char *, ...);
extern (C) GType gtk_file_chooser_dialog_get_type();
extern (C) void gtk_file_chooser_button_set_focus_on_click(aGtkFileChooserButton *, gint);
extern (C) gint gtk_file_chooser_button_get_focus_on_click(aGtkFileChooserButton *);
extern (C) void gtk_file_chooser_button_set_width_chars(aGtkFileChooserButton *, gint);
extern (C) gint gtk_file_chooser_button_get_width_chars(aGtkFileChooserButton *);
extern (C) void gtk_file_chooser_button_set_title(aGtkFileChooserButton *, char *);
extern (C) char * gtk_file_chooser_button_get_title(aGtkFileChooserButton *);
extern (C) _GtkWidget * gtk_file_chooser_button_new_with_dialog(aGtkWidget *);
extern (C) _GtkWidget * gtk_file_chooser_button_new_with_backend(char *, gint, char *);
extern (C) _GtkWidget * gtk_file_chooser_button_new(char *, gint);
extern (C) GType gtk_file_chooser_button_get_type();
extern (C) _GSList * gtk_file_chooser_list_shortcut_folder_uris(void *);
extern (C) gint gtk_file_chooser_remove_shortcut_folder_uri(void *, char *, _GError * *);
extern (C) gint gtk_file_chooser_add_shortcut_folder_uri(void *, char *, _GError * *);
extern (C) _GSList * gtk_file_chooser_list_shortcut_folders(void *);
extern (C) gint gtk_file_chooser_remove_shortcut_folder(void *, char *, _GError * *);
extern (C) gint gtk_file_chooser_add_shortcut_folder(void *, char *, _GError * *);
extern (C) void * gtk_file_chooser_get_filter(void *);
extern (C) void gtk_file_chooser_set_filter(void *, void *);
extern (C) _GSList * gtk_file_chooser_list_filters(void *);
extern (C) void gtk_file_chooser_remove_filter(void *, void *);
extern (C) void gtk_file_chooser_add_filter(void *, void *);
extern (C) _GtkWidget * gtk_file_chooser_get_extra_widget(void *);
extern (C) void gtk_file_chooser_set_extra_widget(void *, aGtkWidget *);
extern (C) char * gtk_file_chooser_get_preview_uri(void *);
extern (C) char * gtk_file_chooser_get_preview_filename(void *);
extern (C) gint gtk_file_chooser_get_use_preview_label(void *);
extern (C) void gtk_file_chooser_set_use_preview_label(void *, gint);
extern (C) gint gtk_file_chooser_get_preview_widget_active(void *);
extern (C) void gtk_file_chooser_set_preview_widget_active(void *, gint);
extern (C) _GtkWidget * gtk_file_chooser_get_preview_widget(void *);
extern (C) void gtk_file_chooser_set_preview_widget(void *, aGtkWidget *);
extern (C) char * gtk_file_chooser_get_current_folder_uri(void *);
extern (C) gint gtk_file_chooser_set_current_folder_uri(void *, char *);
extern (C) _GSList * gtk_file_chooser_get_uris(void *);
extern (C) void gtk_file_chooser_unselect_uri(void *, char *);
extern (C) gint gtk_file_chooser_select_uri(void *, char *);
extern (C) gint gtk_file_chooser_set_uri(void *, char *);
extern (C) char * gtk_file_chooser_get_uri(void *);
extern (C) char * gtk_file_chooser_get_current_folder(void *);
extern (C) gint gtk_file_chooser_set_current_folder(void *, char *);
extern (C) _GSList * gtk_file_chooser_get_filenames(void *);
extern (C) void gtk_file_chooser_unselect_all(void *);
extern (C) void gtk_file_chooser_select_all(void *);
extern (C) void gtk_file_chooser_unselect_filename(void *, char *);
extern (C) gint gtk_file_chooser_select_filename(void *, char *);
extern (C) gint gtk_file_chooser_set_filename(void *, char *);
extern (C) char * gtk_file_chooser_get_filename(void *);
extern (C) void gtk_file_chooser_set_current_name(void *, char *);
extern (C) gint gtk_file_chooser_get_do_overwrite_confirmation(void *);
extern (C) void gtk_file_chooser_set_do_overwrite_confirmation(void *, gint);
extern (C) gint gtk_file_chooser_get_show_hidden(void *);
extern (C) void gtk_file_chooser_set_show_hidden(void *, gint);
extern (C) gint gtk_file_chooser_get_select_multiple(void *);
extern (C) void gtk_file_chooser_set_select_multiple(void *, gint);
extern (C) gint gtk_file_chooser_get_local_only(void *);
extern (C) void gtk_file_chooser_set_local_only(void *, gint);
extern (C) gint gtk_file_chooser_get_action(void *);
extern (C) void gtk_file_chooser_set_action(void *, gint);
extern (C) GQuark gtk_file_chooser_error_quark();
extern (C) GType gtk_file_chooser_get_type();
extern (C) gint gtk_file_filter_filter(void *, aGtkFileFilterInfo *);
extern (C) gint gtk_file_filter_get_needed(void *);
extern (C) void gtk_file_filter_add_custom(void *, gint, _BCD_func__10568, void *, _BCD_func__13158);
extern (C) void gtk_file_filter_add_pixbuf_formats(void *);
extern (C) void gtk_file_filter_add_pattern(void *, char *);
extern (C) void gtk_file_filter_add_mime_type(void *, char *);
extern (C) char * gtk_file_filter_get_name(void *);
extern (C) void gtk_file_filter_set_name(void *, char *);
extern (C) void * gtk_file_filter_new();
extern (C) GType gtk_file_filter_get_type();
extern (C) gint gtk_fixed_get_has_window(aGtkFixed *);
extern (C) void gtk_fixed_set_has_window(aGtkFixed *, gint);
extern (C) void gtk_fixed_move(aGtkFixed *, aGtkWidget *, gint, gint);
extern (C) void gtk_fixed_put(aGtkFixed *, aGtkWidget *, gint, gint);
extern (C) _GtkWidget * gtk_fixed_new();
extern (C) GType gtk_fixed_get_type();
extern (C) gint gtk_file_selection_get_select_multiple(aGtkFileSelection *);
extern (C) void gtk_file_selection_set_select_multiple(aGtkFileSelection *, gint);
extern (C) char * * gtk_file_selection_get_selections(aGtkFileSelection *);
extern (C) void gtk_file_selection_hide_fileop_buttons(aGtkFileSelection *);
extern (C) void gtk_file_selection_show_fileop_buttons(aGtkFileSelection *);
extern (C) void gtk_file_selection_complete(aGtkFileSelection *, char *);
extern (C) char * gtk_file_selection_get_filename(aGtkFileSelection *);
extern (C) void gtk_file_selection_set_filename(aGtkFileSelection *, char *);
extern (C) _GtkWidget * gtk_file_selection_new(char *);
extern (C) guint gtk_file_selection_get_type();
extern (C) _GtkWidget * gtk_expander_get_label_widget(aGtkExpander *);
extern (C) void gtk_expander_set_label_widget(aGtkExpander *, aGtkWidget *);
extern (C) gint gtk_expander_get_use_markup(aGtkExpander *);
extern (C) void gtk_expander_set_use_markup(aGtkExpander *, gint);
extern (C) gint gtk_expander_get_use_underline(aGtkExpander *);
extern (C) void gtk_expander_set_use_underline(aGtkExpander *, gint);
extern (C) char * gtk_expander_get_label(aGtkExpander *);
extern (C) void gtk_expander_set_label(aGtkExpander *, char *);
extern (C) gint gtk_expander_get_spacing(aGtkExpander *);
extern (C) void gtk_expander_set_spacing(aGtkExpander *, gint);
extern (C) gint gtk_expander_get_expanded(aGtkExpander *);
extern (C) void gtk_expander_set_expanded(aGtkExpander *, gint);
extern (C) _GtkWidget * gtk_expander_new_with_mnemonic(char *);
extern (C) _GtkWidget * gtk_expander_new(char *);
extern (C) GType gtk_expander_get_type();
extern (C) void gtk_event_box_set_above_child(aGtkEventBox *, gint);
extern (C) gint gtk_event_box_get_above_child(aGtkEventBox *);
extern (C) void gtk_event_box_set_visible_window(aGtkEventBox *, gint);
extern (C) gint gtk_event_box_get_visible_window(aGtkEventBox *);
extern (C) _GtkWidget * gtk_event_box_new();
extern (C) GType gtk_event_box_get_type();
extern (C) void gtk_curve_set_curve_type(aGtkCurve *, gint);
extern (C) void gtk_curve_set_vector(aGtkCurve *, gint, float *);
extern (C) void gtk_curve_get_vector(aGtkCurve *, gint, float *);
extern (C) void gtk_curve_set_range(aGtkCurve *, float, float, float, float);
extern (C) void gtk_curve_set_gamma(aGtkCurve *, float);
extern (C) void gtk_curve_reset(aGtkCurve *);
extern (C) _GtkWidget * gtk_curve_new();
extern (C) guint gtk_curve_get_type();
extern (C) void gtk_drawing_area_size(aGtkDrawingArea *, gint, gint);
extern (C) _GtkWidget * gtk_drawing_area_new();
extern (C) GType gtk_drawing_area_get_type();
extern (C) guint gtk_ctree_node_get_type();
extern (C) void gtk_ctree_sort_recursive(aGtkCTree *, aGtkCTreeNode *);
extern (C) void gtk_ctree_sort_node(aGtkCTree *, aGtkCTreeNode *);
extern (C) void gtk_ctree_set_drag_compare_func(aGtkCTree *, _BCD_func__10682);
extern (C) void gtk_ctree_set_expander_style(aGtkCTree *, gint);
extern (C) void gtk_ctree_set_line_style(aGtkCTree *, gint);
extern (C) void gtk_ctree_set_show_stub(aGtkCTree *, gint);
extern (C) void gtk_ctree_set_spacing(aGtkCTree *, gint);
extern (C) void gtk_ctree_set_indent(aGtkCTree *, gint);
extern (C) gint gtk_ctree_node_is_visible(aGtkCTree *, aGtkCTreeNode *);
extern (C) void gtk_ctree_node_moveto(aGtkCTree *, aGtkCTreeNode *, gint, float, float);
extern (C) void * gtk_ctree_node_get_row_data(aGtkCTree *, aGtkCTreeNode *);
extern (C) void gtk_ctree_node_set_row_data_full(aGtkCTree *, aGtkCTreeNode *, void *, _BCD_func__13158);
extern (C) void gtk_ctree_node_set_row_data(aGtkCTree *, aGtkCTreeNode *, void *);
extern (C) void gtk_ctree_node_set_background(aGtkCTree *, aGtkCTreeNode *, _GdkColor *);
extern (C) void gtk_ctree_node_set_foreground(aGtkCTree *, aGtkCTreeNode *, _GdkColor *);
extern (C) _GtkStyle * gtk_ctree_node_get_cell_style(aGtkCTree *, aGtkCTreeNode *, gint);
extern (C) void gtk_ctree_node_set_cell_style(aGtkCTree *, aGtkCTreeNode *, gint, aGtkStyle *);
extern (C) _GtkStyle * gtk_ctree_node_get_row_style(aGtkCTree *, aGtkCTreeNode *);
extern (C) void gtk_ctree_node_set_row_style(aGtkCTree *, aGtkCTreeNode *, aGtkStyle *);
extern (C) gint gtk_ctree_get_node_info(aGtkCTree *, aGtkCTreeNode *, char * *, char *, _GdkDrawable * *, _GdkDrawable * *, _GdkDrawable * *, _GdkDrawable * *, gint *, gint *);
extern (C) gint gtk_ctree_node_get_pixtext(aGtkCTree *, aGtkCTreeNode *, gint, char * *, char *, _GdkDrawable * *, _GdkDrawable * *);
extern (C) gint gtk_ctree_node_get_pixmap(aGtkCTree *, aGtkCTreeNode *, gint, _GdkDrawable * *, _GdkDrawable * *);
extern (C) gint gtk_ctree_node_get_text(aGtkCTree *, aGtkCTreeNode *, gint, char * *);
extern (C) gint gtk_ctree_node_get_cell_type(aGtkCTree *, aGtkCTreeNode *, gint);
extern (C) gint gtk_ctree_node_get_selectable(aGtkCTree *, aGtkCTreeNode *);
extern (C) void gtk_ctree_node_set_selectable(aGtkCTree *, aGtkCTreeNode *, gint);
extern (C) void gtk_ctree_node_set_shift(aGtkCTree *, aGtkCTreeNode *, gint, gint, gint);
extern (C) void gtk_ctree_set_node_info(aGtkCTree *, aGtkCTreeNode *, char *, char, _GdkDrawable *, _GdkDrawable *, _GdkDrawable *, _GdkDrawable *, gint, gint);
extern (C) void gtk_ctree_node_set_pixtext(aGtkCTree *, aGtkCTreeNode *, gint, char *, char, _GdkDrawable *, _GdkDrawable *);
extern (C) void gtk_ctree_node_set_pixmap(aGtkCTree *, aGtkCTreeNode *, gint, _GdkDrawable *, _GdkDrawable *);
extern (C) void gtk_ctree_node_set_text(aGtkCTree *, aGtkCTreeNode *, gint, char *);
extern (C) void gtk_ctree_real_select_recursive(aGtkCTree *, aGtkCTreeNode *, gint);
extern (C) void gtk_ctree_unselect_recursive(aGtkCTree *, aGtkCTreeNode *);
extern (C) void gtk_ctree_unselect(aGtkCTree *, aGtkCTreeNode *);
extern (C) void gtk_ctree_select_recursive(aGtkCTree *, aGtkCTreeNode *);
extern (C) void gtk_ctree_select(aGtkCTree *, aGtkCTreeNode *);
extern (C) void gtk_ctree_toggle_expansion_recursive(aGtkCTree *, aGtkCTreeNode *);
extern (C) void gtk_ctree_toggle_expansion(aGtkCTree *, aGtkCTreeNode *);
extern (C) void gtk_ctree_collapse_to_depth(aGtkCTree *, aGtkCTreeNode *, gint);
extern (C) void gtk_ctree_collapse_recursive(aGtkCTree *, aGtkCTreeNode *);
extern (C) void gtk_ctree_collapse(aGtkCTree *, aGtkCTreeNode *);
extern (C) void gtk_ctree_expand_to_depth(aGtkCTree *, aGtkCTreeNode *, gint);
extern (C) void gtk_ctree_expand_recursive(aGtkCTree *, aGtkCTreeNode *);
extern (C) void gtk_ctree_expand(aGtkCTree *, aGtkCTreeNode *);
extern (C) void gtk_ctree_move(aGtkCTree *, aGtkCTreeNode *, aGtkCTreeNode *, aGtkCTreeNode *);
extern (C) gint gtk_ctree_is_hot_spot(aGtkCTree *, gint, gint);
extern (C) _GList * gtk_ctree_find_all_by_row_data_custom(aGtkCTree *, aGtkCTreeNode *, void *, _BCD_func__14970);
extern (C) _GtkCTreeNode * gtk_ctree_find_by_row_data_custom(aGtkCTree *, aGtkCTreeNode *, void *, _BCD_func__14970);
extern (C) _GList * gtk_ctree_find_all_by_row_data(aGtkCTree *, aGtkCTreeNode *, void *);
extern (C) _GtkCTreeNode * gtk_ctree_find_by_row_data(aGtkCTree *, aGtkCTreeNode *, void *);
extern (C) gint gtk_ctree_is_ancestor(aGtkCTree *, aGtkCTreeNode *, aGtkCTreeNode *);
extern (C) gint gtk_ctree_find(aGtkCTree *, aGtkCTreeNode *, aGtkCTreeNode *);
extern (C) _GtkCTreeNode * gtk_ctree_node_nth(aGtkCTree *, guint);
extern (C) _GtkCTreeNode * gtk_ctree_find_node_ptr(aGtkCTree *, aGtkCTreeRow *);
extern (C) _GtkCTreeNode * gtk_ctree_last(aGtkCTree *, aGtkCTreeNode *);
extern (C) gint gtk_ctree_is_viewable(aGtkCTree *, aGtkCTreeNode *);
extern (C) void gtk_ctree_pre_recursive_to_depth(aGtkCTree *, aGtkCTreeNode *, gint, _BCD_func__10684, void *);
extern (C) void gtk_ctree_pre_recursive(aGtkCTree *, aGtkCTreeNode *, _BCD_func__10684, void *);
extern (C) void gtk_ctree_post_recursive_to_depth(aGtkCTree *, aGtkCTreeNode *, gint, _BCD_func__10684, void *);
extern (C) void gtk_ctree_post_recursive(aGtkCTree *, aGtkCTreeNode *, _BCD_func__10684, void *);
extern (C) _GNode * gtk_ctree_export_to_gnode(aGtkCTree *, _GNode *, _GNode *, aGtkCTreeNode *, _BCD_func__10683, void *);
extern (C) _GtkCTreeNode * gtk_ctree_insert_gnode(aGtkCTree *, aGtkCTreeNode *, aGtkCTreeNode *, _GNode *, _BCD_func__10683, void *);
extern (C) void gtk_ctree_remove_node(aGtkCTree *, aGtkCTreeNode *);
extern (C) _GtkCTreeNode * gtk_ctree_insert_node(aGtkCTree *, aGtkCTreeNode *, aGtkCTreeNode *, char * *, char, _GdkDrawable *, _GdkDrawable *, _GdkDrawable *, _GdkDrawable *, gint, gint);
extern (C) _GtkWidget * gtk_ctree_new(gint, gint);
extern (C) _GtkWidget * gtk_ctree_new_with_titles(gint, gint, char * *);
extern (C) guint gtk_ctree_get_type();
extern (C) _GtkWidget * gtk_combo_box_entry_new_text();
extern (C) gint gtk_combo_box_entry_get_text_column(aGtkComboBoxEntry *);
extern (C) void gtk_combo_box_entry_set_text_column(aGtkComboBoxEntry *, gint);
extern (C) _GtkWidget * gtk_combo_box_entry_new_with_model(void *, gint);
extern (C) _GtkWidget * gtk_combo_box_entry_new();
extern (C) guint gtk_combo_box_entry_get_type();
extern (C) gint _gtk_combo_box_editing_canceled(aGtkComboBox *);
extern (C) _AtkObject * gtk_combo_box_get_popup_accessible(aGtkComboBox *);
extern (C) void gtk_combo_box_popdown(aGtkComboBox *);
extern (C) void gtk_combo_box_popup(aGtkComboBox *);
extern (C) char * gtk_combo_box_get_active_text(aGtkComboBox *);
extern (C) void gtk_combo_box_remove_text(aGtkComboBox *, gint);
extern (C) void gtk_combo_box_prepend_text(aGtkComboBox *, char *);
extern (C) void gtk_combo_box_insert_text(aGtkComboBox *, gint, char *);
extern (C) void gtk_combo_box_append_text(aGtkComboBox *, char *);
extern (C) _GtkWidget * gtk_combo_box_new_text();
extern (C) void gtk_combo_box_set_row_separator_func(aGtkComboBox *, _BCD_func__10753, void *, _BCD_func__13158);
extern (C) _BCD_func__10753 gtk_combo_box_get_row_separator_func(aGtkComboBox *);
extern (C) void * gtk_combo_box_get_model(aGtkComboBox *);
extern (C) void gtk_combo_box_set_model(aGtkComboBox *, void *);
extern (C) void gtk_combo_box_set_active_iter(aGtkComboBox *, aGtkTreeIter *);
extern (C) gint gtk_combo_box_get_active_iter(aGtkComboBox *, aGtkTreeIter *);
extern (C) void gtk_combo_box_set_active(aGtkComboBox *, gint);
extern (C) gint gtk_combo_box_get_active(aGtkComboBox *);
extern (C) void gtk_combo_box_set_focus_on_click(aGtkComboBox *, gint);
extern (C) gint gtk_combo_box_get_focus_on_click(aGtkComboBox *);
extern (C) void gtk_combo_box_set_title(aGtkComboBox *, char *);
extern (C) char * gtk_combo_box_get_title(aGtkComboBox *);
extern (C) void gtk_combo_box_set_add_tearoffs(aGtkComboBox *, gint);
extern (C) gint gtk_combo_box_get_add_tearoffs(aGtkComboBox *);
extern (C) void gtk_combo_box_set_column_span_column(aGtkComboBox *, gint);
extern (C) gint gtk_combo_box_get_column_span_column(aGtkComboBox *);
extern (C) void gtk_combo_box_set_row_span_column(aGtkComboBox *, gint);
extern (C) gint gtk_combo_box_get_row_span_column(aGtkComboBox *);
extern (C) void gtk_combo_box_set_wrap_width(aGtkComboBox *, gint);
extern (C) gint gtk_combo_box_get_wrap_width(aGtkComboBox *);
extern (C) _GtkWidget * gtk_combo_box_new_with_model(void *);
extern (C) _GtkWidget * gtk_combo_box_new();
extern (C) GType gtk_combo_box_get_type();
extern (C) gint gtk_tree_view_get_tooltip_column(aGtkTreeView *);
extern (C) void gtk_tree_view_set_tooltip_column(aGtkTreeView *, gint);
extern (C) gint gtk_tree_view_get_tooltip_context(aGtkTreeView *, gint *, gint *, gint, void * *, void * *, aGtkTreeIter *);
extern (C) void gtk_tree_view_set_tooltip_cell(aGtkTreeView *, void *, void *, aGtkTreeViewColumn *, aGtkCellRenderer *);
extern (C) void gtk_tree_view_set_tooltip_row(aGtkTreeView *, void *, void *);
extern (C) gint gtk_tree_view_get_level_indentation(aGtkTreeView *);
extern (C) void gtk_tree_view_set_level_indentation(aGtkTreeView *, gint);
extern (C) gint gtk_tree_view_get_show_expanders(aGtkTreeView *);
extern (C) void gtk_tree_view_set_show_expanders(aGtkTreeView *, gint);
extern (C) void gtk_tree_view_set_enable_tree_lines(aGtkTreeView *, gint);
extern (C) gint gtk_tree_view_get_enable_tree_lines(aGtkTreeView *);
extern (C) void gtk_tree_view_set_grid_lines(aGtkTreeView *, gint);
extern (C) gint gtk_tree_view_get_grid_lines(aGtkTreeView *);
extern (C) void gtk_tree_view_set_row_separator_func(aGtkTreeView *, _BCD_func__10753, void *, _BCD_func__13158);
extern (C) _BCD_func__10753 gtk_tree_view_get_row_separator_func(aGtkTreeView *);
extern (C) gint gtk_tree_view_is_rubber_banding_active(aGtkTreeView *);
extern (C) gint gtk_tree_view_get_rubber_banding(aGtkTreeView *);
extern (C) void gtk_tree_view_set_rubber_banding(aGtkTreeView *, gint);
extern (C) gint gtk_tree_view_get_hover_expand(aGtkTreeView *);
extern (C) void gtk_tree_view_set_hover_expand(aGtkTreeView *, gint);
extern (C) gint gtk_tree_view_get_hover_selection(aGtkTreeView *);
extern (C) void gtk_tree_view_set_hover_selection(aGtkTreeView *, gint);
extern (C) gint gtk_tree_view_get_fixed_height_mode(aGtkTreeView *);
extern (C) void gtk_tree_view_set_fixed_height_mode(aGtkTreeView *, gint);
extern (C) void gtk_tree_view_set_destroy_count_func(aGtkTreeView *, _BCD_func__10748, void *, _BCD_func__13158);
extern (C) void gtk_tree_view_convert_bin_window_to_tree_coords(aGtkTreeView *, gint, gint, gint *, gint *);
extern (C) void gtk_tree_view_convert_tree_to_bin_window_coords(aGtkTreeView *, gint, gint, gint *, gint *);
extern (C) void gtk_tree_view_convert_bin_window_to_widget_coords(aGtkTreeView *, gint, gint, gint *, gint *);
extern (C) void gtk_tree_view_convert_widget_to_bin_window_coords(aGtkTreeView *, gint, gint, gint *, gint *);
extern (C) void gtk_tree_view_convert_tree_to_widget_coords(aGtkTreeView *, gint, gint, gint *, gint *);
extern (C) void gtk_tree_view_convert_widget_to_tree_coords(aGtkTreeView *, gint, gint, gint *, gint *);
extern (C) void gtk_tree_view_set_search_position_func(aGtkTreeView *, _BCD_func__10752, void *, _BCD_func__13158);
extern (C) _BCD_func__10752 gtk_tree_view_get_search_position_func(aGtkTreeView *);
extern (C) void gtk_tree_view_set_search_entry(aGtkTreeView *, aGtkEntry *);
extern (C) _GtkEntry * gtk_tree_view_get_search_entry(aGtkTreeView *);
extern (C) void gtk_tree_view_set_search_equal_func(aGtkTreeView *, _BCD_func__10754, void *, _BCD_func__13158);
extern (C) _BCD_func__10754 gtk_tree_view_get_search_equal_func(aGtkTreeView *);
extern (C) void gtk_tree_view_set_search_column(aGtkTreeView *, gint);
extern (C) gint gtk_tree_view_get_search_column(aGtkTreeView *);
extern (C) gint gtk_tree_view_get_enable_search(aGtkTreeView *);
extern (C) void gtk_tree_view_set_enable_search(aGtkTreeView *, gint);
extern (C) _GdkDrawable * gtk_tree_view_create_row_drag_icon(aGtkTreeView *, void *);
extern (C) gint gtk_tree_view_get_dest_row_at_pos(aGtkTreeView *, gint, gint, void * *, gint *);
extern (C) void gtk_tree_view_get_drag_dest_row(aGtkTreeView *, void * *, gint *);
extern (C) void gtk_tree_view_set_drag_dest_row(aGtkTreeView *, void *, gint);
extern (C) void gtk_tree_view_unset_rows_drag_dest(aGtkTreeView *);
extern (C) void gtk_tree_view_unset_rows_drag_source(aGtkTreeView *);
extern (C) void gtk_tree_view_enable_model_drag_dest(aGtkTreeView *, aGtkTargetEntry *, gint, gint);
extern (C) void gtk_tree_view_enable_model_drag_source(aGtkTreeView *, gint, aGtkTargetEntry *, gint, gint);
extern (C) gint gtk_tree_view_get_visible_range(aGtkTreeView *, void * *, void * *);
extern (C) void gtk_tree_view_tree_to_widget_coords(aGtkTreeView *, gint, gint, gint *, gint *);
extern (C) void gtk_tree_view_widget_to_tree_coords(aGtkTreeView *, gint, gint, gint *, gint *);
extern (C) void gtk_tree_view_get_visible_rect(aGtkTreeView *, _GdkRectangle *);
extern (C) void gtk_tree_view_get_background_area(aGtkTreeView *, void *, aGtkTreeViewColumn *, _GdkRectangle *);
extern (C) void gtk_tree_view_get_cell_area(aGtkTreeView *, void *, aGtkTreeViewColumn *, _GdkRectangle *);
extern (C) gint gtk_tree_view_get_path_at_pos(aGtkTreeView *, gint, gint, void * *, _GtkTreeViewColumn * *, gint *, gint *);
extern (C) _GdkDrawable * gtk_tree_view_get_bin_window(aGtkTreeView *);
extern (C) void gtk_tree_view_get_cursor(aGtkTreeView *, void * *, _GtkTreeViewColumn * *);
extern (C) void gtk_tree_view_set_cursor_on_cell(aGtkTreeView *, void *, aGtkTreeViewColumn *, aGtkCellRenderer *, gint);
extern (C) void gtk_tree_view_set_cursor(aGtkTreeView *, void *, aGtkTreeViewColumn *, gint);
extern (C) gint gtk_tree_view_get_reorderable(aGtkTreeView *);
extern (C) void gtk_tree_view_set_reorderable(aGtkTreeView *, gint);
extern (C) gint gtk_tree_view_row_expanded(aGtkTreeView *, void *);
extern (C) void gtk_tree_view_map_expanded_rows(aGtkTreeView *, _BCD_func__10755, void *);
extern (C) gint gtk_tree_view_collapse_row(aGtkTreeView *, void *);
extern (C) gint gtk_tree_view_expand_row(aGtkTreeView *, void *, gint);
extern (C) void gtk_tree_view_expand_to_path(aGtkTreeView *, void *);
extern (C) void gtk_tree_view_collapse_all(aGtkTreeView *);
extern (C) void gtk_tree_view_expand_all(aGtkTreeView *);
extern (C) void gtk_tree_view_row_activated(aGtkTreeView *, void *, aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_scroll_to_cell(aGtkTreeView *, void *, aGtkTreeViewColumn *, gint, float, float);
extern (C) void gtk_tree_view_scroll_to_point(aGtkTreeView *, gint, gint);
extern (C) void gtk_tree_view_set_column_drag_function(aGtkTreeView *, _BCD_func__10756, void *, _BCD_func__13158);
extern (C) _GtkTreeViewColumn * gtk_tree_view_get_expander_column(aGtkTreeView *);
extern (C) void gtk_tree_view_set_expander_column(aGtkTreeView *, aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_move_column_after(aGtkTreeView *, aGtkTreeViewColumn *, aGtkTreeViewColumn *);
extern (C) _GList * gtk_tree_view_get_columns(aGtkTreeView *);
extern (C) _GtkTreeViewColumn * gtk_tree_view_get_column(aGtkTreeView *, gint);
extern (C) gint gtk_tree_view_insert_column_with_data_func(aGtkTreeView *, gint, char *, aGtkCellRenderer *, _BCD_func__11636, void *, _BCD_func__13158);
extern (C) gint gtk_tree_view_insert_column_with_attributes(aGtkTreeView *, gint, char *, aGtkCellRenderer *, ...);
extern (C) gint gtk_tree_view_insert_column(aGtkTreeView *, aGtkTreeViewColumn *, gint);
extern (C) gint gtk_tree_view_remove_column(aGtkTreeView *, aGtkTreeViewColumn *);
extern (C) gint gtk_tree_view_append_column(aGtkTreeView *, aGtkTreeViewColumn *);
extern (C) gint gtk_tree_view_get_rules_hint(aGtkTreeView *);
extern (C) void gtk_tree_view_set_rules_hint(aGtkTreeView *, gint);
extern (C) void gtk_tree_view_set_headers_clickable(aGtkTreeView *, gint);
extern (C) gint gtk_tree_view_get_headers_clickable(aGtkTreeView *);
extern (C) void gtk_tree_view_columns_autosize(aGtkTreeView *);
extern (C) void gtk_tree_view_set_headers_visible(aGtkTreeView *, gint);
extern (C) gint gtk_tree_view_get_headers_visible(aGtkTreeView *);
extern (C) void gtk_tree_view_set_vadjustment(aGtkTreeView *, aGtkAdjustment *);
extern (C) _GtkAdjustment * gtk_tree_view_get_vadjustment(aGtkTreeView *);
extern (C) void gtk_tree_view_set_hadjustment(aGtkTreeView *, aGtkAdjustment *);
extern (C) _GtkAdjustment * gtk_tree_view_get_hadjustment(aGtkTreeView *);
extern (C) _GtkTreeSelection * gtk_tree_view_get_selection(aGtkTreeView *);
extern (C) void gtk_tree_view_set_model(aGtkTreeView *, void *);
extern (C) void * gtk_tree_view_get_model(aGtkTreeView *);
extern (C) _GtkWidget * gtk_tree_view_new_with_model(void *);
extern (C) _GtkWidget * gtk_tree_view_new();
extern (C) GType gtk_tree_view_get_type();
extern (C) void gtk_entry_set_editable(aGtkEntry *, gint);
extern (C) void gtk_entry_select_region(aGtkEntry *, gint, gint);
extern (C) void gtk_entry_set_position(aGtkEntry *, gint);
extern (C) void gtk_entry_prepend_text(aGtkEntry *, char *);
extern (C) void gtk_entry_append_text(aGtkEntry *, char *);
extern (C) _GtkWidget * gtk_entry_new_with_max_length(gint);
extern (C) _GtkAdjustment * gtk_entry_get_cursor_hadjustment(aGtkEntry *);
extern (C) void gtk_entry_set_cursor_hadjustment(aGtkEntry *, aGtkAdjustment *);
extern (C) gint gtk_entry_text_index_to_layout_index(aGtkEntry *, gint);
extern (C) gint gtk_entry_layout_index_to_text_index(aGtkEntry *, gint);
extern (C) _GtkEntryCompletion * gtk_entry_get_completion(aGtkEntry *);
extern (C) void gtk_entry_set_completion(aGtkEntry *, aGtkEntryCompletion *);
extern (C) float gtk_entry_get_alignment(aGtkEntry *);
extern (C) void gtk_entry_set_alignment(aGtkEntry *, float);
extern (C) void gtk_entry_get_layout_offsets(aGtkEntry *, gint *, gint *);
extern (C) void * gtk_entry_get_layout(aGtkEntry *);
extern (C) char * gtk_entry_get_text(aGtkEntry *);
extern (C) void gtk_entry_set_text(aGtkEntry *, in char *);
extern (C) gint gtk_entry_get_width_chars(aGtkEntry *);
extern (C) void gtk_entry_set_width_chars(aGtkEntry *, gint);
extern (C) gint gtk_entry_get_activates_default(aGtkEntry *);
extern (C) void gtk_entry_set_activates_default(aGtkEntry *, gint);
extern (C) gint gtk_entry_get_max_length(aGtkEntry *);
extern (C) void gtk_entry_set_max_length(aGtkEntry *, gint);
extern (C) _GtkBorder * gtk_entry_get_inner_border(aGtkEntry *);
extern (C) void gtk_entry_set_inner_border(aGtkEntry *, aGtkBorder *);
extern (C) gint gtk_entry_get_has_frame(aGtkEntry *);
extern (C) void gtk_entry_set_has_frame(aGtkEntry *, gint);
extern (C) gunichar gtk_entry_get_invisible_char(aGtkEntry *);
extern (C) void gtk_entry_set_invisible_char(aGtkEntry *, gunichar);
extern (C) gint gtk_entry_get_visibility(aGtkEntry *);
extern (C) void gtk_entry_set_visibility(aGtkEntry *, gint);
extern (C) _GtkWidget * gtk_entry_new();
extern (C) GType gtk_entry_get_type();
extern (C) gint gtk_entry_completion_get_text_column(aGtkEntryCompletion *);
extern (C) void gtk_entry_completion_set_text_column(aGtkEntryCompletion *, gint);
extern (C) char * gtk_entry_completion_get_completion_prefix(aGtkEntryCompletion *);
extern (C) gint gtk_entry_completion_get_popup_single_match(aGtkEntryCompletion *);
extern (C) void gtk_entry_completion_set_popup_single_match(aGtkEntryCompletion *, gint);
extern (C) gint gtk_entry_completion_get_popup_set_width(aGtkEntryCompletion *);
extern (C) void gtk_entry_completion_set_popup_set_width(aGtkEntryCompletion *, gint);
extern (C) gint gtk_entry_completion_get_popup_completion(aGtkEntryCompletion *);
extern (C) void gtk_entry_completion_set_popup_completion(aGtkEntryCompletion *, gint);
extern (C) gint gtk_entry_completion_get_inline_selection(aGtkEntryCompletion *);
extern (C) void gtk_entry_completion_set_inline_selection(aGtkEntryCompletion *, gint);
extern (C) gint gtk_entry_completion_get_inline_completion(aGtkEntryCompletion *);
extern (C) void gtk_entry_completion_set_inline_completion(aGtkEntryCompletion *, gint);
extern (C) void gtk_entry_completion_delete_action(aGtkEntryCompletion *, gint);
extern (C) void gtk_entry_completion_insert_action_markup(aGtkEntryCompletion *, gint, char *);
extern (C) void gtk_entry_completion_insert_action_text(aGtkEntryCompletion *, gint, char *);
extern (C) void gtk_entry_completion_insert_prefix(aGtkEntryCompletion *);
extern (C) void gtk_entry_completion_complete(aGtkEntryCompletion *);
extern (C) gint gtk_entry_completion_get_minimum_key_length(aGtkEntryCompletion *);
extern (C) void gtk_entry_completion_set_minimum_key_length(aGtkEntryCompletion *, gint);
extern (C) void gtk_entry_completion_set_match_func(aGtkEntryCompletion *, _BCD_func__10863, void *, _BCD_func__13158);
extern (C) void * gtk_entry_completion_get_model(aGtkEntryCompletion *);
extern (C) void gtk_entry_completion_set_model(aGtkEntryCompletion *, void *);
extern (C) _GtkWidget * gtk_entry_completion_get_entry(aGtkEntryCompletion *);
extern (C) _GtkEntryCompletion * gtk_entry_completion_new();
extern (C) GType gtk_entry_completion_get_type();
extern (C) void gtk_tree_model_filter_clear_cache(aGtkTreeModelFilter *);
extern (C) void gtk_tree_model_filter_refilter(aGtkTreeModelFilter *);
extern (C) void * gtk_tree_model_filter_convert_path_to_child_path(aGtkTreeModelFilter *, void *);
extern (C) void * gtk_tree_model_filter_convert_child_path_to_path(aGtkTreeModelFilter *, void *);
extern (C) void gtk_tree_model_filter_convert_iter_to_child_iter(aGtkTreeModelFilter *, aGtkTreeIter *, aGtkTreeIter *);
extern (C) gint gtk_tree_model_filter_convert_child_iter_to_iter(aGtkTreeModelFilter *, aGtkTreeIter *, aGtkTreeIter *);
extern (C) void * gtk_tree_model_filter_get_model(aGtkTreeModelFilter *);
extern (C) void gtk_tree_model_filter_set_visible_column(aGtkTreeModelFilter *, gint);
extern (C) void gtk_tree_model_filter_set_modify_func(aGtkTreeModelFilter *, gint, GType *, _BCD_func__10889, void *, _BCD_func__13158);
extern (C) void gtk_tree_model_filter_set_visible_func(aGtkTreeModelFilter *, _BCD_func__10753, void *, _BCD_func__13158);
extern (C) void * gtk_tree_model_filter_new(void *, void *);
extern (C) GType gtk_tree_model_filter_get_type();
extern (C) void gtk_list_store_move_before(aGtkListStore *, aGtkTreeIter *, aGtkTreeIter *);
extern (C) void gtk_list_store_move_after(aGtkListStore *, aGtkTreeIter *, aGtkTreeIter *);
extern (C) void gtk_list_store_swap(aGtkListStore *, aGtkTreeIter *, aGtkTreeIter *);
extern (C) void gtk_list_store_reorder(aGtkListStore *, gint *);
extern (C) gint gtk_list_store_iter_is_valid(aGtkListStore *, aGtkTreeIter *);
extern (C) void gtk_list_store_clear(aGtkListStore *);
extern (C) void gtk_list_store_append(aGtkListStore *, aGtkTreeIter *);
extern (C) void gtk_list_store_prepend(aGtkListStore *, aGtkTreeIter *);
extern (C) void gtk_list_store_insert_with_valuesv(aGtkListStore *, aGtkTreeIter *, gint, gint *, _GValue *, gint);
extern (C) void gtk_list_store_insert_with_values(aGtkListStore *, aGtkTreeIter *, gint, ...);
extern (C) void gtk_list_store_insert_after(aGtkListStore *, aGtkTreeIter *, aGtkTreeIter *);
extern (C) void gtk_list_store_insert_before(aGtkListStore *, aGtkTreeIter *, aGtkTreeIter *);
extern (C) void gtk_list_store_insert(aGtkListStore *, aGtkTreeIter *, gint);
extern (C) gint gtk_list_store_remove(aGtkListStore *, aGtkTreeIter *);
extern (C) void gtk_list_store_set_valist(aGtkListStore *, aGtkTreeIter *, char *);
extern (C) void gtk_list_store_set_valuesv(aGtkListStore *, aGtkTreeIter *, gint *, _GValue *, gint);
extern (C) void gtk_list_store_set(aGtkListStore *, aGtkTreeIter *, ...);
extern (C) void gtk_list_store_set_value(aGtkListStore *, aGtkTreeIter *, gint, _GValue *);
extern (C) void gtk_list_store_set_column_types(aGtkListStore *, gint, GType *);
extern (C) _GtkListStore * gtk_list_store_newv(gint, GType *);
extern (C) _GtkListStore * gtk_list_store_new(gint, ...);
extern (C) GType gtk_list_store_get_type();
extern (C) gint gtk_im_context_delete_surrounding(aGtkIMContext *, gint, gint);
extern (C) gint gtk_im_context_get_surrounding(aGtkIMContext *, char * *, gint *);
extern (C) void gtk_im_context_set_surrounding(aGtkIMContext *, char *, gint, gint);
extern (C) void gtk_im_context_set_use_preedit(aGtkIMContext *, gint);
extern (C) void gtk_im_context_set_cursor_location(aGtkIMContext *, _GdkRectangle *);
extern (C) void gtk_im_context_reset(aGtkIMContext *);
extern (C) void gtk_im_context_focus_out(aGtkIMContext *);
extern (C) void gtk_im_context_focus_in(aGtkIMContext *);
extern (C) gint gtk_im_context_filter_keypress(aGtkIMContext *, _GdkEventKey *);
extern (C) void gtk_im_context_get_preedit_string(aGtkIMContext *, char * *, void * *, gint *);
extern (C) void gtk_im_context_set_client_window(aGtkIMContext *, _GdkDrawable *);
extern (C) GType gtk_im_context_get_type();
extern (C) gint gtk_editable_get_editable(void *);
extern (C) void gtk_editable_set_editable(void *, gint);
extern (C) gint gtk_editable_get_position(void *);
extern (C) void gtk_editable_set_position(void *, gint);
extern (C) void gtk_editable_delete_selection(void *);
extern (C) void gtk_editable_paste_clipboard(void *);
extern (C) void gtk_editable_copy_clipboard(void *);
extern (C) void gtk_editable_cut_clipboard(void *);
extern (C) char * gtk_editable_get_chars(void *, gint, gint);
extern (C) void gtk_editable_delete_text(void *, gint, gint);
extern (C) void gtk_editable_insert_text(void *, in char *, gint, gint *);
extern (C) gint gtk_editable_get_selection_bounds(void *, gint *, gint *);
extern (C) void gtk_editable_select_region(void *, gint, gint);
extern (C) GType gtk_editable_get_type();
extern (C) void gtk_drag_set_default_icon(_GdkColormap *, _GdkDrawable *, _GdkDrawable *, gint, gint);
extern (C) void _gtk_drag_dest_handle_event(aGtkWidget *, _GdkEvent *);
extern (C) void _gtk_drag_source_handle_event(aGtkWidget *, _GdkEvent *);
extern (C) gint gtk_drag_check_threshold(aGtkWidget *, gint, gint, gint, gint);
extern (C) void gtk_drag_set_icon_default(_GdkDragContext *);
extern (C) void gtk_drag_set_icon_name(_GdkDragContext *, char *, gint, gint);
extern (C) void gtk_drag_set_icon_stock(_GdkDragContext *, char *, gint, gint);
extern (C) void gtk_drag_set_icon_pixbuf(_GdkDragContext *, void *, gint, gint);
extern (C) void gtk_drag_set_icon_pixmap(_GdkDragContext *, _GdkColormap *, _GdkDrawable *, _GdkDrawable *, gint, gint);
extern (C) void gtk_drag_set_icon_widget(_GdkDragContext *, aGtkWidget *, gint, gint);
extern (C) _GdkDragContext * gtk_drag_begin(aGtkWidget *, aGtkTargetList *, gint, gint, _GdkEvent *);
extern (C) void gtk_drag_source_set_icon_name(aGtkWidget *, char *);
extern (C) void gtk_drag_source_set_icon_stock(aGtkWidget *, char *);
extern (C) void gtk_drag_source_set_icon_pixbuf(aGtkWidget *, void *);
extern (C) void gtk_drag_source_set_icon(aGtkWidget *, _GdkColormap *, _GdkDrawable *, _GdkDrawable *);
extern (C) void gtk_drag_source_add_uri_targets(aGtkWidget *);
extern (C) void gtk_drag_source_add_image_targets(aGtkWidget *);
extern (C) void gtk_drag_source_add_text_targets(aGtkWidget *);
extern (C) void gtk_drag_source_set_target_list(aGtkWidget *, aGtkTargetList *);
extern (C) _GtkTargetList * gtk_drag_source_get_target_list(aGtkWidget *);
extern (C) void gtk_drag_source_unset(aGtkWidget *);
extern (C) void gtk_drag_source_set(aGtkWidget *, gint, aGtkTargetEntry *, gint, gint);
extern (C) gint gtk_drag_dest_get_track_motion(aGtkWidget *);
extern (C) void gtk_drag_dest_set_track_motion(aGtkWidget *, gint);
extern (C) void gtk_drag_dest_add_uri_targets(aGtkWidget *);
extern (C) void gtk_drag_dest_add_image_targets(aGtkWidget *);
extern (C) void gtk_drag_dest_add_text_targets(aGtkWidget *);
extern (C) void gtk_drag_dest_set_target_list(aGtkWidget *, aGtkTargetList *);
extern (C) _GtkTargetList * gtk_drag_dest_get_target_list(aGtkWidget *);
extern (C) void * gtk_drag_dest_find_target(aGtkWidget *, _GdkDragContext *, aGtkTargetList *);
extern (C) void gtk_drag_dest_unset(aGtkWidget *);
extern (C) void gtk_drag_dest_set_proxy(aGtkWidget *, _GdkDrawable *, gint, gint);
extern (C) void gtk_drag_dest_set(aGtkWidget *, gint, aGtkTargetEntry *, gint, gint);
extern (C) void gtk_drag_unhighlight(aGtkWidget *);
extern (C) void gtk_drag_highlight(aGtkWidget *);
extern (C) _GtkWidget * gtk_drag_get_source_widget(_GdkDragContext *);
extern (C) void gtk_drag_finish(_GdkDragContext *, gint, gint, guint32);
extern (C) void gtk_drag_get_data(aGtkWidget *, _GdkDragContext *, void *, guint32);
extern (C) void gtk_combo_disable_activate(aGtkCombo *);
extern (C) void gtk_combo_set_popdown_strings(aGtkCombo *, _GList *);
extern (C) void gtk_combo_set_item_string(aGtkCombo *, aGtkItem *, char *);
extern (C) void gtk_combo_set_case_sensitive(aGtkCombo *, gint);
extern (C) void gtk_combo_set_use_arrows_always(aGtkCombo *, gint);
extern (C) void gtk_combo_set_use_arrows(aGtkCombo *, gint);
extern (C) void gtk_combo_set_value_in_list(aGtkCombo *, gint, gint);
extern (C) _GtkWidget * gtk_combo_new();
extern (C) guint gtk_combo_get_type();
extern (C) _GtkWidget * gtk_hbox_new(gint, gint);
extern (C) GType gtk_hbox_get_type();
extern (C) _GtkWidget * gtk_color_selection_dialog_new(char *);
extern (C) GType gtk_color_selection_dialog_get_type();
extern (C) void gtk_color_selection_set_update_policy(aGtkColorSelection *, gint);
extern (C) void gtk_color_selection_get_color(aGtkColorSelection *, double *);
extern (C) void gtk_color_selection_set_color(aGtkColorSelection *, double *);
extern (C) _BCD_func__11008 gtk_color_selection_set_change_palette_with_screen_hook(_BCD_func__11008);
extern (C) _BCD_func__11009 gtk_color_selection_set_change_palette_hook(_BCD_func__11009);
extern (C) char * gtk_color_selection_palette_to_string(_GdkColor *, gint);
extern (C) gint gtk_color_selection_palette_from_string(char *, _GdkColor * *, gint *);
extern (C) gint gtk_color_selection_is_adjusting(aGtkColorSelection *);
extern (C) ushort gtk_color_selection_get_previous_alpha(aGtkColorSelection *);
extern (C) void gtk_color_selection_get_previous_color(aGtkColorSelection *, _GdkColor *);
extern (C) void gtk_color_selection_set_previous_alpha(aGtkColorSelection *, ushort);
extern (C) void gtk_color_selection_set_previous_color(aGtkColorSelection *, _GdkColor *);
extern (C) ushort gtk_color_selection_get_current_alpha(aGtkColorSelection *);
extern (C) void gtk_color_selection_get_current_color(aGtkColorSelection *, _GdkColor *);
extern (C) void gtk_color_selection_set_current_alpha(aGtkColorSelection *, ushort);
extern (C) void gtk_color_selection_set_current_color(aGtkColorSelection *, _GdkColor *);
extern (C) void gtk_color_selection_set_has_palette(aGtkColorSelection *, gint);
extern (C) gint gtk_color_selection_get_has_palette(aGtkColorSelection *);
extern (C) void gtk_color_selection_set_has_opacity_control(aGtkColorSelection *, gint);
extern (C) gint gtk_color_selection_get_has_opacity_control(aGtkColorSelection *);
extern (C) _GtkWidget * gtk_color_selection_new();
extern (C) GType gtk_color_selection_get_type();
extern (C) _GtkWidget * gtk_vbox_new(gint, gint);
extern (C) GType gtk_vbox_get_type();
extern (C) char * gtk_color_button_get_title(aGtkColorButton *);
extern (C) void gtk_color_button_set_title(aGtkColorButton *, char *);
extern (C) gint gtk_color_button_get_use_alpha(aGtkColorButton *);
extern (C) void gtk_color_button_set_use_alpha(aGtkColorButton *, gint);
extern (C) ushort gtk_color_button_get_alpha(aGtkColorButton *);
extern (C) void gtk_color_button_get_color(aGtkColorButton *, _GdkColor *);
extern (C) void gtk_color_button_set_alpha(aGtkColorButton *, ushort);
extern (C) void gtk_color_button_set_color(aGtkColorButton *, _GdkColor *);
extern (C) _GtkWidget * gtk_color_button_new_with_color(_GdkColor *);
extern (C) _GtkWidget * gtk_color_button_new();
extern (C) GType gtk_color_button_get_type();
extern (C) void * _gtk_clist_create_cell_layout(aGtkCList *, aGtkCListRow *, gint);
extern (C) void gtk_clist_set_auto_sort(aGtkCList *, gint);
extern (C) void gtk_clist_sort(aGtkCList *);
extern (C) void gtk_clist_set_sort_type(aGtkCList *, gint);
extern (C) void gtk_clist_set_sort_column(aGtkCList *, gint);
extern (C) void gtk_clist_set_compare_func(aGtkCList *, _BCD_func__11051);
extern (C) void gtk_clist_row_move(aGtkCList *, gint, gint);
extern (C) void gtk_clist_swap_rows(aGtkCList *, gint, gint);
extern (C) void gtk_clist_unselect_all(aGtkCList *);
extern (C) void gtk_clist_select_all(aGtkCList *);
extern (C) gint gtk_clist_get_selection_info(aGtkCList *, gint, gint, gint *, gint *);
extern (C) void gtk_clist_clear(aGtkCList *);
extern (C) void gtk_clist_undo_selection(aGtkCList *);
extern (C) void gtk_clist_unselect_row(aGtkCList *, gint, gint);
extern (C) void gtk_clist_select_row(aGtkCList *, gint, gint);
extern (C) gint gtk_clist_find_row_from_data(aGtkCList *, void *);
extern (C) void * gtk_clist_get_row_data(aGtkCList *, gint);
extern (C) void gtk_clist_set_row_data_full(aGtkCList *, gint, void *, _BCD_func__13158);
extern (C) void gtk_clist_set_row_data(aGtkCList *, gint, void *);
extern (C) void gtk_clist_remove(aGtkCList *, gint);
extern (C) gint gtk_clist_insert(aGtkCList *, gint, char * *);
extern (C) gint gtk_clist_append(aGtkCList *, char * *);
extern (C) gint gtk_clist_prepend(aGtkCList *, char * *);
extern (C) gint gtk_clist_get_selectable(aGtkCList *, gint);
extern (C) void gtk_clist_set_selectable(aGtkCList *, gint, gint);
extern (C) void gtk_clist_set_shift(aGtkCList *, gint, gint, gint, gint);
extern (C) _GtkStyle * gtk_clist_get_row_style(aGtkCList *, gint);
extern (C) void gtk_clist_set_row_style(aGtkCList *, gint, aGtkStyle *);
extern (C) _GtkStyle * gtk_clist_get_cell_style(aGtkCList *, gint, gint);
extern (C) void gtk_clist_set_cell_style(aGtkCList *, gint, gint, aGtkStyle *);
extern (C) void gtk_clist_set_background(aGtkCList *, gint, _GdkColor *);
extern (C) void gtk_clist_set_foreground(aGtkCList *, gint, _GdkColor *);
extern (C) gint gtk_clist_get_pixtext(aGtkCList *, gint, gint, char * *, char *, _GdkDrawable * *, _GdkDrawable * *);
extern (C) void gtk_clist_set_pixtext(aGtkCList *, gint, gint, char *, char, _GdkDrawable *, _GdkDrawable *);
extern (C) gint gtk_clist_get_pixmap(aGtkCList *, gint, gint, _GdkDrawable * *, _GdkDrawable * *);
extern (C) void gtk_clist_set_pixmap(aGtkCList *, gint, gint, _GdkDrawable *, _GdkDrawable *);
extern (C) gint gtk_clist_get_text(aGtkCList *, gint, gint, char * *);
extern (C) void gtk_clist_set_text(aGtkCList *, gint, gint, char *);
extern (C) gint gtk_clist_get_cell_type(aGtkCList *, gint, gint);
extern (C) gint gtk_clist_row_is_visible(aGtkCList *, gint);
extern (C) void gtk_clist_moveto(aGtkCList *, gint, gint, float, float);
extern (C) void gtk_clist_set_row_height(aGtkCList *, guint);
extern (C) void gtk_clist_set_column_max_width(aGtkCList *, gint, gint);
extern (C) void gtk_clist_set_column_min_width(aGtkCList *, gint, gint);
extern (C) void gtk_clist_set_column_width(aGtkCList *, gint, gint);
extern (C) gint gtk_clist_optimal_column_width(aGtkCList *, gint);
extern (C) gint gtk_clist_columns_autosize(aGtkCList *);
extern (C) void gtk_clist_set_column_auto_resize(aGtkCList *, gint, gint);
extern (C) void gtk_clist_set_column_resizeable(aGtkCList *, gint, gint);
extern (C) void gtk_clist_set_column_visibility(aGtkCList *, gint, gint);
extern (C) void gtk_clist_set_column_justification(aGtkCList *, gint, gint);
extern (C) _GtkWidget * gtk_clist_get_column_widget(aGtkCList *, gint);
extern (C) void gtk_clist_set_column_widget(aGtkCList *, gint, aGtkWidget *);
extern (C) char * gtk_clist_get_column_title(aGtkCList *, gint);
extern (C) void gtk_clist_set_column_title(aGtkCList *, gint, char *);
extern (C) void gtk_clist_column_titles_passive(aGtkCList *);
extern (C) void gtk_clist_column_titles_active(aGtkCList *);
extern (C) void gtk_clist_column_title_passive(aGtkCList *, gint);
extern (C) void gtk_clist_column_title_active(aGtkCList *, gint);
extern (C) void gtk_clist_column_titles_hide(aGtkCList *);
extern (C) void gtk_clist_column_titles_show(aGtkCList *);
extern (C) void gtk_clist_thaw(aGtkCList *);
extern (C) void gtk_clist_freeze(aGtkCList *);
extern (C) void gtk_clist_set_button_actions(aGtkCList *, guint, char);
extern (C) void gtk_clist_set_use_drag_icons(aGtkCList *, gint);
extern (C) void gtk_clist_set_reorderable(aGtkCList *, gint);
extern (C) void gtk_clist_set_selection_mode(aGtkCList *, gint);
extern (C) void gtk_clist_set_shadow_type(aGtkCList *, gint);
extern (C) _GtkAdjustment * gtk_clist_get_vadjustment(aGtkCList *);
extern (C) _GtkAdjustment * gtk_clist_get_hadjustment(aGtkCList *);
extern (C) void gtk_clist_set_vadjustment(aGtkCList *, aGtkAdjustment *);
extern (C) void gtk_clist_set_hadjustment(aGtkCList *, aGtkAdjustment *);
extern (C) _GtkWidget * gtk_clist_new_with_titles(gint, char * *);
extern (C) _GtkWidget * gtk_clist_new(gint);
extern (C) guint gtk_clist_get_type();
extern (C) _GtkWidget * gtk_vscrollbar_new(aGtkAdjustment *);
extern (C) GType gtk_vscrollbar_get_type();
extern (C) _GtkWidget * gtk_hscrollbar_new(aGtkAdjustment *);
extern (C) GType gtk_hscrollbar_get_type();
extern (C) GType gtk_scrollbar_get_type();
extern (C) double _gtk_range_get_wheel_delta(aGtkRange *, gint);
extern (C) double gtk_range_get_fill_level(aGtkRange *);
extern (C) void gtk_range_set_fill_level(aGtkRange *, double);
extern (C) gint gtk_range_get_restrict_to_fill_level(aGtkRange *);
extern (C) void gtk_range_set_restrict_to_fill_level(aGtkRange *, gint);
extern (C) gint gtk_range_get_show_fill_level(aGtkRange *);
extern (C) void gtk_range_set_show_fill_level(aGtkRange *, gint);
extern (C) double gtk_range_get_value(aGtkRange *);
extern (C) void gtk_range_set_value(aGtkRange *, double);
extern (C) void gtk_range_set_range(aGtkRange *, double, double);
extern (C) void gtk_range_set_increments(aGtkRange *, double, double);
extern (C) gint gtk_range_get_upper_stepper_sensitivity(aGtkRange *);
extern (C) void gtk_range_set_upper_stepper_sensitivity(aGtkRange *, gint);
extern (C) gint gtk_range_get_lower_stepper_sensitivity(aGtkRange *);
extern (C) void gtk_range_set_lower_stepper_sensitivity(aGtkRange *, gint);
extern (C) gint gtk_range_get_inverted(aGtkRange *);
extern (C) void gtk_range_set_inverted(aGtkRange *, gint);
extern (C) _GtkAdjustment * gtk_range_get_adjustment(aGtkRange *);
extern (C) void gtk_range_set_adjustment(aGtkRange *, aGtkAdjustment *);
extern (C) gint gtk_range_get_update_policy(aGtkRange *);
extern (C) void gtk_range_set_update_policy(aGtkRange *, gint);
extern (C) GType gtk_range_get_type();
extern (C) void _gtk_clipboard_store_all();
extern (C) void _gtk_clipboard_handle_event(_GdkEventOwnerChange *);
extern (C) void gtk_clipboard_store(void *);
extern (C) void gtk_clipboard_set_can_store(void *, aGtkTargetEntry *, gint);
extern (C) gint gtk_clipboard_wait_is_target_available(void *, void *);
extern (C) gint gtk_clipboard_wait_is_image_available(void *);
extern (C) gint gtk_clipboard_wait_is_rich_text_available(void *, aGtkTextBuffer *);
extern (C) gint gtk_clipboard_wait_is_text_available(void *);
extern (C) gint gtk_clipboard_wait_for_targets(void *, void * * *, gint *);
extern (C) void * gtk_clipboard_wait_for_image(void *);
extern (C) char * gtk_clipboard_wait_for_rich_text(void *, aGtkTextBuffer *, void * *, gsize *);
extern (C) char * gtk_clipboard_wait_for_text(void *);
extern (C) _GtkSelectionData * gtk_clipboard_wait_for_contents(void *, void *);
extern (C) void gtk_clipboard_request_targets(void *, _BCD_func__11269, void *);
extern (C) void gtk_clipboard_request_image(void *, _BCD_func__11270, void *);
extern (C) void gtk_clipboard_request_rich_text(void *, aGtkTextBuffer *, _BCD_func__11271, void *);
extern (C) void gtk_clipboard_request_text(void *, _BCD_func__11272, void *);
extern (C) void gtk_clipboard_request_contents(void *, void *, _BCD_func__11273, void *);
extern (C) void gtk_clipboard_set_image(void *, void *);
extern (C) void gtk_clipboard_set_text(void *, char *, gint);
extern (C) void gtk_clipboard_clear(void *);
extern (C) _GObject * gtk_clipboard_get_owner(void *);
extern (C) gint gtk_clipboard_set_with_owner(void *, aGtkTargetEntry *, guint, _BCD_func__11268, _BCD_func__11267, _GObject *);
extern (C) gint gtk_clipboard_set_with_data(void *, aGtkTargetEntry *, guint, _BCD_func__11268, _BCD_func__11267, void *);
extern (C) _GdkDisplay * gtk_clipboard_get_display(void *);
extern (C) void * gtk_clipboard_get(void *);
extern (C) void * gtk_clipboard_get_for_display(_GdkDisplay *, void *);
extern (C) GType gtk_clipboard_get_type();
extern (C) GType gtk_target_list_get_type();
extern (C) void gtk_selection_data_free(aGtkSelectionData *);
extern (C) _GtkSelectionData * gtk_selection_data_copy(aGtkSelectionData *);
extern (C) GType gtk_selection_data_get_type();
extern (C) gint _gtk_selection_property_notify(aGtkWidget *, _GdkEventProperty *);
extern (C) gint _gtk_selection_notify(aGtkWidget *, _GdkEventSelection *);
extern (C) gint _gtk_selection_incr_event(_GdkDrawable *, _GdkEventProperty *);
extern (C) gint _gtk_selection_request(aGtkWidget *, _GdkEventSelection *);
extern (C) gint gtk_selection_clear(aGtkWidget *, _GdkEventSelection *);
extern (C) void gtk_selection_remove_all(aGtkWidget *);
extern (C) gint gtk_targets_include_uri(void * *, gint);
extern (C) gint gtk_targets_include_image(void * *, gint, gint);
extern (C) gint gtk_targets_include_rich_text(void * *, gint, aGtkTextBuffer *);
extern (C) gint gtk_targets_include_text(void * *, gint);
extern (C) gint gtk_selection_data_targets_include_uri(aGtkSelectionData *);
extern (C) gint gtk_selection_data_targets_include_image(aGtkSelectionData *, gint);
extern (C) gint gtk_selection_data_targets_include_rich_text(aGtkSelectionData *, aGtkTextBuffer *);
extern (C) gint gtk_selection_data_targets_include_text(aGtkSelectionData *);
extern (C) gint gtk_selection_data_get_targets(aGtkSelectionData *, void * * *, gint *);
extern (C) char * * gtk_selection_data_get_uris(aGtkSelectionData *);
extern (C) gint gtk_selection_data_set_uris(aGtkSelectionData *, char * *);
extern (C) void * gtk_selection_data_get_pixbuf(aGtkSelectionData *);
extern (C) gint gtk_selection_data_set_pixbuf(aGtkSelectionData *, void *);
extern (C) char * gtk_selection_data_get_text(aGtkSelectionData *);
extern (C) gint gtk_selection_data_set_text(aGtkSelectionData *, char *, gint);
extern (C) void gtk_selection_data_set(aGtkSelectionData *, void *, gint, char *, gint);
extern (C) gint gtk_selection_convert(aGtkWidget *, void *, void *, guint32);
extern (C) void gtk_selection_clear_targets(aGtkWidget *, void *);
extern (C) void gtk_selection_add_targets(aGtkWidget *, void *, aGtkTargetEntry *, guint);
extern (C) void gtk_selection_add_target(aGtkWidget *, void *, void *, guint);
extern (C) gint gtk_selection_owner_set_for_display(_GdkDisplay *, aGtkWidget *, void *, guint32);
extern (C) gint gtk_selection_owner_set(aGtkWidget *, void *, guint32);
extern (C) void gtk_target_table_free(aGtkTargetEntry *, gint);
extern (C) _GtkTargetEntry * gtk_target_table_new_from_list(aGtkTargetList *, gint *);
extern (C) gint gtk_target_list_find(aGtkTargetList *, void *, guint *);
extern (C) void gtk_target_list_remove(aGtkTargetList *, void *);
extern (C) void gtk_target_list_add_table(aGtkTargetList *, aGtkTargetEntry *, guint);
extern (C) void gtk_target_list_add_uri_targets(aGtkTargetList *, guint);
extern (C) void gtk_target_list_add_image_targets(aGtkTargetList *, guint, gint);
extern (C) void gtk_target_list_add_rich_text_targets(aGtkTargetList *, guint, gint, aGtkTextBuffer *);
extern (C) void gtk_target_list_add_text_targets(aGtkTargetList *, guint);
extern (C) void gtk_target_list_add(aGtkTargetList *, void *, guint, guint);
extern (C) void gtk_target_list_unref(aGtkTargetList *);
extern (C) _GtkTargetList * gtk_target_list_ref(aGtkTargetList *);
extern (C) _GtkTargetList * gtk_target_list_new(aGtkTargetEntry *, guint);
extern (C) void gtk_text_iter_order(aGtkTextIter *, aGtkTextIter *);
extern (C) gint gtk_text_iter_in_range(aGtkTextIter *, aGtkTextIter *, aGtkTextIter *);
extern (C) gint gtk_text_iter_compare(aGtkTextIter *, aGtkTextIter *);
extern (C) gint gtk_text_iter_equal(aGtkTextIter *, aGtkTextIter *);
extern (C) gint gtk_text_iter_backward_search(aGtkTextIter *, char *, gint, aGtkTextIter *, aGtkTextIter *, aGtkTextIter *);
extern (C) gint gtk_text_iter_forward_search(aGtkTextIter *, char *, gint, aGtkTextIter *, aGtkTextIter *, aGtkTextIter *);
extern (C) gint gtk_text_iter_backward_find_char(aGtkTextIter *, _BCD_func__11292, void *, aGtkTextIter *);
extern (C) gint gtk_text_iter_forward_find_char(aGtkTextIter *, _BCD_func__11292, void *, aGtkTextIter *);
extern (C) gint gtk_text_iter_backward_to_tag_toggle(aGtkTextIter *, aGtkTextTag *);
extern (C) gint gtk_text_iter_forward_to_tag_toggle(aGtkTextIter *, aGtkTextTag *);
extern (C) void gtk_text_iter_set_visible_line_index(aGtkTextIter *, gint);
extern (C) void gtk_text_iter_set_visible_line_offset(aGtkTextIter *, gint);
extern (C) gint gtk_text_iter_forward_to_line_end(aGtkTextIter *);
extern (C) void gtk_text_iter_forward_to_end(aGtkTextIter *);
extern (C) void gtk_text_iter_set_line_index(aGtkTextIter *, gint);
extern (C) void gtk_text_iter_set_line_offset(aGtkTextIter *, gint);
extern (C) void gtk_text_iter_set_line(aGtkTextIter *, gint);
extern (C) void gtk_text_iter_set_offset(aGtkTextIter *, gint);
extern (C) gint gtk_text_iter_backward_visible_cursor_positions(aGtkTextIter *, gint);
extern (C) gint gtk_text_iter_forward_visible_cursor_positions(aGtkTextIter *, gint);
extern (C) gint gtk_text_iter_backward_visible_cursor_position(aGtkTextIter *);
extern (C) gint gtk_text_iter_forward_visible_cursor_position(aGtkTextIter *);
extern (C) gint gtk_text_iter_backward_cursor_positions(aGtkTextIter *, gint);
extern (C) gint gtk_text_iter_forward_cursor_positions(aGtkTextIter *, gint);
extern (C) gint gtk_text_iter_backward_cursor_position(aGtkTextIter *);
extern (C) gint gtk_text_iter_forward_cursor_position(aGtkTextIter *);
extern (C) gint gtk_text_iter_backward_sentence_starts(aGtkTextIter *, gint);
extern (C) gint gtk_text_iter_forward_sentence_ends(aGtkTextIter *, gint);
extern (C) gint gtk_text_iter_backward_sentence_start(aGtkTextIter *);
extern (C) gint gtk_text_iter_forward_sentence_end(aGtkTextIter *);
extern (C) gint gtk_text_iter_backward_visible_word_starts(aGtkTextIter *, gint);
extern (C) gint gtk_text_iter_forward_visible_word_ends(aGtkTextIter *, gint);
extern (C) gint gtk_text_iter_backward_visible_word_start(aGtkTextIter *);
extern (C) gint gtk_text_iter_forward_visible_word_end(aGtkTextIter *);
extern (C) gint gtk_text_iter_backward_visible_lines(aGtkTextIter *, gint);
extern (C) gint gtk_text_iter_forward_visible_lines(aGtkTextIter *, gint);
extern (C) gint gtk_text_iter_backward_visible_line(aGtkTextIter *);
extern (C) gint gtk_text_iter_forward_visible_line(aGtkTextIter *);
extern (C) gint gtk_text_iter_backward_word_starts(aGtkTextIter *, gint);
extern (C) gint gtk_text_iter_forward_word_ends(aGtkTextIter *, gint);
extern (C) gint gtk_text_iter_backward_word_start(aGtkTextIter *);
extern (C) gint gtk_text_iter_forward_word_end(aGtkTextIter *);
extern (C) gint gtk_text_iter_backward_lines(aGtkTextIter *, gint);
extern (C) gint gtk_text_iter_forward_lines(aGtkTextIter *, gint);
extern (C) gint gtk_text_iter_backward_line(aGtkTextIter *);
extern (C) gint gtk_text_iter_forward_line(aGtkTextIter *);
extern (C) gint gtk_text_iter_backward_chars(aGtkTextIter *, gint);
extern (C) gint gtk_text_iter_forward_chars(aGtkTextIter *, gint);
extern (C) gint gtk_text_iter_backward_char(aGtkTextIter *);
extern (C) gint gtk_text_iter_forward_char(aGtkTextIter *);
extern (C) gint gtk_text_iter_is_start(aGtkTextIter *);
extern (C) gint gtk_text_iter_is_end(aGtkTextIter *);
extern (C) void * gtk_text_iter_get_language(aGtkTextIter *);
extern (C) gint gtk_text_iter_get_attributes(aGtkTextIter *, aGtkTextAttributes *);
extern (C) gint gtk_text_iter_get_bytes_in_line(aGtkTextIter *);
extern (C) gint gtk_text_iter_get_chars_in_line(aGtkTextIter *);
extern (C) gint gtk_text_iter_is_cursor_position(aGtkTextIter *);
extern (C) gint gtk_text_iter_ends_line(aGtkTextIter *);
extern (C) gint gtk_text_iter_starts_line(aGtkTextIter *);
extern (C) gint gtk_text_iter_inside_sentence(aGtkTextIter *);
extern (C) gint gtk_text_iter_ends_sentence(aGtkTextIter *);
extern (C) gint gtk_text_iter_starts_sentence(aGtkTextIter *);
extern (C) gint gtk_text_iter_inside_word(aGtkTextIter *);
extern (C) gint gtk_text_iter_ends_word(aGtkTextIter *);
extern (C) gint gtk_text_iter_starts_word(aGtkTextIter *);
extern (C) gint gtk_text_iter_can_insert(aGtkTextIter *, gint);
extern (C) gint gtk_text_iter_editable(aGtkTextIter *, gint);
extern (C) _GSList * gtk_text_iter_get_tags(aGtkTextIter *);
extern (C) gint gtk_text_iter_has_tag(aGtkTextIter *, aGtkTextTag *);
extern (C) gint gtk_text_iter_toggles_tag(aGtkTextIter *, aGtkTextTag *);
extern (C) gint gtk_text_iter_ends_tag(aGtkTextIter *, aGtkTextTag *);
extern (C) gint gtk_text_iter_begins_tag(aGtkTextIter *, aGtkTextTag *);
extern (C) _GSList * gtk_text_iter_get_toggled_tags(aGtkTextIter *, gint);
extern (C) _GtkTextChildAnchor * gtk_text_iter_get_child_anchor(aGtkTextIter *);
extern (C) _GSList * gtk_text_iter_get_marks(aGtkTextIter *);
extern (C) void * gtk_text_iter_get_pixbuf(aGtkTextIter *);
extern (C) char * gtk_text_iter_get_visible_text(aGtkTextIter *, aGtkTextIter *);
extern (C) char * gtk_text_iter_get_visible_slice(aGtkTextIter *, aGtkTextIter *);
extern (C) char * gtk_text_iter_get_text(aGtkTextIter *, aGtkTextIter *);
extern (C) char * gtk_text_iter_get_slice(aGtkTextIter *, aGtkTextIter *);
extern (C) gunichar gtk_text_iter_get_char(aGtkTextIter *);
extern (C) gint gtk_text_iter_get_visible_line_index(aGtkTextIter *);
extern (C) gint gtk_text_iter_get_visible_line_offset(aGtkTextIter *);
extern (C) gint gtk_text_iter_get_line_index(aGtkTextIter *);
extern (C) gint gtk_text_iter_get_line_offset(aGtkTextIter *);
extern (C) gint gtk_text_iter_get_line(aGtkTextIter *);
extern (C) gint gtk_text_iter_get_offset(aGtkTextIter *);
extern (C) GType gtk_text_iter_get_type();
extern (C) void gtk_text_iter_free(aGtkTextIter *);
extern (C) _GtkTextIter * gtk_text_iter_copy(aGtkTextIter *);
extern (C) _GtkTextBuffer * gtk_text_iter_get_buffer(aGtkTextIter *);
extern (C) gint gtk_text_child_anchor_get_deleted(aGtkTextChildAnchor *);
extern (C) _GList * gtk_text_child_anchor_get_widgets(aGtkTextChildAnchor *);
extern (C) _GtkTextChildAnchor * gtk_text_child_anchor_new();
extern (C) GType gtk_text_child_anchor_get_type();
extern (C) GType gtk_text_attributes_get_type();
extern (C) _GtkTextAttributes * gtk_text_attributes_ref(aGtkTextAttributes *);
extern (C) void gtk_text_attributes_unref(aGtkTextAttributes *);
extern (C) void gtk_text_attributes_copy_values(aGtkTextAttributes *, aGtkTextAttributes *);
extern (C) _GtkTextAttributes * gtk_text_attributes_copy(aGtkTextAttributes *);
extern (C) _GtkTextAttributes * gtk_text_attributes_new();
extern (C) gint gtk_text_tag_event(aGtkTextTag *, _GObject *, _GdkEvent *, aGtkTextIter *);
extern (C) void gtk_text_tag_set_priority(aGtkTextTag *, gint);
extern (C) gint gtk_text_tag_get_priority(aGtkTextTag *);
extern (C) _GtkTextTag * gtk_text_tag_new(char *);
extern (C) GType gtk_text_tag_get_type();
extern (C) void gtk_check_menu_item_set_show_toggle(aGtkCheckMenuItem *, gint);
extern (C) gint gtk_check_menu_item_get_draw_as_radio(aGtkCheckMenuItem *);
extern (C) void gtk_check_menu_item_set_draw_as_radio(aGtkCheckMenuItem *, gint);
extern (C) gint gtk_check_menu_item_get_inconsistent(aGtkCheckMenuItem *);
extern (C) void gtk_check_menu_item_set_inconsistent(aGtkCheckMenuItem *, gint);
extern (C) void gtk_check_menu_item_toggled(aGtkCheckMenuItem *);
extern (C) gint gtk_check_menu_item_get_active(aGtkCheckMenuItem *);
extern (C) void gtk_check_menu_item_set_active(aGtkCheckMenuItem *, gint);
extern (C) _GtkWidget * gtk_check_menu_item_new_with_mnemonic(char *);
extern (C) _GtkWidget * gtk_check_menu_item_new_with_label(char *);
extern (C) _GtkWidget * gtk_check_menu_item_new();
extern (C) GType gtk_check_menu_item_get_type();
extern (C) void gtk_menu_item_remove_submenu(aGtkMenuItem *);
extern (C) void _gtk_menu_item_popdown_submenu(aGtkWidget *);
extern (C) void _gtk_menu_item_popup_submenu(aGtkWidget *, gint);
extern (C) gint _gtk_menu_item_is_selectable(aGtkWidget *);
extern (C) void _gtk_menu_item_refresh_accel_path(aGtkMenuItem *, char *, aGtkAccelGroup *, gint);
extern (C) void gtk_menu_item_set_accel_path(aGtkMenuItem *, char *);
extern (C) gint gtk_menu_item_get_right_justified(aGtkMenuItem *);
extern (C) void gtk_menu_item_set_right_justified(aGtkMenuItem *, gint);
extern (C) void gtk_menu_item_toggle_size_allocate(aGtkMenuItem *, gint);
extern (C) void gtk_menu_item_toggle_size_request(aGtkMenuItem *, gint *);
extern (C) void gtk_menu_item_activate(aGtkMenuItem *);
extern (C) void gtk_menu_item_deselect(aGtkMenuItem *);
extern (C) void gtk_menu_item_select(aGtkMenuItem *);
extern (C) _GtkWidget * gtk_menu_item_get_submenu(aGtkMenuItem *);
extern (C) void gtk_menu_item_set_submenu(aGtkMenuItem *, aGtkWidget *);
extern (C) _GtkWidget * gtk_menu_item_new_with_mnemonic(char *);
extern (C) _GtkWidget * gtk_menu_item_new_with_label(char *);
extern (C) _GtkWidget * gtk_menu_item_new();
extern (C) GType gtk_menu_item_get_type();
extern (C) void gtk_item_toggle(aGtkItem *);
extern (C) void gtk_item_deselect(aGtkItem *);
extern (C) void gtk_item_select(aGtkItem *);
extern (C) guint gtk_item_get_type();
extern (C) void _gtk_check_button_get_props(aGtkCheckButton *, gint *, gint *);
extern (C) _GtkWidget * gtk_check_button_new_with_mnemonic(char *);
extern (C) _GtkWidget * gtk_check_button_new_with_label(char *);
extern (C) _GtkWidget * gtk_check_button_new();
extern (C) GType gtk_check_button_get_type();
extern (C) gint gtk_toggle_button_get_inconsistent(aGtkToggleButton *);
extern (C) void gtk_toggle_button_set_inconsistent(aGtkToggleButton *, gint);
extern (C) void gtk_toggle_button_toggled(aGtkToggleButton *);
extern (C) gint gtk_toggle_button_get_active(aGtkToggleButton *);
extern (C) void gtk_toggle_button_set_active(aGtkToggleButton *, gint);
extern (C) gint gtk_toggle_button_get_mode(aGtkToggleButton *);
extern (C) void gtk_toggle_button_set_mode(aGtkToggleButton *, gint);
extern (C) _GtkWidget * gtk_toggle_button_new_with_mnemonic(char *);
extern (C) _GtkWidget * gtk_toggle_button_new_with_label(char *);
extern (C) _GtkWidget * gtk_toggle_button_new();
extern (C) GType gtk_toggle_button_get_type();
extern (C) _GList * gtk_cell_view_get_cell_renderers(aGtkCellView *);
extern (C) void gtk_cell_view_set_background_color(aGtkCellView *, _GdkColor *);
extern (C) gint gtk_cell_view_get_size_of_row(aGtkCellView *, void *, aGtkRequisition *);
extern (C) void * gtk_cell_view_get_displayed_row(aGtkCellView *);
extern (C) void gtk_cell_view_set_displayed_row(aGtkCellView *, void *);
extern (C) void gtk_cell_view_set_model(aGtkCellView *, void *);
extern (C) _GtkWidget * gtk_cell_view_new_with_pixbuf(void *);
extern (C) _GtkWidget * gtk_cell_view_new_with_markup(char *);
extern (C) _GtkWidget * gtk_cell_view_new_with_text(char *);
extern (C) _GtkWidget * gtk_cell_view_new();
extern (C) GType gtk_cell_view_get_type();
extern (C) void gtk_cell_renderer_toggle_set_active(aGtkCellRendererToggle *, gint);
extern (C) gint gtk_cell_renderer_toggle_get_active(aGtkCellRendererToggle *);
extern (C) void gtk_cell_renderer_toggle_set_radio(aGtkCellRendererToggle *, gint);
extern (C) gint gtk_cell_renderer_toggle_get_radio(aGtkCellRendererToggle *);
extern (C) _GtkCellRenderer * gtk_cell_renderer_toggle_new();
extern (C) GType gtk_cell_renderer_toggle_get_type();
extern (C) _GtkCellRenderer * gtk_cell_renderer_spin_new();
extern (C) GType gtk_cell_renderer_spin_get_type();
extern (C) _GtkCellRenderer * gtk_cell_renderer_progress_new();
extern (C) GType gtk_cell_renderer_progress_get_type();
extern (C) _GtkCellRenderer * gtk_cell_renderer_pixbuf_new();
extern (C) GType gtk_cell_renderer_pixbuf_get_type();
extern (C) _GtkCellRenderer * gtk_cell_renderer_combo_new();
extern (C) GType gtk_cell_renderer_combo_get_type();
extern (C) _GtkCellRenderer * gtk_cell_renderer_accel_new();
extern (C) GType gtk_cell_renderer_accel_get_type();
extern (C) void gtk_cell_renderer_text_set_fixed_height_from_font(aGtkCellRendererText *, gint);
extern (C) _GtkCellRenderer * gtk_cell_renderer_text_new();
extern (C) GType gtk_cell_renderer_text_get_type();
extern (C) void _gtk_cell_layout_buildable_add_child(void *, aGtkBuilder *, _GObject *, char *);
extern (C) void _gtk_cell_layout_buildable_custom_tag_end(void *, aGtkBuilder *, _GObject *, char *, void * *);
extern (C) gint _gtk_cell_layout_buildable_custom_tag_start(void *, aGtkBuilder *, _GObject *, char *, _GMarkupParser *, void * *);
extern (C) void gtk_cell_layout_reorder(void *, aGtkCellRenderer *, gint);
extern (C) void gtk_cell_layout_clear_attributes(void *, aGtkCellRenderer *);
extern (C) void gtk_cell_layout_set_cell_data_func(void *, aGtkCellRenderer *, _BCD_func__11624, void *, _BCD_func__13158);
extern (C) void gtk_cell_layout_add_attribute(void *, aGtkCellRenderer *, char *, gint);
extern (C) void gtk_cell_layout_set_attributes(void *, aGtkCellRenderer *, ...);
extern (C) void gtk_cell_layout_clear(void *);
extern (C) _GList * gtk_cell_layout_get_cells(void *);
extern (C) void gtk_cell_layout_pack_end(void *, aGtkCellRenderer *, gint);
extern (C) void gtk_cell_layout_pack_start(void *, aGtkCellRenderer *, gint);
extern (C) GType gtk_cell_layout_get_type();
extern (C) _GtkWidget * gtk_tree_view_column_get_tree_view(aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_column_queue_resize(aGtkTreeViewColumn *);
extern (C) gint gtk_tree_view_column_cell_get_position(aGtkTreeViewColumn *, aGtkCellRenderer *, gint *, gint *);
extern (C) void gtk_tree_view_column_focus_cell(aGtkTreeViewColumn *, aGtkCellRenderer *);
extern (C) gint gtk_tree_view_column_cell_is_visible(aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_column_cell_get_size(aGtkTreeViewColumn *, _GdkRectangle *, gint *, gint *, gint *, gint *);
extern (C) void gtk_tree_view_column_cell_set_cell_data(aGtkTreeViewColumn *, void *, aGtkTreeIter *, gint, gint);
extern (C) gint gtk_tree_view_column_get_sort_order(aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_column_set_sort_order(aGtkTreeViewColumn *, gint);
extern (C) gint gtk_tree_view_column_get_sort_indicator(aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_column_set_sort_indicator(aGtkTreeViewColumn *, gint);
extern (C) gint gtk_tree_view_column_get_sort_column_id(aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_column_set_sort_column_id(aGtkTreeViewColumn *, gint);
extern (C) gint gtk_tree_view_column_get_reorderable(aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_column_set_reorderable(aGtkTreeViewColumn *, gint);
extern (C) float gtk_tree_view_column_get_alignment(aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_column_set_alignment(aGtkTreeViewColumn *, float);
extern (C) _GtkWidget * gtk_tree_view_column_get_widget(aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_column_set_widget(aGtkTreeViewColumn *, aGtkWidget *);
extern (C) gint gtk_tree_view_column_get_clickable(aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_column_set_clickable(aGtkTreeViewColumn *, gint);
extern (C) gint gtk_tree_view_column_get_expand(aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_column_set_expand(aGtkTreeViewColumn *, gint);
extern (C) char * gtk_tree_view_column_get_title(aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_column_set_title(aGtkTreeViewColumn *, char *);
extern (C) void gtk_tree_view_column_clicked(aGtkTreeViewColumn *);
extern (C) gint gtk_tree_view_column_get_max_width(aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_column_set_max_width(aGtkTreeViewColumn *, gint);
extern (C) gint gtk_tree_view_column_get_min_width(aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_column_set_min_width(aGtkTreeViewColumn *, gint);
extern (C) void gtk_tree_view_column_set_fixed_width(aGtkTreeViewColumn *, gint);
extern (C) gint gtk_tree_view_column_get_fixed_width(aGtkTreeViewColumn *);
extern (C) gint gtk_tree_view_column_get_width(aGtkTreeViewColumn *);
extern (C) gint gtk_tree_view_column_get_sizing(aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_column_set_sizing(aGtkTreeViewColumn *, gint);
extern (C) gint gtk_tree_view_column_get_resizable(aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_column_set_resizable(aGtkTreeViewColumn *, gint);
extern (C) gint gtk_tree_view_column_get_visible(aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_column_set_visible(aGtkTreeViewColumn *, gint);
extern (C) gint gtk_tree_view_column_get_spacing(aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_column_set_spacing(aGtkTreeViewColumn *, gint);
extern (C) void gtk_tree_view_column_clear_attributes(aGtkTreeViewColumn *, aGtkCellRenderer *);
extern (C) void gtk_tree_view_column_set_cell_data_func(aGtkTreeViewColumn *, aGtkCellRenderer *, _BCD_func__11636, void *, _BCD_func__13158);
extern (C) void gtk_tree_view_column_set_attributes(aGtkTreeViewColumn *, aGtkCellRenderer *, ...);
extern (C) void gtk_tree_view_column_add_attribute(aGtkTreeViewColumn *, aGtkCellRenderer *, char *, gint);
extern (C) _GList * gtk_tree_view_column_get_cell_renderers(aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_column_clear(aGtkTreeViewColumn *);
extern (C) void gtk_tree_view_column_pack_end(aGtkTreeViewColumn *, aGtkCellRenderer *, gint);
extern (C) void gtk_tree_view_column_pack_start(aGtkTreeViewColumn *, aGtkCellRenderer *, gint);
extern (C) _GtkTreeViewColumn * gtk_tree_view_column_new_with_attributes(char *, aGtkCellRenderer *, ...);
extern (C) _GtkTreeViewColumn * gtk_tree_view_column_new();
extern (C) GType gtk_tree_view_column_get_type();
extern (C) gint gtk_tree_sortable_has_default_sort_func(void *);
extern (C) void gtk_tree_sortable_set_default_sort_func(void *, _BCD_func__11685, void *, _BCD_func__13158);
extern (C) void gtk_tree_sortable_set_sort_func(void *, gint, _BCD_func__11685, void *, _BCD_func__13158);
extern (C) void gtk_tree_sortable_set_sort_column_id(void *, gint, gint);
extern (C) gint gtk_tree_sortable_get_sort_column_id(void *, gint *, gint *);
extern (C) void gtk_tree_sortable_sort_column_changed(void *);
extern (C) GType gtk_tree_sortable_get_type();
extern (C) void gtk_tree_model_rows_reordered(void *, void *, aGtkTreeIter *, gint *);
extern (C) void gtk_tree_model_row_deleted(void *, void *);
extern (C) void gtk_tree_model_row_has_child_toggled(void *, void *, aGtkTreeIter *);
extern (C) void gtk_tree_model_row_inserted(void *, void *, aGtkTreeIter *);
extern (C) void gtk_tree_model_row_changed(void *, void *, aGtkTreeIter *);
extern (C) void gtk_tree_model_foreach(void *, _BCD_func__11697, void *);
extern (C) void gtk_tree_model_get_valist(void *, aGtkTreeIter *, char *);
extern (C) void gtk_tree_model_get(void *, aGtkTreeIter *, ...);
extern (C) void gtk_tree_model_unref_node(void *, aGtkTreeIter *);
extern (C) void gtk_tree_model_ref_node(void *, aGtkTreeIter *);
extern (C) gint gtk_tree_model_iter_parent(void *, aGtkTreeIter *, aGtkTreeIter *);
extern (C) gint gtk_tree_model_iter_nth_child(void *, aGtkTreeIter *, aGtkTreeIter *, gint);
extern (C) gint gtk_tree_model_iter_n_children(void *, aGtkTreeIter *);
extern (C) gint gtk_tree_model_iter_has_child(void *, aGtkTreeIter *);
extern (C) gint gtk_tree_model_iter_children(void *, aGtkTreeIter *, aGtkTreeIter *);
extern (C) gint gtk_tree_model_iter_next(void *, aGtkTreeIter *);
extern (C) void gtk_tree_model_get_value(void *, aGtkTreeIter *, gint, _GValue *);
extern (C) void * gtk_tree_model_get_path(void *, aGtkTreeIter *);
extern (C) gint gtk_tree_model_get_iter_first(void *, aGtkTreeIter *);
extern (C) char * gtk_tree_model_get_string_from_iter(void *, aGtkTreeIter *);
extern (C) gint gtk_tree_model_get_iter_from_string(void *, aGtkTreeIter *, char *);
extern (C) gint gtk_tree_model_get_iter(void *, aGtkTreeIter *, void *);
extern (C) GType gtk_tree_model_get_column_type(void *, gint);
extern (C) gint gtk_tree_model_get_n_columns(void *);
extern (C) gint gtk_tree_model_get_flags(void *);
extern (C) GType gtk_tree_model_get_type();
extern (C) GType gtk_tree_iter_get_type();
extern (C) void gtk_tree_iter_free(aGtkTreeIter *);
extern (C) _GtkTreeIter * gtk_tree_iter_copy(aGtkTreeIter *);
extern (C) void gtk_tree_row_reference_reordered(_GObject *, void *, aGtkTreeIter *, gint *);
extern (C) void gtk_tree_row_reference_deleted(_GObject *, void *);
extern (C) void gtk_tree_row_reference_inserted(_GObject *, void *);
extern (C) void gtk_tree_row_reference_free(void *);
extern (C) void * gtk_tree_row_reference_copy(void *);
extern (C) gint gtk_tree_row_reference_valid(void *);
extern (C) void * gtk_tree_row_reference_get_model(void *);
extern (C) void * gtk_tree_row_reference_get_path(void *);
extern (C) void * gtk_tree_row_reference_new_proxy(_GObject *, void *, void *);
extern (C) void * gtk_tree_row_reference_new(void *, void *);
extern (C) GType gtk_tree_row_reference_get_type();
extern (C) gint gtk_tree_path_is_descendant(void *, void *);
extern (C) gint gtk_tree_path_is_ancestor(void *, void *);
extern (C) void gtk_tree_path_down(void *);
extern (C) gint gtk_tree_path_up(void *);
extern (C) gint gtk_tree_path_prev(void *);
extern (C) void gtk_tree_path_next(void *);
extern (C) gint gtk_tree_path_compare(void *, void *);
extern (C) GType gtk_tree_path_get_type();
extern (C) void * gtk_tree_path_copy(void *);
extern (C) void gtk_tree_path_free(void *);
extern (C) gint * gtk_tree_path_get_indices(void *);
extern (C) gint gtk_tree_path_get_depth(void *);
extern (C) void gtk_tree_path_prepend_index(void *, gint);
extern (C) void gtk_tree_path_append_index(void *, gint);
extern (C) void * gtk_tree_path_new_first();
extern (C) char * gtk_tree_path_to_string(void *);
extern (C) void * gtk_tree_path_new_from_indices(gint, ...);
extern (C) void * gtk_tree_path_new_from_string(char *);
extern (C) void * gtk_tree_path_new();
extern (C) void gtk_cell_renderer_stop_editing(aGtkCellRenderer *, gint);
extern (C) void gtk_cell_renderer_editing_canceled(aGtkCellRenderer *);
extern (C) void gtk_cell_renderer_get_fixed_size(aGtkCellRenderer *, gint *, gint *);
extern (C) void gtk_cell_renderer_set_fixed_size(aGtkCellRenderer *, gint, gint);
extern (C) void * gtk_cell_renderer_start_editing(aGtkCellRenderer *, _GdkEvent *, aGtkWidget *, char *, _GdkRectangle *, _GdkRectangle *, gint);
extern (C) gint gtk_cell_renderer_activate(aGtkCellRenderer *, _GdkEvent *, aGtkWidget *, char *, _GdkRectangle *, _GdkRectangle *, gint);
extern (C) void gtk_cell_renderer_render(aGtkCellRenderer *, _GdkDrawable *, aGtkWidget *, _GdkRectangle *, _GdkRectangle *, _GdkRectangle *, gint);
extern (C) void gtk_cell_renderer_get_size(aGtkCellRenderer *, aGtkWidget *, _GdkRectangle *, gint *, gint *, gint *, gint *);
extern (C) GType gtk_cell_renderer_get_type();
extern (C) void gtk_cell_editable_remove_widget(void *);
extern (C) void gtk_cell_editable_editing_done(void *);
extern (C) void gtk_cell_editable_start_editing(void *, _GdkEvent *);
extern (C) GType gtk_cell_editable_get_type();
extern (C) void gtk_calendar_thaw(aGtkCalendar *);
extern (C) void gtk_calendar_freeze(aGtkCalendar *);
extern (C) void gtk_calendar_get_date(aGtkCalendar *, guint *, guint *, guint *);
extern (C) void gtk_calendar_display_options(aGtkCalendar *, gint);
extern (C) gint gtk_calendar_get_display_options(aGtkCalendar *);
extern (C) void gtk_calendar_set_display_options(aGtkCalendar *, gint);
extern (C) void gtk_calendar_clear_marks(aGtkCalendar *);
extern (C) gint gtk_calendar_unmark_day(aGtkCalendar *, guint);
extern (C) gint gtk_calendar_mark_day(aGtkCalendar *, guint);
extern (C) void gtk_calendar_select_day(aGtkCalendar *, guint);
extern (C) gint gtk_calendar_select_month(aGtkCalendar *, guint, guint);
extern (C) _GtkWidget * gtk_calendar_new();
extern (C) GType gtk_calendar_get_type();
extern (C) void gtk_signal_compat_matched(aGtkObject *, _BCD_func__12122, void *, gint, guint);
extern (C) void gtk_signal_emitv_by_name(aGtkObject *, char *, aGtkArg *);
extern (C) void gtk_signal_emit_by_name(aGtkObject *, char *, ...);
extern (C) void gtk_signal_emit(aGtkObject *, guint, ...);
extern (C) void gtk_signal_emitv(aGtkObject *, guint, aGtkArg *);
extern (C) guint gtk_signal_connect_full(aGtkObject *, char *, _BCD_func__12122, _BCD_func__13157, void *, _BCD_func__13158, gint, gint);
extern (C) void gtk_signal_connect_while_alive(aGtkObject *, char *, _BCD_func__12122, void *, aGtkObject *);
extern (C) void gtk_signal_connect_object_while_alive(aGtkObject *, char *, _BCD_func__12122, aGtkObject *);
extern (C) void gtk_signal_emit_stop_by_name(aGtkObject *, char *);
extern (C) guint gtk_signal_new(char *, gint, guint, guint, _BCD_func__13146, guint, guint, ...);
extern (C) guint gtk_signal_newv(char *, gint, guint, guint, _BCD_func__13146, guint, guint, guint *);
extern (C) void gtk_marshal_VOID__UINT_STRING(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_VOID__UINT_POINTER_UINT_UINT_ENUM(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_VOID__UINT_POINTER_UINT_ENUM_ENUM_POINTER(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_VOID__STRING_INT_POINTER(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_VOID__POINTER_UINT_UINT(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_VOID__POINTER_INT_INT_POINTER_UINT_UINT(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_VOID__POINTER_POINTER_UINT_UINT(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_VOID__POINTER_UINT_ENUM(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_VOID__POINTER_UINT(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_VOID__POINTER_STRING_STRING(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_VOID__POINTER_POINTER_POINTER(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_VOID__POINTER_POINTER(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_VOID__POINTER_INT(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_VOID__INT_INT_POINTER(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_VOID__INT_INT(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_VOID__ENUM_FLOAT_BOOLEAN(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_VOID__ENUM_FLOAT(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_INT__POINTER_CHAR_CHAR(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_INT__POINTER(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_ENUM__ENUM(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_BOOLEAN__POINTER_STRING_STRING_POINTER(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_BOOLEAN__POINTER_INT_INT_UINT(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_BOOLEAN__POINTER_INT_INT(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_BOOLEAN__POINTER_POINTER_INT_INT(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_BOOLEAN__POINTER(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void gtk_marshal_BOOLEAN__VOID(_GClosure *, _GValue *, guint, _GValue *, void *, void *);
extern (C) void _gtk_button_paint(aGtkButton *, _GdkRectangle *, gint, gint, char *, char *);
extern (C) void _gtk_button_set_depressed(aGtkButton *, gint);
extern (C) gint gtk_button_get_image_position(aGtkButton *);
extern (C) void gtk_button_set_image_position(aGtkButton *, gint);
extern (C) _GtkWidget * gtk_button_get_image(aGtkButton *);
extern (C) void gtk_button_set_image(aGtkButton *, aGtkWidget *);
extern (C) void gtk_button_get_alignment(aGtkButton *, float *, float *);
extern (C) void gtk_button_set_alignment(aGtkButton *, float, float);
extern (C) gint gtk_button_get_focus_on_click(aGtkButton *);
extern (C) void gtk_button_set_focus_on_click(aGtkButton *, gint);
extern (C) gint gtk_button_get_use_stock(aGtkButton *);
extern (C) void gtk_button_set_use_stock(aGtkButton *, gint);
extern (C) gint gtk_button_get_use_underline(aGtkButton *);
extern (C) void gtk_button_set_use_underline(aGtkButton *, gint);
extern (C) char * gtk_button_get_label(aGtkButton *);
extern (C) void gtk_button_set_label(aGtkButton *, char *);
extern (C) gint gtk_button_get_relief(aGtkButton *);
extern (C) void gtk_button_set_relief(aGtkButton *, gint);
extern (C) void gtk_button_leave(aGtkButton *);
extern (C) void gtk_button_enter(aGtkButton *);
extern (C) void gtk_button_clicked(aGtkButton *);
extern (C) void gtk_button_released(aGtkButton *);
extern (C) void gtk_button_pressed(aGtkButton *);
extern (C) _GtkWidget * gtk_button_new_with_mnemonic(char *);
extern (C) _GtkWidget * gtk_button_new_from_stock(char *);
extern (C) _GtkWidget * gtk_button_new_with_label(char *);
extern (C) _GtkWidget * gtk_button_new();
extern (C) GType gtk_button_get_type();
extern (C) void gtk_image_get(aGtkImage *, _GdkImage * *, _GdkDrawable * *);
extern (C) void gtk_image_set(aGtkImage *, _GdkImage *, _GdkDrawable *);
extern (C) gint gtk_image_get_pixel_size(aGtkImage *);
extern (C) void gtk_image_get_icon_name(aGtkImage *, char * *, gint *);
extern (C) void * gtk_image_get_animation(aGtkImage *);
extern (C) void gtk_image_get_icon_set(aGtkImage *, void * *, gint *);
extern (C) void gtk_image_get_stock(aGtkImage *, char * *, gint *);
extern (C) void * gtk_image_get_pixbuf(aGtkImage *);
extern (C) void gtk_image_get_image(aGtkImage *, _GdkImage * *, _GdkDrawable * *);
extern (C) void gtk_image_get_pixmap(aGtkImage *, _GdkDrawable * *, _GdkDrawable * *);
extern (C) gint gtk_image_get_storage_type(aGtkImage *);
extern (C) void gtk_image_set_pixel_size(aGtkImage *, gint);
extern (C) void gtk_image_set_from_icon_name(aGtkImage *, char *, gint);
extern (C) void gtk_image_set_from_animation(aGtkImage *, void *);
extern (C) void gtk_image_set_from_icon_set(aGtkImage *, void *, gint);
extern (C) void gtk_image_set_from_stock(aGtkImage *, char *, gint);
extern (C) void gtk_image_set_from_pixbuf(aGtkImage *, void *);
extern (C) void gtk_image_set_from_file(aGtkImage *, char *);
extern (C) void gtk_image_set_from_image(aGtkImage *, _GdkImage *, _GdkDrawable *);
extern (C) void gtk_image_set_from_pixmap(aGtkImage *, _GdkDrawable *, _GdkDrawable *);
extern (C) void gtk_image_clear(aGtkImage *);
extern (C) _GtkWidget * gtk_image_new_from_icon_name(char *, gint);
extern (C) _GtkWidget * gtk_image_new_from_animation(void *);
extern (C) _GtkWidget * gtk_image_new_from_icon_set(void *, gint);
extern (C) _GtkWidget * gtk_image_new_from_stock(char *, gint);
extern (C) _GtkWidget * gtk_image_new_from_pixbuf(void *);
extern (C) _GtkWidget * gtk_image_new_from_file(char *);
extern (C) _GtkWidget * gtk_image_new_from_image(_GdkImage *, _GdkDrawable *);
extern (C) _GtkWidget * gtk_image_new_from_pixmap(_GdkDrawable *, _GdkDrawable *);
extern (C) _GtkWidget * gtk_image_new();
extern (C) GType gtk_image_get_type();
extern (C) _GObject * gtk_buildable_get_internal_child(void *, aGtkBuilder *, char *);
extern (C) void gtk_buildable_parser_finished(void *, aGtkBuilder *);
extern (C) void gtk_buildable_custom_finished(void *, aGtkBuilder *, _GObject *, char *, void *);
extern (C) void gtk_buildable_custom_tag_end(void *, aGtkBuilder *, _GObject *, char *, void * *);
extern (C) gint gtk_buildable_custom_tag_start(void *, aGtkBuilder *, _GObject *, char *, _GMarkupParser *, void * *);
extern (C) _GObject * gtk_buildable_construct_child(void *, aGtkBuilder *, char *);
extern (C) void gtk_buildable_set_buildable_property(void *, aGtkBuilder *, char *, _GValue *);
extern (C) void gtk_buildable_add_child(void *, aGtkBuilder *, _GObject *, char *);
extern (C) char * gtk_buildable_get_name(void *);
extern (C) void gtk_buildable_set_name(void *, char *);
extern (C) GType gtk_buildable_get_type();
extern (C) gint gtk_builder_value_from_string_type(aGtkBuilder *, GType, char *, _GValue *, _GError * *);
extern (C) gint gtk_builder_value_from_string(aGtkBuilder *, _GParamSpec *, char *, _GValue *, _GError * *);
extern (C) GType gtk_builder_get_type_from_name(aGtkBuilder *, char *);
extern (C) char * gtk_builder_get_translation_domain(aGtkBuilder *);
extern (C) void gtk_builder_set_translation_domain(aGtkBuilder *, char *);
extern (C) void gtk_builder_connect_signals_full(aGtkBuilder *, _BCD_func__11889, void *);
extern (C) void gtk_builder_connect_signals(aGtkBuilder *, void *);
extern (C) _GSList * gtk_builder_get_objects(aGtkBuilder *);
extern (C) _GObject * gtk_builder_get_object(aGtkBuilder *, char *);
extern (C) guint gtk_builder_add_from_string(aGtkBuilder *, char *, gsize, _GError * *);
extern (C) guint gtk_builder_add_from_file(aGtkBuilder *, char *, _GError * *);
extern (C) _GtkBuilder * gtk_builder_new();
extern (C) GType gtk_builder_get_type();
extern (C) GQuark gtk_builder_error_quark();
extern (C) guint _gtk_binding_signal_new(char *, guint, gint, _BCD_func__12122, _BCD_func__14366, void *, _BCD_func__13146, guint, guint, ...);
extern (C) void _gtk_binding_entry_add_signall(aGtkBindingSet *, guint, gint, char *, _GSList *);
extern (C) void _gtk_binding_reset_parsed();
extern (C) guint _gtk_binding_parse_binding(_GScanner *);
extern (C) void gtk_binding_set_add_path(aGtkBindingSet *, gint, char *, gint);
extern (C) void gtk_binding_entry_remove(aGtkBindingSet *, guint, gint);
extern (C) void gtk_binding_entry_add_signal(aGtkBindingSet *, guint, gint, char *, guint, ...);
extern (C) void gtk_binding_entry_skip(aGtkBindingSet *, guint, gint);
extern (C) guint gtk_binding_parse_binding(_GScanner *);
extern (C) void gtk_binding_entry_add_signall(aGtkBindingSet *, guint, gint, char *, _GSList *);
extern (C) void gtk_binding_entry_clear(aGtkBindingSet *, guint, gint);
extern (C) gint gtk_binding_set_activate(aGtkBindingSet *, guint, gint, aGtkObject *);
extern (C) gint gtk_bindings_activate_event(aGtkObject *, _GdkEventKey *);
extern (C) gint gtk_bindings_activate(aGtkObject *, guint, gint);
extern (C) _GtkBindingSet * gtk_binding_set_find(char *);
extern (C) _GtkBindingSet * gtk_binding_set_by_class(void *);
extern (C) _GtkBindingSet * gtk_binding_set_new(char *);
extern (C) void _gtk_button_box_child_requisition(aGtkWidget *, gint *, gint *, gint *, gint *);
extern (C) void gtk_button_box_get_child_ipadding(aGtkButtonBox *, gint *, gint *);
extern (C) void gtk_button_box_get_child_size(aGtkButtonBox *, gint *, gint *);
extern (C) void gtk_button_box_set_child_ipadding(aGtkButtonBox *, gint, gint);
extern (C) void gtk_button_box_set_child_size(aGtkButtonBox *, gint, gint);
extern (C) void gtk_button_box_set_child_secondary(aGtkButtonBox *, aGtkWidget *, gint);
extern (C) gint gtk_button_box_get_child_secondary(aGtkButtonBox *, aGtkWidget *);
extern (C) void gtk_button_box_set_layout(aGtkButtonBox *, gint);
extern (C) gint gtk_button_box_get_layout(aGtkButtonBox *);
extern (C) GType gtk_button_box_get_type();
extern (C) void gtk_box_set_child_packing(aGtkBox *, aGtkWidget *, gint, gint, guint, gint);
extern (C) void gtk_box_query_child_packing(aGtkBox *, aGtkWidget *, gint *, gint *, guint *, gint *);
extern (C) void gtk_box_reorder_child(aGtkBox *, aGtkWidget *, gint);
extern (C) gint gtk_box_get_spacing(aGtkBox *);
extern (C) void gtk_box_set_spacing(aGtkBox *, gint);
extern (C) gint gtk_box_get_homogeneous(aGtkBox *);
extern (C) void gtk_box_set_homogeneous(aGtkBox *, gint);
extern (C) void gtk_box_pack_end_defaults(aGtkBox *, aGtkWidget *);
extern (C) void gtk_box_pack_start_defaults(aGtkBox *, aGtkWidget *);
extern (C) void gtk_box_pack_end(aGtkBox *, aGtkWidget *, gint, gint, guint);
extern (C) void gtk_box_pack_start(aGtkBox *, aGtkWidget *, gint, gint, guint);
extern (C) GType gtk_box_get_type();
extern (C) void gtk_assistant_update_buttons_state(aGtkAssistant *);
extern (C) void gtk_assistant_remove_action_widget(aGtkAssistant *, aGtkWidget *);
extern (C) void gtk_assistant_add_action_widget(aGtkAssistant *, aGtkWidget *);
extern (C) gint gtk_assistant_get_page_complete(aGtkAssistant *, aGtkWidget *);
extern (C) void gtk_assistant_set_page_complete(aGtkAssistant *, aGtkWidget *, gint);
extern (C) void * gtk_assistant_get_page_side_image(aGtkAssistant *, aGtkWidget *);
extern (C) void gtk_assistant_set_page_side_image(aGtkAssistant *, aGtkWidget *, void *);
extern (C) void * gtk_assistant_get_page_header_image(aGtkAssistant *, aGtkWidget *);
extern (C) void gtk_assistant_set_page_header_image(aGtkAssistant *, aGtkWidget *, void *);
extern (C) char * gtk_assistant_get_page_title(aGtkAssistant *, aGtkWidget *);
extern (C) void gtk_assistant_set_page_title(aGtkAssistant *, aGtkWidget *, char *);
extern (C) gint gtk_assistant_get_page_type(aGtkAssistant *, aGtkWidget *);
extern (C) void gtk_assistant_set_page_type(aGtkAssistant *, aGtkWidget *, gint);
extern (C) void gtk_assistant_set_forward_page_func(aGtkAssistant *, _BCD_func__11971, void *, _BCD_func__13158);
extern (C) gint gtk_assistant_insert_page(aGtkAssistant *, aGtkWidget *, gint);
extern (C) gint gtk_assistant_append_page(aGtkAssistant *, aGtkWidget *);
extern (C) gint gtk_assistant_prepend_page(aGtkAssistant *, aGtkWidget *);
extern (C) _GtkWidget * gtk_assistant_get_nth_page(aGtkAssistant *, gint);
extern (C) gint gtk_assistant_get_n_pages(aGtkAssistant *);
extern (C) void gtk_assistant_set_current_page(aGtkAssistant *, gint);
extern (C) gint gtk_assistant_get_current_page(aGtkAssistant *);
extern (C) _GtkWidget * gtk_assistant_new();
extern (C) GType gtk_assistant_get_type();
extern (C) void gtk_aspect_frame_set(aGtkAspectFrame *, float, float, float, gint);
extern (C) _GtkWidget * gtk_aspect_frame_new(char *, float, float, float, gint);
extern (C) GType gtk_aspect_frame_get_type();
extern (C) gint gtk_frame_get_shadow_type(aGtkFrame *);
extern (C) void gtk_frame_set_shadow_type(aGtkFrame *, gint);
extern (C) void gtk_frame_get_label_align(aGtkFrame *, float *, float *);
extern (C) void gtk_frame_set_label_align(aGtkFrame *, float, float);
extern (C) _GtkWidget * gtk_frame_get_label_widget(aGtkFrame *);
extern (C) void gtk_frame_set_label_widget(aGtkFrame *, aGtkWidget *);
extern (C) char * gtk_frame_get_label(aGtkFrame *);
extern (C) void gtk_frame_set_label(aGtkFrame *, char *);
extern (C) _GtkWidget * gtk_frame_new(char *);
extern (C) GType gtk_frame_get_type();
extern (C) void gtk_arrow_set(aGtkArrow *, gint, gint);
extern (C) _GtkWidget * gtk_arrow_new(gint, gint);
extern (C) GType gtk_arrow_get_type();
extern (C) void gtk_alignment_get_padding(aGtkAlignment *, guint *, guint *, guint *, guint *);
extern (C) void gtk_alignment_set_padding(aGtkAlignment *, guint, guint, guint, guint);
extern (C) void gtk_alignment_set(aGtkAlignment *, float, float, float, float);
extern (C) _GtkWidget * gtk_alignment_new(float, float, float, float);
extern (C) GType gtk_alignment_get_type();
extern (C) void _gtk_action_group_emit_post_activate(aGtkActionGroup *, aGtkAction *);
extern (C) void _gtk_action_group_emit_pre_activate(aGtkActionGroup *, aGtkAction *);
extern (C) void _gtk_action_group_emit_disconnect_proxy(aGtkActionGroup *, aGtkAction *, aGtkWidget *);
extern (C) void _gtk_action_group_emit_connect_proxy(aGtkActionGroup *, aGtkAction *, aGtkWidget *);
extern (C) char * gtk_action_group_translate_string(aGtkActionGroup *, char *);
extern (C) void gtk_action_group_set_translation_domain(aGtkActionGroup *, char *);
extern (C) void gtk_action_group_set_translate_func(aGtkActionGroup *, _BCD_func__12124, void *, _BCD_func__13158);
extern (C) void gtk_action_group_add_radio_actions_full(aGtkActionGroup *, aGtkRadioActionEntry *, guint, gint, _BCD_func__12122, void *, _BCD_func__13158);
extern (C) void gtk_action_group_add_toggle_actions_full(aGtkActionGroup *, aGtkToggleActionEntry *, guint, void *, _BCD_func__13158);
extern (C) void gtk_action_group_add_actions_full(aGtkActionGroup *, aGtkActionEntry *, guint, void *, _BCD_func__13158);
extern (C) void gtk_action_group_add_radio_actions(aGtkActionGroup *, aGtkRadioActionEntry *, guint, gint, _BCD_func__12122, void *);
extern (C) void gtk_action_group_add_toggle_actions(aGtkActionGroup *, aGtkToggleActionEntry *, guint, void *);
extern (C) void gtk_action_group_add_actions(aGtkActionGroup *, aGtkActionEntry *, guint, void *);
extern (C) void gtk_action_group_remove_action(aGtkActionGroup *, aGtkAction *);
extern (C) void gtk_action_group_add_action_with_accel(aGtkActionGroup *, aGtkAction *, char *);
extern (C) void gtk_action_group_add_action(aGtkActionGroup *, aGtkAction *);
extern (C) _GList * gtk_action_group_list_actions(aGtkActionGroup *);
extern (C) _GtkAction * gtk_action_group_get_action(aGtkActionGroup *, char *);
extern (C) void gtk_action_group_set_visible(aGtkActionGroup *, gint);
extern (C) gint gtk_action_group_get_visible(aGtkActionGroup *);
extern (C) void gtk_action_group_set_sensitive(aGtkActionGroup *, gint);
extern (C) gint gtk_action_group_get_sensitive(aGtkActionGroup *);
extern (C) char * gtk_action_group_get_name(aGtkActionGroup *);
extern (C) _GtkActionGroup * gtk_action_group_new(char *);
extern (C) GType gtk_action_group_get_type();
extern (C) void gtk_item_factories_path_delete(char *, char *);
extern (C) void gtk_item_factory_create_menu_entries(guint, GtkMenuEntry *);
extern (C) _GtkItemFactory * gtk_item_factory_from_path(char *);
extern (C) void gtk_item_factory_create_items_ac(aGtkItemFactory *, guint, aGtkItemFactoryEntry *, void *, guint);
extern (C) void gtk_item_factory_set_translate_func(aGtkItemFactory *, _BCD_func__12124, void *, _BCD_func__13158);
extern (C) void * gtk_item_factory_popup_data_from_widget(aGtkWidget *);
extern (C) void * gtk_item_factory_popup_data(aGtkItemFactory *);
extern (C) void gtk_item_factory_popup_with_data(aGtkItemFactory *, void *, _BCD_func__13158, guint, guint, guint, guint);
extern (C) void gtk_item_factory_popup(aGtkItemFactory *, guint, guint, guint, guint);
extern (C) void gtk_item_factory_delete_entries(aGtkItemFactory *, guint, aGtkItemFactoryEntry *);
extern (C) void gtk_item_factory_delete_entry(aGtkItemFactory *, aGtkItemFactoryEntry *);
extern (C) void gtk_item_factory_delete_item(aGtkItemFactory *, char *);
extern (C) void gtk_item_factory_create_items(aGtkItemFactory *, guint, aGtkItemFactoryEntry *, void *);
extern (C) void gtk_item_factory_create_item(aGtkItemFactory *, aGtkItemFactoryEntry *, void *, guint);
extern (C) _GtkWidget * gtk_item_factory_get_item_by_action(aGtkItemFactory *, guint);
extern (C) _GtkWidget * gtk_item_factory_get_widget_by_action(aGtkItemFactory *, guint);
extern (C) _GtkWidget * gtk_item_factory_get_widget(aGtkItemFactory *, char *);
extern (C) _GtkWidget * gtk_item_factory_get_item(aGtkItemFactory *, char *);
extern (C) char * gtk_item_factory_path_from_widget(aGtkWidget *);
extern (C) _GtkItemFactory * gtk_item_factory_from_widget(aGtkWidget *);
extern (C) void gtk_item_factory_add_foreign(aGtkWidget *, char *, aGtkAccelGroup *, guint, gint);
extern (C) void gtk_item_factory_construct(aGtkItemFactory *, guint, char *, aGtkAccelGroup *);
extern (C) _GtkItemFactory * gtk_item_factory_new(guint, char *, aGtkAccelGroup *);
extern (C) guint gtk_item_factory_get_type();
extern (C) void _gtk_action_sync_menu_visible(aGtkAction *, aGtkWidget *, gint);
extern (C) void _gtk_action_sync_visible(aGtkAction *);
extern (C) void _gtk_action_sync_sensitive(aGtkAction *);
extern (C) void gtk_action_set_accel_group(aGtkAction *, aGtkAccelGroup *);
extern (C) void gtk_action_set_accel_path(aGtkAction *, char *);
extern (C) void _gtk_action_emit_activate(aGtkAction *);
extern (C) void gtk_action_unblock_activate_from(aGtkAction *, aGtkWidget *);
extern (C) void gtk_action_block_activate_from(aGtkAction *, aGtkWidget *);
extern (C) _GClosure * gtk_action_get_accel_closure(aGtkAction *);
extern (C) char * gtk_action_get_accel_path(aGtkAction *);
extern (C) void gtk_action_disconnect_accelerator(aGtkAction *);
extern (C) void gtk_action_connect_accelerator(aGtkAction *);
extern (C) _GtkAction * gtk_widget_get_action(aGtkWidget *);
extern (C) _GSList * gtk_action_get_proxies(aGtkAction *);
extern (C) void gtk_action_disconnect_proxy(aGtkAction *, aGtkWidget *);
extern (C) void gtk_action_connect_proxy(aGtkAction *, aGtkWidget *);
extern (C) _GtkWidget * gtk_action_create_menu(aGtkAction *);
extern (C) _GtkWidget * gtk_action_create_tool_item(aGtkAction *);
extern (C) _GtkWidget * gtk_action_create_menu_item(aGtkAction *);
extern (C) _GtkWidget * gtk_action_create_icon(aGtkAction *, gint);
extern (C) void gtk_action_activate(aGtkAction *);
extern (C) void gtk_action_set_visible(aGtkAction *, gint);
extern (C) gint gtk_action_get_visible(aGtkAction *);
extern (C) gint gtk_action_is_visible(aGtkAction *);
extern (C) void gtk_action_set_sensitive(aGtkAction *, gint);
extern (C) gint gtk_action_get_sensitive(aGtkAction *);
extern (C) gint gtk_action_is_sensitive(aGtkAction *);
extern (C) char * gtk_action_get_name(aGtkAction *);
extern (C) _GtkAction * gtk_action_new(char *, char *, char *, char *);
extern (C) GType gtk_action_get_type();
extern (C) void gtk_accessible_connect_widget_destroyed(aGtkAccessible *);
extern (C) GType gtk_accessible_get_type();
extern (C) gint _gtk_accel_path_is_valid(char *);
extern (C) void _gtk_accel_map_remove_group(char *, aGtkAccelGroup *);
extern (C) void _gtk_accel_map_add_group(char *, aGtkAccelGroup *);
extern (C) void _gtk_accel_map_init();
extern (C) void * gtk_accel_map_get();
extern (C) GType gtk_accel_map_get_type();
extern (C) void gtk_accel_map_foreach_unfiltered(void *, _BCD_func__12490);
extern (C) void gtk_accel_map_add_filter(char *);
extern (C) void gtk_accel_map_unlock_path(char *);
extern (C) void gtk_accel_map_lock_path(char *);
extern (C) void gtk_accel_map_save_fd(gint);
extern (C) void gtk_accel_map_load_scanner(_GScanner *);
extern (C) void gtk_accel_map_load_fd(gint);
extern (C) void gtk_accel_map_foreach(void *, _BCD_func__12490);
extern (C) void gtk_accel_map_save(char *);
extern (C) void gtk_accel_map_load(char *);
extern (C) gint gtk_accel_map_change_entry(char *, guint, gint, gint);
extern (C) gint gtk_accel_map_lookup_entry(char *, aGtkAccelKey *);
extern (C) void gtk_accel_map_add_entry(char *, guint, gint);
extern (C) char * _gtk_accel_label_class_get_accelerator_label(aGtkAccelLabelClass *, guint, gint);
extern (C) gint gtk_accel_label_refetch(aGtkAccelLabel *);
extern (C) void gtk_accel_label_set_accel_closure(aGtkAccelLabel *, _GClosure *);
extern (C) void gtk_accel_label_set_accel_widget(aGtkAccelLabel *, aGtkWidget *);
extern (C) guint gtk_accel_label_get_accel_width(aGtkAccelLabel *);
extern (C) _GtkWidget * gtk_accel_label_get_accel_widget(aGtkAccelLabel *);
extern (C) _GtkWidget * gtk_accel_label_new(char *);
extern (C) GType gtk_accel_label_get_type();
extern (C) guint gtk_label_parse_uline(aGtkLabel *, char *);
extern (C) void gtk_label_get(aGtkLabel *, char * *);
extern (C) gint gtk_label_get_single_line_mode(aGtkLabel *);
extern (C) void gtk_label_set_single_line_mode(aGtkLabel *, gint);
extern (C) void gtk_label_get_layout_offsets(aGtkLabel *, gint *, gint *);
extern (C) void * gtk_label_get_layout(aGtkLabel *);
extern (C) gint gtk_label_get_selection_bounds(aGtkLabel *, gint *, gint *);
extern (C) void gtk_label_select_region(aGtkLabel *, gint, gint);
extern (C) double gtk_label_get_angle(aGtkLabel *);
extern (C) void gtk_label_set_angle(aGtkLabel *, double);
extern (C) gint gtk_label_get_selectable(aGtkLabel *);
extern (C) void gtk_label_set_selectable(aGtkLabel *, gint);
extern (C) gint gtk_label_get_line_wrap_mode(aGtkLabel *);
extern (C) void gtk_label_set_line_wrap_mode(aGtkLabel *, gint);
extern (C) gint gtk_label_get_line_wrap(aGtkLabel *);
extern (C) void gtk_label_set_line_wrap(aGtkLabel *, gint);
extern (C) void gtk_label_set_pattern(aGtkLabel *, char *);
extern (C) gint gtk_label_get_max_width_chars(aGtkLabel *);
extern (C) void gtk_label_set_max_width_chars(aGtkLabel *, gint);
extern (C) gint gtk_label_get_width_chars(aGtkLabel *);
extern (C) void gtk_label_set_width_chars(aGtkLabel *, gint);
extern (C) gint gtk_label_get_ellipsize(aGtkLabel *);
extern (C) void gtk_label_set_ellipsize(aGtkLabel *, gint);
extern (C) gint gtk_label_get_justify(aGtkLabel *);
extern (C) void gtk_label_set_justify(aGtkLabel *, gint);
extern (C) void gtk_label_set_text_with_mnemonic(aGtkLabel *, in char *);
extern (C) _GtkWidget * gtk_label_get_mnemonic_widget(aGtkLabel *);
extern (C) void gtk_label_set_mnemonic_widget(aGtkLabel *, aGtkWidget *);
extern (C) guint gtk_label_get_mnemonic_keyval(aGtkLabel *);
extern (C) void gtk_label_set_markup_with_mnemonic(aGtkLabel *, char *);
extern (C) gint gtk_label_get_use_underline(aGtkLabel *);
extern (C) void gtk_label_set_use_underline(aGtkLabel *, gint);
extern (C) gint gtk_label_get_use_markup(aGtkLabel *);
extern (C) void gtk_label_set_use_markup(aGtkLabel *, gint);
extern (C) void gtk_label_set_markup(aGtkLabel *, char *);
extern (C) char * gtk_label_get_label(aGtkLabel *);
extern (C) void gtk_label_set_label(aGtkLabel *, char *);
extern (C) void * gtk_label_get_attributes(aGtkLabel *);
extern (C) void gtk_label_set_attributes(aGtkLabel *, void *);
extern (C) char * gtk_label_get_text(aGtkLabel *);
extern (C) void gtk_label_set_text(aGtkLabel *, char *);
extern (C) _GtkWidget * gtk_label_new_with_mnemonic(char *);
extern (C) _GtkWidget * gtk_label_new(char *);
extern (C) GType gtk_label_get_type();
extern (C) _GList * gtk_menu_get_for_attach_widget(aGtkWidget *);
extern (C) void gtk_menu_set_monitor(aGtkMenu *, gint);
extern (C) void gtk_menu_attach(aGtkMenu *, aGtkWidget *, guint, guint, guint, guint);
extern (C) void gtk_menu_set_screen(aGtkMenu *, _GdkScreen *);
extern (C) void gtk_menu_reorder_child(aGtkMenu *, aGtkWidget *, gint);
extern (C) char * gtk_menu_get_title(aGtkMenu *);
extern (C) void gtk_menu_set_title(aGtkMenu *, char *);
extern (C) gint gtk_menu_get_tearoff_state(aGtkMenu *);
extern (C) void gtk_menu_set_tearoff_state(aGtkMenu *, gint);
extern (C) _GtkWidget * gtk_menu_get_attach_widget(aGtkMenu *);
extern (C) void gtk_menu_detach(aGtkMenu *);
extern (C) void gtk_menu_attach_to_widget(aGtkMenu *, aGtkWidget *, _BCD_func__12552);
extern (C) void gtk_menu_set_accel_path(aGtkMenu *, char *);
extern (C) _GtkAccelGroup * gtk_menu_get_accel_group(aGtkMenu *);
extern (C) void gtk_menu_set_accel_group(aGtkMenu *, aGtkAccelGroup *);
extern (C) void gtk_menu_set_active(aGtkMenu *, guint);
extern (C) _GtkWidget * gtk_menu_get_active(aGtkMenu *);
extern (C) void gtk_menu_popdown(aGtkMenu *);
extern (C) void gtk_menu_reposition(aGtkMenu *);
extern (C) void gtk_menu_popup(aGtkMenu *, aGtkWidget *, aGtkWidget *, _BCD_func__12553, void *, guint, guint32);
extern (C) _GtkWidget * gtk_menu_new();
extern (C) GType gtk_menu_get_type();
extern (C) void gtk_menu_shell_set_take_focus(aGtkMenuShell *, gint);
extern (C) gint gtk_menu_shell_get_take_focus(aGtkMenuShell *);
extern (C) void _gtk_menu_shell_remove_mnemonic(aGtkMenuShell *, guint, aGtkWidget *);
extern (C) void _gtk_menu_shell_add_mnemonic(aGtkMenuShell *, guint, aGtkWidget *);
extern (C) void gtk_menu_shell_cancel(aGtkMenuShell *);
extern (C) gint _gtk_menu_shell_get_popup_delay(aGtkMenuShell *);
extern (C) void _gtk_menu_shell_activate(aGtkMenuShell *);
extern (C) void _gtk_menu_shell_select_last(aGtkMenuShell *, gint);
extern (C) void gtk_menu_shell_select_first(aGtkMenuShell *, gint);
extern (C) void gtk_menu_shell_activate_item(aGtkMenuShell *, aGtkWidget *, gint);
extern (C) void gtk_menu_shell_deselect(aGtkMenuShell *);
extern (C) void gtk_menu_shell_select_item(aGtkMenuShell *, aGtkWidget *);
extern (C) void gtk_menu_shell_deactivate(aGtkMenuShell *);
extern (C) void gtk_menu_shell_insert(aGtkMenuShell *, aGtkWidget *, gint);
extern (C) void gtk_menu_shell_prepend(aGtkMenuShell *, aGtkWidget *);
extern (C) void gtk_menu_shell_append(aGtkMenuShell *, aGtkWidget *);
extern (C) GType gtk_menu_shell_get_type();
extern (C) void gtk_misc_get_padding(aGtkMisc *, gint *, gint *);
extern (C) void gtk_misc_set_padding(aGtkMisc *, gint, gint);
extern (C) void gtk_misc_get_alignment(aGtkMisc *, float *, float *);
extern (C) void gtk_misc_set_alignment(aGtkMisc *, float, float);
extern (C) GType gtk_misc_get_type();
extern (C) _BCD_func__12632 gtk_about_dialog_set_url_hook(_BCD_func__12632, void *, _BCD_func__13158);
extern (C) _BCD_func__12632 gtk_about_dialog_set_email_hook(_BCD_func__12632, void *, _BCD_func__13158);
extern (C) void gtk_about_dialog_set_logo_icon_name(aGtkAboutDialog *, char *);
extern (C) char * gtk_about_dialog_get_logo_icon_name(aGtkAboutDialog *);
extern (C) void gtk_about_dialog_set_logo(aGtkAboutDialog *, void *);
extern (C) void * gtk_about_dialog_get_logo(aGtkAboutDialog *);
extern (C) void gtk_about_dialog_set_translator_credits(aGtkAboutDialog *, char *);
extern (C) char * gtk_about_dialog_get_translator_credits(aGtkAboutDialog *);
extern (C) void gtk_about_dialog_set_artists(aGtkAboutDialog *, char * *);
extern (C) char * * gtk_about_dialog_get_artists(aGtkAboutDialog *);
extern (C) void gtk_about_dialog_set_documenters(aGtkAboutDialog *, char * *);
extern (C) char * * gtk_about_dialog_get_documenters(aGtkAboutDialog *);
extern (C) void gtk_about_dialog_set_authors(aGtkAboutDialog *, char * *);
extern (C) char * * gtk_about_dialog_get_authors(aGtkAboutDialog *);
extern (C) void gtk_about_dialog_set_website_label(aGtkAboutDialog *, char *);
extern (C) char * gtk_about_dialog_get_website_label(aGtkAboutDialog *);
extern (C) void gtk_about_dialog_set_website(aGtkAboutDialog *, char *);
extern (C) char * gtk_about_dialog_get_website(aGtkAboutDialog *);
extern (C) void gtk_about_dialog_set_wrap_license(aGtkAboutDialog *, gint);
extern (C) gint gtk_about_dialog_get_wrap_license(aGtkAboutDialog *);
extern (C) void gtk_about_dialog_set_license(aGtkAboutDialog *, char *);
extern (C) char * gtk_about_dialog_get_license(aGtkAboutDialog *);
extern (C) void gtk_about_dialog_set_comments(aGtkAboutDialog *, char *);
extern (C) char * gtk_about_dialog_get_comments(aGtkAboutDialog *);
extern (C) void gtk_about_dialog_set_copyright(aGtkAboutDialog *, char *);
extern (C) char * gtk_about_dialog_get_copyright(aGtkAboutDialog *);
extern (C) void gtk_about_dialog_set_version(aGtkAboutDialog *, char *);
extern (C) char * gtk_about_dialog_get_version(aGtkAboutDialog *);
extern (C) void gtk_about_dialog_set_program_name(aGtkAboutDialog *, char *);
extern (C) char * gtk_about_dialog_get_program_name(aGtkAboutDialog *);
extern (C) void gtk_about_dialog_set_name(aGtkAboutDialog *, char *);
extern (C) char * gtk_about_dialog_get_name(aGtkAboutDialog *);
extern (C) void gtk_show_about_dialog(aGtkWindow *, char *, ...);
extern (C) _GtkWidget * gtk_about_dialog_new();
extern (C) GType gtk_about_dialog_get_type();
extern (C) void _gtk_dialog_set_ignore_separator(aGtkDialog *, gint);
extern (C) gint gtk_dialog_run(aGtkDialog *);
extern (C) void gtk_dialog_response(aGtkDialog *, gint);
extern (C) void gtk_dialog_set_alternative_button_order_from_array(aGtkDialog *, gint, gint *);
extern (C) void gtk_dialog_set_alternative_button_order(aGtkDialog *, gint, ...);
extern (C) gint gtk_alternative_dialog_button_order(_GdkScreen *);
extern (C) gint gtk_dialog_get_has_separator(aGtkDialog *);
extern (C) void gtk_dialog_set_has_separator(aGtkDialog *, gint);
extern (C) gint gtk_dialog_get_response_for_widget(aGtkDialog *, aGtkWidget *);
extern (C) void gtk_dialog_set_default_response(aGtkDialog *, gint);
extern (C) void gtk_dialog_set_response_sensitive(aGtkDialog *, gint, gint);
extern (C) void gtk_dialog_add_buttons(aGtkDialog *, char *, ...);
extern (C) _GtkWidget * gtk_dialog_add_button(aGtkDialog *, char *, gint);
extern (C) void gtk_dialog_add_action_widget(aGtkDialog *, aGtkWidget *, gint);
extern (C) _GtkWidget * gtk_dialog_new_with_buttons(char *, aGtkWindow *, gint, char *, ...);
extern (C) _GtkWidget * gtk_dialog_new();
extern (C) GType gtk_dialog_get_type();
extern (C) gint _gtk_window_query_nonaccels(aGtkWindow *, guint, gint);
extern (C) void _gtk_window_keys_foreach(aGtkWindow *, _BCD_func__12662, void *);
extern (C) void _gtk_window_set_is_active(aGtkWindow *, gint);
extern (C) void _gtk_window_unset_focus_and_default(aGtkWindow *, aGtkWidget *);
extern (C) void _gtk_window_set_has_toplevel_focus(aGtkWindow *, gint);
extern (C) _GtkWidget * _gtk_window_group_get_current_grab(aGtkWindowGroup *);
extern (C) void _gtk_window_constrain_size(aGtkWindow *, gint, gint, gint *, gint *);
extern (C) void _gtk_window_reposition(aGtkWindow *, gint, gint);
extern (C) void gtk_window_add_embedded_xid(aGtkWindow *, guint);
extern (C) void gtk_window_remove_embedded_xid(aGtkWindow *, guint);
extern (C) void _gtk_window_internal_set_focus(aGtkWindow *, aGtkWidget *);
extern (C) void gtk_window_group_remove_window(aGtkWindowGroup *, aGtkWindow *);
extern (C) void gtk_window_group_add_window(aGtkWindowGroup *, aGtkWindow *);
extern (C) _GtkWindowGroup * gtk_window_group_new();
extern (C) GType gtk_window_group_get_type();
extern (C) void gtk_window_reshow_with_initial_size(aGtkWindow *);
extern (C) _GtkWindowGroup * gtk_window_get_group(aGtkWindow *);
extern (C) gint gtk_window_parse_geometry(aGtkWindow *, char *);
extern (C) void gtk_window_get_position(aGtkWindow *, gint *, gint *);
extern (C) void gtk_window_move(aGtkWindow *, gint, gint);
extern (C) void gtk_window_get_size(aGtkWindow *, gint *, gint *);
extern (C) void gtk_window_resize(aGtkWindow *, gint, gint);
extern (C) void gtk_window_get_default_size(aGtkWindow *, gint *, gint *);
extern (C) void gtk_window_set_default_size(aGtkWindow *, gint, gint);
extern (C) void gtk_window_set_policy(aGtkWindow *, gint, gint, gint);
extern (C) void gtk_window_begin_move_drag(aGtkWindow *, gint, gint, gint, guint32);
extern (C) void gtk_window_begin_resize_drag(aGtkWindow *, gint, gint, gint, gint, guint32);
extern (C) void gtk_window_set_keep_below(aGtkWindow *, gint);
extern (C) void gtk_window_set_keep_above(aGtkWindow *, gint);
extern (C) void gtk_window_unfullscreen(aGtkWindow *);
extern (C) void gtk_window_fullscreen(aGtkWindow *);
extern (C) void gtk_window_unmaximize(aGtkWindow *);
extern (C) void gtk_window_maximize(aGtkWindow *);
extern (C) void gtk_window_unstick(aGtkWindow *);
extern (C) void gtk_window_stick(aGtkWindow *);
extern (C) void gtk_window_deiconify(aGtkWindow *);
extern (C) void gtk_window_iconify(aGtkWindow *);
extern (C) void gtk_window_present_with_time(aGtkWindow *, guint32);
extern (C) void gtk_window_present(aGtkWindow *);
extern (C) gint gtk_window_propagate_key_event(aGtkWindow *, _GdkEventKey *);
extern (C) gint gtk_window_activate_key(aGtkWindow *, _GdkEventKey *);
extern (C) gint gtk_window_get_mnemonic_modifier(aGtkWindow *);
extern (C) void gtk_window_set_mnemonic_modifier(aGtkWindow *, gint);
extern (C) gint gtk_window_mnemonic_activate(aGtkWindow *, guint, gint);
extern (C) void gtk_window_remove_mnemonic(aGtkWindow *, guint, aGtkWidget *);
extern (C) void gtk_window_add_mnemonic(aGtkWindow *, guint, aGtkWidget *);
extern (C) _GList * gtk_window_list_toplevels();
extern (C) gint gtk_window_get_modal(aGtkWindow *);
extern (C) void gtk_window_set_modal(aGtkWindow *, gint);
extern (C) void gtk_window_set_auto_startup_notification(gint);
extern (C) gint gtk_window_set_default_icon_from_file(char *, _GError * *);
extern (C) void gtk_window_set_default_icon_name(char *);
extern (C) void gtk_window_set_default_icon(void *);
extern (C) _GList * gtk_window_get_default_icon_list();
extern (C) void gtk_window_set_default_icon_list(_GList *);
extern (C) char * gtk_window_get_icon_name(aGtkWindow *);
extern (C) void * gtk_window_get_icon(aGtkWindow *);
extern (C) gint gtk_window_set_icon_from_file(aGtkWindow *, char *, _GError * *);
extern (C) void gtk_window_set_icon_name(aGtkWindow *, char *);
extern (C) void gtk_window_set_icon(aGtkWindow *, void *);
extern (C) _GList * gtk_window_get_icon_list(aGtkWindow *);
extern (C) void gtk_window_set_icon_list(aGtkWindow *, _GList *);
extern (C) gint gtk_window_get_deletable(aGtkWindow *);
extern (C) void gtk_window_set_deletable(aGtkWindow *, gint);
extern (C) gint gtk_window_get_decorated(aGtkWindow *);
extern (C) void gtk_window_set_decorated(aGtkWindow *, gint);
extern (C) void gtk_window_get_frame_dimensions(aGtkWindow *, gint *, gint *, gint *, gint *);
extern (C) void gtk_window_set_frame_dimensions(aGtkWindow *, gint, gint, gint, gint);
extern (C) gint gtk_window_get_has_frame(aGtkWindow *);
extern (C) void gtk_window_set_has_frame(aGtkWindow *, gint);
extern (C) gint gtk_window_has_toplevel_focus(aGtkWindow *);
extern (C) gint gtk_window_is_active(aGtkWindow *);
extern (C) _GdkScreen * gtk_window_get_screen(aGtkWindow *);
extern (C) void gtk_window_set_screen(aGtkWindow *, _GdkScreen *);
extern (C) void gtk_window_set_geometry_hints(aGtkWindow *, aGtkWidget *, _GdkGeometry *, gint);
extern (C) gint gtk_window_get_gravity(aGtkWindow *);
extern (C) void gtk_window_set_gravity(aGtkWindow *, gint);
extern (C) gint gtk_window_get_resizable(aGtkWindow *);
extern (C) void gtk_window_set_resizable(aGtkWindow *, gint);
extern (C) gint gtk_window_get_destroy_with_parent(aGtkWindow *);
extern (C) void gtk_window_set_destroy_with_parent(aGtkWindow *, gint);
extern (C) gint gtk_window_get_focus_on_map(aGtkWindow *);
extern (C) void gtk_window_set_focus_on_map(aGtkWindow *, gint);
extern (C) gint gtk_window_get_accept_focus(aGtkWindow *);
extern (C) void gtk_window_set_accept_focus(aGtkWindow *, gint);
extern (C) gint gtk_window_get_urgency_hint(aGtkWindow *);
extern (C) void gtk_window_set_urgency_hint(aGtkWindow *, gint);
extern (C) gint gtk_window_get_skip_pager_hint(aGtkWindow *);
extern (C) void gtk_window_set_skip_pager_hint(aGtkWindow *, gint);
extern (C) gint gtk_window_get_skip_taskbar_hint(aGtkWindow *);
extern (C) void gtk_window_set_skip_taskbar_hint(aGtkWindow *, gint);
extern (C) gint gtk_window_get_type_hint(aGtkWindow *);
extern (C) void gtk_window_set_type_hint(aGtkWindow *, gint);
extern (C) double gtk_window_get_opacity(aGtkWindow *);
extern (C) void gtk_window_set_opacity(aGtkWindow *, double);
extern (C) _GtkWindow * gtk_window_get_transient_for(aGtkWindow *);
extern (C) void gtk_window_set_transient_for(aGtkWindow *, aGtkWindow *);
extern (C) gint gtk_window_activate_default(aGtkWindow *);
extern (C) void gtk_window_set_default(aGtkWindow *, aGtkWidget *);
extern (C) _GtkWidget * gtk_window_get_focus(aGtkWindow *);
extern (C) void gtk_window_set_focus(aGtkWindow *, aGtkWidget *);
extern (C) gint gtk_window_activate_focus(aGtkWindow *);
extern (C) void gtk_window_set_position(aGtkWindow *, gint);
extern (C) void gtk_window_remove_accel_group(aGtkWindow *, aGtkAccelGroup *);
extern (C) void gtk_window_add_accel_group(aGtkWindow *, aGtkAccelGroup *);
extern (C) char * gtk_window_get_role(aGtkWindow *);
extern (C) void gtk_window_set_startup_id(aGtkWindow *, char *);
extern (C) void gtk_window_set_role(aGtkWindow *, char *);
extern (C) void gtk_window_set_wmclass(aGtkWindow *, char *, char *);
extern (C) char * gtk_window_get_title(aGtkWindow *);
extern (C) void gtk_window_set_title(aGtkWindow *, char *);
extern (C) _GtkWidget * gtk_window_new(gint);
extern (C) GType gtk_window_get_type();
extern (C) _GtkWidget * gtk_bin_get_child(aGtkBin *);
extern (C) GType gtk_bin_get_type();
extern (C) _GList * _gtk_container_focus_sort(aGtkContainer *, _GList *, gint, aGtkWidget *);
extern (C) void _gtk_container_dequeue_resize_handler(aGtkContainer *);
extern (C) char * _gtk_container_child_composite_name(aGtkContainer *, aGtkWidget *);
extern (C) void _gtk_container_clear_resize_widgets(aGtkContainer *);
extern (C) void _gtk_container_queue_resize(aGtkContainer *);
extern (C) void gtk_container_forall(aGtkContainer *, _BCD_func__12090, void *);
extern (C) void gtk_container_child_get_property(aGtkContainer *, aGtkWidget *, char *, _GValue *);
extern (C) void gtk_container_child_set_property(aGtkContainer *, aGtkWidget *, char *, _GValue *);
extern (C) void gtk_container_child_get_valist(aGtkContainer *, aGtkWidget *, char *, char *);
extern (C) void gtk_container_child_set_valist(aGtkContainer *, aGtkWidget *, char *, char *);
extern (C) void gtk_container_child_get(aGtkContainer *, aGtkWidget *, char *, ...);
extern (C) void gtk_container_child_set(aGtkContainer *, aGtkWidget *, char *, ...);
extern (C) void gtk_container_add_with_properties(aGtkContainer *, aGtkWidget *, char *, ...);
extern (C) _GParamSpec * * gtk_container_class_list_child_properties(_GObjectClass *, guint *);
extern (C) _GParamSpec * gtk_container_class_find_child_property(_GObjectClass *, char *);
extern (C) void gtk_container_class_install_child_property(aGtkContainerClass *, guint, _GParamSpec *);
extern (C) GType gtk_container_child_type(aGtkContainer *);
extern (C) void gtk_container_resize_children(aGtkContainer *);
extern (C) _GtkAdjustment * gtk_container_get_focus_hadjustment(aGtkContainer *);
extern (C) void gtk_container_set_focus_hadjustment(aGtkContainer *, aGtkAdjustment *);
extern (C) _GtkAdjustment * gtk_container_get_focus_vadjustment(aGtkContainer *);
extern (C) void gtk_container_set_focus_vadjustment(aGtkContainer *, aGtkAdjustment *);
extern (C) void gtk_container_set_focus_child(aGtkContainer *, aGtkWidget *);
extern (C) void gtk_container_set_reallocate_redraws(aGtkContainer *, gint);
extern (C) void gtk_container_unset_focus_chain(aGtkContainer *);
extern (C) gint gtk_container_get_focus_chain(aGtkContainer *, _GList * *);
extern (C) void gtk_container_set_focus_chain(aGtkContainer *, _GList *);
extern (C) void gtk_container_propagate_expose(aGtkContainer *, aGtkWidget *, _GdkEventExpose *);
extern (C) _GList * gtk_container_get_children(aGtkContainer *);
extern (C) void gtk_container_foreach_full(aGtkContainer *, _BCD_func__12090, _BCD_func__13157, void *, _BCD_func__13158);
extern (C) void gtk_container_foreach(aGtkContainer *, _BCD_func__12090, void *);
extern (C) void gtk_container_check_resize(aGtkContainer *);
extern (C) gint gtk_container_get_resize_mode(aGtkContainer *);
extern (C) void gtk_container_set_resize_mode(aGtkContainer *, gint);
extern (C) void gtk_container_remove(aGtkContainer *, aGtkWidget *);
extern (C) void gtk_container_add(aGtkContainer *, aGtkWidget *);
extern (C) guint gtk_container_get_border_width(aGtkContainer *);
extern (C) void gtk_container_set_border_width(aGtkContainer *, guint);
extern (C) GType gtk_container_get_type();
extern (C) _GdkColormap * _gtk_widget_peek_colormap();
extern (C) void _gtk_widget_propagate_composited_changed(aGtkWidget *);
extern (C) void _gtk_widget_propagate_screen_changed(aGtkWidget *, _GdkScreen *);
extern (C) void _gtk_widget_propagate_hierarchy_changed(aGtkWidget *, aGtkWidget *);
extern (C) _GtkWidgetAuxInfo * _gtk_widget_get_aux_info(aGtkWidget *, gint);
extern (C) void _gtk_widget_grab_notify(aGtkWidget *, gint);
extern (C) void gtk_requisition_free(aGtkRequisition *);
extern (C) _GtkRequisition * gtk_requisition_copy(aGtkRequisition *);
extern (C) GType gtk_requisition_get_type();
extern (C) gint gtk_widget_get_has_tooltip(aGtkWidget *);
extern (C) void gtk_widget_set_has_tooltip(aGtkWidget *, gint);
extern (C) char * gtk_widget_get_tooltip_markup(aGtkWidget *);
extern (C) void gtk_widget_set_tooltip_markup(aGtkWidget *, char *);
extern (C) char * gtk_widget_get_tooltip_text(aGtkWidget *);
extern (C) void gtk_widget_set_tooltip_text(aGtkWidget *, char *);
extern (C) void gtk_widget_trigger_tooltip_query(aGtkWidget *);
extern (C) _GtkWindow * gtk_widget_get_tooltip_window(aGtkWidget *);
extern (C) void gtk_widget_set_tooltip_window(aGtkWidget *, aGtkWindow *);
extern (C) void gtk_widget_remove_mnemonic_label(aGtkWidget *, aGtkWidget *);
extern (C) void gtk_widget_add_mnemonic_label(aGtkWidget *, aGtkWidget *);
extern (C) _GList * gtk_widget_list_mnemonic_labels(aGtkWidget *);
extern (C) void gtk_widget_class_path(aGtkWidget *, guint *, char * *, char * *);
extern (C) void gtk_widget_path(aGtkWidget *, guint *, char * *, char * *);
extern (C) void gtk_widget_reset_shapes(aGtkWidget *);
extern (C) void gtk_widget_input_shape_combine_mask(aGtkWidget *, _GdkDrawable *, gint, gint);
extern (C) void gtk_widget_shape_combine_mask(aGtkWidget *, _GdkDrawable *, gint, gint);
extern (C) gint gtk_widget_is_composited(aGtkWidget *);
extern (C) gint gtk_widget_get_default_direction();
extern (C) void gtk_widget_set_default_direction(gint);
extern (C) gint gtk_widget_get_direction(aGtkWidget *);
extern (C) void gtk_widget_set_direction(aGtkWidget *, gint);
extern (C) _GdkVisual * gtk_widget_get_default_visual();
extern (C) _GdkColormap * gtk_widget_get_default_colormap();
extern (C) _GtkStyle * gtk_widget_get_default_style();
extern (C) void gtk_widget_set_default_colormap(_GdkColormap *);
extern (C) void gtk_widget_style_get(aGtkWidget *, in char *, ...);
extern (C) void gtk_widget_style_get_valist(aGtkWidget *, char *, char *);
extern (C) void gtk_widget_style_get_property(aGtkWidget *, char *, _GValue *);
extern (C) _GParamSpec * * gtk_widget_class_list_style_properties(aGtkWidgetClass *, guint *);
extern (C) _GParamSpec * gtk_widget_class_find_style_property(aGtkWidgetClass *, char *);
extern (C) void gtk_widget_class_install_style_property_parser(aGtkWidgetClass *, _GParamSpec *, _BCD_func__12993);
extern (C) void gtk_widget_class_install_style_property(aGtkWidgetClass *, _GParamSpec *);
extern (C) void gtk_widget_pop_colormap();
extern (C) void gtk_widget_pop_composite_child();
extern (C) void gtk_widget_push_composite_child();
extern (C) void gtk_widget_push_colormap(_GdkColormap *);
extern (C) void gtk_widget_reset_rc_styles(aGtkWidget *);
extern (C) char * gtk_widget_get_composite_name(aGtkWidget *);
extern (C) void gtk_widget_set_composite_name(aGtkWidget *, char *);
extern (C) void * gtk_widget_render_icon(aGtkWidget *, char *, gint, char *);
extern (C) void * gtk_widget_create_pango_layout(aGtkWidget *, char *);
extern (C) void * gtk_widget_get_pango_context(aGtkWidget *);
extern (C) void * gtk_widget_create_pango_context(aGtkWidget *);
extern (C) void gtk_widget_modify_font(aGtkWidget *, void *);
extern (C) void gtk_widget_modify_cursor(aGtkWidget *, _GdkColor *, _GdkColor *);
extern (C) void gtk_widget_modify_base(aGtkWidget *, gint, _GdkColor *);
extern (C) void gtk_widget_modify_text(aGtkWidget *, gint, _GdkColor *);
extern (C) void gtk_widget_modify_bg(aGtkWidget *, gint, _GdkColor *);
extern (C) void gtk_widget_modify_fg(aGtkWidget *, gint, _GdkColor *);
extern (C) _GtkRcStyle * gtk_widget_get_modifier_style(aGtkWidget *);
extern (C) void gtk_widget_modify_style(aGtkWidget *, aGtkRcStyle *);
extern (C) _GtkStyle * gtk_widget_get_style(aGtkWidget *);
extern (C) void gtk_widget_ensure_style(aGtkWidget *);
extern (C) void gtk_widget_set_style(aGtkWidget *, aGtkStyle *);
extern (C) gint gtk_widget_hide_on_delete(aGtkWidget *);
extern (C) gint gtk_widget_translate_coordinates(aGtkWidget *, aGtkWidget *, gint, gint, gint *, gint *);
extern (C) gint gtk_widget_is_ancestor(aGtkWidget *, aGtkWidget *);
extern (C) void gtk_widget_get_pointer(aGtkWidget *, gint *, gint *);
extern (C) gint gtk_widget_get_events(aGtkWidget *);
extern (C) void gtk_widget_set_colormap(aGtkWidget *, _GdkColormap *);
extern (C) _AtkObject * gtk_widget_get_accessible(aGtkWidget *);
extern (C) void * gtk_widget_get_clipboard(aGtkWidget *, void *);
extern (C) _GtkSettings * gtk_widget_get_settings(aGtkWidget *);
extern (C) _GdkDrawable * gtk_widget_get_root_window(aGtkWidget *);
extern (C) _GdkDisplay * gtk_widget_get_display(aGtkWidget *);
extern (C) gint gtk_widget_has_screen(aGtkWidget *);
extern (C) _GdkScreen * gtk_widget_get_screen(aGtkWidget *);
extern (C) _GdkVisual * gtk_widget_get_visual(aGtkWidget *);
extern (C) _GdkColormap * gtk_widget_get_colormap(aGtkWidget *);
extern (C) _GtkWidget * gtk_widget_get_ancestor(aGtkWidget *, GType);
extern (C) _GtkWidget * gtk_widget_get_toplevel(aGtkWidget *);
extern (C) gint gtk_widget_get_extension_events(aGtkWidget *);
extern (C) void gtk_widget_set_extension_events(aGtkWidget *, gint);
extern (C) void gtk_widget_add_events(aGtkWidget *, gint);
extern (C) void gtk_widget_set_events(aGtkWidget *, gint);
extern (C) void gtk_widget_set_usize(aGtkWidget *, gint, gint);
extern (C) void gtk_widget_set_uposition(aGtkWidget *, gint, gint);
extern (C) void gtk_widget_get_size_request(aGtkWidget *, gint *, gint *);
extern (C) void gtk_widget_set_size_request(aGtkWidget *, gint, gint);
extern (C) void gtk_widget_error_bell(aGtkWidget *);
extern (C) gint gtk_widget_keynav_failed(aGtkWidget *, gint);
extern (C) gint gtk_widget_child_focus(aGtkWidget *, gint);
extern (C) _GdkDrawable * gtk_widget_get_parent_window(aGtkWidget *);
extern (C) _GtkWidget * gtk_widget_get_parent(aGtkWidget *);
extern (C) gint gtk_widget_get_child_visible(aGtkWidget *);
extern (C) void gtk_widget_set_child_visible(aGtkWidget *, gint);
extern (C) void gtk_widget_set_parent_window(aGtkWidget *, _GdkDrawable *);
extern (C) void gtk_widget_set_parent(aGtkWidget *, aGtkWidget *);
extern (C) void gtk_widget_set_redraw_on_allocate(aGtkWidget *, gint);
extern (C) void gtk_widget_set_double_buffered(aGtkWidget *, gint);
extern (C) void gtk_widget_set_app_paintable(aGtkWidget *, gint);
extern (C) void gtk_widget_set_sensitive(aGtkWidget *, gint);
extern (C) void gtk_widget_set_state(aGtkWidget *, gint);
extern (C) char * gtk_widget_get_name(aGtkWidget *);
extern (C) void gtk_widget_set_name(aGtkWidget *, char *);
extern (C) void gtk_widget_grab_default(aGtkWidget *);
extern (C) void gtk_widget_grab_focus(aGtkWidget *);
extern (C) gint gtk_widget_is_focus(aGtkWidget *);
extern (C) void gtk_widget_thaw_child_notify(aGtkWidget *);
extern (C) void gtk_widget_child_notify(aGtkWidget *, char *);
extern (C) void gtk_widget_freeze_child_notify(aGtkWidget *);
extern (C) void * gtk_widget_region_intersect(aGtkWidget *, void *);
extern (C) gint gtk_widget_intersect(aGtkWidget *, _GdkRectangle *, _GdkRectangle *);
extern (C) void gtk_widget_reparent(aGtkWidget *, aGtkWidget *);
extern (C) gint gtk_widget_set_scroll_adjustments(aGtkWidget *, aGtkAdjustment *, aGtkAdjustment *);
extern (C) gint gtk_widget_activate(aGtkWidget *);
extern (C) gint gtk_widget_send_expose(aGtkWidget *, _GdkEvent *);
extern (C) gint gtk_widget_event(aGtkWidget *, _GdkEvent *);
extern (C) gint gtk_widget_mnemonic_activate(aGtkWidget *, gint);
extern (C) gint gtk_widget_can_activate_accel(aGtkWidget *, guint);
extern (C) _GList * gtk_widget_list_accel_closures(aGtkWidget *);
extern (C) char * _gtk_widget_get_accel_path(aGtkWidget *, gint *);
extern (C) void gtk_widget_set_accel_path(aGtkWidget *, char *, aGtkAccelGroup *);
extern (C) gint gtk_widget_remove_accelerator(aGtkWidget *, aGtkAccelGroup *, guint, gint);
extern (C) void gtk_widget_add_accelerator(aGtkWidget *, char *, aGtkAccelGroup *, guint, gint, gint);
extern (C) void gtk_widget_get_child_requisition(aGtkWidget *, aGtkRequisition *);
extern (C) void gtk_widget_size_allocate(aGtkWidget *, _GdkRectangle *);
extern (C) void gtk_widget_size_request(aGtkWidget *, aGtkRequisition *);
extern (C) void gtk_widget_draw(aGtkWidget *, _GdkRectangle *);
extern (C) void gtk_widget_queue_resize_no_redraw(aGtkWidget *);
extern (C) void gtk_widget_queue_resize(aGtkWidget *);
extern (C) void gtk_widget_queue_clear_area(aGtkWidget *, gint, gint, gint, gint);
extern (C) void gtk_widget_queue_clear(aGtkWidget *);
extern (C) void gtk_widget_queue_draw_area(aGtkWidget *, gint, gint, gint, gint);
extern (C) void gtk_widget_queue_draw(aGtkWidget *);
extern (C) void gtk_widget_unrealize(aGtkWidget *);
extern (C) void gtk_widget_realize(aGtkWidget *);
extern (C) void gtk_widget_unmap(aGtkWidget *);
extern (C) void gtk_widget_map(aGtkWidget *);
extern (C) gint gtk_widget_get_no_show_all(aGtkWidget *);
extern (C) void gtk_widget_set_no_show_all(aGtkWidget *, gint);
extern (C) void gtk_widget_hide_all(aGtkWidget *);
extern (C) void gtk_widget_show_all(aGtkWidget *);
extern (C) void gtk_widget_hide(aGtkWidget *);
extern (C) void gtk_widget_show_now(aGtkWidget *);
extern (C) void gtk_widget_show(aGtkWidget *);
extern (C) void gtk_widget_unparent(aGtkWidget *);
extern (C) void gtk_widget_set(aGtkWidget *, char *, ...);
extern (C) void gtk_widget_unref(aGtkWidget *);
extern (C) _GtkWidget * gtk_widget_ref(aGtkWidget *);
extern (C) void gtk_widget_destroyed(aGtkWidget *, _GtkWidget * *);
extern (C) void gtk_widget_destroy(aGtkWidget *);
extern (C) _GtkWidget * gtk_widget_new(GType, char *, ...);
extern (C) GType gtk_widget_get_type();
extern (C) gint _gtk_settings_parse_convert(_BCD_func__12993, _GValue *, _GParamSpec *, _GValue *);
extern (C) _BCD_func__12993 _gtk_rc_property_parser_from_type(GType);
extern (C) void _gtk_settings_handle_event(_GdkEventSetting *);
extern (C) void _gtk_settings_reset_rc_values(aGtkSettings *);
extern (C) void _gtk_settings_set_property_value_from_rc(aGtkSettings *, char *, aGtkSettingsValue *);
extern (C) void gtk_settings_set_double_property(aGtkSettings *, char *, double, char *);
extern (C) void gtk_settings_set_long_property(aGtkSettings *, char *, glong, char *);
extern (C) void gtk_settings_set_string_property(aGtkSettings *, char *, char *, char *);
extern (C) void gtk_settings_set_property_value(aGtkSettings *, char *, aGtkSettingsValue *);
extern (C) gint gtk_rc_property_parse_border(_GParamSpec *, _GString *, _GValue *);
extern (C) gint gtk_rc_property_parse_requisition(_GParamSpec *, _GString *, _GValue *);
extern (C) gint gtk_rc_property_parse_flags(_GParamSpec *, _GString *, _GValue *);
extern (C) gint gtk_rc_property_parse_enum(_GParamSpec *, _GString *, _GValue *);
extern (C) gint gtk_rc_property_parse_color(_GParamSpec *, _GString *, _GValue *);
extern (C) void gtk_settings_install_property_parser(_GParamSpec *, _BCD_func__12993);
extern (C) void gtk_settings_install_property(_GParamSpec *);
extern (C) _GtkSettings * gtk_settings_get_for_screen(_GdkScreen *);
extern (C) _GtkSettings * gtk_settings_get_default();
extern (C) GType gtk_settings_get_type();
extern (C) void _gtk_rc_context_destroy(aGtkSettings *);
extern (C) char * _gtk_rc_context_get_default_font_name(aGtkSettings *);
extern (C) _GSList * _gtk_rc_style_get_color_hashes(aGtkRcStyle *);
extern (C) void _gtk_rc_style_unset_rc_property(aGtkRcStyle *, guint, guint);
extern (C) void _gtk_rc_style_set_rc_property(aGtkRcStyle *, aGtkRcProperty *);
extern (C) _GtkRcProperty * _gtk_rc_style_lookup_rc_property(aGtkRcStyle *, guint, guint);
extern (C) guint gtk_rc_parse_priority(_GScanner *, gint *);
extern (C) guint gtk_rc_parse_state(_GScanner *, gint *);
extern (C) guint gtk_rc_parse_color_full(_GScanner *, aGtkRcStyle *, _GdkColor *);
extern (C) guint gtk_rc_parse_color(_GScanner *, _GdkColor *);
extern (C) _GScanner * gtk_rc_scanner_new();
extern (C) char * gtk_rc_get_im_module_file();
extern (C) char * gtk_rc_get_im_module_path();
extern (C) char * gtk_rc_get_module_dir();
extern (C) char * gtk_rc_get_theme_dir();
extern (C) char * gtk_rc_find_module_in_path(char *);
extern (C) void gtk_rc_style_unref(aGtkRcStyle *);
extern (C) void gtk_rc_style_ref(aGtkRcStyle *);
extern (C) _GtkRcStyle * gtk_rc_style_copy(aGtkRcStyle *);
extern (C) _GtkRcStyle * gtk_rc_style_new();
extern (C) GType gtk_rc_style_get_type();
extern (C) void gtk_rc_add_class_style(aGtkRcStyle *, char *);
extern (C) void gtk_rc_add_widget_class_style(aGtkRcStyle *, char *);
extern (C) void gtk_rc_add_widget_name_style(aGtkRcStyle *, char *);
extern (C) gint gtk_rc_reparse_all();
extern (C) void gtk_rc_parse_string(char *);
extern (C) void gtk_rc_parse(char *);
extern (C) char * gtk_rc_find_pixmap_in_path(aGtkSettings *, _GScanner *, char *);
extern (C) void gtk_rc_reset_styles(aGtkSettings *);
extern (C) gint gtk_rc_reparse_all_for_settings(aGtkSettings *, gint);
extern (C) _GtkStyle * gtk_rc_get_style_by_paths(aGtkSettings *, char *, char *, GType);
extern (C) _GtkStyle * gtk_rc_get_style(aGtkWidget *);
extern (C) char * * gtk_rc_get_default_files();
extern (C) void gtk_rc_set_default_files(char * *);
extern (C) void gtk_rc_add_default_file(char *);
extern (C) gint _gtk_rc_match_widget_class(_GSList *, gint, char *, char *);
extern (C) void _gtk_rc_free_widget_class_path(_GSList *);
extern (C) _GSList * _gtk_rc_parse_widget_class_path(char *);
extern (C) void _gtk_rc_init();
extern (C) void _gtk_widget_get_cursor_color(aGtkWidget *, _GdkColor *);
extern (C) _GdkGC * _gtk_widget_get_cursor_gc(aGtkWidget *);
extern (C) void gtk_draw_insertion_cursor(aGtkWidget *, _GdkDrawable *, _GdkRectangle *, _GdkRectangle *, gint, gint, gint);
extern (C) void gtk_paint_string(aGtkStyle *, _GdkDrawable *, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, char *);
extern (C) void gtk_draw_string(aGtkStyle *, _GdkDrawable *, gint, gint, gint, char *);
extern (C) void _gtk_style_shade(_GdkColor *, _GdkColor *, double);
extern (C) void _gtk_style_init_for_settings(aGtkStyle *, aGtkSettings *);
extern (C) _GValue * _gtk_style_peek_property_value(aGtkStyle *, guint, _GParamSpec *, _BCD_func__12993);
extern (C) void gtk_border_free(aGtkBorder *);
extern (C) _GtkBorder * gtk_border_copy(aGtkBorder *);
extern (C) GType gtk_border_get_type();
extern (C) void gtk_paint_resize_grip(aGtkStyle *, _GdkDrawable *, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, gint, gint, gint);
extern (C) void gtk_paint_layout(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, void *);
extern (C) void gtk_paint_expander(aGtkStyle *, _GdkDrawable *, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, gint);
extern (C) void gtk_paint_handle(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, gint, gint, gint);
extern (C) void gtk_paint_slider(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, gint, gint, gint);
extern (C) void gtk_paint_focus(aGtkStyle *, _GdkDrawable *, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, gint, gint);
extern (C) void gtk_paint_extension(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, gint, gint, gint);
extern (C) void gtk_paint_box_gap(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, gint, gint, gint, gint, gint);
extern (C) void gtk_paint_shadow_gap(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, gint, gint, gint, gint, gint);
extern (C) void gtk_paint_tab(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, gint, gint);
extern (C) void gtk_paint_option(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, gint, gint);
extern (C) void gtk_paint_check(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, gint, gint);
extern (C) void gtk_paint_flat_box(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, gint, gint);
extern (C) void gtk_paint_box(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, gint, gint);
extern (C) void gtk_paint_diamond(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, gint, gint);
extern (C) void gtk_paint_arrow(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, gint, gint, gint, gint);
extern (C) void gtk_paint_polygon(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, char *, _GdkPoint *, gint, gint);
extern (C) void gtk_paint_shadow(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, gint, gint);
extern (C) void gtk_paint_vline(aGtkStyle *, _GdkDrawable *, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, gint);
extern (C) void gtk_paint_hline(aGtkStyle *, _GdkDrawable *, gint, _GdkRectangle *, aGtkWidget *, char *, gint, gint, gint);
extern (C) void gtk_draw_resize_grip(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint);
extern (C) void gtk_draw_layout(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, void *);
extern (C) void gtk_draw_expander(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint);
extern (C) void gtk_draw_handle(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint, gint);
extern (C) void gtk_draw_slider(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint, gint);
extern (C) void gtk_draw_focus(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint);
extern (C) void gtk_draw_extension(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint, gint);
extern (C) void gtk_draw_box_gap(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint, gint, gint, gint);
extern (C) void gtk_draw_shadow_gap(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint, gint, gint, gint);
extern (C) void gtk_draw_tab(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint);
extern (C) void gtk_draw_option(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint);
extern (C) void gtk_draw_check(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint);
extern (C) void gtk_draw_flat_box(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint);
extern (C) void gtk_draw_box(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint);
extern (C) void gtk_draw_diamond(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint);
extern (C) void gtk_draw_arrow(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint, gint, gint);
extern (C) void gtk_draw_polygon(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkPoint *, gint, gint);
extern (C) void gtk_draw_shadow(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint, gint, gint);
extern (C) void gtk_draw_vline(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint);
extern (C) void gtk_draw_hline(aGtkStyle *, _GdkDrawable *, gint, gint, gint, gint);
extern (C) void * gtk_style_render_icon(aGtkStyle *, void *, gint, gint, gint, aGtkWidget *, char *);
extern (C) gint gtk_style_lookup_color(aGtkStyle *, char *, _GdkColor *);
extern (C) void * gtk_style_lookup_icon_set(aGtkStyle *, char *);
extern (C) void gtk_style_apply_default_background(aGtkStyle *, _GdkDrawable *, gint, gint, _GdkRectangle *, gint, gint, gint, gint);
extern (C) void gtk_style_set_background(aGtkStyle *, _GdkDrawable *, gint);
extern (C) void gtk_style_set_font(aGtkStyle *, _GdkFont *);
extern (C) _GdkFont * gtk_style_get_font(aGtkStyle *);
extern (C) void gtk_style_unref(aGtkStyle *);
extern (C) _GtkStyle * gtk_style_ref(aGtkStyle *);
extern (C) void gtk_style_detach(aGtkStyle *);
extern (C) _GtkStyle * gtk_style_attach(aGtkStyle *, _GdkDrawable *);
extern (C) _GtkStyle * gtk_style_copy(aGtkStyle *);
extern (C) _GtkStyle * gtk_style_new();
extern (C) GType gtk_style_get_type();
extern (C) void gtk_adjustment_set_value(aGtkAdjustment *, double);
extern (C) double gtk_adjustment_get_value(aGtkAdjustment *);
extern (C) void gtk_adjustment_clamp_page(aGtkAdjustment *, double, double);
extern (C) void gtk_adjustment_value_changed(aGtkAdjustment *);
extern (C) void gtk_adjustment_changed(aGtkAdjustment *);
extern (C) _GtkObject * gtk_adjustment_new(double, double, double, double, double, double);
extern (C) GType gtk_adjustment_get_type();
extern (C) void gtk_object_add_arg_type(char *, guint, guint, guint);
extern (C) void gtk_object_set(aGtkObject *, char *, ...);
extern (C) void gtk_object_get(aGtkObject *, char *, ...);
extern (C) void gtk_object_remove_no_notify_by_id(aGtkObject *, guint);
extern (C) void gtk_object_remove_data_by_id(aGtkObject *, guint);
extern (C) void * gtk_object_get_data_by_id(aGtkObject *, guint);
extern (C) void gtk_object_set_data_by_id_full(aGtkObject *, guint, void *, _BCD_func__13158);
extern (C) void gtk_object_set_data_by_id(aGtkObject *, guint, void *);
extern (C) void * gtk_object_get_user_data(aGtkObject *);
extern (C) void gtk_object_set_user_data(aGtkObject *, void *);
extern (C) void gtk_object_remove_no_notify(aGtkObject *, char *);
extern (C) void * gtk_object_get_data(aGtkObject *, char *);
extern (C) void gtk_object_remove_data(aGtkObject *, char *);
extern (C) void gtk_object_set_data_full(aGtkObject *, char *, void *, _BCD_func__13158);
extern (C) void gtk_object_set_data(aGtkObject *, char *, void *);
extern (C) void gtk_object_weakunref(aGtkObject *, _BCD_func__13158, void *);
extern (C) void gtk_object_weakref(aGtkObject *, _BCD_func__13158, void *);
extern (C) void gtk_object_unref(aGtkObject *);
extern (C) _GtkObject * gtk_object_ref(aGtkObject *);
extern (C) _GtkObject * gtk_object_new(guint, char *, ...);
extern (C) void gtk_object_destroy(aGtkObject *);
extern (C) void gtk_object_sink(aGtkObject *);
extern (C) guint gtk_object_get_type();
extern (C) extern guint gtk_debug_flags;
extern (C) void gtk_type_init(gint);
extern (C) _GFlagsValue * gtk_type_flags_find_value(guint, char *);
extern (C) _GEnumValue * gtk_type_enum_find_value(guint, char *);
extern (C) _GFlagsValue * gtk_type_flags_get_values(guint);
extern (C) _GEnumValue * gtk_type_enum_get_values(guint);
extern (C) void * gtk_type_new(guint);
extern (C) guint gtk_type_unique(guint, aGtkTypeInfo *);
extern (C) void * gtk_type_class(guint);
extern (C) guint gtk_identifier_get_type();
extern (C) guint gtk_widget_help_type_get_type();
extern (C) guint gtk_widget_flags_get_type();
extern (C) guint gtk_ui_manager_item_type_get_type();
extern (C) guint gtk_tree_view_column_sizing_get_type();
extern (C) guint gtk_tree_view_drop_position_get_type();
extern (C) guint gtk_tree_model_flags_get_type();
extern (C) guint gtk_tree_view_mode_get_type();
extern (C) guint gtk_toolbar_space_style_get_type();
extern (C) guint gtk_toolbar_child_type_get_type();
extern (C) guint gtk_text_window_type_get_type();
extern (C) guint gtk_text_search_flags_get_type();
extern (C) guint gtk_text_buffer_target_info_get_type();
extern (C) guint gtk_spin_type_get_type();
extern (C) guint gtk_spin_button_update_policy_get_type();
extern (C) guint gtk_size_group_mode_get_type();
extern (C) guint gtk_recent_manager_error_get_type();
extern (C) guint gtk_recent_filter_flags_get_type();
extern (C) guint gtk_recent_chooser_error_get_type();
extern (C) guint gtk_recent_sort_type_get_type();
extern (C) guint gtk_rc_token_type_get_type();
extern (C) guint gtk_rc_flags_get_type();
extern (C) guint gtk_progress_bar_orientation_get_type();
extern (C) guint gtk_progress_bar_style_get_type();
extern (C) guint gtk_private_flags_get_type();
extern (C) guint gtk_print_error_get_type();
extern (C) guint gtk_print_operation_action_get_type();
extern (C) guint gtk_print_operation_result_get_type();
extern (C) guint gtk_print_status_get_type();
extern (C) guint gtk_arg_flags_get_type();
extern (C) guint gtk_object_flags_get_type();
extern (C) guint gtk_notebook_tab_get_type();
extern (C) guint gtk_buttons_type_get_type();
extern (C) guint gtk_message_type_get_type();
extern (C) guint gtk_image_type_get_type();
extern (C) guint gtk_icon_view_drop_position_get_type();
extern (C) guint gtk_icon_theme_error_get_type();
extern (C) guint gtk_icon_lookup_flags_get_type();
extern (C) guint gtk_file_filter_flags_get_type();
extern (C) guint gtk_file_chooser_error_get_type();
extern (C) guint gtk_file_chooser_confirmation_get_type();
extern (C) guint gtk_file_chooser_action_get_type();
extern (C) guint gtk_drag_result_get_type();
extern (C) guint gtk_tree_view_grid_lines_get_type();
extern (C) guint gtk_unit_get_type();
extern (C) guint gtk_print_duplex_get_type();
extern (C) guint gtk_print_quality_get_type();
extern (C) guint gtk_page_orientation_get_type();
extern (C) guint gtk_page_set_get_type();
extern (C) guint gtk_print_pages_get_type();
extern (C) guint gtk_pack_direction_get_type();
extern (C) guint gtk_im_status_style_get_type();
extern (C) guint gtk_im_preedit_style_get_type();
extern (C) guint gtk_sort_type_get_type();
extern (C) guint gtk_wrap_mode_get_type();
extern (C) guint gtk_window_type_get_type();
extern (C) guint gtk_window_position_get_type();
extern (C) guint gtk_visibility_get_type();
extern (C) guint gtk_update_type_get_type();
extern (C) guint gtk_toolbar_style_get_type();
extern (C) guint gtk_submenu_placement_get_type();
extern (C) guint gtk_submenu_direction_get_type();
extern (C) guint gtk_state_type_get_type();
extern (C) guint gtk_shadow_type_get_type();
extern (C) guint gtk_selection_mode_get_type();
extern (C) guint gtk_scroll_type_get_type();
extern (C) guint gtk_signal_run_type_get_type();
extern (C) guint gtk_resize_mode_get_type();
extern (C) guint gtk_relief_style_get_type();
extern (C) guint gtk_preview_type_get_type();
extern (C) guint gtk_position_type_get_type();
extern (C) guint gtk_policy_type_get_type();
extern (C) guint gtk_path_type_get_type();
extern (C) guint gtk_path_priority_type_get_type();
extern (C) guint gtk_pack_type_get_type();
extern (C) guint gtk_corner_type_get_type();
extern (C) guint gtk_orientation_get_type();
extern (C) guint gtk_scroll_step_get_type();
extern (C) guint gtk_movement_step_get_type();
extern (C) guint gtk_metric_type_get_type();
extern (C) guint gtk_menu_direction_type_get_type();
extern (C) guint gtk_match_type_get_type();
extern (C) guint gtk_justification_get_type();
extern (C) guint gtk_text_direction_get_type();
extern (C) guint gtk_side_type_get_type();
extern (C) guint gtk_sensitivity_type_get_type();
extern (C) guint gtk_icon_size_get_type();
extern (C) guint gtk_expander_style_get_type();
extern (C) guint gtk_direction_type_get_type();
extern (C) guint gtk_delete_type_get_type();
extern (C) guint gtk_curve_type_get_type();
extern (C) guint gtk_button_box_style_get_type();
extern (C) guint gtk_attach_options_get_type();
extern (C) guint gtk_arrow_type_get_type();
extern (C) guint gtk_anchor_type_get_type();
extern (C) guint gtk_target_flags_get_type();
extern (C) guint gtk_dest_defaults_get_type();
extern (C) guint gtk_response_type_get_type();
extern (C) guint gtk_dialog_flags_get_type();
extern (C) guint gtk_debug_flag_get_type();
extern (C) guint gtk_ctree_expansion_type_get_type();
extern (C) guint gtk_ctree_expander_style_get_type();
extern (C) guint gtk_ctree_line_style_get_type();
extern (C) guint gtk_ctree_pos_get_type();
extern (C) guint gtk_button_action_get_type();
extern (C) guint gtk_clist_drag_pos_get_type();
extern (C) guint gtk_cell_type_get_type();
extern (C) guint gtk_cell_renderer_accel_mode_get_type();
extern (C) guint gtk_cell_renderer_mode_get_type();
extern (C) guint gtk_cell_renderer_state_get_type();
extern (C) guint gtk_calendar_display_options_get_type();
extern (C) guint gtk_builder_error_get_type();
extern (C) guint gtk_assistant_page_type_get_type();
extern (C) guint gtk_accel_flags_get_type();
extern (C) void _gtk_accel_group_reconnect(aGtkAccelGroup *, GQuark);
extern (C) _GtkAccelGroupEntry * gtk_accel_group_query(aGtkAccelGroup *, guint, gint, guint *);
extern (C) guint gtk_accelerator_get_default_mod_mask();
extern (C) void gtk_accelerator_set_default_mod_mask(gint);
extern (C) char * gtk_accelerator_get_label(guint, gint);
extern (C) char * gtk_accelerator_name(guint, gint);
extern (C) void gtk_accelerator_parse(char *, guint *, gint *);
extern (C) gint gtk_accelerator_valid(guint, gint);
extern (C) _GtkAccelGroup * gtk_accel_group_from_accel_closure(_GClosure *);
extern (C) _GtkAccelKey * gtk_accel_group_find(aGtkAccelGroup *, _BCD_func__13177, void *);
extern (C) _GSList * gtk_accel_groups_from_object(_GObject *);
extern (C) gint gtk_accel_groups_activate(_GObject *, guint, gint);
extern (C) void _gtk_accel_group_detach(aGtkAccelGroup *, _GObject *);
extern (C) void _gtk_accel_group_attach(aGtkAccelGroup *, _GObject *);
extern (C) gint gtk_accel_group_activate(aGtkAccelGroup *, GQuark, _GObject *, guint, gint);
extern (C) gint gtk_accel_group_disconnect_key(aGtkAccelGroup *, guint, gint);
extern (C) gint gtk_accel_group_disconnect(aGtkAccelGroup *, _GClosure *);
extern (C) void gtk_accel_group_connect_by_path(aGtkAccelGroup *, char *, _GClosure *);
extern (C) void gtk_accel_group_connect(aGtkAccelGroup *, guint, gint, gint, _GClosure *);
extern (C) void gtk_accel_group_unlock(aGtkAccelGroup *);
extern (C) void gtk_accel_group_lock(aGtkAccelGroup *);
extern (C) _GtkAccelGroup * gtk_accel_group_new();
extern (C) GType gtk_accel_group_get_type();
extern (C) GdkWindow* gtk_widget_get_window(GtkWidget *);
extern (C) void gtk_widget_get_allocation(GtkWidget *, GtkAllocation *);
extern (C) void gtk_widget_set_allocation(GtkWidget *, const GtkAllocation *);
extern (C) GtkWidget * gtk_scrolled_window_get_hscrollbar(GtkScrolledWindow *);
extern (C) GtkWidget * gtk_scrolled_window_get_vscrollbar(GtkScrolledWindow *);
extern (C) void gtk_widget_set_tooltip_window(GtkWidget *, GtkWindow *);
} // version(DYNLINK)

